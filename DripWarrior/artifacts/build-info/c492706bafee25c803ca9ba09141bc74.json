{
	"id": "c492706bafee25c803ca9ba09141bc74",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"DripWarrior/usdc_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: DripWarrior/usdc.sol\n\n\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\n\n\ncontract USDC is ERC20, Ownable {\n    constructor(address initialOwner)\n        ERC20(\"MyToken\", \"MTK\")\n        Ownable(initialOwner)\n    {\n        _mint(0x5B38Da6a701c568545dCfcB03FcB875f56beddC4, 10000000000000 * 1e18);\n        _mint(0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2, 10000 * 1e18);\n        _mint(0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db, 10000 * 1e18);\n        _mint(0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB, 10000 * 1e18);\n        _mint(0x617F2E2fD72FD9D5503197092aC168c91465E7f2, 10000 * 1e18);\n        _mint(0x17F6AD8Ef982297579C203069C1DbfFE4348c372, 10000 * 1e18);\n        \n        _mint(0x6DdCE86b55741e1fb71999a24C9BD95Db18c934F, 10000 * 1e18);\n        _mint(0xA33c5875BE1e3aFd5D72C5dF98D3469d95aC85B0, 10000 * 1e18);\n        _mint(0xcCc22A7fc54d184138dfD87B7aD24552cD4E0915, 10000 * 1e18);\n        _mint(0xCA6e763716eA3a3e425baD2954a65BBb411e5fBC, 10000 * 1e18);\n        _mint(0xbEc540D2840BF6c5b52FC98f61e760E6fb1B2659, 10000 * 1e18);\n        _mint(0xA33c5875BE1e3aFd5D72C5dF98D3469d95aC85B0, 10000 * 1e18);\n    }\n\n    function mint(address to, uint256 amount) public  {\n        _mint(to, amount);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"DripWarrior/usdc_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/usdc_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/usdc_flattened.sol\":{\"keccak256\":\"0xa5ebe892622d1833eaac2c3dc02afe1885997e1f36188f3218969571a0e03a89\",\"urls\":[\"bzz-raw://8386aba9844549b799bf3475878c9affb7c18ad933e4cb4a5761544b81b40ccc\",\"dweb:/ipfs/Qmbgur6jRwo17dYPk2FMjpACjgqqTyfjDrEnM6qmV5vfB4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/usdc_flattened.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/usdc_flattened.sol\":{\"keccak256\":\"0xa5ebe892622d1833eaac2c3dc02afe1885997e1f36188f3218969571a0e03a89\",\"urls\":[\"bzz-raw://8386aba9844549b799bf3475878c9affb7c18ad933e4cb4a5761544b81b40ccc\",\"dweb:/ipfs/Qmbgur6jRwo17dYPk2FMjpACjgqqTyfjDrEnM6qmV5vfB4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "DripWarrior/usdc_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "DripWarrior/usdc_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "DripWarrior/usdc_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "DripWarrior/usdc_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "DripWarrior/usdc_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/usdc_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/usdc_flattened.sol\":{\"keccak256\":\"0xa5ebe892622d1833eaac2c3dc02afe1885997e1f36188f3218969571a0e03a89\",\"urls\":[\"bzz-raw://8386aba9844549b799bf3475878c9affb7c18ad933e4cb4a5761544b81b40ccc\",\"dweb:/ipfs/Qmbgur6jRwo17dYPk2FMjpACjgqqTyfjDrEnM6qmV5vfB4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/usdc_flattened.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/usdc_flattened.sol\":{\"keccak256\":\"0xa5ebe892622d1833eaac2c3dc02afe1885997e1f36188f3218969571a0e03a89\",\"urls\":[\"bzz-raw://8386aba9844549b799bf3475878c9affb7c18ad933e4cb4a5761544b81b40ccc\",\"dweb:/ipfs/Qmbgur6jRwo17dYPk2FMjpACjgqqTyfjDrEnM6qmV5vfB4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/usdc_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/usdc_flattened.sol\":{\"keccak256\":\"0xa5ebe892622d1833eaac2c3dc02afe1885997e1f36188f3218969571a0e03a89\",\"urls\":[\"bzz-raw://8386aba9844549b799bf3475878c9affb7c18ad933e4cb4a5761544b81b40ccc\",\"dweb:/ipfs/Qmbgur6jRwo17dYPk2FMjpACjgqqTyfjDrEnM6qmV5vfB4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/usdc_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/usdc_flattened.sol\":{\"keccak256\":\"0xa5ebe892622d1833eaac2c3dc02afe1885997e1f36188f3218969571a0e03a89\",\"urls\":[\"bzz-raw://8386aba9844549b799bf3475878c9affb7c18ad933e4cb4a5761544b81b40ccc\",\"dweb:/ipfs/Qmbgur6jRwo17dYPk2FMjpACjgqqTyfjDrEnM6qmV5vfB4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/usdc_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/usdc_flattened.sol\":{\"keccak256\":\"0xa5ebe892622d1833eaac2c3dc02afe1885997e1f36188f3218969571a0e03a89\",\"urls\":[\"bzz-raw://8386aba9844549b799bf3475878c9affb7c18ad933e4cb4a5761544b81b40ccc\",\"dweb:/ipfs/Qmbgur6jRwo17dYPk2FMjpACjgqqTyfjDrEnM6qmV5vfB4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/usdc_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/usdc_flattened.sol\":{\"keccak256\":\"0xa5ebe892622d1833eaac2c3dc02afe1885997e1f36188f3218969571a0e03a89\",\"urls\":[\"bzz-raw://8386aba9844549b799bf3475878c9affb7c18ad933e4cb4a5761544b81b40ccc\",\"dweb:/ipfs/Qmbgur6jRwo17dYPk2FMjpACjgqqTyfjDrEnM6qmV5vfB4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 777,
								"contract": "DripWarrior/usdc_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"USDC": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DripWarrior/usdc_flattened.sol\":25193:26324  contract USDC is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"DripWarrior/usdc_flattened.sol\":25231:26232  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"DripWarrior/usdc_flattened.sol\":25313:25325  initialOwner */\n  dup1\n    /* \"DripWarrior/usdc_flattened.sol\":12757:12870  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc9, 0x26bcaa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4d544b)\n  dup2\n  mstore\n  pop\n    /* \"DripWarrior/usdc_flattened.sol\":12831:12836  name_ */\n  dup2\n    /* \"DripWarrior/usdc_flattened.sol\":12823:12828  _name */\n  0x03\n    /* \"DripWarrior/usdc_flattened.sol\":12823:12836  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"DripWarrior/usdc_flattened.sol\":12846:12853  _symbol */\n  0x04\n    /* \"DripWarrior/usdc_flattened.sol\":12846:12863  _symbol = symbol_ */\n  tag_10\n    /* \"DripWarrior/usdc_flattened.sol\":12856:12863  symbol_ */\n  dup3\n    /* \"DripWarrior/usdc_flattened.sol\":12846:12853  _symbol */\n  dup3\n    /* \"DripWarrior/usdc_flattened.sol\":12846:12863  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"DripWarrior/usdc_flattened.sol\":23254:23280  initialOwner == address(0) */\n  dup2\n  and\n    /* \"DripWarrior/usdc_flattened.sol\":23250:23345  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"DripWarrior/usdc_flattened.sol\":23303:23334  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"DripWarrior/usdc_flattened.sol\":23331:23332  0 */\n  0x00\n    /* \"DripWarrior/usdc_flattened.sol\":23303:23334  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3096:3147   */\n  mstore\n    /* \"#utility.yul\":3069:3087   */\n  0x24\n  add\n    /* \"DripWarrior/usdc_flattened.sol\":23303:23334  OwnableInvalidOwner(address(0)) */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"DripWarrior/usdc_flattened.sol\":23250:23345  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"DripWarrior/usdc_flattened.sol\":23354:23386  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"DripWarrior/usdc_flattened.sol\":23373:23385  initialOwner */\n  dup2\n    /* \"DripWarrior/usdc_flattened.sol\":23354:23372  _transferOwnership */\n  tag_16\n    /* \"DripWarrior/usdc_flattened.sol\":23354:23386  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n    /* \"DripWarrior/usdc_flattened.sol\":25341:25413  _mint(0x5B38Da6a701c568545dCfcB03FcB875f56beddC4, 10000000000000 * 1e18) */\n  tag_18\n    /* \"DripWarrior/usdc_flattened.sol\":25347:25389  0x5B38Da6a701c568545dCfcB03FcB875f56beddC4 */\n  0x5b38da6a701c568545dcfcb03fcb875f56beddc4\n    /* \"DripWarrior/usdc_flattened.sol\":25391:25412  10000000000000 * 1e18 */\n  0x7e37be2022c0914b2680000000\n    /* \"DripWarrior/usdc_flattened.sol\":25341:25346  _mint */\n  tag_19\n    /* \"DripWarrior/usdc_flattened.sol\":25341:25413  _mint(0x5B38Da6a701c568545dCfcB03FcB875f56beddC4, 10000000000000 * 1e18) */\n  jump\t// in\ntag_18:\n    /* \"DripWarrior/usdc_flattened.sol\":25423:25486  _mint(0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2, 10000 * 1e18) */\n  tag_20\n    /* \"DripWarrior/usdc_flattened.sol\":25429:25471  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n  0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n    /* \"DripWarrior/usdc_flattened.sol\":25473:25485  10000 * 1e18 */\n  0x021e19e0c9bab2400000\n    /* \"DripWarrior/usdc_flattened.sol\":25423:25428  _mint */\n  tag_19\n    /* \"DripWarrior/usdc_flattened.sol\":25423:25486  _mint(0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2, 10000 * 1e18) */\n  jump\t// in\ntag_20:\n    /* \"DripWarrior/usdc_flattened.sol\":25496:25559  _mint(0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db, 10000 * 1e18) */\n  tag_21\n    /* \"DripWarrior/usdc_flattened.sol\":25502:25544  0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db */\n  0x4b20993bc481177ec7e8f571cecae8a9e22c02db\n    /* \"DripWarrior/usdc_flattened.sol\":25546:25558  10000 * 1e18 */\n  0x021e19e0c9bab2400000\n    /* \"DripWarrior/usdc_flattened.sol\":25496:25501  _mint */\n  tag_19\n    /* \"DripWarrior/usdc_flattened.sol\":25496:25559  _mint(0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db, 10000 * 1e18) */\n  jump\t// in\ntag_21:\n    /* \"DripWarrior/usdc_flattened.sol\":25569:25632  _mint(0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB, 10000 * 1e18) */\n  tag_22\n    /* \"DripWarrior/usdc_flattened.sol\":25575:25617  0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB */\n  0x78731d3ca6b7e34ac0f824c42a7cc18a495cabab\n    /* \"DripWarrior/usdc_flattened.sol\":25619:25631  10000 * 1e18 */\n  0x021e19e0c9bab2400000\n    /* \"DripWarrior/usdc_flattened.sol\":25569:25574  _mint */\n  tag_19\n    /* \"DripWarrior/usdc_flattened.sol\":25569:25632  _mint(0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB, 10000 * 1e18) */\n  jump\t// in\ntag_22:\n    /* \"DripWarrior/usdc_flattened.sol\":25642:25705  _mint(0x617F2E2fD72FD9D5503197092aC168c91465E7f2, 10000 * 1e18) */\n  tag_23\n    /* \"DripWarrior/usdc_flattened.sol\":25648:25690  0x617F2E2fD72FD9D5503197092aC168c91465E7f2 */\n  0x617f2e2fd72fd9d5503197092ac168c91465e7f2\n    /* \"DripWarrior/usdc_flattened.sol\":25692:25704  10000 * 1e18 */\n  0x021e19e0c9bab2400000\n    /* \"DripWarrior/usdc_flattened.sol\":25642:25647  _mint */\n  tag_19\n    /* \"DripWarrior/usdc_flattened.sol\":25642:25705  _mint(0x617F2E2fD72FD9D5503197092aC168c91465E7f2, 10000 * 1e18) */\n  jump\t// in\ntag_23:\n    /* \"DripWarrior/usdc_flattened.sol\":25715:25778  _mint(0x17F6AD8Ef982297579C203069C1DbfFE4348c372, 10000 * 1e18) */\n  tag_24\n    /* \"DripWarrior/usdc_flattened.sol\":25721:25763  0x17F6AD8Ef982297579C203069C1DbfFE4348c372 */\n  0x17f6ad8ef982297579c203069c1dbffe4348c372\n    /* \"DripWarrior/usdc_flattened.sol\":25765:25777  10000 * 1e18 */\n  0x021e19e0c9bab2400000\n    /* \"DripWarrior/usdc_flattened.sol\":25715:25720  _mint */\n  tag_19\n    /* \"DripWarrior/usdc_flattened.sol\":25715:25778  _mint(0x17F6AD8Ef982297579C203069C1DbfFE4348c372, 10000 * 1e18) */\n  jump\t// in\ntag_24:\n    /* \"DripWarrior/usdc_flattened.sol\":25797:25860  _mint(0x6DdCE86b55741e1fb71999a24C9BD95Db18c934F, 10000 * 1e18) */\n  tag_25\n    /* \"DripWarrior/usdc_flattened.sol\":25803:25845  0x6DdCE86b55741e1fb71999a24C9BD95Db18c934F */\n  0x6ddce86b55741e1fb71999a24c9bd95db18c934f\n    /* \"DripWarrior/usdc_flattened.sol\":25847:25859  10000 * 1e18 */\n  0x021e19e0c9bab2400000\n    /* \"DripWarrior/usdc_flattened.sol\":25797:25802  _mint */\n  tag_19\n    /* \"DripWarrior/usdc_flattened.sol\":25797:25860  _mint(0x6DdCE86b55741e1fb71999a24C9BD95Db18c934F, 10000 * 1e18) */\n  jump\t// in\ntag_25:\n    /* \"DripWarrior/usdc_flattened.sol\":25870:25933  _mint(0xA33c5875BE1e3aFd5D72C5dF98D3469d95aC85B0, 10000 * 1e18) */\n  tag_26\n    /* \"DripWarrior/usdc_flattened.sol\":25876:25918  0xA33c5875BE1e3aFd5D72C5dF98D3469d95aC85B0 */\n  0xa33c5875be1e3afd5d72c5df98d3469d95ac85b0\n    /* \"DripWarrior/usdc_flattened.sol\":25920:25932  10000 * 1e18 */\n  0x021e19e0c9bab2400000\n    /* \"DripWarrior/usdc_flattened.sol\":25870:25875  _mint */\n  tag_19\n    /* \"DripWarrior/usdc_flattened.sol\":25870:25933  _mint(0xA33c5875BE1e3aFd5D72C5dF98D3469d95aC85B0, 10000 * 1e18) */\n  jump\t// in\ntag_26:\n    /* \"DripWarrior/usdc_flattened.sol\":25943:26006  _mint(0xcCc22A7fc54d184138dfD87B7aD24552cD4E0915, 10000 * 1e18) */\n  tag_27\n    /* \"DripWarrior/usdc_flattened.sol\":25949:25991  0xcCc22A7fc54d184138dfD87B7aD24552cD4E0915 */\n  0xccc22a7fc54d184138dfd87b7ad24552cd4e0915\n    /* \"DripWarrior/usdc_flattened.sol\":25993:26005  10000 * 1e18 */\n  0x021e19e0c9bab2400000\n    /* \"DripWarrior/usdc_flattened.sol\":25943:25948  _mint */\n  tag_19\n    /* \"DripWarrior/usdc_flattened.sol\":25943:26006  _mint(0xcCc22A7fc54d184138dfD87B7aD24552cD4E0915, 10000 * 1e18) */\n  jump\t// in\ntag_27:\n    /* \"DripWarrior/usdc_flattened.sol\":26016:26079  _mint(0xCA6e763716eA3a3e425baD2954a65BBb411e5fBC, 10000 * 1e18) */\n  tag_28\n    /* \"DripWarrior/usdc_flattened.sol\":26022:26064  0xCA6e763716eA3a3e425baD2954a65BBb411e5fBC */\n  0xca6e763716ea3a3e425bad2954a65bbb411e5fbc\n    /* \"DripWarrior/usdc_flattened.sol\":26066:26078  10000 * 1e18 */\n  0x021e19e0c9bab2400000\n    /* \"DripWarrior/usdc_flattened.sol\":26016:26021  _mint */\n  tag_19\n    /* \"DripWarrior/usdc_flattened.sol\":26016:26079  _mint(0xCA6e763716eA3a3e425baD2954a65BBb411e5fBC, 10000 * 1e18) */\n  jump\t// in\ntag_28:\n    /* \"DripWarrior/usdc_flattened.sol\":26089:26152  _mint(0xbEc540D2840BF6c5b52FC98f61e760E6fb1B2659, 10000 * 1e18) */\n  tag_29\n    /* \"DripWarrior/usdc_flattened.sol\":26095:26137  0xbEc540D2840BF6c5b52FC98f61e760E6fb1B2659 */\n  0xbec540d2840bf6c5b52fc98f61e760e6fb1b2659\n    /* \"DripWarrior/usdc_flattened.sol\":26139:26151  10000 * 1e18 */\n  0x021e19e0c9bab2400000\n    /* \"DripWarrior/usdc_flattened.sol\":26089:26094  _mint */\n  tag_19\n    /* \"DripWarrior/usdc_flattened.sol\":26089:26152  _mint(0xbEc540D2840BF6c5b52FC98f61e760E6fb1B2659, 10000 * 1e18) */\n  jump\t// in\ntag_29:\n    /* \"DripWarrior/usdc_flattened.sol\":26162:26225  _mint(0xA33c5875BE1e3aFd5D72C5dF98D3469d95aC85B0, 10000 * 1e18) */\n  tag_30\n    /* \"DripWarrior/usdc_flattened.sol\":26168:26210  0xA33c5875BE1e3aFd5D72C5dF98D3469d95aC85B0 */\n  0xa33c5875be1e3afd5d72c5df98d3469d95ac85b0\n    /* \"DripWarrior/usdc_flattened.sol\":26212:26224  10000 * 1e18 */\n  0x021e19e0c9bab2400000\n    /* \"DripWarrior/usdc_flattened.sol\":26162:26167  _mint */\n  tag_19\n    /* \"DripWarrior/usdc_flattened.sol\":26162:26225  _mint(0xA33c5875BE1e3aFd5D72C5dF98D3469d95aC85B0, 10000 * 1e18) */\n  jump\t// in\ntag_30:\n    /* \"DripWarrior/usdc_flattened.sol\":25231:26232  constructor(address initialOwner)... */\n  pop\n    /* \"DripWarrior/usdc_flattened.sol\":25193:26324  contract USDC is ERC20, Ownable {... */\n  jump(tag_55)\n    /* \"DripWarrior/usdc_flattened.sol\":24893:25080  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"DripWarrior/usdc_flattened.sol\":24985:24991  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"DripWarrior/usdc_flattened.sol\":25001:25018  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"DripWarrior/usdc_flattened.sol\":25033:25073  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"DripWarrior/usdc_flattened.sol\":24985:24991  _owner */\n  swap2\n  and\n  swap2\n    /* \"DripWarrior/usdc_flattened.sol\":25001:25018  _owner = newOwner */\n  swap1\n    /* \"DripWarrior/usdc_flattened.sol\":24985:24991  _owner */\n  dup3\n  swap1\n    /* \"DripWarrior/usdc_flattened.sol\":25033:25073  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"DripWarrior/usdc_flattened.sol\":24966:24982  address oldOwner */\n  0x00\n  swap1\n    /* \"DripWarrior/usdc_flattened.sol\":25033:25073  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"DripWarrior/usdc_flattened.sol\":24956:25080  {... */\n  pop\n    /* \"DripWarrior/usdc_flattened.sol\":24893:25080  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"DripWarrior/usdc_flattened.sol\":18582:18790  function _mint(address account, uint256 value) internal {... */\ntag_19:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"DripWarrior/usdc_flattened.sol\":18652:18673  account == address(0) */\n  dup3\n  and\n    /* \"DripWarrior/usdc_flattened.sol\":18648:18739  if (account == address(0)) {... */\n  tag_34\n  jumpi\n    /* \"DripWarrior/usdc_flattened.sol\":18696:18728  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"DripWarrior/usdc_flattened.sol\":18725:18726  0 */\n  0x00\n    /* \"DripWarrior/usdc_flattened.sol\":18696:18728  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3096:3147   */\n  mstore\n    /* \"#utility.yul\":3069:3087   */\n  0x24\n  add\n    /* \"DripWarrior/usdc_flattened.sol\":18696:18728  ERC20InvalidReceiver(address(0)) */\n  tag_13\n    /* \"#utility.yul\":2950:3153   */\n  jump\n    /* \"DripWarrior/usdc_flattened.sol\":18648:18739  if (account == address(0)) {... */\ntag_34:\n    /* \"DripWarrior/usdc_flattened.sol\":18748:18783  _update(address(0), account, value) */\n  tag_36\n    /* \"DripWarrior/usdc_flattened.sol\":18764:18765  0 */\n  0x00\n    /* \"DripWarrior/usdc_flattened.sol\":18768:18775  account */\n  dup4\n    /* \"DripWarrior/usdc_flattened.sol\":18777:18782  value */\n  dup4\n    /* \"DripWarrior/usdc_flattened.sol\":18748:18755  _update */\n  tag_37\n    /* \"DripWarrior/usdc_flattened.sol\":18748:18783  _update(address(0), account, value) */\n  jump\t// in\ntag_36:\n    /* \"DripWarrior/usdc_flattened.sol\":18582:18790  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"DripWarrior/usdc_flattened.sol\":17132:18239  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_37:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"DripWarrior/usdc_flattened.sol\":17221:17239  from == address(0) */\n  dup4\n  and\n    /* \"DripWarrior/usdc_flattened.sol\":17217:17757  if (from == address(0)) {... */\n  tag_39\n  jumpi\n    /* \"DripWarrior/usdc_flattened.sol\":17373:17378  value */\n  dup1\n    /* \"DripWarrior/usdc_flattened.sol\":17357:17369  _totalSupply */\n  0x02\n  0x00\n    /* \"DripWarrior/usdc_flattened.sol\":17357:17378  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"DripWarrior/usdc_flattened.sol\":17217:17757  if (from == address(0)) {... */\n  tag_42\n  swap1\n  pop\n  jump\ntag_39:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"DripWarrior/usdc_flattened.sol\":17431:17446  _balances[from] */\n  dup4\n  and\n    /* \"DripWarrior/usdc_flattened.sol\":17409:17428  uint256 fromBalance */\n  0x00\n    /* \"DripWarrior/usdc_flattened.sol\":17431:17446  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"DripWarrior/usdc_flattened.sol\":17464:17483  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"DripWarrior/usdc_flattened.sol\":17460:17575  if (fromBalance < value) {... */\n  iszero\n  tag_43\n  jumpi\n    /* \"DripWarrior/usdc_flattened.sol\":17510:17560  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3605:3637   */\n  dup6\n  and\n    /* \"DripWarrior/usdc_flattened.sol\":17510:17560  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3587:3638   */\n  mstore\n    /* \"#utility.yul\":3654:3672   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":3647:3681   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":3697:3715   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":3690:3724   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":3560:3578   */\n  0x64\n  add\n    /* \"DripWarrior/usdc_flattened.sol\":17510:17560  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_13\n    /* \"#utility.yul\":3385:3730   */\n  jump\n    /* \"DripWarrior/usdc_flattened.sol\":17460:17575  if (fromBalance < value) {... */\ntag_43:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"DripWarrior/usdc_flattened.sol\":17695:17710  _balances[from] */\n  dup5\n  and\n    /* \"DripWarrior/usdc_flattened.sol\":17695:17704  _balances */\n  0x00\n    /* \"DripWarrior/usdc_flattened.sol\":17695:17710  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"DripWarrior/usdc_flattened.sol\":17713:17732  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"DripWarrior/usdc_flattened.sol\":17695:17732  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"DripWarrior/usdc_flattened.sol\":17217:17757  if (from == address(0)) {... */\ntag_42:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"DripWarrior/usdc_flattened.sol\":17771:17787  to == address(0) */\n  dup3\n  and\n    /* \"DripWarrior/usdc_flattened.sol\":17767:18192  if (to == address(0)) {... */\n  tag_46\n  jumpi\n    /* \"DripWarrior/usdc_flattened.sol\":17934:17946  _totalSupply */\n  0x02\n    /* \"DripWarrior/usdc_flattened.sol\":17934:17955  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"DripWarrior/usdc_flattened.sol\":17767:18192  if (to == address(0)) {... */\n  jump(tag_47)\ntag_46:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"DripWarrior/usdc_flattened.sol\":18145:18158  _balances[to] */\n  dup3\n  and\n    /* \"DripWarrior/usdc_flattened.sol\":18145:18154  _balances */\n  0x00\n    /* \"DripWarrior/usdc_flattened.sol\":18145:18158  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"DripWarrior/usdc_flattened.sol\":18145:18167  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"DripWarrior/usdc_flattened.sol\":17767:18192  if (to == address(0)) {... */\ntag_47:\n    /* \"DripWarrior/usdc_flattened.sol\":18222:18224  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"DripWarrior/usdc_flattened.sol\":18207:18232  Transfer(from, to, value) */\n  and\n    /* \"DripWarrior/usdc_flattened.sol\":18216:18220  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"DripWarrior/usdc_flattened.sol\":18207:18232  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"DripWarrior/usdc_flattened.sol\":18226:18231  value */\n  dup4\n    /* \"DripWarrior/usdc_flattened.sol\":18207:18232  Transfer(from, to, value) */\n  mload(0x40)\n  tag_48\n  swap2\n    /* \"#utility.yul\":3881:3906   */\n  dup2\n  mstore\n    /* \"#utility.yul\":3869:3871   */\n  0x20\n    /* \"#utility.yul\":3854:3872   */\n  add\n  swap1\n    /* \"#utility.yul\":3735:3912   */\n  jump\n    /* \"DripWarrior/usdc_flattened.sol\":18207:18232  Transfer(from, to, value) */\ntag_48:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"DripWarrior/usdc_flattened.sol\":17132:18239  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_57:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_58\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_58:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:436   */\ntag_50:\n    /* \"#utility.yul\":370:380   */\n  0x4e487b71\n    /* \"#utility.yul\":365:368   */\n  0xe0\n    /* \"#utility.yul\":361:381   */\n  shl\n    /* \"#utility.yul\":358:359   */\n  0x00\n    /* \"#utility.yul\":351:382   */\n  mstore\n    /* \"#utility.yul\":401:405   */\n  0x41\n    /* \"#utility.yul\":398:399   */\n  0x04\n    /* \"#utility.yul\":391:406   */\n  mstore\n    /* \"#utility.yul\":425:429   */\n  0x24\n    /* \"#utility.yul\":422:423   */\n  0x00\n    /* \"#utility.yul\":415:430   */\n  revert\n    /* \"#utility.yul\":441:821   */\ntag_51:\n    /* \"#utility.yul\":520:521   */\n  0x01\n    /* \"#utility.yul\":516:528   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":563:575   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":584:645   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":638:642   */\n  0x7f\n    /* \"#utility.yul\":630:636   */\n  dup3\n    /* \"#utility.yul\":626:643   */\n  and\n    /* \"#utility.yul\":616:643   */\n  swap2\n  pop\n    /* \"#utility.yul\":584:645   */\ntag_61:\n    /* \"#utility.yul\":691:693   */\n  0x20\n    /* \"#utility.yul\":683:689   */\n  dup3\n    /* \"#utility.yul\":680:694   */\n  lt\n    /* \"#utility.yul\":660:678   */\n  dup2\n    /* \"#utility.yul\":657:695   */\n  sub\n    /* \"#utility.yul\":654:815   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":737:747   */\n  0x4e487b71\n    /* \"#utility.yul\":732:735   */\n  0xe0\n    /* \"#utility.yul\":728:748   */\n  shl\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":718:749   */\n  mstore\n    /* \"#utility.yul\":772:776   */\n  0x22\n    /* \"#utility.yul\":769:770   */\n  0x04\n    /* \"#utility.yul\":762:777   */\n  mstore\n    /* \"#utility.yul\":800:804   */\n  0x24\n    /* \"#utility.yul\":797:798   */\n  0x00\n    /* \"#utility.yul\":790:805   */\n  revert\n    /* \"#utility.yul\":654:815   */\ntag_62:\n  pop\n    /* \"#utility.yul\":441:821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1470   */\ntag_53:\n    /* \"#utility.yul\":1054:1056   */\n  0x1f\n    /* \"#utility.yul\":1049:1052   */\n  dup3\n    /* \"#utility.yul\":1046:1057   */\n  gt\n    /* \"#utility.yul\":1043:1464   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1090:1095   */\n  dup1\n    /* \"#utility.yul\":1087:1088   */\n  0x00\n    /* \"#utility.yul\":1080:1096   */\n  mstore\n    /* \"#utility.yul\":1134:1138   */\n  0x20\n    /* \"#utility.yul\":1131:1132   */\n  0x00\n    /* \"#utility.yul\":1121:1139   */\n  keccak256\n    /* \"#utility.yul\":1204:1206   */\n  0x1f\n    /* \"#utility.yul\":1192:1202   */\n  dup5\n    /* \"#utility.yul\":1188:1207   */\n  add\n    /* \"#utility.yul\":1185:1186   */\n  0x05\n    /* \"#utility.yul\":1181:1208   */\n  shr\n    /* \"#utility.yul\":1175:1179   */\n  dup2\n    /* \"#utility.yul\":1171:1209   */\n  add\n    /* \"#utility.yul\":1240:1244   */\n  0x20\n    /* \"#utility.yul\":1228:1238   */\n  dup6\n    /* \"#utility.yul\":1225:1245   */\n  lt\n    /* \"#utility.yul\":1222:1269   */\n  iszero\n  tag_66\n  jumpi\n  pop\n    /* \"#utility.yul\":1263:1267   */\n  dup1\n    /* \"#utility.yul\":1222:1269   */\ntag_66:\n    /* \"#utility.yul\":1318:1320   */\n  0x1f\n    /* \"#utility.yul\":1313:1316   */\n  dup5\n    /* \"#utility.yul\":1309:1321   */\n  add\n    /* \"#utility.yul\":1306:1307   */\n  0x05\n    /* \"#utility.yul\":1302:1322   */\n  shr\n    /* \"#utility.yul\":1296:1300   */\n  dup3\n    /* \"#utility.yul\":1292:1323   */\n  add\n    /* \"#utility.yul\":1282:1323   */\n  swap2\n  pop\n    /* \"#utility.yul\":1373:1454   */\ntag_67:\n    /* \"#utility.yul\":1391:1393   */\n  dup2\n    /* \"#utility.yul\":1384:1389   */\n  dup2\n    /* \"#utility.yul\":1381:1394   */\n  lt\n    /* \"#utility.yul\":1373:1454   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1436:1452   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1417:1418   */\n  0x01\n    /* \"#utility.yul\":1406:1419   */\n  add\n    /* \"#utility.yul\":1373:1454   */\n  jump(tag_67)\ntag_69:\n    /* \"#utility.yul\":1377:1380   */\n  pop\n  pop\n    /* \"#utility.yul\":1043:1464   */\ntag_65:\n    /* \"#utility.yul\":952:1470   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1646:2945   */\ntag_9:\n    /* \"#utility.yul\":1766:1776   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1788:1818   */\n  dup2\n  gt\n    /* \"#utility.yul\":1785:1841   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":1821:1839   */\n  tag_73\n  tag_50\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1850:1947   */\n  tag_74\n    /* \"#utility.yul\":1940:1946   */\n  dup2\n    /* \"#utility.yul\":1900:1938   */\n  tag_75\n    /* \"#utility.yul\":1932:1936   */\n  dup5\n    /* \"#utility.yul\":1926:1937   */\n  sload\n    /* \"#utility.yul\":1900:1938   */\n  tag_51\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1894:1898   */\n  dup5\n    /* \"#utility.yul\":1850:1947   */\n  tag_53\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":2027:2029   */\n  0x1f\n    /* \"#utility.yul\":2016:2030   */\n  dup3\n  gt\n    /* \"#utility.yul\":2044:2045   */\n  0x01\n    /* \"#utility.yul\":2039:2688   */\n  dup2\n  eq\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2732:2733   */\n  0x00\n    /* \"#utility.yul\":2749:2755   */\n  dup4\n    /* \"#utility.yul\":2746:2835   */\n  iszero\n  tag_78\n  jumpi\n  pop\n    /* \"#utility.yul\":2801:2820   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2795:2821   */\n  mload\n    /* \"#utility.yul\":2746:2835   */\ntag_78:\n  not(0x00)\n    /* \"#utility.yul\":1603:1604   */\n  0x03\n    /* \"#utility.yul\":1599:1610   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1595:1619   */\n  shr\n    /* \"#utility.yul\":1591:1620   */\n  not\n    /* \"#utility.yul\":1581:1621   */\n  and\n    /* \"#utility.yul\":1627:1628   */\n  0x01\n    /* \"#utility.yul\":1623:1634   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1578:1635   */\n  or\n    /* \"#utility.yul\":2848:2929   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2009:2939   */\n  jump(tag_69)\n    /* \"#utility.yul\":2039:2688   */\ntag_77:\n    /* \"#utility.yul\":899:900   */\n  0x00\n    /* \"#utility.yul\":892:906   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":936:940   */\n  0x20\n    /* \"#utility.yul\":923:941   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2075:2095   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2193:2415   */\ntag_81:\n    /* \"#utility.yul\":2207:2214   */\n  dup3\n    /* \"#utility.yul\":2204:2205   */\n  dup2\n    /* \"#utility.yul\":2201:2215   */\n  lt\n    /* \"#utility.yul\":2193:2415   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n    /* \"#utility.yul\":2268:2310   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2396:2400   */\n  0x20\n    /* \"#utility.yul\":2381:2401   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2349:2350   */\n  0x01\n    /* \"#utility.yul\":2337:2351   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2223:2235   */\n  add\n    /* \"#utility.yul\":2193:2415   */\n  jump(tag_81)\ntag_83:\n    /* \"#utility.yul\":2197:2200   */\n  pop\n    /* \"#utility.yul\":2443:2449   */\n  dup5\n    /* \"#utility.yul\":2434:2441   */\n  dup3\n    /* \"#utility.yul\":2431:2450   */\n  lt\n    /* \"#utility.yul\":2428:2629   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2504:2523   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2498:2524   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2587:2588   */\n  0x03\n    /* \"#utility.yul\":2583:2597   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2599:2602   */\n  0xf8\n    /* \"#utility.yul\":2579:2603   */\n  and\n    /* \"#utility.yul\":2575:2612   */\n  shr\n    /* \"#utility.yul\":2571:2613   */\n  not\n    /* \"#utility.yul\":2556:2614   */\n  and\n    /* \"#utility.yul\":2541:2615   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2428:2629   */\ntag_84:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2675:2676   */\n  0x01\n    /* \"#utility.yul\":2659:2673   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2655:2677   */\n  add\n    /* \"#utility.yul\":2642:2678   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1646:2945   */\n  jump\t// out\n    /* \"#utility.yul\":3158:3380   */\ntag_41:\n    /* \"#utility.yul\":3223:3232   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3244:3254   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3241:3374   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3296:3306   */\n  0x4e487b71\n    /* \"#utility.yul\":3291:3294   */\n  0xe0\n    /* \"#utility.yul\":3287:3307   */\n  shl\n    /* \"#utility.yul\":3284:3285   */\n  0x00\n    /* \"#utility.yul\":3277:3308   */\n  mstore\n    /* \"#utility.yul\":3331:3335   */\n  0x11\n    /* \"#utility.yul\":3328:3329   */\n  0x04\n    /* \"#utility.yul\":3321:3336   */\n  mstore\n    /* \"#utility.yul\":3359:3363   */\n  0x24\n    /* \"#utility.yul\":3356:3357   */\n  0x00\n    /* \"#utility.yul\":3349:3364   */\n  revert\n    /* \"#utility.yul\":3241:3374   */\ntag_87:\n    /* \"#utility.yul\":3158:3380   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3735:3912   */\ntag_55:\n    /* \"DripWarrior/usdc_flattened.sol\":25193:26324  contract USDC is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DripWarrior/usdc_flattened.sol\":25193:26324  contract USDC is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"DripWarrior/usdc_flattened.sol\":12935:13024  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DripWarrior/usdc_flattened.sol\":15154:15340  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"DripWarrior/usdc_flattened.sol\":15154:15340  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_20\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"DripWarrior/usdc_flattened.sol\":14005:14102  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"DripWarrior/usdc_flattened.sol\":14083:14095  _totalSupply */\n      sload(0x02)\n        /* \"DripWarrior/usdc_flattened.sol\":14005:14102  function totalSupply() public view virtual returns (uint256) {... */\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"DripWarrior/usdc_flattened.sol\":14005:14102  function totalSupply() public view virtual returns (uint256) {... */\n      tag_20\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"DripWarrior/usdc_flattened.sol\":15900:16144  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_22\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"DripWarrior/usdc_flattened.sol\":13863:13945  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"DripWarrior/usdc_flattened.sol\":13936:13938  18 */\n      0x12\n        /* \"#utility.yul\":1815:1851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      add\n        /* \"DripWarrior/usdc_flattened.sol\":13863:13945  function decimals() public view virtual returns (uint8) {... */\n      tag_20\n        /* \"#utility.yul\":1673:1857   */\n      jump\n        /* \"DripWarrior/usdc_flattened.sol\":26238:26322  function mint(address to, uint256 amount) public  {... */\n    tag_8:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"DripWarrior/usdc_flattened.sol\":14160:14276  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_28\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":14251:14269  _balances[account] */\n      and\n        /* \"DripWarrior/usdc_flattened.sol\":14225:14232  uint256 */\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":14251:14269  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"DripWarrior/usdc_flattened.sol\":14160:14276  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"DripWarrior/usdc_flattened.sol\":24274:24375  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_41\n      tag_50\n      jump\t// in\n        /* \"DripWarrior/usdc_flattened.sol\":23619:23704  function owner() public view virtual returns (address) {... */\n    tag_11:\n        /* \"DripWarrior/usdc_flattened.sol\":23691:23697  _owner */\n      sload(0x05)\n        /* \"DripWarrior/usdc_flattened.sol\":23619:23704  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":23691:23697  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2199:2250   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2187:2189   */\n      0x20\n        /* \"#utility.yul\":2172:2190   */\n      add\n        /* \"DripWarrior/usdc_flattened.sol\":23619:23704  function owner() public view virtual returns (address) {... */\n      tag_20\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"DripWarrior/usdc_flattened.sol\":13137:13230  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_18\n      tag_56\n      jump\t// in\n        /* \"DripWarrior/usdc_flattened.sol\":14471:14649  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_13:\n      tag_22\n      tag_59\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"DripWarrior/usdc_flattened.sol\":14707:14847  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_28\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":14813:14831  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"DripWarrior/usdc_flattened.sol\":14787:14794  uint256 */\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":14813:14831  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/usdc_flattened.sol\":14813:14824  _allowances */\n      0x01\n        /* \"DripWarrior/usdc_flattened.sol\":14813:14831  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DripWarrior/usdc_flattened.sol\":14813:14840  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"DripWarrior/usdc_flattened.sol\":14707:14847  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"DripWarrior/usdc_flattened.sol\":24524:24739  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_41\n      tag_68\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"DripWarrior/usdc_flattened.sol\":12935:13024  function name() public view virtual returns (string memory) {... */\n    tag_19:\n        /* \"DripWarrior/usdc_flattened.sol\":12980:12993  string memory */\n      0x60\n        /* \"DripWarrior/usdc_flattened.sol\":13012:13017  _name */\n      0x03\n        /* \"DripWarrior/usdc_flattened.sol\":13005:13017  return _name */\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_73\n      swap1\n      tag_72\n      jump\t// in\n    tag_73:\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_75\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_74)\n    tag_75:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_76:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_76\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DripWarrior/usdc_flattened.sol\":12935:13024  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"DripWarrior/usdc_flattened.sol\":15154:15340  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n        /* \"DripWarrior/usdc_flattened.sol\":15227:15231  bool */\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":4254:4264  msg.sender */\n      caller\n        /* \"DripWarrior/usdc_flattened.sol\":15281:15312  _approve(owner, spender, value) */\n      tag_80\n        /* \"DripWarrior/usdc_flattened.sol\":4254:4264  msg.sender */\n      dup2\n        /* \"DripWarrior/usdc_flattened.sol\":15297:15304  spender */\n      dup6\n        /* \"DripWarrior/usdc_flattened.sol\":15306:15311  value */\n      dup6\n        /* \"DripWarrior/usdc_flattened.sol\":15281:15289  _approve */\n      tag_81\n        /* \"DripWarrior/usdc_flattened.sol\":15281:15312  _approve(owner, spender, value) */\n      jump\t// in\n    tag_80:\n        /* \"DripWarrior/usdc_flattened.sol\":15329:15333  true */\n      0x01\n        /* \"DripWarrior/usdc_flattened.sol\":15322:15333  return true */\n      swap2\n      pop\n      pop\n        /* \"DripWarrior/usdc_flattened.sol\":15154:15340  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_77:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/usdc_flattened.sol\":15900:16144  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"DripWarrior/usdc_flattened.sol\":15987:15991  bool */\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":4254:4264  msg.sender */\n      caller\n        /* \"DripWarrior/usdc_flattened.sol\":16043:16080  _spendAllowance(from, spender, value) */\n      tag_85\n        /* \"DripWarrior/usdc_flattened.sol\":16059:16063  from */\n      dup6\n        /* \"DripWarrior/usdc_flattened.sol\":4254:4264  msg.sender */\n      dup3\n        /* \"DripWarrior/usdc_flattened.sol\":16074:16079  value */\n      dup6\n        /* \"DripWarrior/usdc_flattened.sol\":16043:16058  _spendAllowance */\n      tag_86\n        /* \"DripWarrior/usdc_flattened.sol\":16043:16080  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_85:\n        /* \"DripWarrior/usdc_flattened.sol\":16090:16116  _transfer(from, to, value) */\n      tag_87\n        /* \"DripWarrior/usdc_flattened.sol\":16100:16104  from */\n      dup6\n        /* \"DripWarrior/usdc_flattened.sol\":16106:16108  to */\n      dup6\n        /* \"DripWarrior/usdc_flattened.sol\":16110:16115  value */\n      dup6\n        /* \"DripWarrior/usdc_flattened.sol\":16090:16099  _transfer */\n      tag_88\n        /* \"DripWarrior/usdc_flattened.sol\":16090:16116  _transfer(from, to, value) */\n      jump\t// in\n    tag_87:\n      pop\n        /* \"DripWarrior/usdc_flattened.sol\":16133:16137  true */\n      0x01\n      swap5\n        /* \"DripWarrior/usdc_flattened.sol\":15900:16144  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/usdc_flattened.sol\":26238:26322  function mint(address to, uint256 amount) public  {... */\n    tag_43:\n        /* \"DripWarrior/usdc_flattened.sol\":26298:26315  _mint(to, amount) */\n      tag_91\n        /* \"DripWarrior/usdc_flattened.sol\":26304:26306  to */\n      dup3\n        /* \"DripWarrior/usdc_flattened.sol\":26308:26314  amount */\n      dup3\n        /* \"DripWarrior/usdc_flattened.sol\":26298:26303  _mint */\n      tag_92\n        /* \"DripWarrior/usdc_flattened.sol\":26298:26315  _mint(to, amount) */\n      jump\t// in\n    tag_91:\n        /* \"DripWarrior/usdc_flattened.sol\":26238:26322  function mint(address to, uint256 amount) public  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/usdc_flattened.sol\":24274:24375  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"DripWarrior/usdc_flattened.sol\":23512:23525  _checkOwner() */\n      tag_95\n        /* \"DripWarrior/usdc_flattened.sol\":23512:23523  _checkOwner */\n      tag_96\n        /* \"DripWarrior/usdc_flattened.sol\":23512:23525  _checkOwner() */\n      jump\t// in\n    tag_95:\n        /* \"DripWarrior/usdc_flattened.sol\":24338:24368  _transferOwnership(address(0)) */\n      tag_98\n        /* \"DripWarrior/usdc_flattened.sol\":24365:24366  0 */\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":24338:24356  _transferOwnership */\n      tag_99\n        /* \"DripWarrior/usdc_flattened.sol\":24338:24368  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_98:\n        /* \"DripWarrior/usdc_flattened.sol\":24274:24375  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"DripWarrior/usdc_flattened.sol\":13137:13230  function symbol() public view virtual returns (string memory) {... */\n    tag_56:\n        /* \"DripWarrior/usdc_flattened.sol\":13184:13197  string memory */\n      0x60\n        /* \"DripWarrior/usdc_flattened.sol\":13216:13223  _symbol */\n      0x04\n        /* \"DripWarrior/usdc_flattened.sol\":13209:13223  return _symbol */\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n        /* \"DripWarrior/usdc_flattened.sol\":14471:14649  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n        /* \"DripWarrior/usdc_flattened.sol\":14540:14544  bool */\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":4254:4264  msg.sender */\n      caller\n        /* \"DripWarrior/usdc_flattened.sol\":14594:14621  _transfer(owner, to, value) */\n      tag_80\n        /* \"DripWarrior/usdc_flattened.sol\":4254:4264  msg.sender */\n      dup2\n        /* \"DripWarrior/usdc_flattened.sol\":14611:14613  to */\n      dup6\n        /* \"DripWarrior/usdc_flattened.sol\":14615:14620  value */\n      dup6\n        /* \"DripWarrior/usdc_flattened.sol\":14594:14603  _transfer */\n      tag_88\n        /* \"DripWarrior/usdc_flattened.sol\":14594:14621  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"DripWarrior/usdc_flattened.sol\":24524:24739  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_69:\n        /* \"DripWarrior/usdc_flattened.sol\":23512:23525  _checkOwner() */\n      tag_112\n        /* \"DripWarrior/usdc_flattened.sol\":23512:23523  _checkOwner */\n      tag_96\n        /* \"DripWarrior/usdc_flattened.sol\":23512:23525  _checkOwner() */\n      jump\t// in\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":24608:24630  newOwner == address(0) */\n      dup2\n      and\n        /* \"DripWarrior/usdc_flattened.sol\":24604:24695  if (newOwner == address(0)) {... */\n      tag_114\n      jumpi\n        /* \"DripWarrior/usdc_flattened.sol\":24653:24684  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"DripWarrior/usdc_flattened.sol\":24681:24682  0 */\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":24653:24684  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"DripWarrior/usdc_flattened.sol\":24653:24684  OwnableInvalidOwner(address(0)) */\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DripWarrior/usdc_flattened.sol\":24604:24695  if (newOwner == address(0)) {... */\n    tag_114:\n        /* \"DripWarrior/usdc_flattened.sol\":24704:24732  _transferOwnership(newOwner) */\n      tag_116\n        /* \"DripWarrior/usdc_flattened.sol\":24723:24731  newOwner */\n      dup2\n        /* \"DripWarrior/usdc_flattened.sol\":24704:24722  _transferOwnership */\n      tag_99\n        /* \"DripWarrior/usdc_flattened.sol\":24704:24732  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_116:\n        /* \"DripWarrior/usdc_flattened.sol\":24524:24739  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"DripWarrior/usdc_flattened.sol\":19850:19978  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_81:\n        /* \"DripWarrior/usdc_flattened.sol\":19934:19971  _approve(owner, spender, value, true) */\n      tag_119\n        /* \"DripWarrior/usdc_flattened.sol\":19943:19948  owner */\n      dup4\n        /* \"DripWarrior/usdc_flattened.sol\":19950:19957  spender */\n      dup4\n        /* \"DripWarrior/usdc_flattened.sol\":19959:19964  value */\n      dup4\n        /* \"DripWarrior/usdc_flattened.sol\":19966:19970  true */\n      0x01\n        /* \"DripWarrior/usdc_flattened.sol\":19934:19942  _approve */\n      tag_120\n        /* \"DripWarrior/usdc_flattened.sol\":19934:19971  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_119:\n        /* \"DripWarrior/usdc_flattened.sol\":19850:19978  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/usdc_flattened.sol\":21524:22001  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":14813:14831  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"DripWarrior/usdc_flattened.sol\":21623:21647  uint256 currentAllowance */\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":14813:14831  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/usdc_flattened.sol\":14813:14824  _allowances */\n      0x01\n        /* \"DripWarrior/usdc_flattened.sol\":14813:14831  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DripWarrior/usdc_flattened.sol\":14813:14840  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"DripWarrior/usdc_flattened.sol\":21689:21726  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"DripWarrior/usdc_flattened.sol\":21685:21995  if (currentAllowance != type(uint256).max) {... */\n      tag_127\n      jumpi\n        /* \"DripWarrior/usdc_flattened.sol\":21765:21770  value */\n      dup2\n        /* \"DripWarrior/usdc_flattened.sol\":21746:21762  currentAllowance */\n      dup2\n        /* \"DripWarrior/usdc_flattened.sol\":21746:21770  currentAllowance < value */\n      lt\n        /* \"DripWarrior/usdc_flattened.sol\":21742:21872  if (currentAllowance < value) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \"DripWarrior/usdc_flattened.sol\":21797:21857  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3131:3163   */\n      dup5\n      and\n        /* \"DripWarrior/usdc_flattened.sol\":21797:21857  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3113:3164   */\n      mstore\n        /* \"#utility.yul\":3180:3198   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3173:3207   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3223:3241   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3216:3250   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3086:3104   */\n      0x64\n      add\n        /* \"DripWarrior/usdc_flattened.sol\":21797:21857  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_115\n        /* \"#utility.yul\":2911:3256   */\n      jump\n        /* \"DripWarrior/usdc_flattened.sol\":21742:21872  if (currentAllowance < value) {... */\n    tag_124:\n        /* \"DripWarrior/usdc_flattened.sol\":21913:21970  _approve(owner, spender, currentAllowance - value, false) */\n      tag_127\n        /* \"DripWarrior/usdc_flattened.sol\":21922:21927  owner */\n      dup5\n        /* \"DripWarrior/usdc_flattened.sol\":21929:21936  spender */\n      dup5\n        /* \"DripWarrior/usdc_flattened.sol\":21957:21962  value */\n      dup5\n        /* \"DripWarrior/usdc_flattened.sol\":21938:21954  currentAllowance */\n      dup5\n        /* \"DripWarrior/usdc_flattened.sol\":21938:21962  currentAllowance - value */\n      sub\n        /* \"DripWarrior/usdc_flattened.sol\":21964:21969  false */\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":21913:21921  _approve */\n      tag_120\n        /* \"DripWarrior/usdc_flattened.sol\":21913:21970  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_127:\n        /* \"DripWarrior/usdc_flattened.sol\":21613:22001  {... */\n      pop\n        /* \"DripWarrior/usdc_flattened.sol\":21524:22001  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/usdc_flattened.sol\":16517:16817  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":16600:16618  from == address(0) */\n      dup4\n      and\n        /* \"DripWarrior/usdc_flattened.sol\":16596:16682  if (from == address(0)) {... */\n      tag_129\n      jumpi\n        /* \"DripWarrior/usdc_flattened.sol\":16641:16671  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"DripWarrior/usdc_flattened.sol\":16668:16669  0 */\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":16641:16671  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"DripWarrior/usdc_flattened.sol\":16641:16671  ERC20InvalidSender(address(0)) */\n      tag_115\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"DripWarrior/usdc_flattened.sol\":16596:16682  if (from == address(0)) {... */\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":16695:16711  to == address(0) */\n      dup3\n      and\n        /* \"DripWarrior/usdc_flattened.sol\":16691:16777  if (to == address(0)) {... */\n      tag_131\n      jumpi\n        /* \"DripWarrior/usdc_flattened.sol\":16734:16766  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"DripWarrior/usdc_flattened.sol\":16763:16764  0 */\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":16734:16766  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"DripWarrior/usdc_flattened.sol\":16734:16766  ERC20InvalidReceiver(address(0)) */\n      tag_115\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"DripWarrior/usdc_flattened.sol\":16691:16777  if (to == address(0)) {... */\n    tag_131:\n        /* \"DripWarrior/usdc_flattened.sol\":16786:16810  _update(from, to, value) */\n      tag_119\n        /* \"DripWarrior/usdc_flattened.sol\":16794:16798  from */\n      dup4\n        /* \"DripWarrior/usdc_flattened.sol\":16800:16802  to */\n      dup4\n        /* \"DripWarrior/usdc_flattened.sol\":16804:16809  value */\n      dup4\n        /* \"DripWarrior/usdc_flattened.sol\":16786:16793  _update */\n      tag_134\n        /* \"DripWarrior/usdc_flattened.sol\":16786:16810  _update(from, to, value) */\n      jump\t// in\n        /* \"DripWarrior/usdc_flattened.sol\":18582:18790  function _mint(address account, uint256 value) internal {... */\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":18652:18673  account == address(0) */\n      dup3\n      and\n        /* \"DripWarrior/usdc_flattened.sol\":18648:18739  if (account == address(0)) {... */\n      tag_136\n      jumpi\n        /* \"DripWarrior/usdc_flattened.sol\":18696:18728  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"DripWarrior/usdc_flattened.sol\":18725:18726  0 */\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":18696:18728  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"DripWarrior/usdc_flattened.sol\":18696:18728  ERC20InvalidReceiver(address(0)) */\n      tag_115\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"DripWarrior/usdc_flattened.sol\":18648:18739  if (account == address(0)) {... */\n    tag_136:\n        /* \"DripWarrior/usdc_flattened.sol\":18748:18783  _update(address(0), account, value) */\n      tag_91\n        /* \"DripWarrior/usdc_flattened.sol\":18764:18765  0 */\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":18768:18775  account */\n      dup4\n        /* \"DripWarrior/usdc_flattened.sol\":18777:18782  value */\n      dup4\n        /* \"DripWarrior/usdc_flattened.sol\":18748:18755  _update */\n      tag_134\n        /* \"DripWarrior/usdc_flattened.sol\":18748:18783  _update(address(0), account, value) */\n      jump\t// in\n        /* \"DripWarrior/usdc_flattened.sol\":23777:23939  function _checkOwner() internal view virtual {... */\n    tag_96:\n        /* \"DripWarrior/usdc_flattened.sol\":23691:23697  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"DripWarrior/usdc_flattened.sol\":4254:4264  msg.sender */\n      caller\n        /* \"DripWarrior/usdc_flattened.sol\":23836:23859  owner() != _msgSender() */\n      eq\n        /* \"DripWarrior/usdc_flattened.sol\":23832:23933  if (owner() != _msgSender()) {... */\n      tag_98\n      jumpi\n        /* \"DripWarrior/usdc_flattened.sol\":23882:23922  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"DripWarrior/usdc_flattened.sol\":4254:4264  msg.sender */\n      caller\n        /* \"DripWarrior/usdc_flattened.sol\":23882:23922  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"DripWarrior/usdc_flattened.sol\":23882:23922  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_115\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"DripWarrior/usdc_flattened.sol\":24893:25080  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_99:\n        /* \"DripWarrior/usdc_flattened.sol\":24985:24991  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":25001:25018  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"DripWarrior/usdc_flattened.sol\":25033:25073  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"DripWarrior/usdc_flattened.sol\":24985:24991  _owner */\n      swap2\n      and\n      swap2\n        /* \"DripWarrior/usdc_flattened.sol\":25001:25018  _owner = newOwner */\n      swap1\n        /* \"DripWarrior/usdc_flattened.sol\":24985:24991  _owner */\n      dup3\n      swap1\n        /* \"DripWarrior/usdc_flattened.sol\":25033:25073  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"DripWarrior/usdc_flattened.sol\":24966:24982  address oldOwner */\n      0x00\n      swap1\n        /* \"DripWarrior/usdc_flattened.sol\":25033:25073  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"DripWarrior/usdc_flattened.sol\":24956:25080  {... */\n      pop\n        /* \"DripWarrior/usdc_flattened.sol\":24893:25080  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"DripWarrior/usdc_flattened.sol\":20810:21242  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":20922:20941  owner == address(0) */\n      dup5\n      and\n        /* \"DripWarrior/usdc_flattened.sol\":20918:21007  if (owner == address(0)) {... */\n      tag_147\n      jumpi\n        /* \"DripWarrior/usdc_flattened.sol\":20964:20996  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"DripWarrior/usdc_flattened.sol\":20993:20994  0 */\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":20964:20996  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"DripWarrior/usdc_flattened.sol\":20964:20996  ERC20InvalidApprover(address(0)) */\n      tag_115\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"DripWarrior/usdc_flattened.sol\":20918:21007  if (owner == address(0)) {... */\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":21020:21041  spender == address(0) */\n      dup4\n      and\n        /* \"DripWarrior/usdc_flattened.sol\":21016:21106  if (spender == address(0)) {... */\n      tag_149\n      jumpi\n        /* \"DripWarrior/usdc_flattened.sol\":21064:21095  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"DripWarrior/usdc_flattened.sol\":21092:21093  0 */\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":21064:21095  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"DripWarrior/usdc_flattened.sol\":21064:21095  ERC20InvalidSpender(address(0)) */\n      tag_115\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"DripWarrior/usdc_flattened.sol\":21016:21106  if (spender == address(0)) {... */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":21115:21133  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/usdc_flattened.sol\":21115:21126  _allowances */\n      0x01\n        /* \"DripWarrior/usdc_flattened.sol\":21115:21133  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DripWarrior/usdc_flattened.sol\":21115:21142  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"DripWarrior/usdc_flattened.sol\":21115:21150  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"DripWarrior/usdc_flattened.sol\":21160:21236  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_127\n      jumpi\n        /* \"DripWarrior/usdc_flattened.sol\":21210:21217  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":21194:21225  Approval(owner, spender, value) */\n      and\n        /* \"DripWarrior/usdc_flattened.sol\":21203:21208  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":21194:21225  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"DripWarrior/usdc_flattened.sol\":21219:21224  value */\n      dup5\n        /* \"DripWarrior/usdc_flattened.sol\":21194:21225  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_152\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"DripWarrior/usdc_flattened.sol\":21194:21225  Approval(owner, spender, value) */\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DripWarrior/usdc_flattened.sol\":20810:21242  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/usdc_flattened.sol\":17132:18239  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":17221:17239  from == address(0) */\n      dup4\n      and\n        /* \"DripWarrior/usdc_flattened.sol\":17217:17757  if (from == address(0)) {... */\n      tag_154\n      jumpi\n        /* \"DripWarrior/usdc_flattened.sol\":17373:17378  value */\n      dup1\n        /* \"DripWarrior/usdc_flattened.sol\":17357:17369  _totalSupply */\n      0x02\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":17357:17378  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"DripWarrior/usdc_flattened.sol\":17217:17757  if (from == address(0)) {... */\n      tag_157\n      swap1\n      pop\n      jump\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":17431:17446  _balances[from] */\n      dup4\n      and\n        /* \"DripWarrior/usdc_flattened.sol\":17409:17428  uint256 fromBalance */\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":17431:17446  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DripWarrior/usdc_flattened.sol\":17464:17483  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"DripWarrior/usdc_flattened.sol\":17460:17575  if (fromBalance < value) {... */\n      iszero\n      tag_158\n      jumpi\n        /* \"DripWarrior/usdc_flattened.sol\":17510:17560  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3131:3163   */\n      dup6\n      and\n        /* \"DripWarrior/usdc_flattened.sol\":17510:17560  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3113:3164   */\n      mstore\n        /* \"#utility.yul\":3180:3198   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3173:3207   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3223:3241   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3216:3250   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3086:3104   */\n      0x64\n      add\n        /* \"DripWarrior/usdc_flattened.sol\":17510:17560  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_115\n        /* \"#utility.yul\":2911:3256   */\n      jump\n        /* \"DripWarrior/usdc_flattened.sol\":17460:17575  if (fromBalance < value) {... */\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":17695:17710  _balances[from] */\n      dup5\n      and\n        /* \"DripWarrior/usdc_flattened.sol\":17695:17704  _balances */\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":17695:17710  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/usdc_flattened.sol\":17713:17732  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"DripWarrior/usdc_flattened.sol\":17695:17732  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"DripWarrior/usdc_flattened.sol\":17217:17757  if (from == address(0)) {... */\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":17771:17787  to == address(0) */\n      dup3\n      and\n        /* \"DripWarrior/usdc_flattened.sol\":17767:18192  if (to == address(0)) {... */\n      tag_160\n      jumpi\n        /* \"DripWarrior/usdc_flattened.sol\":17934:17946  _totalSupply */\n      0x02\n        /* \"DripWarrior/usdc_flattened.sol\":17934:17955  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"DripWarrior/usdc_flattened.sol\":17767:18192  if (to == address(0)) {... */\n      jump(tag_161)\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":18145:18158  _balances[to] */\n      dup3\n      and\n        /* \"DripWarrior/usdc_flattened.sol\":18145:18154  _balances */\n      0x00\n        /* \"DripWarrior/usdc_flattened.sol\":18145:18158  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/usdc_flattened.sol\":18145:18167  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"DripWarrior/usdc_flattened.sol\":17767:18192  if (to == address(0)) {... */\n    tag_161:\n        /* \"DripWarrior/usdc_flattened.sol\":18222:18224  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":18207:18232  Transfer(from, to, value) */\n      and\n        /* \"DripWarrior/usdc_flattened.sol\":18216:18220  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/usdc_flattened.sol\":18207:18232  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"DripWarrior/usdc_flattened.sol\":18226:18231  value */\n      dup4\n        /* \"DripWarrior/usdc_flattened.sol\":18207:18232  Transfer(from, to, value) */\n      mload(0x40)\n      tag_162\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"DripWarrior/usdc_flattened.sol\":18207:18232  Transfer(from, to, value) */\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DripWarrior/usdc_flattened.sol\":17132:18239  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:432   */\n    tag_21:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_163:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      dup1\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_167:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_24:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      dup1\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      dup1\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_169:\n        /* \"#utility.yul\":783:812   */\n      tag_170\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_163\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_34:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      dup1\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      dup1\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_174:\n        /* \"#utility.yul\":1479:1508   */\n      tag_175\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_163\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_176\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_163\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1862:2048   */\n    tag_46:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_179\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      dup1\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_179:\n        /* \"#utility.yul\":2013:2042   */\n      tag_180\n        /* \"#utility.yul\":2032:2041   */\n      dup3\n        /* \"#utility.yul\":2013:2042   */\n      tag_163\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2003:2042   */\n      swap4\n        /* \"#utility.yul\":1862:2048   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2261:2521   */\n    tag_64:\n        /* \"#utility.yul\":2329:2335   */\n      0x00\n        /* \"#utility.yul\":2337:2343   */\n      dup1\n        /* \"#utility.yul\":2390:2392   */\n      0x40\n        /* \"#utility.yul\":2378:2387   */\n      dup4\n        /* \"#utility.yul\":2369:2376   */\n      dup6\n        /* \"#utility.yul\":2365:2388   */\n      sub\n        /* \"#utility.yul\":2361:2393   */\n      slt\n        /* \"#utility.yul\":2358:2410   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":2406:2407   */\n      0x00\n        /* \"#utility.yul\":2403:2404   */\n      dup1\n        /* \"#utility.yul\":2396:2408   */\n      revert\n        /* \"#utility.yul\":2358:2410   */\n    tag_183:\n        /* \"#utility.yul\":2429:2458   */\n      tag_184\n        /* \"#utility.yul\":2448:2457   */\n      dup4\n        /* \"#utility.yul\":2429:2458   */\n      tag_163\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":2419:2458   */\n      swap2\n      pop\n        /* \"#utility.yul\":2477:2515   */\n      tag_185\n        /* \"#utility.yul\":2511:2513   */\n      0x20\n        /* \"#utility.yul\":2500:2509   */\n      dup5\n        /* \"#utility.yul\":2496:2514   */\n      add\n        /* \"#utility.yul\":2477:2515   */\n      tag_163\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":2467:2515   */\n      swap1\n      pop\n        /* \"#utility.yul\":2261:2521   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2526:2906   */\n    tag_72:\n        /* \"#utility.yul\":2605:2606   */\n      0x01\n        /* \"#utility.yul\":2601:2613   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2648:2660   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2669:2730   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":2723:2727   */\n      0x7f\n        /* \"#utility.yul\":2715:2721   */\n      dup3\n        /* \"#utility.yul\":2711:2728   */\n      and\n        /* \"#utility.yul\":2701:2728   */\n      swap2\n      pop\n        /* \"#utility.yul\":2669:2730   */\n    tag_187:\n        /* \"#utility.yul\":2776:2778   */\n      0x20\n        /* \"#utility.yul\":2768:2774   */\n      dup3\n        /* \"#utility.yul\":2765:2779   */\n      lt\n        /* \"#utility.yul\":2745:2763   */\n      dup2\n        /* \"#utility.yul\":2742:2780   */\n      sub\n        /* \"#utility.yul\":2739:2900   */\n      tag_188\n      jumpi\n        /* \"#utility.yul\":2822:2832   */\n      0x4e487b71\n        /* \"#utility.yul\":2817:2820   */\n      0xe0\n        /* \"#utility.yul\":2813:2833   */\n      shl\n        /* \"#utility.yul\":2810:2811   */\n      0x00\n        /* \"#utility.yul\":2803:2834   */\n      mstore\n        /* \"#utility.yul\":2857:2861   */\n      0x22\n        /* \"#utility.yul\":2854:2855   */\n      0x04\n        /* \"#utility.yul\":2847:2862   */\n      mstore\n        /* \"#utility.yul\":2885:2889   */\n      0x24\n        /* \"#utility.yul\":2882:2883   */\n      0x00\n        /* \"#utility.yul\":2875:2890   */\n      revert\n        /* \"#utility.yul\":2739:2900   */\n    tag_188:\n      pop\n        /* \"#utility.yul\":2526:2906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3261:3483   */\n    tag_156:\n        /* \"#utility.yul\":3326:3335   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3347:3357   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3344:3477   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3399:3409   */\n      0x4e487b71\n        /* \"#utility.yul\":3394:3397   */\n      0xe0\n        /* \"#utility.yul\":3390:3410   */\n      shl\n        /* \"#utility.yul\":3387:3388   */\n      0x00\n        /* \"#utility.yul\":3380:3411   */\n      mstore\n        /* \"#utility.yul\":3434:3438   */\n      0x11\n        /* \"#utility.yul\":3431:3432   */\n      0x04\n        /* \"#utility.yul\":3424:3439   */\n      mstore\n        /* \"#utility.yul\":3462:3466   */\n      0x24\n        /* \"#utility.yul\":3459:3460   */\n      0x00\n        /* \"#utility.yul\":3452:3467   */\n      revert\n\n    auxdata: 0xa2646970667358221220f57880d6b756f36cd5c3af51a6992ec466b60a0cc8666fb90bce91d4c36353a764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1018": {
									"entryPoint": null,
									"id": 1018,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_819": {
									"entryPoint": null,
									"id": 819,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 764,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 683,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 820,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1235,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1159,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3914:1",
										"nodeType": "YulBlock",
										"src": "0:3914:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:1",
													"nodeType": "YulBlock",
													"src": "95:209:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:1",
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:1",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:1",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nativeSrc": "143:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nativeSrc": "143:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nativeSrc": "112:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:1",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nativeSrc": "108:32:1",
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nativeSrc": "105:52:1",
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nativeSrc": "166:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:1"
																},
																"nativeSrc": "179:16:1",
																"nodeType": "YulFunctionCall",
																"src": "179:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:1",
																	"nodeType": "YulTypedName",
																	"src": "170:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:1",
																"nodeType": "YulBlock",
																"src": "258:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:1",
																					"nodeType": "YulLiteral",
																					"src": "267:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:1",
																					"nodeType": "YulLiteral",
																					"src": "270:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:1"
																			},
																			"nativeSrc": "260:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:1"
																		},
																		"nativeSrc": "260:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:1",
																										"nodeType": "YulLiteral",
																										"src": "243:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:1",
																										"nodeType": "YulLiteral",
																										"src": "248:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:1"
																								},
																								"nativeSrc": "239:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:1",
																								"nodeType": "YulLiteral",
																								"src": "252:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:1"
																						},
																						"nativeSrc": "235:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:1"
																				},
																				"nativeSrc": "224:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:1"
																		},
																		"nativeSrc": "214:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:1"
																},
																"nativeSrc": "207:50:1",
																"nodeType": "YulFunctionCall",
																"src": "207:50:1"
															},
															"nativeSrc": "204:70:1",
															"nodeType": "YulIf",
															"src": "204:70:1"
														},
														{
															"nativeSrc": "283:15:1",
															"nodeType": "YulAssignment",
															"src": "283:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:1",
																"nodeType": "YulIdentifier",
																"src": "293:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:1",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:1",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:1",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:290:1"
											},
											{
												"body": {
													"nativeSrc": "341:95:1",
													"nodeType": "YulBlock",
													"src": "341:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "358:1:1",
																		"nodeType": "YulLiteral",
																		"src": "358:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "365:3:1",
																				"nodeType": "YulLiteral",
																				"src": "365:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "370:10:1",
																				"nodeType": "YulLiteral",
																				"src": "370:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "361:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:1"
																		},
																		"nativeSrc": "361:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "361:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "351:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:1"
																},
																"nativeSrc": "351:31:1",
																"nodeType": "YulFunctionCall",
																"src": "351:31:1"
															},
															"nativeSrc": "351:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "351:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "398:1:1",
																		"nodeType": "YulLiteral",
																		"src": "398:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "401:4:1",
																		"nodeType": "YulLiteral",
																		"src": "401:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "391:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:1"
																},
																"nativeSrc": "391:15:1",
																"nodeType": "YulFunctionCall",
																"src": "391:15:1"
															},
															"nativeSrc": "391:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "391:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "422:1:1",
																		"nodeType": "YulLiteral",
																		"src": "422:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "425:4:1",
																		"nodeType": "YulLiteral",
																		"src": "425:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "415:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:1"
																},
																"nativeSrc": "415:15:1",
																"nodeType": "YulFunctionCall",
																"src": "415:15:1"
															},
															"nativeSrc": "415:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "415:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "309:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "309:127:1"
											},
											{
												"body": {
													"nativeSrc": "496:325:1",
													"nodeType": "YulBlock",
													"src": "496:325:1",
													"statements": [
														{
															"nativeSrc": "506:22:1",
															"nodeType": "YulAssignment",
															"src": "506:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "520:1:1",
																		"nodeType": "YulLiteral",
																		"src": "520:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "523:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "523:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "516:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:1"
																},
																"nativeSrc": "516:12:1",
																"nodeType": "YulFunctionCall",
																"src": "516:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "506:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "506:6:1"
																}
															]
														},
														{
															"nativeSrc": "537:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "537:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "567:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "567:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "573:1:1",
																		"nodeType": "YulLiteral",
																		"src": "573:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "563:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:1"
																},
																"nativeSrc": "563:12:1",
																"nodeType": "YulFunctionCall",
																"src": "563:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "541:18:1",
																	"nodeType": "YulTypedName",
																	"src": "541:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "614:31:1",
																"nodeType": "YulBlock",
																"src": "614:31:1",
																"statements": [
																	{
																		"nativeSrc": "616:27:1",
																		"nodeType": "YulAssignment",
																		"src": "616:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "630:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "630:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "638:4:1",
																					"nodeType": "YulLiteral",
																					"src": "638:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "626:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "626:3:1"
																			},
																			"nativeSrc": "626:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "626:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "616:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "616:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "594:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "594:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "587:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:1"
																},
																"nativeSrc": "587:26:1",
																"nodeType": "YulFunctionCall",
																"src": "587:26:1"
															},
															"nativeSrc": "584:61:1",
															"nodeType": "YulIf",
															"src": "584:61:1"
														},
														{
															"body": {
																"nativeSrc": "704:111:1",
																"nodeType": "YulBlock",
																"src": "704:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:1",
																					"nodeType": "YulLiteral",
																					"src": "725:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "732:3:1",
																							"nodeType": "YulLiteral",
																							"src": "732:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "737:10:1",
																							"nodeType": "YulLiteral",
																							"src": "737:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "728:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "728:3:1"
																					},
																					"nativeSrc": "728:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "728:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "718:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "718:6:1"
																			},
																			"nativeSrc": "718:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "718:31:1"
																		},
																		"nativeSrc": "718:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "718:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "769:1:1",
																					"nodeType": "YulLiteral",
																					"src": "769:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "772:4:1",
																					"nodeType": "YulLiteral",
																					"src": "772:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "762:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "762:6:1"
																			},
																			"nativeSrc": "762:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "762:15:1"
																		},
																		"nativeSrc": "762:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "762:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "797:1:1",
																					"nodeType": "YulLiteral",
																					"src": "797:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "800:4:1",
																					"nodeType": "YulLiteral",
																					"src": "800:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "790:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:1"
																			},
																			"nativeSrc": "790:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "790:15:1"
																		},
																		"nativeSrc": "790:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "790:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "660:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "660:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "683:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "683:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "691:2:1",
																				"nodeType": "YulLiteral",
																				"src": "691:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "680:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "680:2:1"
																		},
																		"nativeSrc": "680:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "680:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "657:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "657:2:1"
																},
																"nativeSrc": "657:38:1",
																"nodeType": "YulFunctionCall",
																"src": "657:38:1"
															},
															"nativeSrc": "654:161:1",
															"nodeType": "YulIf",
															"src": "654:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "441:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "476:4:1",
														"nodeType": "YulTypedName",
														"src": "476:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "485:6:1",
														"nodeType": "YulTypedName",
														"src": "485:6:1",
														"type": ""
													}
												],
												"src": "441:380:1"
											},
											{
												"body": {
													"nativeSrc": "882:65:1",
													"nodeType": "YulBlock",
													"src": "882:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "899:1:1",
																		"nodeType": "YulLiteral",
																		"src": "899:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "902:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "902:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "892:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:1"
																},
																"nativeSrc": "892:14:1",
																"nodeType": "YulFunctionCall",
																"src": "892:14:1"
															},
															"nativeSrc": "892:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "892:14:1"
														},
														{
															"nativeSrc": "915:26:1",
															"nodeType": "YulAssignment",
															"src": "915:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "933:1:1",
																		"nodeType": "YulLiteral",
																		"src": "933:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "936:4:1",
																		"nodeType": "YulLiteral",
																		"src": "936:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "923:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "923:9:1"
																},
																"nativeSrc": "923:18:1",
																"nodeType": "YulFunctionCall",
																"src": "923:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "915:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "826:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "865:3:1",
														"nodeType": "YulTypedName",
														"src": "865:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "873:4:1",
														"nodeType": "YulTypedName",
														"src": "873:4:1",
														"type": ""
													}
												],
												"src": "826:121:1"
											},
											{
												"body": {
													"nativeSrc": "1033:437:1",
													"nodeType": "YulBlock",
													"src": "1033:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1066:398:1",
																"nodeType": "YulBlock",
																"src": "1066:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1087:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1087:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1090:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1090:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1080:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1080:6:1"
																			},
																			"nativeSrc": "1080:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1080:16:1"
																		},
																		"nativeSrc": "1080:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1080:16:1"
																	},
																	{
																		"nativeSrc": "1109:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1109:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1131:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1131:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1134:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1121:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:1"
																			},
																			"nativeSrc": "1121:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1121:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1113:4:1",
																				"nodeType": "YulTypedName",
																				"src": "1113:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1152:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1152:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1175:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1175:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1185:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1185:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1192:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "1192:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1204:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1204:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1188:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1188:3:1"
																							},
																							"nativeSrc": "1188:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1188:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1181:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1181:3:1"
																					},
																					"nativeSrc": "1181:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1181:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1171:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:3:1"
																			},
																			"nativeSrc": "1171:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1171:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1156:11:1",
																				"nodeType": "YulTypedName",
																				"src": "1156:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1246:23:1",
																			"nodeType": "YulBlock",
																			"src": "1246:23:1",
																			"statements": [
																				{
																					"nativeSrc": "1248:19:1",
																					"nodeType": "YulAssignment",
																					"src": "1248:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1263:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1263:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1248:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "1248:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1228:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "1228:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1240:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1240:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1225:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1225:2:1"
																			},
																			"nativeSrc": "1225:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1225:20:1"
																		},
																		"nativeSrc": "1222:47:1",
																		"nodeType": "YulIf",
																		"src": "1222:47:1"
																	},
																	{
																		"nativeSrc": "1282:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1282:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1296:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1296:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1306:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1306:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1313:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1313:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1318:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1318:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1309:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1309:3:1"
																							},
																							"nativeSrc": "1309:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1309:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1302:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1302:3:1"
																					},
																					"nativeSrc": "1302:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1302:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1292:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1292:3:1"
																			},
																			"nativeSrc": "1292:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1292:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1286:2:1",
																				"nodeType": "YulTypedName",
																				"src": "1286:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1336:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1336:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1349:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "1349:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1340:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1340:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1434:20:1",
																			"nodeType": "YulBlock",
																			"src": "1434:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1443:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1443:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1450:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1450:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1436:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1436:6:1"
																						},
																						"nativeSrc": "1436:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1436:16:1"
																					},
																					"nativeSrc": "1436:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "1436:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1384:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1384:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1391:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1391:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1381:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1381:2:1"
																			},
																			"nativeSrc": "1381:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1381:13:1"
																		},
																		"nativeSrc": "1373:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1395:26:1",
																			"nodeType": "YulBlock",
																			"src": "1395:26:1",
																			"statements": [
																				{
																					"nativeSrc": "1397:22:1",
																					"nodeType": "YulAssignment",
																					"src": "1397:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1410:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1410:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1417:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1417:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1406:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1406:3:1"
																						},
																						"nativeSrc": "1406:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1406:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1397:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1397:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1377:3:1",
																			"nodeType": "YulBlock",
																			"src": "1377:3:1",
																			"statements": []
																		},
																		"src": "1373:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1049:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1049:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1054:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1054:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1046:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:1"
																},
																"nativeSrc": "1046:11:1",
																"nodeType": "YulFunctionCall",
																"src": "1046:11:1"
															},
															"nativeSrc": "1043:421:1",
															"nodeType": "YulIf",
															"src": "1043:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "952:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1005:5:1",
														"nodeType": "YulTypedName",
														"src": "1005:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1012:3:1",
														"nodeType": "YulTypedName",
														"src": "1012:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1017:10:1",
														"nodeType": "YulTypedName",
														"src": "1017:10:1",
														"type": ""
													}
												],
												"src": "952:518:1"
											},
											{
												"body": {
													"nativeSrc": "1560:81:1",
													"nodeType": "YulBlock",
													"src": "1560:81:1",
													"statements": [
														{
															"nativeSrc": "1570:65:1",
															"nodeType": "YulAssignment",
															"src": "1570:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1585:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1585:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1603:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1603:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1606:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1606:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1599:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1599:3:1"
																								},
																								"nativeSrc": "1599:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1599:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1616:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1616:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1612:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1612:3:1"
																								},
																								"nativeSrc": "1612:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1612:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1595:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1595:3:1"
																						},
																						"nativeSrc": "1595:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1595:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1591:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1591:3:1"
																				},
																				"nativeSrc": "1591:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1591:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1581:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1581:3:1"
																		},
																		"nativeSrc": "1581:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1581:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1627:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1627:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1630:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1630:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1623:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:1"
																		},
																		"nativeSrc": "1623:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1578:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1578:2:1"
																},
																"nativeSrc": "1578:57:1",
																"nodeType": "YulFunctionCall",
																"src": "1578:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1570:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1570:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1475:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1537:4:1",
														"nodeType": "YulTypedName",
														"src": "1537:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1543:3:1",
														"nodeType": "YulTypedName",
														"src": "1543:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1551:4:1",
														"nodeType": "YulTypedName",
														"src": "1551:4:1",
														"type": ""
													}
												],
												"src": "1475:166:1"
											},
											{
												"body": {
													"nativeSrc": "1742:1203:1",
													"nodeType": "YulBlock",
													"src": "1742:1203:1",
													"statements": [
														{
															"nativeSrc": "1752:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1752:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1772:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1772:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1766:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1766:5:1"
																},
																"nativeSrc": "1766:10:1",
																"nodeType": "YulFunctionCall",
																"src": "1766:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1756:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1756:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1819:22:1",
																"nodeType": "YulBlock",
																"src": "1819:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1821:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1821:16:1"
																			},
																			"nativeSrc": "1821:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1821:18:1"
																		},
																		"nativeSrc": "1821:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1821:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1791:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1791:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1807:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1807:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1811:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1811:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1803:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:1"
																				},
																				"nativeSrc": "1803:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1803:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1815:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1815:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1799:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:1"
																		},
																		"nativeSrc": "1799:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1788:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1788:2:1"
																},
																"nativeSrc": "1788:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1788:30:1"
															},
															"nativeSrc": "1785:56:1",
															"nodeType": "YulIf",
															"src": "1785:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1894:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1894:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1932:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1932:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1926:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1926:5:1"
																				},
																				"nativeSrc": "1926:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1926:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1900:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "1900:25:1"
																		},
																		"nativeSrc": "1900:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1940:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1940:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1850:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1850:43:1"
																},
																"nativeSrc": "1850:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1850:97:1"
															},
															"nativeSrc": "1850:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "1850:97:1"
														},
														{
															"nativeSrc": "1956:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1956:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1973:1:1",
																"nodeType": "YulLiteral",
																"src": "1973:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1960:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1960:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1983:17:1",
															"nodeType": "YulAssignment",
															"src": "1983:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1996:4:1",
																"nodeType": "YulLiteral",
																"src": "1996:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1983:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1983:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2046:642:1",
																		"nodeType": "YulBlock",
																		"src": "2046:642:1",
																		"statements": [
																			{
																				"nativeSrc": "2060:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2060:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2079:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2079:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2091:2:1",
																									"nodeType": "YulLiteral",
																									"src": "2091:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2087:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2087:3:1"
																							},
																							"nativeSrc": "2087:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2087:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2075:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2075:3:1"
																					},
																					"nativeSrc": "2075:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2075:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2064:7:1",
																						"nodeType": "YulTypedName",
																						"src": "2064:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2108:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2108:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2152:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2152:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2122:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "2122:29:1"
																					},
																					"nativeSrc": "2122:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2122:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2112:6:1",
																						"nodeType": "YulTypedName",
																						"src": "2112:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2170:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2170:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2179:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2179:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2174:1:1",
																						"nodeType": "YulTypedName",
																						"src": "2174:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2250:165:1",
																					"nodeType": "YulBlock",
																					"src": "2250:165:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2275:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2275:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2293:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "2293:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2298:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "2298:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2289:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2289:3:1"
																												},
																												"nativeSrc": "2289:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2289:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2283:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2283:5:1"
																										},
																										"nativeSrc": "2283:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2283:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2268:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2268:6:1"
																								},
																								"nativeSrc": "2268:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2268:42:1"
																							},
																							"nativeSrc": "2268:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2268:42:1"
																						},
																						{
																							"nativeSrc": "2327:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2327:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2341:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2341:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2349:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2349:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2337:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2337:3:1"
																								},
																								"nativeSrc": "2337:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2337:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2327:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2327:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2368:33:1",
																							"nodeType": "YulAssignment",
																							"src": "2368:33:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2385:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "2385:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2396:4:1",
																										"nodeType": "YulLiteral",
																										"src": "2396:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2381:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2381:3:1"
																								},
																								"nativeSrc": "2381:20:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2381:20:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2368:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "2368:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2204:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "2204:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2207:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2207:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2201:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2201:2:1"
																					},
																					"nativeSrc": "2201:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2201:14:1"
																				},
																				"nativeSrc": "2193:222:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2216:21:1",
																					"nodeType": "YulBlock",
																					"src": "2216:21:1",
																					"statements": [
																						{
																							"nativeSrc": "2218:17:1",
																							"nodeType": "YulAssignment",
																							"src": "2218:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2227:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "2227:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2230:4:1",
																										"nodeType": "YulLiteral",
																										"src": "2230:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2223:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2223:3:1"
																								},
																								"nativeSrc": "2223:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2223:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2218:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "2218:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2197:3:1",
																					"nodeType": "YulBlock",
																					"src": "2197:3:1",
																					"statements": []
																				},
																				"src": "2193:222:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "2463:166:1",
																					"nodeType": "YulBlock",
																					"src": "2463:166:1",
																					"statements": [
																						{
																							"nativeSrc": "2481:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2481:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2508:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2508:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2513:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2513:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2504:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2504:3:1"
																										},
																										"nativeSrc": "2504:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2504:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2498:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2498:5:1"
																								},
																								"nativeSrc": "2498:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2498:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2485:9:1",
																									"nodeType": "YulTypedName",
																									"src": "2485:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2548:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2548:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2560:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2560:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2587:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "2587:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2590:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "2590:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2583:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "2583:3:1"
																																		},
																																		"nativeSrc": "2583:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2583:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2599:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2599:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2579:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2579:3:1"
																																},
																																"nativeSrc": "2579:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2579:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2609:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2609:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2605:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2605:3:1"
																																},
																																"nativeSrc": "2605:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2605:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2575:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2575:3:1"
																														},
																														"nativeSrc": "2575:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2575:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2571:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2571:3:1"
																												},
																												"nativeSrc": "2571:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2571:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2556:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2556:3:1"
																										},
																										"nativeSrc": "2556:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2556:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2541:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2541:6:1"
																								},
																								"nativeSrc": "2541:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2541:74:1"
																							},
																							"nativeSrc": "2541:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2541:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2434:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2434:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2443:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2443:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2431:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2431:2:1"
																					},
																					"nativeSrc": "2431:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2431:19:1"
																				},
																				"nativeSrc": "2428:201:1",
																				"nodeType": "YulIf",
																				"src": "2428:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2649:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2649:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2663:1:1",
																											"nodeType": "YulLiteral",
																											"src": "2663:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2666:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "2666:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2659:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2659:3:1"
																									},
																									"nativeSrc": "2659:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2659:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2675:1:1",
																									"nodeType": "YulLiteral",
																									"src": "2675:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2655:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2655:3:1"
																							},
																							"nativeSrc": "2655:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2655:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2642:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2642:6:1"
																					},
																					"nativeSrc": "2642:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2642:36:1"
																				},
																				"nativeSrc": "2642:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2642:36:1"
																			}
																		]
																	},
																	"nativeSrc": "2039:649:1",
																	"nodeType": "YulCase",
																	"src": "2039:649:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2044:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2044:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2705:234:1",
																		"nodeType": "YulBlock",
																		"src": "2705:234:1",
																		"statements": [
																			{
																				"nativeSrc": "2719:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2719:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2732:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2732:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2723:5:1",
																						"nodeType": "YulTypedName",
																						"src": "2723:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2768:67:1",
																					"nodeType": "YulBlock",
																					"src": "2768:67:1",
																					"statements": [
																						{
																							"nativeSrc": "2786:35:1",
																							"nodeType": "YulAssignment",
																							"src": "2786:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2805:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2805:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2810:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2810:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2801:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2801:3:1"
																										},
																										"nativeSrc": "2801:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2801:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2795:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2795:5:1"
																								},
																								"nativeSrc": "2795:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2795:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2786:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2786:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2749:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2749:6:1"
																				},
																				"nativeSrc": "2746:89:1",
																				"nodeType": "YulIf",
																				"src": "2746:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2855:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2855:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2914:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2914:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2921:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2921:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2861:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "2861:52:1"
																							},
																							"nativeSrc": "2861:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2861:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2848:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2848:6:1"
																					},
																					"nativeSrc": "2848:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2848:81:1"
																				},
																				"nativeSrc": "2848:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2848:81:1"
																			}
																		]
																	},
																	"nativeSrc": "2697:242:1",
																	"nodeType": "YulCase",
																	"src": "2697:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2019:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2019:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2027:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2027:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2016:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2016:2:1"
																},
																"nativeSrc": "2016:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2016:14:1"
															},
															"nativeSrc": "2009:930:1",
															"nodeType": "YulSwitch",
															"src": "2009:930:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1646:1299:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1727:4:1",
														"nodeType": "YulTypedName",
														"src": "1727:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1733:3:1",
														"nodeType": "YulTypedName",
														"src": "1733:3:1",
														"type": ""
													}
												],
												"src": "1646:1299:1"
											},
											{
												"body": {
													"nativeSrc": "3051:102:1",
													"nodeType": "YulBlock",
													"src": "3051:102:1",
													"statements": [
														{
															"nativeSrc": "3061:26:1",
															"nodeType": "YulAssignment",
															"src": "3061:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3073:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3073:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3084:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3084:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3069:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3069:3:1"
																},
																"nativeSrc": "3069:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3069:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3061:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3061:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3103:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3103:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3118:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3118:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3134:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3134:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3139:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3139:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3130:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3130:3:1"
																						},
																						"nativeSrc": "3130:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3130:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3143:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3143:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3126:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3126:3:1"
																				},
																				"nativeSrc": "3126:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3126:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3114:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3114:3:1"
																		},
																		"nativeSrc": "3114:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3114:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3096:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3096:6:1"
																},
																"nativeSrc": "3096:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3096:51:1"
															},
															"nativeSrc": "3096:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3096:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2950:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3020:9:1",
														"nodeType": "YulTypedName",
														"src": "3020:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3031:6:1",
														"nodeType": "YulTypedName",
														"src": "3031:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3042:4:1",
														"nodeType": "YulTypedName",
														"src": "3042:4:1",
														"type": ""
													}
												],
												"src": "2950:203:1"
											},
											{
												"body": {
													"nativeSrc": "3206:174:1",
													"nodeType": "YulBlock",
													"src": "3206:174:1",
													"statements": [
														{
															"nativeSrc": "3216:16:1",
															"nodeType": "YulAssignment",
															"src": "3216:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3227:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3227:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3230:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3230:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3223:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3223:3:1"
																},
																"nativeSrc": "3223:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3223:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3216:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3216:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3263:111:1",
																"nodeType": "YulBlock",
																"src": "3263:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3284:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3284:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3291:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3291:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3296:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3296:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3287:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3287:3:1"
																					},
																					"nativeSrc": "3287:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3287:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3277:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3277:6:1"
																			},
																			"nativeSrc": "3277:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3277:31:1"
																		},
																		"nativeSrc": "3277:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3277:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3328:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3328:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3331:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3331:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3321:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3321:6:1"
																			},
																			"nativeSrc": "3321:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3321:15:1"
																		},
																		"nativeSrc": "3321:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3321:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3356:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3356:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3359:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3359:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3349:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3349:6:1"
																			},
																			"nativeSrc": "3349:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3349:15:1"
																		},
																		"nativeSrc": "3349:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3349:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3247:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3247:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3250:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3250:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3244:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3244:2:1"
																},
																"nativeSrc": "3244:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3244:10:1"
															},
															"nativeSrc": "3241:133:1",
															"nodeType": "YulIf",
															"src": "3241:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3158:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3189:1:1",
														"nodeType": "YulTypedName",
														"src": "3189:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3192:1:1",
														"nodeType": "YulTypedName",
														"src": "3192:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3198:3:1",
														"nodeType": "YulTypedName",
														"src": "3198:3:1",
														"type": ""
													}
												],
												"src": "3158:222:1"
											},
											{
												"body": {
													"nativeSrc": "3542:188:1",
													"nodeType": "YulBlock",
													"src": "3542:188:1",
													"statements": [
														{
															"nativeSrc": "3552:26:1",
															"nodeType": "YulAssignment",
															"src": "3552:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3564:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3564:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3575:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3575:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3560:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3560:3:1"
																},
																"nativeSrc": "3560:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3560:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3552:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3552:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3594:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3594:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3609:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3609:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3625:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3625:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3630:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3630:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3621:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3621:3:1"
																						},
																						"nativeSrc": "3621:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3621:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3634:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3634:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3617:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3617:3:1"
																				},
																				"nativeSrc": "3617:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3617:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3605:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3605:3:1"
																		},
																		"nativeSrc": "3605:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3605:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3587:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3587:6:1"
																},
																"nativeSrc": "3587:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3587:51:1"
															},
															"nativeSrc": "3587:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3587:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3658:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3658:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3669:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3669:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3654:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3654:3:1"
																		},
																		"nativeSrc": "3654:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3654:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3674:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3674:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3647:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3647:6:1"
																},
																"nativeSrc": "3647:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3647:34:1"
															},
															"nativeSrc": "3647:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3647:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3701:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3701:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3712:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3712:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3697:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3697:3:1"
																		},
																		"nativeSrc": "3697:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3697:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3717:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3717:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3690:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3690:6:1"
																},
																"nativeSrc": "3690:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3690:34:1"
															},
															"nativeSrc": "3690:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3690:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3385:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3495:9:1",
														"nodeType": "YulTypedName",
														"src": "3495:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3506:6:1",
														"nodeType": "YulTypedName",
														"src": "3506:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3514:6:1",
														"nodeType": "YulTypedName",
														"src": "3514:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3522:6:1",
														"nodeType": "YulTypedName",
														"src": "3522:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3533:4:1",
														"nodeType": "YulTypedName",
														"src": "3533:4:1",
														"type": ""
													}
												],
												"src": "3385:345:1"
											},
											{
												"body": {
													"nativeSrc": "3836:76:1",
													"nodeType": "YulBlock",
													"src": "3836:76:1",
													"statements": [
														{
															"nativeSrc": "3846:26:1",
															"nodeType": "YulAssignment",
															"src": "3846:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3858:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3858:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3869:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3869:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3854:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3854:3:1"
																},
																"nativeSrc": "3854:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3854:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3846:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3846:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3888:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3888:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3899:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3899:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3881:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3881:6:1"
																},
																"nativeSrc": "3881:25:1",
																"nodeType": "YulFunctionCall",
																"src": "3881:25:1"
															},
															"nativeSrc": "3881:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "3881:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3735:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3805:9:1",
														"nodeType": "YulTypedName",
														"src": "3805:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3816:6:1",
														"nodeType": "YulTypedName",
														"src": "3816:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3827:4:1",
														"nodeType": "YulTypedName",
														"src": "3827:4:1",
														"type": ""
													}
												],
												"src": "3735:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610e84380380610e8483398101604081905261002e9161045a565b806040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b815250816003908161007a919061051f565b506004610087828261051f565b5050506001600160a01b0381166100b857604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100c1816102ab565b506100ed735b38da6a701c568545dcfcb03fcb875f56beddc46c7e37be2022c0914b26800000006102fc565b61011573ab8483f64d9c6d1ecf9b849ae677dd3315835cb269021e19e0c9bab24000006102fc565b61013d734b20993bc481177ec7e8f571cecae8a9e22c02db69021e19e0c9bab24000006102fc565b6101657378731d3ca6b7e34ac0f824c42a7cc18a495cabab69021e19e0c9bab24000006102fc565b61018d73617f2e2fd72fd9d5503197092ac168c91465e7f269021e19e0c9bab24000006102fc565b6101b57317f6ad8ef982297579c203069c1dbffe4348c37269021e19e0c9bab24000006102fc565b6101dd736ddce86b55741e1fb71999a24c9bd95db18c934f69021e19e0c9bab24000006102fc565b61020573a33c5875be1e3afd5d72c5df98d3469d95ac85b069021e19e0c9bab24000006102fc565b61022d73ccc22a7fc54d184138dfd87b7ad24552cd4e091569021e19e0c9bab24000006102fc565b61025573ca6e763716ea3a3e425bad2954a65bbb411e5fbc69021e19e0c9bab24000006102fc565b61027d73bec540d2840bf6c5b52fc98f61e760e6fb1b265969021e19e0c9bab24000006102fc565b6102a573a33c5875be1e3afd5d72c5df98d3469d95ac85b069021e19e0c9bab24000006102fc565b506105fe565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166103255760405163ec442f0560e01b81525f60048201526024016100af565b6103305f8383610334565b5050565b6001600160a01b03831661035e578060025f82825461035391906105d9565b909155506103ce9050565b6001600160a01b0383165f90815260208190526040902054818110156103b05760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100af565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166103ea57600280548290039055610408565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161044d91815260200190565b60405180910390a3505050565b5f6020828403121561046a575f80fd5b81516001600160a01b0381168114610480575f80fd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806104af57607f821691505b6020821081036104cd57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561051a57805f5260205f20601f840160051c810160208510156104f85750805b601f840160051c820191505b81811015610517575f8155600101610504565b50505b505050565b81516001600160401b0381111561053857610538610487565b61054c81610546845461049b565b846104d3565b6020601f82116001811461057e575f83156105675750848201515b5f19600385901b1c1916600184901b178455610517565b5f84815260208120601f198516915b828110156105ad578785015182556020948501946001909201910161058d565b50848210156105ca57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156105f857634e487b7160e01b5f52601160045260245ffd5b92915050565b6108798061060b5f395ff3fe608060405234801561000f575f80fd5b50600436106100cb575f3560e01c806370a082311161008857806395d89b411161006357806395d89b41146101a4578063a9059cbb146101ac578063dd62ed3e146101bf578063f2fde38b146101f7575f80fd5b806370a0823114610159578063715018a6146101815780638da5cb5b14610189575f80fd5b806306fdde03146100cf578063095ea7b3146100ed57806318160ddd1461011057806323b872dd14610122578063313ce5671461013557806340c10f1914610144575b5f80fd5b6100d761020a565b6040516100e491906106e9565b60405180910390f35b6101006100fb366004610739565b61029a565b60405190151581526020016100e4565b6002545b6040519081526020016100e4565b610100610130366004610761565b6102b3565b604051601281526020016100e4565b610157610152366004610739565b6102d6565b005b61011461016736600461079b565b6001600160a01b03165f9081526020819052604090205490565b6101576102e4565b6005546040516001600160a01b0390911681526020016100e4565b6100d76102f7565b6101006101ba366004610739565b610306565b6101146101cd3660046107bb565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61015761020536600461079b565b610313565b606060038054610219906107ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610245906107ec565b80156102905780601f1061026757610100808354040283529160200191610290565b820191905f5260205f20905b81548152906001019060200180831161027357829003601f168201915b5050505050905090565b5f336102a7818585610355565b60019150505b92915050565b5f336102c0858285610367565b6102cb8585856103e2565b506001949350505050565b6102e0828261043f565b5050565b6102ec610473565b6102f55f6104a0565b565b606060048054610219906107ec565b5f336102a78185856103e2565b61031b610473565b6001600160a01b03811661034957604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b610352816104a0565b50565b61036283838360016104f1565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146103dc57818110156103ce57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610340565b6103dc84848484035f6104f1565b50505050565b6001600160a01b03831661040b57604051634b637e8f60e11b81525f6004820152602401610340565b6001600160a01b0382166104345760405163ec442f0560e01b81525f6004820152602401610340565b6103628383836105c3565b6001600160a01b0382166104685760405163ec442f0560e01b81525f6004820152602401610340565b6102e05f83836105c3565b6005546001600160a01b031633146102f55760405163118cdaa760e01b8152336004820152602401610340565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03841661051a5760405163e602df0560e01b81525f6004820152602401610340565b6001600160a01b03831661054357604051634a1406b160e11b81525f6004820152602401610340565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156103dc57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105b591815260200190565b60405180910390a350505050565b6001600160a01b0383166105ed578060025f8282546105e29190610824565b9091555061065d9050565b6001600160a01b0383165f908152602081905260409020548181101561063f5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610340565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661067957600280548290039055610697565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106dc91815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610734575f80fd5b919050565b5f806040838503121561074a575f80fd5b6107538361071e565b946020939093013593505050565b5f805f60608486031215610773575f80fd5b61077c8461071e565b925061078a6020850161071e565b929592945050506040919091013590565b5f602082840312156107ab575f80fd5b6107b48261071e565b9392505050565b5f80604083850312156107cc575f80fd5b6107d58361071e565b91506107e36020840161071e565b90509250929050565b600181811c9082168061080057607f821691505b60208210810361081e57634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102ad57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220f57880d6b756f36cd5c3af51a6992ec466b60a0cc8666fb90bce91d4c36353a764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE84 CODESIZE SUB DUP1 PUSH2 0xE84 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x45A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x26BCAA37B5B2B7 PUSH1 0xC9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4D544B PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x7A SWAP2 SWAP1 PUSH2 0x51F JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x87 DUP3 DUP3 PUSH2 0x51F JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC1 DUP2 PUSH2 0x2AB JUMP JUMPDEST POP PUSH2 0xED PUSH20 0x5B38DA6A701C568545DCFCB03FCB875F56BEDDC4 PUSH13 0x7E37BE2022C0914B2680000000 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x115 PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x13D PUSH20 0x4B20993BC481177EC7E8F571CECAE8A9E22C02DB PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x165 PUSH20 0x78731D3CA6B7E34AC0F824C42A7CC18A495CABAB PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x18D PUSH20 0x617F2E2FD72FD9D5503197092AC168C91465E7F2 PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x1B5 PUSH20 0x17F6AD8EF982297579C203069C1DBFFE4348C372 PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x1DD PUSH20 0x6DDCE86B55741E1FB71999A24C9BD95DB18C934F PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x205 PUSH20 0xA33C5875BE1E3AFD5D72C5DF98D3469D95AC85B0 PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x22D PUSH20 0xCCC22A7FC54D184138DFD87B7AD24552CD4E0915 PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x255 PUSH20 0xCA6E763716EA3A3E425BAD2954A65BBB411E5FBC PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x27D PUSH20 0xBEC540D2840BF6C5B52FC98F61E760E6FB1B2659 PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x2A5 PUSH20 0xA33C5875BE1E3AFD5D72C5DF98D3469D95AC85B0 PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x2FC JUMP JUMPDEST POP PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x325 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAF JUMP JUMPDEST PUSH2 0x330 PUSH0 DUP4 DUP4 PUSH2 0x334 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x35E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x5D9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x3CE SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xAF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3EA JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x408 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x44D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x480 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4AF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4CD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x51A JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4F8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x517 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x504 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x538 JUMPI PUSH2 0x538 PUSH2 0x487 JUMP JUMPDEST PUSH2 0x54C DUP2 PUSH2 0x546 DUP5 SLOAD PUSH2 0x49B JUMP JUMPDEST DUP5 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x57E JUMPI PUSH0 DUP4 ISZERO PUSH2 0x567 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x517 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5AD JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x58D JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x5CA JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5F8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x879 DUP1 PUSH2 0x60B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x144 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x761 JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x2E4 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x2F7 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x306 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x7EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x245 SWAP1 PUSH2 0x7EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x290 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x267 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x290 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x273 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x355 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2C0 DUP6 DUP3 DUP6 PUSH2 0x367 JUMP JUMPDEST PUSH2 0x2CB DUP6 DUP6 DUP6 PUSH2 0x3E2 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2E0 DUP3 DUP3 PUSH2 0x43F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x473 JUMP JUMPDEST PUSH2 0x2F5 PUSH0 PUSH2 0x4A0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x7EC JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x31B PUSH2 0x473 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x349 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x352 DUP2 PUSH2 0x4A0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x362 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x4F1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x3DC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x340 JUMP JUMPDEST PUSH2 0x3DC DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x4F1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x340 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x434 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x340 JUMP JUMPDEST PUSH2 0x362 DUP4 DUP4 DUP4 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x340 JUMP JUMPDEST PUSH2 0x2E0 PUSH0 DUP4 DUP4 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x340 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x340 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x543 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x340 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3DC JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5B5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5ED JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0x824 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x65D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x340 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x679 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x697 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x6DC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x734 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x753 DUP4 PUSH2 0x71E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x773 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x77C DUP5 PUSH2 0x71E JUMP JUMPDEST SWAP3 POP PUSH2 0x78A PUSH1 0x20 DUP6 ADD PUSH2 0x71E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7B4 DUP3 PUSH2 0x71E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7D5 DUP4 PUSH2 0x71E JUMP JUMPDEST SWAP2 POP PUSH2 0x7E3 PUSH1 0x20 DUP5 ADD PUSH2 0x71E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x800 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x81E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH25 0x80D6B756F36CD5C3AF51A6992EC466B60A0CC8666FB90BCE91 0xD4 0xC3 PUSH4 0x53A76473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "25193:1131:0:-:0;;;25231:1001;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25313:12;12757:113;;;;;;;;;;;;;-1:-1:-1;;;12757:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;12757:113:0;;;12831:5;12823;:13;;;;;;:::i;:::-;-1:-1:-1;12846:7:0;:17;12856:7;12846;:17;:::i;:::-;-1:-1:-1;;;;;;;;23254:26:0;;23250:95;;23303:31;;-1:-1:-1;;;23303:31:0;;23331:1;23303:31;;;3096:51:1;3069:18;;23303:31:0;;;;;;;;23250:95;23354:32;23373:12;23354:18;:32::i;:::-;-1:-1:-1;25341:72:0::2;25347:42;25391:21;25341:5;:72::i;:::-;25423:63;25429:42;25473:12;25423:5;:63::i;:::-;25496;25502:42;25546:12;25496:5;:63::i;:::-;25569;25575:42;25619:12;25569:5;:63::i;:::-;25642;25648:42;25692:12;25642:5;:63::i;:::-;25715;25721:42;25765:12;25715:5;:63::i;:::-;25797;25803:42;25847:12;25797:5;:63::i;:::-;25870;25876:42;25920:12;25870:5;:63::i;:::-;25943;25949:42;25993:12;25943:5;:63::i;:::-;26016;26022:42;26066:12;26016:5;:63::i;:::-;26089;26095:42;26139:12;26089:5;:63::i;:::-;26162;26168:42;26212:12;26162:5;:63::i;:::-;25231:1001:::0;25193:1131;;24893:187;24985:6;;;-1:-1:-1;;;;;25001:17:0;;;-1:-1:-1;;;;;;25001:17:0;;;;;;;25033:40;;24985:6;;;25001:17;24985:6;;25033:40;;24966:16;;25033:40;24956:124;24893:187;:::o;18582:208::-;-1:-1:-1;;;;;18652:21:0;;18648:91;;18696:32;;-1:-1:-1;;;18696:32:0;;18725:1;18696:32;;;3096:51:1;3069:18;;18696:32:0;2950:203:1;18648:91:0;18748:35;18764:1;18768:7;18777:5;18748:7;:35::i;:::-;18582:208;;:::o;17132:1107::-;-1:-1:-1;;;;;17221:18:0;;17217:540;;17373:5;17357:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;17217:540:0;;-1:-1:-1;17217:540:0;;-1:-1:-1;;;;;17431:15:0;;17409:19;17431:15;;;;;;;;;;;17464:19;;;17460:115;;;17510:50;;-1:-1:-1;;;17510:50:0;;-1:-1:-1;;;;;3605:32:1;;17510:50:0;;;3587:51:1;3654:18;;;3647:34;;;3697:18;;;3690:34;;;3560:18;;17510:50:0;3385:345:1;17460:115:0;-1:-1:-1;;;;;17695:15:0;;:9;:15;;;;;;;;;;17713:19;;;;17695:37;;17217:540;-1:-1:-1;;;;;17771:16:0;;17767:425;;17934:12;:21;;;;;;;17767:425;;;-1:-1:-1;;;;;18145:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17767:425;18222:2;-1:-1:-1;;;;;18207:25:0;18216:4;-1:-1:-1;;;;;18207:25:0;;18226:5;18207:25;;;;3881::1;;3869:2;3854:18;;3735:177;18207:25:0;;;;;;;;17132:1107;;;:::o;14:290:1:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:1;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;1043:421;952:518;;;:::o;1646:1299::-;1766:10;;-1:-1:-1;;;;;1788:30:1;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;1996:4;2027:2;2016:14;;2044:1;2039:649;;;;2732:1;2749:6;2746:89;;;-1:-1:-1;2801:19:1;;;2795:26;2746:89;-1:-1:-1;;1603:1:1;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2848:81;;2009:930;;2039:649;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2075:20:1;;;2193:222;2207:7;2204:1;2201:14;2193:222;;;2289:19;;;2283:26;2268:42;;2396:4;2381:20;;;;2349:1;2337:14;;;;2223:12;2193:222;;;2197:3;2443:6;2434:7;2431:19;2428:201;;;2504:19;;;2498:26;-1:-1:-1;;2587:1:1;2583:14;;;2599:3;2579:24;2575:37;2571:42;2556:58;2541:74;;2428:201;-1:-1:-1;;;;2675:1:1;2659:14;;;2655:22;2642:36;;-1:-1:-1;1646:1299:1:o;3158:222::-;3223:9;;;3244:10;;;3241:133;;;3296:10;3291:3;3287:20;3284:1;3277:31;3331:4;3328:1;3321:15;3359:4;3356:1;3349:15;3241:133;3158:222;;;;:::o;3735:177::-;25193:1131:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_662": {
									"entryPoint": 853,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 1265,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_853": {
									"entryPoint": 1139,
									"id": 853,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 1087,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_770": {
									"entryPoint": 871,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 1184,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 994,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 1475,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_398": {
									"entryPoint": null,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 666,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": null,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1031": {
									"entryPoint": 726,
									"id": 1031,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 522,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_867": {
									"entryPoint": 740,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 759,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": null,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_454": {
									"entryPoint": 691,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_895": {
									"entryPoint": 787,
									"id": 895,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_381": {
									"entryPoint": 774,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3485:1",
										"nodeType": "YulBlock",
										"src": "0:3485:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:1",
													"nodeType": "YulBlock",
													"src": "135:297:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:1",
																		"nodeType": "YulLiteral",
																		"src": "163:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:1"
																},
																"nativeSrc": "145:21:1",
																"nodeType": "YulFunctionCall",
																"src": "145:21:1"
															},
															"nativeSrc": "145:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:1"
														},
														{
															"nativeSrc": "175:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:1"
																},
																"nativeSrc": "189:13:1",
																"nodeType": "YulFunctionCall",
																"src": "189:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:1",
																	"nodeType": "YulTypedName",
																	"src": "179:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:1",
																				"nodeType": "YulLiteral",
																				"src": "233:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:1"
																		},
																		"nativeSrc": "218:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																},
																"nativeSrc": "211:34:1",
																"nodeType": "YulFunctionCall",
																"src": "211:34:1"
															},
															"nativeSrc": "211:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:1",
																				"nodeType": "YulLiteral",
																				"src": "275:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:1"
																		},
																		"nativeSrc": "260:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:1",
																				"nodeType": "YulLiteral",
																				"src": "292:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:1"
																		},
																		"nativeSrc": "280:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:1"
																},
																"nativeSrc": "254:50:1",
																"nodeType": "YulFunctionCall",
																"src": "254:50:1"
															},
															"nativeSrc": "254:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:1"
																				},
																				"nativeSrc": "324:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:1",
																				"nodeType": "YulLiteral",
																				"src": "348:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:1"
																		},
																		"nativeSrc": "320:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:1",
																		"nodeType": "YulLiteral",
																		"src": "353:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:1"
																},
																"nativeSrc": "313:42:1",
																"nodeType": "YulFunctionCall",
																"src": "313:42:1"
															},
															"nativeSrc": "313:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:1"
														},
														{
															"nativeSrc": "364:62:1",
															"nodeType": "YulAssignment",
															"src": "364:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:1",
																								"nodeType": "YulLiteral",
																								"src": "407:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:1"
																						},
																						"nativeSrc": "395:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:1",
																								"nodeType": "YulLiteral",
																								"src": "416:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:1"
																						},
																						"nativeSrc": "412:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:1"
																				},
																				"nativeSrc": "391:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:1"
																		},
																		"nativeSrc": "376:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:1",
																		"nodeType": "YulLiteral",
																		"src": "423:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:1"
																},
																"nativeSrc": "372:54:1",
																"nodeType": "YulFunctionCall",
																"src": "372:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:1",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:1",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:1",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:418:1"
											},
											{
												"body": {
													"nativeSrc": "486:124:1",
													"nodeType": "YulBlock",
													"src": "486:124:1",
													"statements": [
														{
															"nativeSrc": "496:29:1",
															"nodeType": "YulAssignment",
															"src": "496:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:1"
																},
																"nativeSrc": "505:20:1",
																"nodeType": "YulFunctionCall",
																"src": "505:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:1",
																"nodeType": "YulBlock",
																"src": "588:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:1",
																					"nodeType": "YulLiteral",
																					"src": "597:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:1",
																					"nodeType": "YulLiteral",
																					"src": "600:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:1"
																			},
																			"nativeSrc": "590:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:1"
																		},
																		"nativeSrc": "590:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:1",
																										"nodeType": "YulLiteral",
																										"src": "573:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:1",
																										"nodeType": "YulLiteral",
																										"src": "578:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:1"
																								},
																								"nativeSrc": "569:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:1",
																								"nodeType": "YulLiteral",
																								"src": "582:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:1"
																						},
																						"nativeSrc": "565:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:1"
																				},
																				"nativeSrc": "554:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:1"
																		},
																		"nativeSrc": "544:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:1"
																},
																"nativeSrc": "537:50:1",
																"nodeType": "YulFunctionCall",
																"src": "537:50:1"
															},
															"nativeSrc": "534:70:1",
															"nodeType": "YulIf",
															"src": "534:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:1",
														"nodeType": "YulTypedName",
														"src": "465:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:1",
														"nodeType": "YulTypedName",
														"src": "476:5:1",
														"type": ""
													}
												],
												"src": "437:173:1"
											},
											{
												"body": {
													"nativeSrc": "702:213:1",
													"nodeType": "YulBlock",
													"src": "702:213:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:1",
																"nodeType": "YulBlock",
																"src": "748:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:1",
																					"nodeType": "YulLiteral",
																					"src": "757:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:1",
																					"nodeType": "YulLiteral",
																					"src": "760:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:1"
																			},
																			"nativeSrc": "750:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:1"
																		},
																		"nativeSrc": "750:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:1"
																		},
																		"nativeSrc": "719:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:1",
																		"nodeType": "YulLiteral",
																		"src": "744:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:1"
																},
																"nativeSrc": "715:32:1",
																"nodeType": "YulFunctionCall",
																"src": "715:32:1"
															},
															"nativeSrc": "712:52:1",
															"nodeType": "YulIf",
															"src": "712:52:1"
														},
														{
															"nativeSrc": "773:39:1",
															"nodeType": "YulAssignment",
															"src": "773:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:1"
																},
																"nativeSrc": "783:29:1",
																"nodeType": "YulFunctionCall",
																"src": "783:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:1"
																}
															]
														},
														{
															"nativeSrc": "821:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:1",
																"nodeType": "YulLiteral",
																"src": "834:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:1",
																	"nodeType": "YulTypedName",
																	"src": "825:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:1",
															"nodeType": "YulAssignment",
															"src": "844:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:1",
																				"nodeType": "YulLiteral",
																				"src": "881:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:1"
																		},
																		"nativeSrc": "866:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:1"
																},
																"nativeSrc": "853:32:1",
																"nodeType": "YulFunctionCall",
																"src": "853:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:1"
																}
															]
														},
														{
															"nativeSrc": "894:15:1",
															"nodeType": "YulAssignment",
															"src": "894:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:1",
																"nodeType": "YulIdentifier",
																"src": "904:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:1",
														"nodeType": "YulTypedName",
														"src": "660:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:1",
														"nodeType": "YulTypedName",
														"src": "671:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:1",
														"nodeType": "YulTypedName",
														"src": "683:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:1",
														"nodeType": "YulTypedName",
														"src": "691:6:1",
														"type": ""
													}
												],
												"src": "615:300:1"
											},
											{
												"body": {
													"nativeSrc": "1015:92:1",
													"nodeType": "YulBlock",
													"src": "1015:92:1",
													"statements": [
														{
															"nativeSrc": "1025:26:1",
															"nodeType": "YulAssignment",
															"src": "1025:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:1"
																},
																"nativeSrc": "1033:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:1"
																				},
																				"nativeSrc": "1085:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:1"
																		},
																		"nativeSrc": "1078:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:1"
																},
																"nativeSrc": "1060:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:1"
															},
															"nativeSrc": "1060:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:1",
														"nodeType": "YulTypedName",
														"src": "984:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:1",
														"nodeType": "YulTypedName",
														"src": "995:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:1",
														"nodeType": "YulTypedName",
														"src": "1006:4:1",
														"type": ""
													}
												],
												"src": "920:187:1"
											},
											{
												"body": {
													"nativeSrc": "1213:76:1",
													"nodeType": "YulBlock",
													"src": "1213:76:1",
													"statements": [
														{
															"nativeSrc": "1223:26:1",
															"nodeType": "YulAssignment",
															"src": "1223:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:1"
																},
																"nativeSrc": "1231:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:1"
																},
																"nativeSrc": "1258:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:1"
															},
															"nativeSrc": "1258:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:1",
														"nodeType": "YulTypedName",
														"src": "1182:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:1",
														"nodeType": "YulTypedName",
														"src": "1193:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:1",
														"nodeType": "YulTypedName",
														"src": "1204:4:1",
														"type": ""
													}
												],
												"src": "1112:177:1"
											},
											{
												"body": {
													"nativeSrc": "1398:270:1",
													"nodeType": "YulBlock",
													"src": "1398:270:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:1",
																"nodeType": "YulBlock",
																"src": "1444:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:1"
																			},
																			"nativeSrc": "1446:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:1"
																		},
																		"nativeSrc": "1446:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:1"
																		},
																		"nativeSrc": "1415:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:1"
																},
																"nativeSrc": "1411:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:1"
															},
															"nativeSrc": "1408:52:1",
															"nodeType": "YulIf",
															"src": "1408:52:1"
														},
														{
															"nativeSrc": "1469:39:1",
															"nodeType": "YulAssignment",
															"src": "1469:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:1"
																},
																"nativeSrc": "1479:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:1"
																}
															]
														},
														{
															"nativeSrc": "1517:48:1",
															"nodeType": "YulAssignment",
															"src": "1517:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:1"
																		},
																		"nativeSrc": "1546:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:1"
																},
																"nativeSrc": "1527:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:1"
																}
															]
														},
														{
															"nativeSrc": "1574:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:1",
																"nodeType": "YulLiteral",
																"src": "1587:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:1",
															"nodeType": "YulAssignment",
															"src": "1597:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:1"
																		},
																		"nativeSrc": "1619:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:1"
																},
																"nativeSrc": "1606:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:1"
																}
															]
														},
														{
															"nativeSrc": "1647:15:1",
															"nodeType": "YulAssignment",
															"src": "1647:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:1",
																"nodeType": "YulIdentifier",
																"src": "1657:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:1",
														"nodeType": "YulTypedName",
														"src": "1348:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:1",
														"nodeType": "YulTypedName",
														"src": "1359:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:1",
														"nodeType": "YulTypedName",
														"src": "1371:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:1",
														"nodeType": "YulTypedName",
														"src": "1379:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:1",
														"nodeType": "YulTypedName",
														"src": "1387:6:1",
														"type": ""
													}
												],
												"src": "1294:374:1"
											},
											{
												"body": {
													"nativeSrc": "1770:87:1",
													"nodeType": "YulBlock",
													"src": "1770:87:1",
													"statements": [
														{
															"nativeSrc": "1780:26:1",
															"nodeType": "YulAssignment",
															"src": "1780:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1792:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:1"
																},
																"nativeSrc": "1788:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1788:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1822:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1837:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1845:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:1"
																		},
																		"nativeSrc": "1833:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:1"
																},
																"nativeSrc": "1815:36:1",
																"nodeType": "YulFunctionCall",
																"src": "1815:36:1"
															},
															"nativeSrc": "1815:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "1815:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1673:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1739:9:1",
														"nodeType": "YulTypedName",
														"src": "1739:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1750:6:1",
														"nodeType": "YulTypedName",
														"src": "1750:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1761:4:1",
														"nodeType": "YulTypedName",
														"src": "1761:4:1",
														"type": ""
													}
												],
												"src": "1673:184:1"
											},
											{
												"body": {
													"nativeSrc": "1932:116:1",
													"nodeType": "YulBlock",
													"src": "1932:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:1",
																"nodeType": "YulBlock",
																"src": "1978:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:1"
																			},
																			"nativeSrc": "1980:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:1"
																		},
																		"nativeSrc": "1980:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:1"
																		},
																		"nativeSrc": "1949:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:1"
																},
																"nativeSrc": "1945:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:1"
															},
															"nativeSrc": "1942:52:1",
															"nodeType": "YulIf",
															"src": "1942:52:1"
														},
														{
															"nativeSrc": "2003:39:1",
															"nodeType": "YulAssignment",
															"src": "2003:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2032:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2013:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2013:18:1"
																},
																"nativeSrc": "2013:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2013:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2003:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2003:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1862:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:1",
														"nodeType": "YulTypedName",
														"src": "1898:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:1",
														"nodeType": "YulTypedName",
														"src": "1909:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:1",
														"nodeType": "YulTypedName",
														"src": "1921:6:1",
														"type": ""
													}
												],
												"src": "1862:186:1"
											},
											{
												"body": {
													"nativeSrc": "2154:102:1",
													"nodeType": "YulBlock",
													"src": "2154:102:1",
													"statements": [
														{
															"nativeSrc": "2164:26:1",
															"nodeType": "YulAssignment",
															"src": "2164:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2176:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2176:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2187:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2187:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2172:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2172:3:1"
																},
																"nativeSrc": "2172:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2172:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2164:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2164:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2206:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2206:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2221:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2237:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2237:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2242:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2242:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2233:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2233:3:1"
																						},
																						"nativeSrc": "2233:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2233:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2246:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2246:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2229:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2229:3:1"
																				},
																				"nativeSrc": "2229:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2229:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2217:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2217:3:1"
																		},
																		"nativeSrc": "2217:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2217:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2199:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2199:6:1"
																},
																"nativeSrc": "2199:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2199:51:1"
															},
															"nativeSrc": "2199:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2199:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2053:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2123:9:1",
														"nodeType": "YulTypedName",
														"src": "2123:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2134:6:1",
														"nodeType": "YulTypedName",
														"src": "2134:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2145:4:1",
														"nodeType": "YulTypedName",
														"src": "2145:4:1",
														"type": ""
													}
												],
												"src": "2053:203:1"
											},
											{
												"body": {
													"nativeSrc": "2348:173:1",
													"nodeType": "YulBlock",
													"src": "2348:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2394:16:1",
																"nodeType": "YulBlock",
																"src": "2394:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2403:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2403:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2406:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2406:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2396:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2396:6:1"
																			},
																			"nativeSrc": "2396:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2396:12:1"
																		},
																		"nativeSrc": "2396:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2396:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2369:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2369:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2378:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2378:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2365:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:1"
																		},
																		"nativeSrc": "2365:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2365:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2390:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2390:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2361:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2361:3:1"
																},
																"nativeSrc": "2361:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2361:32:1"
															},
															"nativeSrc": "2358:52:1",
															"nodeType": "YulIf",
															"src": "2358:52:1"
														},
														{
															"nativeSrc": "2419:39:1",
															"nodeType": "YulAssignment",
															"src": "2419:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2448:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2448:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2429:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2429:18:1"
																},
																"nativeSrc": "2429:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2429:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2419:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:1"
																}
															]
														},
														{
															"nativeSrc": "2467:48:1",
															"nodeType": "YulAssignment",
															"src": "2467:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2500:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2500:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2511:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2511:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2496:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2496:3:1"
																		},
																		"nativeSrc": "2496:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2496:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2477:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2477:18:1"
																},
																"nativeSrc": "2477:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2477:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2467:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2467:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2261:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2306:9:1",
														"nodeType": "YulTypedName",
														"src": "2306:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2317:7:1",
														"nodeType": "YulTypedName",
														"src": "2317:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2329:6:1",
														"nodeType": "YulTypedName",
														"src": "2329:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2337:6:1",
														"nodeType": "YulTypedName",
														"src": "2337:6:1",
														"type": ""
													}
												],
												"src": "2261:260:1"
											},
											{
												"body": {
													"nativeSrc": "2581:325:1",
													"nodeType": "YulBlock",
													"src": "2581:325:1",
													"statements": [
														{
															"nativeSrc": "2591:22:1",
															"nodeType": "YulAssignment",
															"src": "2591:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2605:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2605:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2608:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2608:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2601:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2601:3:1"
																},
																"nativeSrc": "2601:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2601:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2591:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2591:6:1"
																}
															]
														},
														{
															"nativeSrc": "2622:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2622:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2652:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2652:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2658:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2658:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2648:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2648:3:1"
																},
																"nativeSrc": "2648:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2648:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2626:18:1",
																	"nodeType": "YulTypedName",
																	"src": "2626:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2699:31:1",
																"nodeType": "YulBlock",
																"src": "2699:31:1",
																"statements": [
																	{
																		"nativeSrc": "2701:27:1",
																		"nodeType": "YulAssignment",
																		"src": "2701:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2715:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2715:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2723:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2723:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2711:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2711:3:1"
																			},
																			"nativeSrc": "2711:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2711:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2701:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2701:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2679:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2679:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2672:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:1"
																},
																"nativeSrc": "2672:26:1",
																"nodeType": "YulFunctionCall",
																"src": "2672:26:1"
															},
															"nativeSrc": "2669:61:1",
															"nodeType": "YulIf",
															"src": "2669:61:1"
														},
														{
															"body": {
																"nativeSrc": "2789:111:1",
																"nodeType": "YulBlock",
																"src": "2789:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2810:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2810:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2817:3:1",
																							"nodeType": "YulLiteral",
																							"src": "2817:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2822:10:1",
																							"nodeType": "YulLiteral",
																							"src": "2822:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2813:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2813:3:1"
																					},
																					"nativeSrc": "2813:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2813:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2803:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2803:6:1"
																			},
																			"nativeSrc": "2803:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2803:31:1"
																		},
																		"nativeSrc": "2803:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2803:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2854:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2854:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2857:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2857:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2847:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2847:6:1"
																			},
																			"nativeSrc": "2847:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2847:15:1"
																		},
																		"nativeSrc": "2847:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2847:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2882:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2882:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2885:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2885:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2875:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2875:6:1"
																			},
																			"nativeSrc": "2875:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2875:15:1"
																		},
																		"nativeSrc": "2875:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2875:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2745:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2745:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2768:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2768:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2776:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2776:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2765:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2765:2:1"
																		},
																		"nativeSrc": "2765:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2765:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2742:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2742:2:1"
																},
																"nativeSrc": "2742:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2742:38:1"
															},
															"nativeSrc": "2739:161:1",
															"nodeType": "YulIf",
															"src": "2739:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2526:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2561:4:1",
														"nodeType": "YulTypedName",
														"src": "2561:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2570:6:1",
														"nodeType": "YulTypedName",
														"src": "2570:6:1",
														"type": ""
													}
												],
												"src": "2526:380:1"
											},
											{
												"body": {
													"nativeSrc": "3068:188:1",
													"nodeType": "YulBlock",
													"src": "3068:188:1",
													"statements": [
														{
															"nativeSrc": "3078:26:1",
															"nodeType": "YulAssignment",
															"src": "3078:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3090:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3090:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3101:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3101:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3086:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3086:3:1"
																},
																"nativeSrc": "3086:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3086:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3078:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3078:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3120:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3120:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3135:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3135:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3151:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3151:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3156:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3156:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3147:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3147:3:1"
																						},
																						"nativeSrc": "3147:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3147:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3160:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3160:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3143:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3143:3:1"
																				},
																				"nativeSrc": "3143:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3143:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3131:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3131:3:1"
																		},
																		"nativeSrc": "3131:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3131:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3113:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3113:6:1"
																},
																"nativeSrc": "3113:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3113:51:1"
															},
															"nativeSrc": "3113:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3113:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3184:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3184:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3195:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3195:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3180:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3180:3:1"
																		},
																		"nativeSrc": "3180:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3180:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3200:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3200:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3173:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3173:6:1"
																},
																"nativeSrc": "3173:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3173:34:1"
															},
															"nativeSrc": "3173:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3173:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3227:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3227:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3238:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3238:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3223:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3223:3:1"
																		},
																		"nativeSrc": "3223:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3223:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3243:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3243:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3216:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3216:6:1"
																},
																"nativeSrc": "3216:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3216:34:1"
															},
															"nativeSrc": "3216:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3216:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2911:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3021:9:1",
														"nodeType": "YulTypedName",
														"src": "3021:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3032:6:1",
														"nodeType": "YulTypedName",
														"src": "3032:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3040:6:1",
														"nodeType": "YulTypedName",
														"src": "3040:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3048:6:1",
														"nodeType": "YulTypedName",
														"src": "3048:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3059:4:1",
														"nodeType": "YulTypedName",
														"src": "3059:4:1",
														"type": ""
													}
												],
												"src": "2911:345:1"
											},
											{
												"body": {
													"nativeSrc": "3309:174:1",
													"nodeType": "YulBlock",
													"src": "3309:174:1",
													"statements": [
														{
															"nativeSrc": "3319:16:1",
															"nodeType": "YulAssignment",
															"src": "3319:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3330:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3330:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3333:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3333:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3326:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3326:3:1"
																},
																"nativeSrc": "3326:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3326:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3319:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3319:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3366:111:1",
																"nodeType": "YulBlock",
																"src": "3366:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3387:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3387:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3394:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3394:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3399:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3399:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3390:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3390:3:1"
																					},
																					"nativeSrc": "3390:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3390:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3380:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3380:6:1"
																			},
																			"nativeSrc": "3380:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3380:31:1"
																		},
																		"nativeSrc": "3380:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3380:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3431:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3431:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3434:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3434:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3424:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3424:6:1"
																			},
																			"nativeSrc": "3424:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3424:15:1"
																		},
																		"nativeSrc": "3424:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3424:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3459:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3459:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3462:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3462:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3452:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3452:6:1"
																			},
																			"nativeSrc": "3452:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3452:15:1"
																		},
																		"nativeSrc": "3452:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3452:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3350:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3350:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3353:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3353:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3347:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3347:2:1"
																},
																"nativeSrc": "3347:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3347:10:1"
															},
															"nativeSrc": "3344:133:1",
															"nodeType": "YulIf",
															"src": "3344:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3261:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3292:1:1",
														"nodeType": "YulTypedName",
														"src": "3292:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3295:1:1",
														"nodeType": "YulTypedName",
														"src": "3295:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3301:3:1",
														"nodeType": "YulTypedName",
														"src": "3301:3:1",
														"type": ""
													}
												],
												"src": "3261:222:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cb575f3560e01c806370a082311161008857806395d89b411161006357806395d89b41146101a4578063a9059cbb146101ac578063dd62ed3e146101bf578063f2fde38b146101f7575f80fd5b806370a0823114610159578063715018a6146101815780638da5cb5b14610189575f80fd5b806306fdde03146100cf578063095ea7b3146100ed57806318160ddd1461011057806323b872dd14610122578063313ce5671461013557806340c10f1914610144575b5f80fd5b6100d761020a565b6040516100e491906106e9565b60405180910390f35b6101006100fb366004610739565b61029a565b60405190151581526020016100e4565b6002545b6040519081526020016100e4565b610100610130366004610761565b6102b3565b604051601281526020016100e4565b610157610152366004610739565b6102d6565b005b61011461016736600461079b565b6001600160a01b03165f9081526020819052604090205490565b6101576102e4565b6005546040516001600160a01b0390911681526020016100e4565b6100d76102f7565b6101006101ba366004610739565b610306565b6101146101cd3660046107bb565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61015761020536600461079b565b610313565b606060038054610219906107ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610245906107ec565b80156102905780601f1061026757610100808354040283529160200191610290565b820191905f5260205f20905b81548152906001019060200180831161027357829003601f168201915b5050505050905090565b5f336102a7818585610355565b60019150505b92915050565b5f336102c0858285610367565b6102cb8585856103e2565b506001949350505050565b6102e0828261043f565b5050565b6102ec610473565b6102f55f6104a0565b565b606060048054610219906107ec565b5f336102a78185856103e2565b61031b610473565b6001600160a01b03811661034957604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b610352816104a0565b50565b61036283838360016104f1565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146103dc57818110156103ce57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610340565b6103dc84848484035f6104f1565b50505050565b6001600160a01b03831661040b57604051634b637e8f60e11b81525f6004820152602401610340565b6001600160a01b0382166104345760405163ec442f0560e01b81525f6004820152602401610340565b6103628383836105c3565b6001600160a01b0382166104685760405163ec442f0560e01b81525f6004820152602401610340565b6102e05f83836105c3565b6005546001600160a01b031633146102f55760405163118cdaa760e01b8152336004820152602401610340565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03841661051a5760405163e602df0560e01b81525f6004820152602401610340565b6001600160a01b03831661054357604051634a1406b160e11b81525f6004820152602401610340565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156103dc57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105b591815260200190565b60405180910390a350505050565b6001600160a01b0383166105ed578060025f8282546105e29190610824565b9091555061065d9050565b6001600160a01b0383165f908152602081905260409020548181101561063f5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610340565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661067957600280548290039055610697565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106dc91815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610734575f80fd5b919050565b5f806040838503121561074a575f80fd5b6107538361071e565b946020939093013593505050565b5f805f60608486031215610773575f80fd5b61077c8461071e565b925061078a6020850161071e565b929592945050506040919091013590565b5f602082840312156107ab575f80fd5b6107b48261071e565b9392505050565b5f80604083850312156107cc575f80fd5b6107d58361071e565b91506107e36020840161071e565b90509250929050565b600181811c9082168061080057607f821691505b60208210810361081e57634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102ad57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220f57880d6b756f36cd5c3af51a6992ec466b60a0cc8666fb90bce91d4c36353a764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x144 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x761 JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x2E4 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x2F7 JUMP JUMPDEST PUSH2 0x100 PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x306 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x7EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x245 SWAP1 PUSH2 0x7EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x290 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x267 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x290 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x273 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x355 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2C0 DUP6 DUP3 DUP6 PUSH2 0x367 JUMP JUMPDEST PUSH2 0x2CB DUP6 DUP6 DUP6 PUSH2 0x3E2 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2E0 DUP3 DUP3 PUSH2 0x43F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x473 JUMP JUMPDEST PUSH2 0x2F5 PUSH0 PUSH2 0x4A0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x219 SWAP1 PUSH2 0x7EC JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2A7 DUP2 DUP6 DUP6 PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x31B PUSH2 0x473 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x349 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x352 DUP2 PUSH2 0x4A0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x362 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x4F1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x3DC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x340 JUMP JUMPDEST PUSH2 0x3DC DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x4F1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x340 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x434 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x340 JUMP JUMPDEST PUSH2 0x362 DUP4 DUP4 DUP4 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x340 JUMP JUMPDEST PUSH2 0x2E0 PUSH0 DUP4 DUP4 PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x340 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x340 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x543 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x340 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3DC JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5B5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5ED JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0x824 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x65D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x340 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x679 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x697 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x6DC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x734 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x753 DUP4 PUSH2 0x71E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x773 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x77C DUP5 PUSH2 0x71E JUMP JUMPDEST SWAP3 POP PUSH2 0x78A PUSH1 0x20 DUP6 ADD PUSH2 0x71E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7B4 DUP3 PUSH2 0x71E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7D5 DUP4 PUSH2 0x71E JUMP JUMPDEST SWAP2 POP PUSH2 0x7E3 PUSH1 0x20 DUP5 ADD PUSH2 0x71E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x800 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x81E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH25 0x80D6B756F36CD5C3AF51A6992EC466B60A0CC8666FB90BCE91 0xD4 0xC3 PUSH4 0x53A76473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "25193:1131:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12935:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15154:186;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:1;;1078:22;1060:41;;1048:2;1033:18;15154:186:0;920:187:1;14005:97:0;14083:12;;14005:97;;;1258:25:1;;;1246:2;1231:18;14005:97:0;1112:177:1;15900:244:0;;;;;;:::i;:::-;;:::i;13863:82::-;;;13936:2;1815:36:1;;1803:2;1788:18;13863:82:0;1673:184:1;26238:84:0;;;;;;:::i;:::-;;:::i;:::-;;14160:116;;;;;;:::i;:::-;-1:-1:-1;;;;;14251:18:0;14225:7;14251:18;;;;;;;;;;;;14160:116;24274:101;;;:::i;23619:85::-;23691:6;;23619:85;;-1:-1:-1;;;;;23691:6:0;;;2199:51:1;;2187:2;2172:18;23619:85:0;2053:203:1;13137:93:0;;;:::i;14471:178::-;;;;;;:::i;:::-;;:::i;14707:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;14813:18:0;;;14787:7;14813:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;14707:140;24524:215;;;;;;:::i;:::-;;:::i;12935:89::-;12980:13;13012:5;13005:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12935:89;:::o;15154:186::-;15227:4;4254:10;15281:31;4254:10;15297:7;15306:5;15281:8;:31::i;:::-;15329:4;15322:11;;;15154:186;;;;;:::o;15900:244::-;15987:4;4254:10;16043:37;16059:4;4254:10;16074:5;16043:15;:37::i;:::-;16090:26;16100:4;16106:2;16110:5;16090:9;:26::i;:::-;-1:-1:-1;16133:4:0;;15900:244;-1:-1:-1;;;;15900:244:0:o;26238:84::-;26298:17;26304:2;26308:6;26298:5;:17::i;:::-;26238:84;;:::o;24274:101::-;23512:13;:11;:13::i;:::-;24338:30:::1;24365:1;24338:18;:30::i;:::-;24274:101::o:0;13137:93::-;13184:13;13216:7;13209:14;;;;;:::i;14471:178::-;14540:4;4254:10;14594:27;4254:10;14611:2;14615:5;14594:9;:27::i;24524:215::-;23512:13;:11;:13::i;:::-;-1:-1:-1;;;;;24608:22:0;::::1;24604:91;;24653:31;::::0;-1:-1:-1;;;24653:31:0;;24681:1:::1;24653:31;::::0;::::1;2199:51:1::0;2172:18;;24653:31:0::1;;;;;;;;24604:91;24704:28;24723:8;24704:18;:28::i;:::-;24524:215:::0;:::o;19850:128::-;19934:37;19943:5;19950:7;19959:5;19966:4;19934:8;:37::i;:::-;19850:128;;;:::o;21524:477::-;-1:-1:-1;;;;;14813:18:0;;;21623:24;14813:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;21689:37:0;;21685:310;;21765:5;21746:16;:24;21742:130;;;21797:60;;-1:-1:-1;;;21797:60:0;;-1:-1:-1;;;;;3131:32:1;;21797:60:0;;;3113:51:1;3180:18;;;3173:34;;;3223:18;;;3216:34;;;3086:18;;21797:60:0;2911:345:1;21742:130:0;21913:57;21922:5;21929:7;21957:5;21938:16;:24;21964:5;21913:8;:57::i;:::-;21613:388;21524:477;;;:::o;16517:300::-;-1:-1:-1;;;;;16600:18:0;;16596:86;;16641:30;;-1:-1:-1;;;16641:30:0;;16668:1;16641:30;;;2199:51:1;2172:18;;16641:30:0;2053:203:1;16596:86:0;-1:-1:-1;;;;;16695:16:0;;16691:86;;16734:32;;-1:-1:-1;;;16734:32:0;;16763:1;16734:32;;;2199:51:1;2172:18;;16734:32:0;2053:203:1;16691:86:0;16786:24;16794:4;16800:2;16804:5;16786:7;:24::i;18582:208::-;-1:-1:-1;;;;;18652:21:0;;18648:91;;18696:32;;-1:-1:-1;;;18696:32:0;;18725:1;18696:32;;;2199:51:1;2172:18;;18696:32:0;2053:203:1;18648:91:0;18748:35;18764:1;18768:7;18777:5;18748:7;:35::i;23777:162::-;23691:6;;-1:-1:-1;;;;;23691:6:0;4254:10;23836:23;23832:101;;23882:40;;-1:-1:-1;;;23882:40:0;;4254:10;23882:40;;;2199:51:1;2172:18;;23882:40:0;2053:203:1;24893:187:0;24985:6;;;-1:-1:-1;;;;;25001:17:0;;;-1:-1:-1;;;;;;25001:17:0;;;;;;;25033:40;;24985:6;;;25001:17;24985:6;;25033:40;;24966:16;;25033:40;24956:124;24893:187;:::o;20810:432::-;-1:-1:-1;;;;;20922:19:0;;20918:89;;20964:32;;-1:-1:-1;;;20964:32:0;;20993:1;20964:32;;;2199:51:1;2172:18;;20964:32:0;2053:203:1;20918:89:0;-1:-1:-1;;;;;21020:21:0;;21016:90;;21064:31;;-1:-1:-1;;;21064:31:0;;21092:1;21064:31;;;2199:51:1;2172:18;;21064:31:0;2053:203:1;21016:90:0;-1:-1:-1;;;;;21115:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;21160:76;;;;21210:7;-1:-1:-1;;;;;21194:31:0;21203:5;-1:-1:-1;;;;;21194:31:0;;21219:5;21194:31;;;;1258:25:1;;1246:2;1231:18;;1112:177;21194:31:0;;;;;;;;20810:432;;;;:::o;17132:1107::-;-1:-1:-1;;;;;17221:18:0;;17217:540;;17373:5;17357:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;17217:540:0;;-1:-1:-1;17217:540:0;;-1:-1:-1;;;;;17431:15:0;;17409:19;17431:15;;;;;;;;;;;17464:19;;;17460:115;;;17510:50;;-1:-1:-1;;;17510:50:0;;-1:-1:-1;;;;;3131:32:1;;17510:50:0;;;3113:51:1;3180:18;;;3173:34;;;3223:18;;;3216:34;;;3086:18;;17510:50:0;2911:345:1;17460:115:0;-1:-1:-1;;;;;17695:15:0;;:9;:15;;;;;;;;;;17713:19;;;;17695:37;;17217:540;-1:-1:-1;;;;;17771:16:0;;17767:425;;17934:12;:21;;;;;;;17767:425;;;-1:-1:-1;;;;;18145:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17767:425;18222:2;-1:-1:-1;;;;;18207:25:0;18216:4;-1:-1:-1;;;;;18207:25:0;;18226:5;18207:25;;;;1258::1;;1246:2;1231:18;;1112:177;18207:25:0;;;;;;;;17132:1107;;;:::o;14:418:1:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:1;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:1:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:1;1619:18;;;;1606:32;;1294:374::o;1862:186::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;2013:29;2032:9;2013:29;:::i;:::-;2003:39;1862:186;-1:-1:-1;;;1862:186:1:o;2261:260::-;2329:6;2337;2390:2;2378:9;2369:7;2365:23;2361:32;2358:52;;;2406:1;2403;2396:12;2358:52;2429:29;2448:9;2429:29;:::i;:::-;2419:39;;2477:38;2511:2;2500:9;2496:18;2477:38;:::i;:::-;2467:48;;2261:260;;;;;:::o;2526:380::-;2605:1;2601:12;;;;2648;;;2669:61;;2723:4;2715:6;2711:17;2701:27;;2669:61;2776:2;2768:6;2765:14;2745:18;2742:38;2739:161;;2822:10;2817:3;2813:20;2810:1;2803:31;2857:4;2854:1;2847:15;2885:4;2882:1;2875:15;2739:161;;2526:380;;;:::o;3261:222::-;3326:9;;;3347:10;;;3344:133;;;3399:10;3394:3;3390:20;3387:1;3380:31;3434:4;3431:1;3424:15;3462:4;3459:1;3452:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "433800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24735",
								"balanceOf(address)": "2560",
								"decimals()": "265",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2367",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51260",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28421"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25193,
									"end": 26324,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25193,
									"end": 26324,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25193,
									"end": 26324,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 25231,
									"end": 26232,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25313,
									"end": 25325,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26BCAA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D544B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12757,
									"end": 12870,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12831,
									"end": 12836,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12823,
									"end": 12828,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12823,
									"end": 12836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12823,
									"end": 12836,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12846,
									"end": 12853,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12846,
									"end": 12863,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12856,
									"end": 12863,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12846,
									"end": 12853,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12846,
									"end": 12863,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12846,
									"end": 12863,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12846,
									"end": 12863,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12846,
									"end": 12863,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 23254,
									"end": 23280,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23254,
									"end": 23280,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23250,
									"end": 23345,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23250,
									"end": 23345,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23303,
									"end": 23334,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23303,
									"end": 23334,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 23303,
									"end": 23334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23303,
									"end": 23334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23331,
									"end": 23332,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23303,
									"end": 23334,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23303,
									"end": 23334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23303,
									"end": 23334,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3096,
									"end": 3147,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 23303,
									"end": 23334,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23303,
									"end": 23334,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23303,
									"end": 23334,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23303,
									"end": 23334,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23303,
									"end": 23334,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23303,
									"end": 23334,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23303,
									"end": 23334,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23303,
									"end": 23334,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23303,
									"end": 23334,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23250,
									"end": 23345,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23250,
									"end": 23345,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23354,
									"end": 23386,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23373,
									"end": 23385,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23354,
									"end": 23372,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 23354,
									"end": 23386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23354,
									"end": 23386,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23354,
									"end": 23386,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 25341,
									"end": 25413,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 25347,
									"end": 25389,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "5B38DA6A701C568545DCFCB03FCB875F56BEDDC4"
								},
								{
									"begin": 25391,
									"end": 25412,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7E37BE2022C0914B2680000000"
								},
								{
									"begin": 25341,
									"end": 25346,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 25341,
									"end": 25413,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25341,
									"end": 25413,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 25341,
									"end": 25413,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25423,
									"end": 25486,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25429,
									"end": 25471,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
								},
								{
									"begin": 25473,
									"end": 25485,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "21E19E0C9BAB2400000"
								},
								{
									"begin": 25423,
									"end": 25428,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 25423,
									"end": 25486,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25423,
									"end": 25486,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25423,
									"end": 25486,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25496,
									"end": 25559,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 25502,
									"end": 25544,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "4B20993BC481177EC7E8F571CECAE8A9E22C02DB"
								},
								{
									"begin": 25546,
									"end": 25558,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "21E19E0C9BAB2400000"
								},
								{
									"begin": 25496,
									"end": 25501,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 25496,
									"end": 25559,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25496,
									"end": 25559,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 25496,
									"end": 25559,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25569,
									"end": 25632,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 25575,
									"end": 25617,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "78731D3CA6B7E34AC0F824C42A7CC18A495CABAB"
								},
								{
									"begin": 25619,
									"end": 25631,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "21E19E0C9BAB2400000"
								},
								{
									"begin": 25569,
									"end": 25574,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 25569,
									"end": 25632,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25569,
									"end": 25632,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 25569,
									"end": 25632,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25642,
									"end": 25705,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 25648,
									"end": 25690,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "617F2E2FD72FD9D5503197092AC168C91465E7F2"
								},
								{
									"begin": 25692,
									"end": 25704,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "21E19E0C9BAB2400000"
								},
								{
									"begin": 25642,
									"end": 25647,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 25642,
									"end": 25705,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25642,
									"end": 25705,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 25642,
									"end": 25705,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25715,
									"end": 25778,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 25721,
									"end": 25763,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "17F6AD8EF982297579C203069C1DBFFE4348C372"
								},
								{
									"begin": 25765,
									"end": 25777,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "21E19E0C9BAB2400000"
								},
								{
									"begin": 25715,
									"end": 25720,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 25715,
									"end": 25778,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25715,
									"end": 25778,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 25715,
									"end": 25778,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25797,
									"end": 25860,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 25803,
									"end": 25845,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "6DDCE86B55741E1FB71999A24C9BD95DB18C934F"
								},
								{
									"begin": 25847,
									"end": 25859,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "21E19E0C9BAB2400000"
								},
								{
									"begin": 25797,
									"end": 25802,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 25797,
									"end": 25860,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25797,
									"end": 25860,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 25797,
									"end": 25860,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25870,
									"end": 25933,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 25876,
									"end": 25918,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "A33C5875BE1E3AFD5D72C5DF98D3469D95AC85B0"
								},
								{
									"begin": 25920,
									"end": 25932,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "21E19E0C9BAB2400000"
								},
								{
									"begin": 25870,
									"end": 25875,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 25870,
									"end": 25933,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25870,
									"end": 25933,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 25870,
									"end": 25933,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25943,
									"end": 26006,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 25949,
									"end": 25991,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "CCC22A7FC54D184138DFD87B7AD24552CD4E0915"
								},
								{
									"begin": 25993,
									"end": 26005,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "21E19E0C9BAB2400000"
								},
								{
									"begin": 25943,
									"end": 25948,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 25943,
									"end": 26006,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25943,
									"end": 26006,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 25943,
									"end": 26006,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26016,
									"end": 26079,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 26022,
									"end": 26064,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "CA6E763716EA3A3E425BAD2954A65BBB411E5FBC"
								},
								{
									"begin": 26066,
									"end": 26078,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "21E19E0C9BAB2400000"
								},
								{
									"begin": 26016,
									"end": 26021,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 26016,
									"end": 26079,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26016,
									"end": 26079,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 26016,
									"end": 26079,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26089,
									"end": 26152,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 26095,
									"end": 26137,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "BEC540D2840BF6C5B52FC98F61E760E6FB1B2659"
								},
								{
									"begin": 26139,
									"end": 26151,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "21E19E0C9BAB2400000"
								},
								{
									"begin": 26089,
									"end": 26094,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 26089,
									"end": 26152,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26089,
									"end": 26152,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 26089,
									"end": 26152,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26162,
									"end": 26225,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 26168,
									"end": 26210,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "A33C5875BE1E3AFD5D72C5DF98D3469D95AC85B0"
								},
								{
									"begin": 26212,
									"end": 26224,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "21E19E0C9BAB2400000"
								},
								{
									"begin": 26162,
									"end": 26167,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 26162,
									"end": 26225,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26162,
									"end": 26225,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 26162,
									"end": 26225,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25231,
									"end": 26232,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25193,
									"end": 26324,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 25193,
									"end": 26324,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24893,
									"end": 25080,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 24893,
									"end": 25080,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 24991,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24985,
									"end": 24991,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 24991,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 25001,
									"end": 25018,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25001,
									"end": 25018,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25001,
									"end": 25018,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 25001,
									"end": 25018,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25001,
									"end": 25018,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25001,
									"end": 25018,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25001,
									"end": 25018,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25001,
									"end": 25018,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25001,
									"end": 25018,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 25001,
									"end": 25018,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25033,
									"end": 25073,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25033,
									"end": 25073,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 24991,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 24991,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 24991,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25001,
									"end": 25018,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 24991,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24985,
									"end": 24991,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25033,
									"end": 25073,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 25033,
									"end": 25073,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24966,
									"end": 24982,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24966,
									"end": 24982,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25033,
									"end": 25073,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 24956,
									"end": 25080,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24893,
									"end": 25080,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24893,
									"end": 25080,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18582,
									"end": 18790,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 18582,
									"end": 18790,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18652,
									"end": 18673,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18652,
									"end": 18673,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18648,
									"end": 18739,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 18648,
									"end": 18739,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18725,
									"end": 18726,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3096,
									"end": 3147,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3069,
									"end": 3087,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18696,
									"end": 18728,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2950,
									"end": 3153,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 18648,
									"end": 18739,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 18648,
									"end": 18739,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18748,
									"end": 18783,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 18764,
									"end": 18765,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18768,
									"end": 18775,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18777,
									"end": 18782,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18748,
									"end": 18755,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 18748,
									"end": 18783,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18748,
									"end": 18783,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 18748,
									"end": 18783,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18582,
									"end": 18790,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18582,
									"end": 18790,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18582,
									"end": 18790,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17132,
									"end": 18239,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17132,
									"end": 18239,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17221,
									"end": 17239,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17221,
									"end": 17239,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17217,
									"end": 17757,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17217,
									"end": 17757,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17373,
									"end": 17378,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17369,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17357,
									"end": 17369,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 17357,
									"end": 17378,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17357,
									"end": 17378,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17217,
									"end": 17757,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 17217,
									"end": 17757,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17217,
									"end": 17757,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17217,
									"end": 17757,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17217,
									"end": 17757,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17409,
									"end": 17428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17431,
									"end": 17446,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17464,
									"end": 17483,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17464,
									"end": 17483,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17464,
									"end": 17483,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17460,
									"end": 17575,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17460,
									"end": 17575,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 17460,
									"end": 17575,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17510,
									"end": 17560,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17510,
									"end": 17560,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17510,
									"end": 17560,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17510,
									"end": 17560,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3605,
									"end": 3637,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3605,
									"end": 3637,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17510,
									"end": 17560,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17510,
									"end": 17560,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17510,
									"end": 17560,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3587,
									"end": 3638,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3654,
									"end": 3672,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3654,
									"end": 3672,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3654,
									"end": 3672,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3647,
									"end": 3681,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3647,
									"end": 3681,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3647,
									"end": 3681,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3697,
									"end": 3715,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3697,
									"end": 3715,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3697,
									"end": 3715,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3724,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3724,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3724,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3560,
									"end": 3578,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3560,
									"end": 3578,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 17510,
									"end": 17560,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 3385,
									"end": 3730,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17460,
									"end": 17575,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 17460,
									"end": 17575,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17704,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17710,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17713,
									"end": 17732,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17713,
									"end": 17732,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17713,
									"end": 17732,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17713,
									"end": 17732,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17732,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17695,
									"end": 17732,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17217,
									"end": 17757,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 17217,
									"end": 17757,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17771,
									"end": 17787,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17771,
									"end": 17787,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17767,
									"end": 18192,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 17767,
									"end": 18192,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17934,
									"end": 17946,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17934,
									"end": 17955,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17934,
									"end": 17955,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17934,
									"end": 17955,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17934,
									"end": 17955,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17934,
									"end": 17955,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17934,
									"end": 17955,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17934,
									"end": 17955,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17767,
									"end": 18192,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 17767,
									"end": 18192,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17767,
									"end": 18192,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 17767,
									"end": 18192,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18154,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18158,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18167,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18167,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18167,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18167,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18145,
									"end": 18167,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17767,
									"end": 18192,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 17767,
									"end": 18192,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18222,
									"end": 18224,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18216,
									"end": 18220,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 18226,
									"end": 18231,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3881,
									"end": 3906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3881,
									"end": 3906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3869,
									"end": 3871,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3854,
									"end": 3872,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3854,
									"end": 3872,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3735,
									"end": 3912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18207,
									"end": 18232,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 17132,
									"end": 18239,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17132,
									"end": 18239,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17132,
									"end": 18239,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17132,
									"end": 18239,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 309,
									"end": 436,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 309,
									"end": 436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 370,
									"end": 380,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 365,
									"end": 368,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 361,
									"end": 381,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 358,
									"end": 359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 382,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 401,
									"end": 405,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 398,
									"end": 399,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 406,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 425,
									"end": 429,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 430,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 441,
									"end": 821,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 520,
									"end": 521,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 563,
									"end": 575,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 584,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 638,
									"end": 642,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 630,
									"end": 636,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 626,
									"end": 643,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 616,
									"end": 643,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 616,
									"end": 643,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 584,
									"end": 645,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 691,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 689,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 680,
									"end": 694,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 660,
									"end": 678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 657,
									"end": 695,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 654,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 737,
									"end": 747,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 732,
									"end": 735,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 728,
									"end": 748,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 772,
									"end": 776,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 762,
									"end": 777,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 800,
									"end": 804,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 805,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 654,
									"end": 815,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 654,
									"end": 815,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1054,
									"end": 1056,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1049,
									"end": 1052,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1095,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1087,
									"end": 1088,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1096,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1121,
									"end": 1139,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1204,
									"end": 1206,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1192,
									"end": 1202,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1207,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1181,
									"end": 1208,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1179,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1171,
									"end": 1209,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1240,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1228,
									"end": 1238,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1245,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1320,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1313,
									"end": 1316,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1321,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1302,
									"end": 1322,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1300,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1323,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1391,
									"end": 1393,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1389,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1394,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 2945,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1646,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1821,
									"end": 1839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1940,
									"end": 1946,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1932,
									"end": 1936,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1900,
									"end": 1938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1894,
									"end": 1898,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1850,
									"end": 1947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2027,
									"end": 2029,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2016,
									"end": 2030,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2030,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2045,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2732,
									"end": 2733,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2749,
									"end": 2755,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2801,
									"end": 2820,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2795,
									"end": 2821,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2746,
									"end": 2835,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1595,
									"end": 1619,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 1621,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1627,
									"end": 1628,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1578,
									"end": 1635,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2848,
									"end": 2929,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2848,
									"end": 2929,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2009,
									"end": 2939,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2039,
									"end": 2688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 899,
									"end": 900,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 892,
									"end": 906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 940,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 923,
									"end": 941,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2075,
									"end": 2095,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2207,
									"end": 2214,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2204,
									"end": 2205,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2201,
									"end": 2215,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2268,
									"end": 2310,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2268,
									"end": 2310,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2396,
									"end": 2400,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2381,
									"end": 2401,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2349,
									"end": 2350,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2337,
									"end": 2351,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2223,
									"end": 2235,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 2193,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2197,
									"end": 2200,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2434,
									"end": 2441,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2431,
									"end": 2450,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2504,
									"end": 2523,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2498,
									"end": 2524,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2587,
									"end": 2588,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2583,
									"end": 2597,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2602,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2579,
									"end": 2603,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2575,
									"end": 2612,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2571,
									"end": 2613,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2556,
									"end": 2614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2615,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2615,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 2428,
									"end": 2629,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2675,
									"end": 2676,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2659,
									"end": 2673,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2655,
									"end": 2677,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2642,
									"end": 2678,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2642,
									"end": 2678,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1646,
									"end": 2945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3158,
									"end": 3380,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 3158,
									"end": 3380,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3223,
									"end": 3232,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3223,
									"end": 3232,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3223,
									"end": 3232,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3244,
									"end": 3254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3244,
									"end": 3254,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3244,
									"end": 3254,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3241,
									"end": 3374,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3241,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3241,
									"end": 3374,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3296,
									"end": 3306,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 3291,
									"end": 3294,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 3287,
									"end": 3307,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3284,
									"end": 3285,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3277,
									"end": 3308,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3331,
									"end": 3335,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3328,
									"end": 3329,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3321,
									"end": 3336,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3363,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3356,
									"end": 3357,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3349,
									"end": 3364,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3241,
									"end": 3374,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3241,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3158,
									"end": 3380,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3158,
									"end": 3380,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3158,
									"end": 3380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3158,
									"end": 3380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3158,
									"end": 3380,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3735,
									"end": 3912,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3735,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 25193,
									"end": 26324,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25193,
									"end": 26324,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25193,
									"end": 26324,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25193,
									"end": 26324,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25193,
									"end": 26324,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25193,
									"end": 26324,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25193,
									"end": 26324,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f57880d6b756f36cd5c3af51a6992ec466b60a0cc8666fb90bce91d4c36353a764736f6c634300081a0033",
									".code": [
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25193,
											"end": 26324,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12935,
											"end": 13024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 12935,
											"end": 13024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15154,
											"end": 15340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15154,
											"end": 15340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14083,
											"end": 14095,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14083,
											"end": 14095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 15900,
											"end": 16144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 15900,
											"end": 16144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13863,
											"end": 13945,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13863,
											"end": 13945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13863,
											"end": 13945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13863,
											"end": 13945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13936,
											"end": 13938,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13863,
											"end": 13945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1673,
											"end": 1857,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26238,
											"end": 26322,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26238,
											"end": 26322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26238,
											"end": 26322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 26238,
											"end": 26322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 26238,
											"end": 26322,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26238,
											"end": 26322,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26238,
											"end": 26322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26238,
											"end": 26322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26238,
											"end": 26322,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 26238,
											"end": 26322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26238,
											"end": 26322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26238,
											"end": 26322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26238,
											"end": 26322,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 26238,
											"end": 26322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26238,
											"end": 26322,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14160,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14225,
											"end": 14232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14160,
											"end": 14276,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24274,
											"end": 24375,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24274,
											"end": 24375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24274,
											"end": 24375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 24274,
											"end": 24375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24274,
											"end": 24375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23619,
											"end": 23704,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 23619,
											"end": 23704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23619,
											"end": 23704,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23619,
											"end": 23704,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23619,
											"end": 23704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13137,
											"end": 13230,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13137,
											"end": 13230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13137,
											"end": 13230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13137,
											"end": 13230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14471,
											"end": 14649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14471,
											"end": 14649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 14707,
											"end": 14847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14787,
											"end": 14794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14824,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14707,
											"end": 14847,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24739,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24524,
											"end": 24739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 24524,
											"end": 24739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24524,
											"end": 24739,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24739,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24524,
											"end": 24739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 24524,
											"end": 24739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24739,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24524,
											"end": 24739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 24524,
											"end": 24739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12980,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13012,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13005,
											"end": 13017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13005,
											"end": 13017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12935,
											"end": 13024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15227,
											"end": 15231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15281,
											"end": 15312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15297,
											"end": 15304,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15306,
											"end": 15311,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15281,
											"end": 15289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 15281,
											"end": 15312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15281,
											"end": 15312,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15281,
											"end": 15312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15329,
											"end": 15333,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15322,
											"end": 15333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15322,
											"end": 15333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15322,
											"end": 15333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15154,
											"end": 15340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 15991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 16059,
											"end": 16063,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16074,
											"end": 16079,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 16043,
											"end": 16080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16080,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 16043,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16090,
											"end": 16116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 16100,
											"end": 16104,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16106,
											"end": 16108,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16110,
											"end": 16115,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16090,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 16090,
											"end": 16116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16090,
											"end": 16116,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 16090,
											"end": 16116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16133,
											"end": 16137,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16133,
											"end": 16137,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 16144,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15900,
											"end": 16144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26238,
											"end": 26322,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26238,
											"end": 26322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26298,
											"end": 26315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 26304,
											"end": 26306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26314,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26298,
											"end": 26303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 26298,
											"end": 26315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26298,
											"end": 26315,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 26298,
											"end": 26315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26238,
											"end": 26322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26238,
											"end": 26322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26238,
											"end": 26322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24274,
											"end": 24375,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24274,
											"end": 24375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 23525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 23512,
											"end": 23523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 23512,
											"end": 23525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 23525,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 23512,
											"end": 23525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24338,
											"end": 24368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 24365,
											"end": 24366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24338,
											"end": 24356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 24338,
											"end": 24368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24338,
											"end": 24368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 24338,
											"end": 24368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24274,
											"end": 24375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13230,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13137,
											"end": 13230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13184,
											"end": 13197,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13216,
											"end": 13223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13209,
											"end": 13223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13209,
											"end": 13223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13209,
											"end": 13223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13209,
											"end": 13223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13209,
											"end": 13223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13209,
											"end": 13223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14471,
											"end": 14649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14540,
											"end": 14544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14611,
											"end": 14613,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14615,
											"end": 14620,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14594,
											"end": 14621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24739,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 24524,
											"end": 24739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 23525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23512,
											"end": 23523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 23512,
											"end": 23525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23512,
											"end": 23525,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23512,
											"end": 23525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24608,
											"end": 24630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24608,
											"end": 24630,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24604,
											"end": 24695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 24604,
											"end": 24695,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24653,
											"end": 24684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24653,
											"end": 24684,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24653,
											"end": 24684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24653,
											"end": 24684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24681,
											"end": 24682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24653,
											"end": 24684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24653,
											"end": 24684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24653,
											"end": 24684,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24653,
											"end": 24684,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 24653,
											"end": 24684,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24653,
											"end": 24684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24653,
											"end": 24684,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24653,
											"end": 24684,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24653,
											"end": 24684,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24653,
											"end": 24684,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24653,
											"end": 24684,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24653,
											"end": 24684,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24604,
											"end": 24695,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 24604,
											"end": 24695,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24704,
											"end": 24732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 24723,
											"end": 24731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24704,
											"end": 24722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 24704,
											"end": 24732,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24704,
											"end": 24732,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 24704,
											"end": 24732,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24524,
											"end": 24739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 19978,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 19850,
											"end": 19978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 19943,
											"end": 19948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19950,
											"end": 19957,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19959,
											"end": 19964,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19966,
											"end": 19970,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19934,
											"end": 19942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 19934,
											"end": 19971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19934,
											"end": 19971,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 19934,
											"end": 19971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 19978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 19978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 19978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 19978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 22001,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 21524,
											"end": 22001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21623,
											"end": 21647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14824,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14831,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21689,
											"end": 21726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21689,
											"end": 21726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21685,
											"end": 21995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 21685,
											"end": 21995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21746,
											"end": 21762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21746,
											"end": 21770,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21872,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21742,
											"end": 21872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 21742,
											"end": 21872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3131,
											"end": 3163,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21797,
											"end": 21857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2911,
											"end": 3256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21742,
											"end": 21872,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 21742,
											"end": 21872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21913,
											"end": 21970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 21922,
											"end": 21927,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21929,
											"end": 21936,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 21962,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21938,
											"end": 21954,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 21969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21913,
											"end": 21921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 21913,
											"end": 21970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21913,
											"end": 21970,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 21913,
											"end": 21970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21613,
											"end": 22001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 22001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 22001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 22001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 22001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16517,
											"end": 16817,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 16517,
											"end": 16817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16600,
											"end": 16618,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16600,
											"end": 16618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16596,
											"end": 16682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 16596,
											"end": 16682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16668,
											"end": 16669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16641,
											"end": 16671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16596,
											"end": 16682,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 16596,
											"end": 16682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16695,
											"end": 16711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16695,
											"end": 16711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16691,
											"end": 16777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 16691,
											"end": 16777,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16763,
											"end": 16764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16734,
											"end": 16766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16777,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 16691,
											"end": 16777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16786,
											"end": 16810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 16794,
											"end": 16798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16800,
											"end": 16802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16804,
											"end": 16809,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16786,
											"end": 16793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 16786,
											"end": 16810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18582,
											"end": 18790,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 18582,
											"end": 18790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18652,
											"end": 18673,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18652,
											"end": 18673,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18648,
											"end": 18739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 18648,
											"end": 18739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18696,
											"end": 18728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18648,
											"end": 18739,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 18648,
											"end": 18739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 18764,
											"end": 18765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18768,
											"end": 18775,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18777,
											"end": 18782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 18748,
											"end": 18783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23777,
											"end": 23939,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 23777,
											"end": 23939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23836,
											"end": 23859,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 23933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23832,
											"end": 23933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23882,
											"end": 23922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23882,
											"end": 23922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23882,
											"end": 23922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23882,
											"end": 23922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4254,
											"end": 4264,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23882,
											"end": 23922,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23882,
											"end": 23922,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23882,
											"end": 23922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23882,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24893,
											"end": 25080,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 24893,
											"end": 25080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 24991,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24985,
											"end": 24991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 24991,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25001,
											"end": 25018,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25001,
											"end": 25018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25001,
											"end": 25018,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25001,
											"end": 25018,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25001,
											"end": 25018,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25001,
											"end": 25018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25001,
											"end": 25018,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25001,
											"end": 25018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25001,
											"end": 25018,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25001,
											"end": 25018,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25033,
											"end": 25073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25033,
											"end": 25073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 24991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 24991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 24991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25001,
											"end": 25018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 24991,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24985,
											"end": 24991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25033,
											"end": 25073,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 25033,
											"end": 25073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24966,
											"end": 24982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24966,
											"end": 24982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25033,
											"end": 25073,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 24956,
											"end": 25080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24893,
											"end": 25080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24893,
											"end": 25080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 21242,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 20810,
											"end": 21242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20922,
											"end": 20941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20922,
											"end": 20941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20918,
											"end": 21007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20918,
											"end": 21007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20993,
											"end": 20994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20964,
											"end": 20996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20918,
											"end": 21007,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20918,
											"end": 21007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21020,
											"end": 21041,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21020,
											"end": 21041,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21016,
											"end": 21106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 21016,
											"end": 21106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21092,
											"end": 21093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21064,
											"end": 21095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21016,
											"end": 21106,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 21016,
											"end": 21106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21133,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21142,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21150,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21160,
											"end": 21236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21160,
											"end": 21236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21160,
											"end": 21236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 21160,
											"end": 21236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21210,
											"end": 21217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21203,
											"end": 21208,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21219,
											"end": 21224,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21225,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 21242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 21242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 21242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 21242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20810,
											"end": 21242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 18239,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 17132,
											"end": 18239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17221,
											"end": 17239,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17369,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17357,
											"end": 17369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 17357,
											"end": 17378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17357,
											"end": 17378,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17409,
											"end": 17428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17464,
											"end": 17483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17464,
											"end": 17483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17464,
											"end": 17483,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17460,
											"end": 17575,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17460,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 17460,
											"end": 17575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3131,
											"end": 3163,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3207,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17510,
											"end": 17560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2911,
											"end": 3256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17460,
											"end": 17575,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 17460,
											"end": 17575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17710,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17713,
											"end": 17732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17713,
											"end": 17732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17713,
											"end": 17732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17713,
											"end": 17732,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17732,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 17217,
											"end": 17757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17771,
											"end": 17787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17771,
											"end": 17787,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17946,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17934,
											"end": 17955,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18145,
											"end": 18167,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 17767,
											"end": 18192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18222,
											"end": 18224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18216,
											"end": 18220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18226,
											"end": 18231,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18207,
											"end": 18232,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 18239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 18239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 18239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 18239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2013,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2042,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 2048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2376,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2393,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2408,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 2448,
											"end": 2457,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2429,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2511,
											"end": 2513,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2509,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2477,
											"end": 2515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2728,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2763,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2780,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2817,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2813,
											"end": 2833,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2861,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2847,
											"end": 2862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3483,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3261,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3477,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3344,
											"end": 3477,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3394,
											"end": 3397,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3390,
											"end": 3410,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3411,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3438,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3431,
											"end": 3432,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3424,
											"end": 3439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3466,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3459,
											"end": 3460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3467,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"DripWarrior/usdc_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/usdc_flattened.sol\":\"USDC\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/usdc_flattened.sol\":{\"keccak256\":\"0xa5ebe892622d1833eaac2c3dc02afe1885997e1f36188f3218969571a0e03a89\",\"urls\":[\"bzz-raw://8386aba9844549b799bf3475878c9affb7c18ad933e4cb4a5761544b81b40ccc\",\"dweb:/ipfs/Qmbgur6jRwo17dYPk2FMjpACjgqqTyfjDrEnM6qmV5vfB4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "DripWarrior/usdc_flattened.sol:USDC",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "DripWarrior/usdc_flattened.sol:USDC",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "DripWarrior/usdc_flattened.sol:USDC",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "DripWarrior/usdc_flattened.sol:USDC",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "DripWarrior/usdc_flattened.sol:USDC",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 777,
								"contract": "DripWarrior/usdc_flattened.sol:USDC",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> DripWarrior/usdc_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "DripWarrior/usdc_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"DripWarrior/usdc_flattened.sol": {
				"ast": {
					"absolutePath": "DripWarrior/usdc_flattened.sol",
					"exportedSymbols": {
						"Context": [
							129
						],
						"ERC20": [
							771
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							218
						],
						"Ownable": [
							916
						],
						"USDC": [
							1032
						]
					},
					"id": 1033,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "133:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "159:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "240:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "253:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "422:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "447:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "431:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "469:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "453:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "481:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "473:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:57:0"
									},
									"src": "416:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "494:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "653:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "678:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "662:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "701:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "685:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "718:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "710:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:63:0"
									},
									"src": "647:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "731:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "810:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "821:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "847:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "846:9:0"
									},
									"scope": 77,
									"src": "801:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "862:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "947:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "965:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "957:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "956:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "997:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "996:9:0"
									},
									"scope": 77,
									"src": "938:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1012:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1239:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1256:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1248:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1260:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1247:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1293:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1293:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:6:0"
									},
									"scope": 77,
									"src": "1230:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1305:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1583:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1601:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1593:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1616:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1608:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1648:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:9:0"
									},
									"scope": 77,
									"src": "1574:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1663:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2344:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2360:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2352:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2377:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2369:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2351:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2402:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2402:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2401:6:0"
									},
									"scope": 77,
									"src": "2335:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2414:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2725:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2746:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2760:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2752:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2772:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2764:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2737:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2797:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2797:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2796:6:0"
									},
									"scope": 77,
									"src": "2716:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1033,
							"src": "230:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "2977:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3119:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3119:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3119:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3004:86:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3101:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3132:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3200:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3204:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3230:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3230:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3229:15:0"
									},
									"scope": 100,
									"src": "3191:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3251:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3321:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3327:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3353:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3352:15:0"
									},
									"scope": 100,
									"src": "3312:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3374:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3453:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3461:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3487:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3487:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3486:7:0"
									},
									"scope": 100,
									"src": "3444:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1033,
							"src": "3091:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3620:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3646:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4161:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4237:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4254:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4258:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4254:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4247:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4194:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4228:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4228:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:9:0"
									},
									"scope": 129,
									"src": "4175:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4344:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4361:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4365:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4361:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4354:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4286:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4294:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4328:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4328:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4327:16:0"
									},
									"scope": 129,
									"src": "4277:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4454:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4471:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4464:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4391:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4411:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4445:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:9:0"
									},
									"scope": 129,
									"src": "4382:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1033,
							"src": "4143:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4628:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4654:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4804:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4823:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5143:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5176:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5168:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5192:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5184:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5209:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5201:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5167:49:0"
									},
									"src": "5137:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5223:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5386:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5413:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5405:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5404:16:0"
									},
									"src": "5380:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5427:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5597:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5626:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5618:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5617:18:0"
									},
									"src": "5591:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5642:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "5998:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6050:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6042:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6069:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6061:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:52:0"
									},
									"src": "5992:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6083:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6268:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6297:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6289:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6288:18:0"
									},
									"src": "6262:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6313:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6519:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6547:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6539:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6539:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6538:17:0"
									},
									"src": "6513:43:0"
								}
							],
							"scope": 1033,
							"src": "4794:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6560:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6712:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6732:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "6962:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6989:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "6981:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6980:15:0"
									},
									"src": "6956:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7002:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7145:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7176:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7168:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7167:17:0"
									},
									"src": "7139:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7191:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7491:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7520:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7512:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7536:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7528:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7553:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7545:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7511:48:0"
									},
									"src": "7485:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7566:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7729:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7757:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7749:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7749:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7748:16:0"
									},
									"src": "7723:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7771:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7941:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "7971:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "7963:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7963:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7962:18:0"
									},
									"src": "7935:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "7987:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8245:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8280:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8272:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8272:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8298:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8290:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8271:35:0"
									},
									"src": "8239:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8313:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8498:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8528:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8520:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8520:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8519:18:0"
									},
									"src": "8492:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8544:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8752:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8782:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8774:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:18:0"
									},
									"src": "8746:46:0"
								}
							],
							"scope": 1033,
							"src": "6702:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8796:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8950:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "8971:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9343:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9378:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9370:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9394:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9386:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9411:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9403:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9427:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9419:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9369:66:0"
									},
									"src": "9337:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9442:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9605:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9634:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9626:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9625:16:0"
									},
									"src": "9599:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9648:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9818:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9849:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9841:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9840:18:0"
									},
									"src": "9812:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9865:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10132:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10169:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10161:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10161:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10187:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10179:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10160:33:0"
									},
									"src": "10126:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10200:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10385:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10416:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10408:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10407:18:0"
									},
									"src": "10379:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10432:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10640:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10671:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10663:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10662:18:0"
									},
									"src": "10634:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10687:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "10978:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11012:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11004:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11031:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11023:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11003:41:0"
									},
									"src": "10972:73:0"
								}
							],
							"scope": 1033,
							"src": "8940:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11179:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12289:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12289:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12289:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12298:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12298:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12298:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12306:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12306:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12306:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12322:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12322:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12322:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11209:1052:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "12280:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12385:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12341:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12357:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12349:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12341:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12368:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12473:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12401:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12417:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12409:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12401:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12444:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12436:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12428:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12455:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12507:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12491:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12491:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12541:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12526:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12526:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12567:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12552:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12552:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12813:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12823:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12831:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12823:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12823:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12846:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12846:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12846:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12581:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12783:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12769:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12769:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12804:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12790:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12790:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12768:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12813:0:0"
									},
									"scope": 771,
									"src": "12757:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12995:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "13012:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "13005:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12876:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12944:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12948:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12980:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12980:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12979:15:0"
									},
									"scope": 771,
									"src": "12935:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "13199:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "13216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "13209:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "13030:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "13146:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13152:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "13184:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13184:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13183:15:0"
									},
									"scope": 771,
									"src": "13137:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13919:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13936:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13929:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "13236:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13872:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13880:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13912:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13912:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13911:7:0"
									},
									"scope": 771,
									"src": "13863:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "14066:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "14083:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "14076:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13951:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "14014:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14025:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "14057:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14056:9:0"
									},
									"scope": 771,
									"src": "14005:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "14234:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "14251:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "14261:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14251:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "14244:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "14108:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "14169:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14187:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14179:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14178:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14225:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14224:9:0"
									},
									"scope": 771,
									"src": "14160:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14546:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14564:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14556:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14556:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14572:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14572:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14556:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14604:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14611:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14615:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14594:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14594:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14594:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14638:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14631:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14282:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14480:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14497:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14489:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14509:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14501:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14488:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14540:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14540:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14539:6:0"
									},
									"scope": 771,
									"src": "14471:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14796:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14813:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14825:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14813:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14832:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14813:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14806:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14655:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14716:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14734:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14726:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14749:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14741:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14725:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14787:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14786:9:0"
									},
									"scope": 771,
									"src": "14707:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "15233:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15251:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "15243:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15243:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15259:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15259:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15243:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15290:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15297:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15306:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "15281:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15281:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "15281:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15329:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15322:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14853:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15163:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15179:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15171:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15171:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15196:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15188:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15170:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15227:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15227:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15226:6:0"
									},
									"scope": 771,
									"src": "15154:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "15993:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "16011:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "16003:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16003:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "16021:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16021:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16003:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16059:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "16065:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16074:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "16043:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16043:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "16043:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16100:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "16106:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16110:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "16090:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16090:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "16090:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16133:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "16126:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15346:549:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15909:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15930:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15922:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15944:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15936:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15956:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15948:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15921:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15987:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15987:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15986:6:0"
									},
									"scope": 771,
									"src": "15900:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16586:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16600:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16616:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16608:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16608:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16608:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16600:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16596:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16620:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16668:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16660:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16660:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16660:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16641:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16641:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16634:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16695:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16709:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16701:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16701:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16701:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16695:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16691:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16713:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16763:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16755:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16755:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16755:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16734:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16734:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16727:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16794:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16800:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16804:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16786:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16786:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16786:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "16150:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16526:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16544:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16536:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16558:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16550:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16570:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16562:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16535:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16586:0:0"
									},
									"scope": 771,
									"src": "16517:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "17207:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "17221:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17237:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17229:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17229:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17229:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17221:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17395:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17417:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17409:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17409:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17431:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17441:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17431:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17409:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17464:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17478:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17464:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17460:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17485:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17535:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17541:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17554:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17510:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17510:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17503:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17588:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17695:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17705:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17695:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17713:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17727:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17713:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17695:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17695:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "17217:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "17241:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17357:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17373:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17357:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17357:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17771:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17785:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17777:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17777:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17777:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17771:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "17986:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "18000:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "18145:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "18155:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "18145:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "18162:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18145:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "18145:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17767:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17789:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17803:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17934:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17950:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17934:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17934:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "18216:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "18222:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "18226:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "18207:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18207:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "18202:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16823:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "17141:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17157:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17149:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17149:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17171:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17163:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17183:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17175:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17148:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17207:0:0"
									},
									"scope": 771,
									"src": "17132:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18638:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18652:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18671:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18663:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18663:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18663:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18652:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18648:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18675:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18725:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18717:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18717:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18717:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18696:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18696:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18689:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18764:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18756:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18756:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18756:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18768:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18777:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18748:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18748:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18748:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "18245:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18591:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18605:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18597:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18597:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18622:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18614:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18596:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18638:0:0"
									},
									"scope": 771,
									"src": "18582:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "19164:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "19178:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19197:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19189:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19189:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19189:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19178:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "19174:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "19201:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19249:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19241:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19241:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19241:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "19222:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19222:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "19215:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19280:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19297:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19289:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19289:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19289:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19301:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19272:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19272:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "19272:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18796:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19117:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19131:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19123:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19148:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19140:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19140:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19122:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19164:0:0"
									},
									"scope": 771,
									"src": "19108:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19924:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19943:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19950:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19959:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19966:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19934:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19934:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19934:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19320:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19859:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19876:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19868:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19891:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19883:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19908:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19900:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19867:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19924:0:0"
									},
									"scope": 771,
									"src": "19850:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20908:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20922:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20939:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20931:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20931:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20931:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20922:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20918:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20943:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20993:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20985:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20985:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20985:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "20964:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20964:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20957:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "21020:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21039:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21031:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21031:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21020:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "21016:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "21043:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21092:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21084:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21084:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21084:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "21064:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21064:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "21057:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "21115:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "21127:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21115:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "21134:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21115:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "21145:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21115:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "21115:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "21164:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "21160:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "21175:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "21203:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "21210:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "21219:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "21194:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21194:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "21189:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "19984:821:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20819:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20836:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20828:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20851:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20843:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20843:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20868:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20860:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20880:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20875:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20875:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20827:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20908:0:0"
									},
									"scope": 771,
									"src": "20810:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21613:388:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21631:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21623:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21623:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21660:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21667:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21650:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21650:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21623:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21689:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21714:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21714:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21709:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21709:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21723:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21709:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21689:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21685:310:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21728:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21746:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21765:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21746:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21742:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21772:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21824:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21833:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21851:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "21797:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21797:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21790:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21885:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21922:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21929:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21938:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21957:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21938:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21964:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21913:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21913:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21913:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21248:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21533:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21557:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21549:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21572:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21564:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21589:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21581:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21548:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21613:0:0"
									},
									"scope": 771,
									"src": "21524:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1033,
							"src": "12262:9741:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "22129:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "Context",
										"nameLocations": [
											"22673:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "22673:7:0"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "22673:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "22156:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 916,
							"linearizedBaseContracts": [
								916,
								129
							],
							"name": "Ownable",
							"nameLocation": "22662:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 777,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "22703:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "22687:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 776,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22687:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "22716:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 782,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "22812:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22847:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "22839:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22839:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22838:17:0"
									},
									"src": "22806:50:0"
								},
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "22862:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 787,
									"name": "OwnableInvalidOwner",
									"nameLocation": "22955:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22983:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "22975:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22975:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22974:15:0"
									},
									"src": "22949:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 793,
									"name": "OwnershipTransferred",
									"nameLocation": "23002:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "23039:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "23023:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "23070:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "23054:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23054:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23022:57:0"
									},
									"src": "22996:84:0"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "23240:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 799,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "23254:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23278:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23270:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 800,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23270:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23270:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23254:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "23250:95:0",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "23282:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23331:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "23323:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 806,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "23323:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23323:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 805,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "23303:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23303:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 811,
															"nodeType": "RevertStatement",
															"src": "23296:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "23373:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 814,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "23354:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23354:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "23354:32:0"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "23086:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 819,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "23226:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "23218:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23217:22:0"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23240:0:0"
									},
									"scope": 916,
									"src": "23206:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "23502:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 822,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "23512:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23512:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "23512:13:0"
											},
											{
												"id": 825,
												"nodeType": "PlaceholderStatement",
												"src": "23535:1:0"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "23399:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 827,
									"name": "onlyOwner",
									"nameLocation": "23490:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23499:2:0"
									},
									"src": "23481:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "23674:30:0",
										"statements": [
											{
												"expression": {
													"id": 833,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "23691:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 832,
												"id": 834,
												"nodeType": "Return",
												"src": "23684:13:0"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "23549:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "23628:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23633:2:0"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "23665:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23664:9:0"
									},
									"scope": 916,
									"src": "23619:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "23822:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 840,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "23836:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23836:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 842,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "23847:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23847:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23836:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "23832:101:0",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "23861:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 846,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "23909:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23909:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 845,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "23882:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23882:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 849,
															"nodeType": "RevertStatement",
															"src": "23875:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "23710:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "23786:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23797:2:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23822:0:0"
									},
									"scope": 916,
									"src": "23777:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "24328:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24365:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24357:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 860,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24357:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24357:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 859,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24338:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24338:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "24338:30:0"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "23945:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 857,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 856,
												"name": "onlyOwner",
												"nameLocations": [
													"24318:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24318:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24318:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "24283:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24300:2:0"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24328:0:0"
									},
									"scope": 916,
									"src": "24274:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "24594:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "24608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24628:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24620:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24620:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24620:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24608:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "24604:91:0",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "24632:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24681:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24673:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24673:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24673:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "24653:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24653:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "24646:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "24723:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 890,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24704:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24704:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "24704:28:0"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "24381:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 873,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 872,
												"name": "onlyOwner",
												"nameLocations": [
													"24584:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24584:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24584:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "24533:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24559:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "24551:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24550:18:0"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24594:0:0"
									},
									"scope": 916,
									"src": "24524:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "24956:124:0",
										"statements": [
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "24974:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "24966:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 901,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "24966:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"id": 903,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "24985:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24966:25:0"
											},
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 905,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "25001:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 906,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "25010:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25001:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "25001:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 910,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "25054:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "25064:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 909,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "25033:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25033:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "EmitStatement",
												"src": "25028:45:0"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "24745:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "24902:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24929:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "24921:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24920:18:0"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24956:0:0"
									},
									"scope": 916,
									"src": "24893:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1033,
							"src": "22644:2438:0",
							"usedErrors": [
								782,
								787
							],
							"usedEvents": [
								793
							]
						},
						{
							"id": 917,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "25165:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 918,
										"name": "ERC20",
										"nameLocations": [
											"25210:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "25210:5:0"
									},
									"id": 919,
									"nodeType": "InheritanceSpecifier",
									"src": "25210:5:0"
								},
								{
									"baseName": {
										"id": 920,
										"name": "Ownable",
										"nameLocations": [
											"25217:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 916,
										"src": "25217:7:0"
									},
									"id": 921,
									"nodeType": "InheritanceSpecifier",
									"src": "25217:7:0"
								}
							],
							"canonicalName": "USDC",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1032,
							"linearizedBaseContracts": [
								1032,
								916,
								771,
								170,
								100,
								77,
								129
							],
							"name": "USDC",
							"nameLocation": "25202:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "25331:901:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307835423338446136613730316335363835343564436663423033466342383735663536626564644334",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25347:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4"
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_10000000000000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000000000000"
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030303030303030303030",
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25391:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000_by_1",
																	"typeString": "int_const 10000000000000"
																},
																"value": "10000000000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25408:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "25391:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10000000000000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000000000000"
															}
														],
														"id": 933,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "25341:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25341:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "25341:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307841623834383346363464394336643145634639623834394165363737644433333135383335636232",
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25429:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2"
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030",
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25481:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "25473:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														],
														"id": 940,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "25423:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25423:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "25423:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307834423230393933426334383131373765633745386635373163654361453841396532324330326462",
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25502:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db"
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030",
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25546:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25554:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "25546:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														],
														"id": 947,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "25496:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25496:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "25496:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307837383733314433436136623745333461433046383234633432613763433138413439356361626142",
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25575:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB"
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030",
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25619:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25627:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "25619:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														],
														"id": 954,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "25569:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25569:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "25569:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307836313746324532664437324644394435353033313937303932614331363863393134363545376632",
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25648:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x617F2E2fD72FD9D5503197092aC168c91465E7f2"
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030",
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25692:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25700:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "25692:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														],
														"id": 961,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "25642:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25642:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "25642:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307831374636414438456639383232393735373943323033303639433144626646453433343863333732",
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25721:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x17F6AD8Ef982297579C203069C1DbfFE4348c372"
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030",
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25765:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25773:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "25765:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														],
														"id": 968,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "25715:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25715:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "25715:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307836446443453836623535373431653166623731393939613234433942443935446231386339333446",
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25803:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x6DdCE86b55741e1fb71999a24C9BD95Db18c934F"
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030",
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25847:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25855:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "25847:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														],
														"id": 975,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "25797:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25797:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "25797:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307841333363353837354245316533614664354437324335644639384433343639643935614338354230",
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25876:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0xA33c5875BE1e3aFd5D72C5dF98D3469d95aC85B0"
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030",
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25920:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25928:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "25920:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														],
														"id": 982,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "25870:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25870:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "25870:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307863436332324137666335346431383431333864664438374237614432343535326344344530393135",
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25949:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0xcCc22A7fc54d184138dfD87B7aD24552cD4E0915"
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030",
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25993:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26001:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "25993:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														],
														"id": 989,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "25943:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25943:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "25943:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307843413665373633373136654133613365343235626144323935346136354242623431316535664243",
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26022:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0xCA6e763716eA3a3e425baD2954a65BBb411e5fBC"
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030",
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26066:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26074:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "26066:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														],
														"id": 996,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "26016:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26016:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "26016:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307862456335343044323834304246366335623532464339386636316537363045366662314232363539",
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26095:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0xbEc540D2840BF6c5b52FC98f61e760E6fb1B2659"
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030",
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26139:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26147:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "26139:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														],
														"id": 1003,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "26089:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26089:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "26089:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307841333363353837354245316533614664354437324335644639384433343639643935614338354230",
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26168:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0xA33c5875BE1e3aFd5D72C5dF98D3469d95aC85B0"
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030",
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26212:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26220:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "26212:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																"typeString": "int_const 10000000000000000000000"
															}
														],
														"id": 1010,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "26162:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26162:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "26162:63:0"
											}
										]
									},
									"id": 1018,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25279:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "4d544b",
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25290:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 928,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 925,
												"name": "ERC20",
												"nameLocations": [
													"25273:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "25273:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25273:23:0"
										},
										{
											"arguments": [
												{
													"id": 930,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 923,
													"src": "25313:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 931,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 929,
												"name": "Ownable",
												"nameLocations": [
													"25305:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 916,
												"src": "25305:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25305:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "25251:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "25243:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25242:22:0"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25331:0:0"
									},
									"scope": 1032,
									"src": "25231:1001:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "26288:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1026,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "26304:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "26308:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1025,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "26298:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26298:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "26298:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "26247:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26260:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "26252:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26252:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26272:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "26264:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26251:28:0"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26288:0:0"
									},
									"scope": 1032,
									"src": "26238:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1033,
							"src": "25193:1131:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								782,
								787
							],
							"usedEvents": [
								11,
								20,
								793
							]
						}
					],
					"src": "133:26192:0"
				},
				"id": 0
			}
		}
	}
}