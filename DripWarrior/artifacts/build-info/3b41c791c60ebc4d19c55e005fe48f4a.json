{
	"id": "3b41c791c60ebc4d19c55e005fe48f4a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"DripWarrior/poolClieent.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport {AutomationCompatibleInterface} from \"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\";\n\n\n// 0xcCc22A7fc54d184138dfD87B7aD24552cD4E0915\ninterface IBEP20 {        \n    \n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function transferFrom(address sender,address recipient,uint256 amount) external returns (bool);\n}\n\ncontract PoolContrcat is Initializable, OwnableUpgradeable, UUPSUpgradeable, AutomationCompatibleInterface {\n\n    IBEP20 public usdcToken;\n    \n    uint256 public treasuryPoolAmount;\n    uint256 public ownerShipPoolAmount;\n    uint256 public totalStakedAmount;\n\n    uint256 public tdividentPayoutPercentage;\n    uint256 public odividentPayoutPercentage;\n    uint256 public flowToTreasuryPercentage;\n    uint256 public maintainceFeePercentage;\n\n    uint256 public noOfUsers;\n    address public multisigAddress;\n\n    bool public checkOnce;\n    bool private locked;\n    uint256 public interval; // interval specifies the time between upkeeps\n    uint256 public startingTime; \n    uint256 public lastTimeStamp; // lastTimeStamp tracks the last upkeep performed\n    address public s_forwarderAddress;\n\n    struct UserRegistered{\n\n        bool blocked;\n        uint256 receivedAmount;\n        uint256 withdrawAmount;\n        uint256 receiveFromTreasury;\n        uint256 receiveFromOwneerShip;\n        uint256 totalStakedAmount;\n    }\n\n    uint256 public totalProjects;\n    mapping(address => bool) public alreadyAdded;\n    mapping(uint256 => address) public totalUsers;\n    mapping(uint256 => uint256) public tPPercentages;\n    mapping(address => UserRegistered) public userRegistered;\n\n    event AddTreasuery(uint256 _treasuryPoolAmount);\n    event AddOwnership(uint256 _ownerShipPoolAmount);\n    event AddFunds(uint256 _amount, uint256 _projectNo);\n    event offInterval(address _owner, uint256 _interval);\n    event Withdraw (address recipient, uint256 usdcAmount);\n    event PercentageChanged(address _owner, uint256 _newPercentage);\n    event SetForwarderAddress(address _owner, address _s_forwarderAddress);\n    event UserBlocked(address owner,address blockUserAddress, bool blocked);\n    event StakeTokens (address sender, address recepient,uint256 usdcAmount);\n    event SetInterval(address _owner, uint256 _interval, uint256 _lastTimeStamp);\n    event AddProject(uint256 projectId, uint256 OpPercentage,uint256 tpPercentage);\n    event WeeklyTransfered(address caller,uint256  ownerShipPoolAmount, uint256  treasuryPoolAmount);\n\n    error wrongValue(bool value);\n    error wrongTime(uint256 time);\n    error userBlocked(bool blocked);\n    error wrongOwner(address owner);\n    error wrongAmount(uint256 amount);\n    error transferFailed(bool transfered);\n    error notEnoughBalance(uint256 amount);\n    error wrongProjectNo(uint256 projectNO);\n    error wrongAddress(address wrongAddress);\n    error wrongPercentage(uint256 percentage);\n    error wrongInterval(uint256 updateInterval);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(address initialOwner,address _usdcAddress,\n        address _multisigAddress) initializer public {\n        __Ownable_init(initialOwner);\n        __UUPSUpgradeable_init();\n\n        usdcToken = IBEP20(_usdcAddress);\n\n            // tPPercentages[0] = 5100; // 51 %\n            // tPPercentages[1] = 7500; // 75 % \n            // tPPercentages[2] = 3500; // 35 %\n            // tPPercentages[3] = 7700; // 77 %\n            tdividentPayoutPercentage = 5000; // 50 %\n            odividentPayoutPercentage = 7500; // 75 %\n            \n            flowToTreasuryPercentage = 1500; // l5%\n            maintainceFeePercentage = 1000; // 10 % \n\n            // totalProjects = 4;\n            multisigAddress = _multisigAddress;\n    }\n\n    \n\n     function addProjects(uint256 _tPPercentage) external onlyOwner(){\n        \n        if(_tPPercentage <= 0){\n            revert wrongPercentage(_tPPercentage);\n        }\n\n        tPPercentages[totalProjects] = _tPPercentage;\n        totalProjects++;\n\n\n\n        emit AddProject((totalProjects), (10000 - _tPPercentage), _tPPercentage);\n    }\n\n    function addOwnership(uint256 _amount) external onlyOwner(){\n        \n        if(_amount <= 0){\n            revert wrongAmount(_amount);\n        }\n\n        ownerShipPoolAmount += _amount;\n\n        bool success = usdcToken.transferFrom(msg.sender,address(this),_amount );\n        if(!success){\n            revert transferFailed(success);\n        }\n\n        emit AddOwnership(ownerShipPoolAmount);\n    }\n    \n    function addTreasuery(uint256 _amount) external onlyOwner(){\n        \n        if(_amount <= 0){\n            revert wrongAmount(_amount);\n        }\n\n\n        treasuryPoolAmount += _amount;\n\n        bool success = usdcToken.transferFrom(msg.sender,address(this),_amount );\n        if(!success){\n            revert transferFailed(success);\n        }\n\n        emit AddTreasuery(treasuryPoolAmount);\n    }\n\n    function stakeTokens(uint256 _amount) external  {\n        \n        if(_amount <= 0){\n            revert wrongAmount(_amount);\n        }\n        \n        if(userRegistered[msg.sender].blocked){\n            revert userBlocked(userRegistered[msg.sender].blocked);\n        }\n\n        userRegistered[msg.sender].totalStakedAmount += _amount;\n       \n        if(!alreadyAdded[msg.sender]){\n            \n            totalUsers[noOfUsers] = msg.sender;\n            alreadyAdded[msg.sender] = true;\n            noOfUsers++;\n        }\n\n        totalStakedAmount += _amount;\n\n        bool success =usdcToken.transferFrom(msg.sender,multisigAddress,_amount);\n        \n        if(!success){\n            revert transferFailed(success);\n        }\n\n        emit StakeTokens(msg.sender,multisigAddress, _amount);\n\n    }\n\n    function reStakeTokens(uint256 _amount) external  {\n        \n        if(_amount <= 0){\n            revert wrongAmount(_amount);\n        }\n       \n        if(userRegistered[msg.sender].blocked){\n            revert userBlocked(userRegistered[msg.sender].blocked);\n        }\n\n        if(userRegistered[msg.sender].receivedAmount <= _amount){\n            revert notEnoughBalance(_amount);\n        }\n\n        userRegistered[msg.sender].receivedAmount -= _amount;\n        userRegistered[msg.sender].totalStakedAmount += _amount;\n        \n        ownerShipPoolAmount += _amount;\n        totalStakedAmount += _amount;\n\n        emit StakeTokens(msg.sender,address(this), _amount);\n\n    }\n\n   \n    function addFunds(uint256 _amount, uint256 _projectNo) external {\n\n        if(_amount <= 0){\n            revert wrongAmount(_amount);\n        }\n\n        if(_projectNo > totalProjects){\n            revert wrongProjectNo(_projectNo);\n        }\n            \n        calculateFees(_amount, tPPercentages[_projectNo]);\n        \n        bool success = usdcToken.transferFrom(msg.sender,address(this),_amount );\n        if(!success){\n            revert transferFailed(success);\n        }\n\n        emit AddFunds(_amount,_projectNo);\n        \n    }\n\n\n    function calculateFees(uint256 _amount, uint256 _tPPercentage) private {\n       \n        uint256 oPPercentage = 10000 - _tPPercentage;\n        uint256 ownerShipFee = calculatePercentage(_amount, oPPercentage);\n        uint256 treasuryFee = calculatePercentage(_amount, _tPPercentage);\n\n        ownerShipPoolAmount += ownerShipFee;\n        treasuryPoolAmount += treasuryFee;\n    }\n\n\n\n    function weeklyTransfer() public  {\n\n        // require(\n        //     msg.sender == s_forwarderAddress,\n        //     \"This address does not have permission to call performUpkeep\"\n        // );\n        \n        ( uint256 remainFiftyOPool,uint256 dividentPayoutOPoolAmount, uint256 perPersonFromTPool)  = perPoolCalculation();\n        \n        require(ownerShipPoolAmount > 0 && treasuryPoolAmount > 0, \"not enough amount\");\n       \n        uint256 maxlimit;\n\n        for(uint256 i = 0; i < noOfUsers; i++){\n\n            if(!userRegistered[totalUsers[i]].blocked){\n\n                uint256 eachSharePercentage = (userRegistered[totalUsers[i]].totalStakedAmount * (10000)) / (totalStakedAmount);\n                \n                uint256 eachSendAmount = calculatePercentage(dividentPayoutOPoolAmount, eachSharePercentage);\n                ownerShipPoolAmount -= eachSendAmount;\n                        \n                maxlimit += eachSendAmount;\n                treasuryPoolAmount -= perPersonFromTPool;\n\n                userRegistered[totalUsers[i]].receiveFromTreasury = perPersonFromTPool;\n                userRegistered[totalUsers[i]].receiveFromOwneerShip = eachSendAmount;\n                \n                uint256 totalSendAmount = eachSendAmount + perPersonFromTPool;\n                userRegistered[totalUsers[i]].receivedAmount += totalSendAmount;\n\n                require(maxlimit <= remainFiftyOPool, \"Amount is greater then 50%\");\n            }\n            \n        }\n\n        emit WeeklyTransfered(msg.sender, ownerShipPoolAmount, treasuryPoolAmount);\n\n    }\n\n    \n\n    function perPoolCalculation() private returns(uint256, uint256,uint256){\n        \n\n        uint256 remainFiftyOPool = calculatePercentage(ownerShipPoolAmount, 5000);\n\n        uint256 dividentPayoutOPoolAmount = calculatePercentage(remainFiftyOPool, odividentPayoutPercentage);\n        uint256 fifteenPercenntToTPoolAmount = calculatePercentage(remainFiftyOPool, flowToTreasuryPercentage);\n        uint256 tenPercenntToMaintenceAmount = calculatePercentage(remainFiftyOPool, maintainceFeePercentage);\n        uint256 remainFiftyTPoolAmount = calculatePercentage(treasuryPoolAmount, tdividentPayoutPercentage);\n\n        require(noOfUsers > 0, \"no users!\");\n        \n        uint256 perPersonFromTPool = remainFiftyTPoolAmount/noOfUsers;\n        \n        ownerShipPoolAmount -= (fifteenPercenntToTPoolAmount + tenPercenntToMaintenceAmount);\n        treasuryPoolAmount += fifteenPercenntToTPoolAmount;\n\n        bool success = usdcToken.transfer(multisigAddress, tenPercenntToMaintenceAmount);\n        if(!success){\n            revert transferFailed(success);\n        }\n\n        return (remainFiftyOPool,dividentPayoutOPoolAmount,perPersonFromTPool);\n    }\n\n    function checkUpkeep(bytes calldata /*checkData*/) external override view  returns (bool, bytes memory) {\n      \n        bool needsUpkeep = (block.timestamp - lastTimeStamp) > interval;\n        return (needsUpkeep, bytes(\"\"));\n    }\n\n    function performUpkeep(bytes calldata /*performData*/) external  {\n        \n        require(\n            msg.sender == s_forwarderAddress,\n            \"This address does not have permission to call performUpkeep\"\n        );\n       \n        if (interval == 0){\n            revert wrongInterval(interval);\n        }\n        \n        if(!checkOnce){\n\n            if(block.timestamp >= startingTime){\n\n               lastTimeStamp = block.timestamp;\n                weeklyTransfer();\n            }\n            else{\n                revert wrongTime(startingTime);\n            }\n        }\n        else{\n           \n            lastTimeStamp = block.timestamp;\n            weeklyTransfer();\n        }\n       \n        if(!checkOnce){\n            checkOnce = true;\n        }\n        \n    }\n\n\n    \n    function setInterval (uint256 _startingTime, uint256 updateInterval) external  onlyOwner{\n         \n        if(updateInterval <= 0){\n            revert wrongInterval(updateInterval);\n        }\n        \n        if(_startingTime < block.timestamp){\n            revert wrongTime(_startingTime);\n        }\n\n        interval = updateInterval;\n        startingTime = _startingTime;\n        lastTimeStamp = block.timestamp;\n\n        emit SetInterval(msg.sender, interval, lastTimeStamp);\n\n    }\n\n    function off () external  onlyOwner{\n       \n        interval = 0;\n        checkOnce = false;\n\n        emit offInterval(msg.sender, interval);\n    }\n\n\n    function setForwarderAddress(address forwarderAddress) external onlyOwner {\n        \n        if(forwarderAddress == address(0)){\n            revert wrongAddress(forwarderAddress);\n        }\n        \n        s_forwarderAddress = forwarderAddress;\n\n        emit SetForwarderAddress(msg.sender, s_forwarderAddress);\n    }\n\n    function calculatePercentage(uint256 _totalStakeAmount,uint256 percentageNumber) private pure returns(uint256) {\n        \n        require(_totalStakeAmount !=0 , \"_totalStakeAmount can not be zero\");\n        require(percentageNumber !=0 , \"_totalStakeAmount can not be zero\");\n        uint256 serviceFee = _totalStakeAmount * (percentageNumber) / (10000);\n        \n        return serviceFee;\n    }\n    \n    \n    function userWithdrawAmoount(uint256 _amount) external nonReentrant {\n        \n        if(_amount <= 0){\n            revert wrongAmount(_amount);\n        }\n        require(_amount <= userRegistered[msg.sender].receivedAmount, \"invalid _amount!\");\n\n        userRegistered[msg.sender].receivedAmount -= _amount;\n        userRegistered[msg.sender].withdrawAmount += _amount;\n       \n        bool success = usdcToken.transfer(msg.sender,_amount);\n       \n        if(!success){\n            revert transferFailed(success);\n        }\n\n        emit Withdraw(msg.sender, _amount);\n    }\n\n    function blockUser(address _userAddress, bool value) external onlyOwner {\n        \n        if(_userAddress == address(0)){\n            revert wrongAddress(_userAddress);\n        }\n\n        if(value != true && value != false){\n            revert wrongValue(value);\n        }\n\n        if(value == true){\n\n            userRegistered[_userAddress].blocked = true;\n        }else{\n       \n            userRegistered[_userAddress].blocked = false;\n        }\n        \n        emit UserBlocked(msg.sender,_userAddress, userRegistered[_userAddress].blocked);\n    }\n\n\n    \n    function setTeasueryPercentages(uint256 _projectId,uint256 _newPerccentage) external onlyOwner {\n        \n        if(_newPerccentage <= 0){\n            revert wrongPercentage(_newPerccentage);\n        }\n        \n        tPPercentages[_projectId] = _newPerccentage;\n\n        emit PercentageChanged(msg.sender, tPPercentages[_projectId]);\n    }\n\n    function settdividentPayoutPercentage(uint256 _newPerccentage) external onlyOwner {\n        \n        if(_newPerccentage <= 0){\n            revert wrongPercentage(_newPerccentage);\n        }\n        \n        tdividentPayoutPercentage = _newPerccentage;\n\n        emit PercentageChanged(msg.sender, tdividentPayoutPercentage);\n\n    }\n    \n    function setodividentPayoutPercentage(uint256 _newPerccentage) external onlyOwner {\n        \n        if(_newPerccentage <= 0){\n            revert wrongPercentage(_newPerccentage);\n        }\n        \n        odividentPayoutPercentage = _newPerccentage;\n\n        emit PercentageChanged(msg.sender, odividentPayoutPercentage);\n    }\n    \n\n    function setflowToTreasuryPercentage(uint256 _newPerccentage) external onlyOwner {\n       \n        if(_newPerccentage <= 0){\n            revert wrongPercentage(_newPerccentage);\n        }\n        \n        flowToTreasuryPercentage = _newPerccentage;\n\n        emit PercentageChanged(msg.sender, flowToTreasuryPercentage);\n    }\n\n    function setmaintainceFeePercentage(uint256 _newPerccentage) external onlyOwner {\n        \n        if(_newPerccentage <= 0){\n            revert wrongPercentage(_newPerccentage);\n        }\n        \n        maintainceFeePercentage = _newPerccentage;\n\n        emit PercentageChanged(msg.sender, maintainceFeePercentage);\n    }\n\n    modifier bothOwner(){\n        if(msg.sender != owner() && msg.sender != s_forwarderAddress){\n            revert wrongOwner(msg.sender);\n        }\n        _;\n    }\n\n    modifier nonReentrant() {\n        require(!locked, \"ReentrancyGuard: reentrant call\");\n        locked = true;\n        _;\n        locked = false;\n    }\n\n    function _authorizeUpgrade(address newImplementation)\n        internal\n        onlyOwner\n        override\n    {}\n}\n\n// 0xcCc22A7fc54d184138dfD87B7aD24552cD4E0915"
			},
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"AutomationCompatibleInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "checkData",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkUpkeep(bytes)": {
								"details": "To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.",
								"params": {
									"checkData": "specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."
								},
								"returns": {
									"performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.",
									"upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
								}
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkUpkeep(bytes)": "6e04ff0d",
							"performUpkeep(bytes)": "4585e33b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkUpkeep(bytes)": {
								"notice": "method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."
							},
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT TIMESTAMP 0xCA 0x2F 0xCF DUP15 DUP15 BASEFEE SWAP2 SWAP5 PUSH32 0x8EBD0DC602D1B7523D29745780B132C0F393EECC8C64736F6C634300081A0033 ",
							"sourceMap": "449:6273:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:6273:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT TIMESTAMP 0xCA 0x2F 0xCF DUP15 DUP15 BASEFEE SWAP2 SWAP5 PUSH32 0x8EBD0DC602D1B7523D29745780B132C0F393EECC8C64736F6C634300081A0033 ",
							"sourceMap": "449:6273:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033",
									".code": [
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"DripWarrior/poolClieent.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 EXTCODESIZE 0xC LOG4 PUSH16 0x65FEFCFD432545A0B8A9B234277D39A3 PUSH28 0xDF0425BF228A8136E72E64736F6C634300081A003300000000000000 ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 EXTCODESIZE 0xC LOG4 PUSH16 0x65FEFCFD432545A0B8A9B234277D39A3 PUSH28 0xDF0425BF228A8136E72E64736F6C634300081A003300000000000000 ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"DripWarrior/poolClieent.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD SWAP8 EQ DUP8 0xBE 0x25 0x2F 0xE8 0xFB EXTCODEHASH SWAP4 0xE0 PUSH12 0xD7D41310DB95F162C4852FDA PUSH29 0x70255C9C50C864736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "1245:2685:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD SWAP8 EQ DUP8 0xBE 0x25 0x2F 0xE8 0xFB EXTCODEHASH SWAP4 0xE0 PUSH12 0xD7D41310DB95F162C4852FDA PUSH29 0x70255C9C50C864736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "1245:2685:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"DripWarrior/poolClieent.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DripWarrior/poolClieent.sol": {
				"IBEP20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/poolClieent.sol\":\"IBEP20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"DripWarrior/poolClieent.sol\":{\"keccak256\":\"0x017736c001606eb69d86c35febdba1b15b79aeb4bce6a5cf246e7f1806b2e4e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3a388e5925129f6b9aa4e9c893f943d84bcb54b0023ba2e567adf54bc8d4f59\",\"dweb:/ipfs/QmaGNcgGPPUVosdqkGXPde8EgaT8CyZGwq9wfWTTDPRiRp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PoolContrcat": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "notEnoughBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "transfered",
									"type": "bool"
								}
							],
							"name": "transferFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "blocked",
									"type": "bool"
								}
							],
							"name": "userBlocked",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "wrongAddress",
									"type": "address"
								}
							],
							"name": "wrongAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "wrongAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "updateInterval",
									"type": "uint256"
								}
							],
							"name": "wrongInterval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "wrongOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "percentage",
									"type": "uint256"
								}
							],
							"name": "wrongPercentage",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "projectNO",
									"type": "uint256"
								}
							],
							"name": "wrongProjectNo",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "wrongTime",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "wrongValue",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_projectNo",
									"type": "uint256"
								}
							],
							"name": "AddFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_ownerShipPoolAmount",
									"type": "uint256"
								}
							],
							"name": "AddOwnership",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "projectId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "OpPercentage",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tpPercentage",
									"type": "uint256"
								}
							],
							"name": "AddProject",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_treasuryPoolAmount",
									"type": "uint256"
								}
							],
							"name": "AddTreasuery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newPercentage",
									"type": "uint256"
								}
							],
							"name": "PercentageChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_s_forwarderAddress",
									"type": "address"
								}
							],
							"name": "SetForwarderAddress",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_interval",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_lastTimeStamp",
									"type": "uint256"
								}
							],
							"name": "SetInterval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recepient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdcAmount",
									"type": "uint256"
								}
							],
							"name": "StakeTokens",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "blockUserAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "blocked",
									"type": "bool"
								}
							],
							"name": "UserBlocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ownerShipPoolAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "treasuryPoolAmount",
									"type": "uint256"
								}
							],
							"name": "WeeklyTransfered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdcAmount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_interval",
									"type": "uint256"
								}
							],
							"name": "offInterval",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_projectNo",
									"type": "uint256"
								}
							],
							"name": "addFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "addOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tPPercentage",
									"type": "uint256"
								}
							],
							"name": "addProjects",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "addTreasuery",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "alreadyAdded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "blockUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkOnce",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "flowToTreasuryPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdcAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_multisigAddress",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "interval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeStamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maintainceFeePercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "multisigAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "noOfUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "odividentPayoutPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "off",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ownerShipPoolAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "reStakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_forwarderAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "forwarderAddress",
									"type": "address"
								}
							],
							"name": "setForwarderAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_startingTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updateInterval",
									"type": "uint256"
								}
							],
							"name": "setInterval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_projectId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_newPerccentage",
									"type": "uint256"
								}
							],
							"name": "setTeasueryPercentages",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPerccentage",
									"type": "uint256"
								}
							],
							"name": "setflowToTreasuryPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPerccentage",
									"type": "uint256"
								}
							],
							"name": "setmaintainceFeePercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPerccentage",
									"type": "uint256"
								}
							],
							"name": "setodividentPayoutPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPerccentage",
									"type": "uint256"
								}
							],
							"name": "settdividentPayoutPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tPPercentages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tdividentPayoutPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalProjects",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "totalUsers",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryPoolAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdcToken",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRegistered",
							"outputs": [
								{
									"internalType": "bool",
									"name": "blocked",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "receivedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "withdrawAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "receiveFromTreasury",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "receiveFromOwneerShip",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStakedAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "userWithdrawAmoount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weeklyTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DripWarrior/poolClieent.sol\":896:16376  contract PoolContrcat is Initializable, OwnableUpgradeable, UUPSUpgradeable, AutomationCompatibleInterface {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"DripWarrior/poolClieent.sol\":3542:3595  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"DripWarrior/poolClieent.sol\":3566:3588  _disableInitializers() */\n  tag_4\n    /* \"DripWarrior/poolClieent.sol\":3566:3586  _disableInitializers */\n  tag_5\n    /* \"DripWarrior/poolClieent.sol\":3566:3588  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"DripWarrior/poolClieent.sol\":896:16376  contract PoolContrcat is Initializable, OwnableUpgradeable, UUPSUpgradeable, AutomationCompatibleInterface {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  dup1\n  sload\n  0x010000000000000000\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  shl(0xe0, 0xf92ee8a9)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  dup1\n  sload\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  dup1\n  sload\n  not(sub(shl(0x40, 0x01), 0x01))\n  and\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n    /* \"#utility.yul\":158:208   */\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n  swap1\n    /* \"#utility.yul\":146:148   */\n  0x20\n    /* \"#utility.yul\":131:149   */\n  add\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:214   */\ntag_15:\n    /* \"DripWarrior/poolClieent.sol\":896:16376  contract PoolContrcat is Initializable, OwnableUpgradeable, UUPSUpgradeable, AutomationCompatibleInterface {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x6740f0f1ed974f4bbc4ea3ddf8917f81b1171208e4ec27e89df857ca2a56624a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"DripWarrior/poolClieent.sol\":896:16376  contract PoolContrcat is Initializable, OwnableUpgradeable, UUPSUpgradeable, AutomationCompatibleInterface {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x78fd078d\n      gt\n      tag_48\n      jumpi\n      dup1\n      0xb47ff951\n      gt\n      tag_49\n      jumpi\n      dup1\n      0xd777cc6d\n      gt\n      tag_50\n      jumpi\n      dup1\n      0xd777cc6d\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xd9b998b4\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xe9c68e2c\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xed061067\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xff3d65d9\n      eq\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup1\n      0xb47ff951\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xb9dac1eb\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xbccbc36c\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xc0c53b8b\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xc7fd5bf0\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xce356a24\n      eq\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_51\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x947a36fb\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x9c361e4e\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xa4f67b8b\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xad8e5ec4\n      eq\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup1\n      0x78fd078d\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x7f111e60\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x7f70c5e7\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x7ffe4d93\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x85f45250\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup1\n      0x4585e33b\n      gt\n      tag_52\n      jumpi\n      dup1\n      0x5f17e616\n      gt\n      tag_53\n      jumpi\n      dup1\n      0x5f17e616\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x6626b26d\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x67976974\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x6e04ff0d\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x7547c7a3\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      dup1\n      0x4585e33b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5256dbbf\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5462870d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x567e98f9\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      dup1\n      0x30e3f8f8\n      gt\n      tag_54\n      jumpi\n      dup1\n      0x30e3f8f8\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x33244c2c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39518b5e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3a71a9e4\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3f3b3b27\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x44490ff4\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup1\n      0x01934a83\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x11eac855\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x188e07b9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2765df7a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3070fbf8\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"DripWarrior/poolClieent.sol\":1344:1368  uint256 public noOfUsers */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      sload(0x08)\n      dup2\n      jump\n    tag_56:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"DripWarrior/poolClieent.sol\":1344:1368  uint256 public noOfUsers */\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DripWarrior/poolClieent.sol\":1010:1033  IBEP20 public usdcToken */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      sload(0x00)\n      tag_61\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_61:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":375:407   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":357:408   */\n      dup2\n      mstore\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"DripWarrior/poolClieent.sol\":1010:1033  IBEP20 public usdcToken */\n      tag_58\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":1044:1077  uint256 public treasuryPoolAmount */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_56\n      sload(0x01)\n      dup2\n      jump\n        /* \"DripWarrior/poolClieent.sol\":4355:4693  function addProjects(uint256 _tPPercentage) external onlyOwner(){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"DripWarrior/poolClieent.sol\":1657:1690  address public s_forwarderAddress */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      sload(0x0d)\n      tag_61\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"DripWarrior/poolClieent.sol\":1411:1432  bool public checkOnce */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      sload(0x09)\n      tag_80\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_80:\n      mload(0x40)\n        /* \"#utility.yul\":1023:1037   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1016:1038   */\n      iszero\n        /* \"#utility.yul\":998:1039   */\n      dup2\n      mstore\n        /* \"#utility.yul\":986:988   */\n      0x20\n        /* \"#utility.yul\":971:989   */\n      add\n        /* \"DripWarrior/poolClieent.sol\":1411:1432  bool public checkOnce */\n      tag_58\n        /* \"#utility.yul\":858:1045   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":1162:1202  uint256 public tdividentPayoutPercentage */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_56\n      sload(0x04)\n      dup2\n      jump\n        /* \"DripWarrior/poolClieent.sol\":1539:1566  uint256 public startingTime */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_56\n      sload(0x0b)\n      dup2\n      jump\n        /* \"DripWarrior/poolClieent.sol\":1299:1337  uint256 public maintainceFeePercentage */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_56\n      sload(0x07)\n      dup2\n      jump\n        /* \"DripWarrior/poolClieent.sol\":1573:1601  uint256 public lastTimeStamp */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_56\n      sload(0x0c)\n      dup2\n      jump\n        /* \"DripWarrior/poolClieent.sol\":1208:1248  uint256 public odividentPayoutPercentage */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_56\n      sload(0x05)\n      dup2\n      jump\n        /* \"DripWarrior/poolClieent.sol\":10924:11705  function performUpkeep(bytes calldata /*performData*/) external  {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_70\n      tag_106\n      calldatasize\n      0x04\n      tag_107\n      jump\t// in\n    tag_106:\n      tag_108\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_14:\n      tag_70\n      tag_110\n      calldatasize\n      0x04\n      tag_111\n      jump\t// in\n    tag_110:\n      tag_112\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":5110:5510  function addTreasuery(uint256 _amount) external onlyOwner(){... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_70\n      tag_115\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_56\n      tag_119\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":1374:1404  address public multisigAddress */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      sload(0x09)\n      tag_61\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"DripWarrior/poolClieent.sol\":1123:1155  uint256 public totalStakedAmount */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_56\n      sload(0x03)\n      dup2\n      jump\n        /* \"DripWarrior/poolClieent.sol\":11717:12204  function setInterval (uint256 _startingTime, uint256 updateInterval) external  onlyOwner{... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_70\n      tag_132\n      calldatasize\n      0x04\n      tag_133\n      jump\t// in\n    tag_132:\n      tag_134\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":12210:12358  function off () external  onlyOwner{... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_70\n      tag_137\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":13101:13678  function userWithdrawAmoount(uint256 _amount) external nonReentrant {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      tag_70\n      tag_140\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":10686:10918  function checkUpkeep(bytes calldata /*checkData*/) external override view  returns (bool, bytes memory) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      tag_143\n      tag_144\n      calldatasize\n      0x04\n      tag_107\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_58\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_70\n      tag_150\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":5516:6318  function stakeTokens(uint256 _amount) external  {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_70\n      tag_153\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":4699:5100  function addOwnership(uint256 _amount) external onlyOwner(){... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_70\n      tag_157\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_157:\n      tag_158\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":15609:15932  function setmaintainceFeePercentage(uint256 _newPerccentage) external onlyOwner {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      tag_70\n      tag_161\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":14598:14928  function settdividentPayoutPercentage(uint256 _newPerccentage) external onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      tag_70\n      tag_165\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_165:\n      tag_166\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":6324:7002  function reStakeTokens(uint256 _amount) external  {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      tag_70\n      tag_169\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":7012:7551  function addFunds(uint256 _amount, uint256 _projectNo) external {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_70\n      tag_173\n      calldatasize\n      0x04\n      tag_133\n      jump\t// in\n    tag_173:\n      tag_174\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump(tag_61)\n        /* \"DripWarrior/poolClieent.sol\":1463:1486  uint256 public interval */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      tag_56\n      sload(0x0a)\n      dup2\n      jump\n        /* \"DripWarrior/poolClieent.sol\":1929:1957  uint256 public totalProjects */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_183\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_183:\n      pop\n      tag_56\n      sload(0x0e)\n      dup2\n      jump\n        /* \"DripWarrior/poolClieent.sol\":2013:2058  mapping(uint256 => address) public totalUsers */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      tag_61\n      tag_189\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_189:\n      mstore(0x20, 0x10)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      tag_193\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_193:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":15278:15603  function setflowToTreasuryPercentage(uint256 _newPerccentage) external onlyOwner {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      tag_70\n      tag_199\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_199:\n      tag_200\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":1083:1117  uint256 public ownerShipPoolAmount */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_201\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_201:\n      pop\n      tag_56\n      sload(0x02)\n      dup2\n      jump\n        /* \"DripWarrior/poolClieent.sol\":14938:15267  function setodividentPayoutPercentage(uint256 _newPerccentage) external onlyOwner {... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_205\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_205:\n      pop\n      tag_70\n      tag_207\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_207:\n      tag_208\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":2118:2174  mapping(address => UserRegistered) public userRegistered */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_209\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_209:\n      pop\n      tag_210\n      tag_211\n      calldatasize\n      0x04\n      tag_212\n      jump\t// in\n    tag_211:\n      mstore(0x20, 0x12)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      swap1\n      swap6\n      add\n      sload\n      0xff\n      swap1\n      swap5\n      and\n      swap5\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      dup7\n      jump\n    tag_210:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4824:4838   */\n      swap7\n      iszero\n        /* \"#utility.yul\":4817:4839   */\n      iszero\n        /* \"#utility.yul\":4799:4840   */\n      dup8\n      mstore\n        /* \"#utility.yul\":4871:4873   */\n      0x20\n        /* \"#utility.yul\":4856:4874   */\n      dup8\n      add\n        /* \"#utility.yul\":4849:4883   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":4899:4917   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":4892:4926   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x60\n        /* \"#utility.yul\":4942:4960   */\n      dup5\n      add\n        /* \"#utility.yul\":4935:4969   */\n      mstore\n        /* \"#utility.yul\":5000:5003   */\n      0x80\n        /* \"#utility.yul\":4985:5004   */\n      dup4\n      add\n        /* \"#utility.yul\":4978:5013   */\n      mstore\n        /* \"#utility.yul\":5044:5047   */\n      0xa0\n        /* \"#utility.yul\":5029:5048   */\n      dup3\n      add\n        /* \"#utility.yul\":5022:5057   */\n      mstore\n        /* \"#utility.yul\":4786:4789   */\n      0xc0\n        /* \"#utility.yul\":4771:4790   */\n      add\n        /* \"DripWarrior/poolClieent.sol\":2118:2174  mapping(address => UserRegistered) public userRegistered */\n      tag_58\n        /* \"#utility.yul\":4518:5063   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":3601:4342  function initialize(address initialOwner,address _usdcAddress,... */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      pop\n      tag_70\n      tag_218\n      calldatasize\n      0x04\n      tag_219\n      jump\t// in\n    tag_218:\n      tag_220\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":1963:2007  mapping(address => bool) public alreadyAdded */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_221\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_221:\n      pop\n      tag_80\n      tag_223\n      calldatasize\n      0x04\n      tag_212\n      jump\t// in\n    tag_223:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"DripWarrior/poolClieent.sol\":1254:1293  uint256 public flowToTreasuryPercentage */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_226\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_226:\n      pop\n      tag_56\n      sload(0x06)\n      dup2\n      jump\n        /* \"DripWarrior/poolClieent.sol\":12365:12683  function setForwarderAddress(address forwarderAddress) external onlyOwner {... */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_230\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_230:\n      pop\n      tag_70\n      tag_232\n      calldatasize\n      0x04\n      tag_212\n      jump\t// in\n    tag_232:\n      tag_233\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":13684:14238  function blockUser(address _userAddress, bool value) external onlyOwner {... */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n      pop\n      tag_70\n      tag_236\n      calldatasize\n      0x04\n      tag_237\n      jump\t// in\n    tag_236:\n      tag_238\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":7945:9517  function weeklyTransfer() public  {... */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_239\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_239:\n      pop\n      tag_70\n      tag_241\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":14250:14592  function setTeasueryPercentages(uint256 _projectId,uint256 _newPerccentage) external onlyOwner {... */\n    tag_45:\n      callvalue\n      dup1\n      iszero\n      tag_242\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_242:\n      pop\n      tag_70\n      tag_244\n      calldatasize\n      0x04\n      tag_133\n      jump\t// in\n    tag_244:\n      tag_245\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_46:\n      callvalue\n      dup1\n      iszero\n      tag_246\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_246:\n      pop\n      tag_70\n      tag_248\n      calldatasize\n      0x04\n      tag_212\n      jump\t// in\n    tag_248:\n      tag_249\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":2064:2112  mapping(uint256 => uint256) public tPPercentages */\n    tag_47:\n      callvalue\n      dup1\n      iszero\n      tag_250\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_250:\n      pop\n      tag_56\n      tag_252\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_252:\n      mstore(0x20, 0x11)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"DripWarrior/poolClieent.sol\":4355:4693  function addProjects(uint256 _tPPercentage) external onlyOwner(){... */\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_256\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_256:\n        /* \"DripWarrior/poolClieent.sol\":4458:4459  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":4441:4454  _tPPercentage */\n      dup2\n        /* \"DripWarrior/poolClieent.sol\":4441:4459  _tPPercentage <= 0 */\n      gt\n        /* \"DripWarrior/poolClieent.sol\":4438:4522  if(_tPPercentage <= 0){... */\n      tag_259\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":4481:4511  wrongPercentage(_tPPercentage) */\n      mload(0x40)\n      shl(0xe0, 0xcdbc6335)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":4481:4511  wrongPercentage(_tPPercentage) */\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DripWarrior/poolClieent.sol\":4438:4522  if(_tPPercentage <= 0){... */\n    tag_259:\n        /* \"DripWarrior/poolClieent.sol\":4546:4559  totalProjects */\n      0x0e\n      dup1\n      sload\n        /* \"DripWarrior/poolClieent.sol\":4532:4560  tPPercentages[totalProjects] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":4532:4545  tPPercentages */\n      0x11\n        /* \"DripWarrior/poolClieent.sol\":4532:4560  tPPercentages[totalProjects] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":4532:4576  tPPercentages[totalProjects] = _tPPercentage */\n      dup4\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":4586:4601  totalProjects++ */\n      dup2\n      sload\n      swap2\n        /* \"DripWarrior/poolClieent.sol\":4546:4559  totalProjects */\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":4586:4601  totalProjects++ */\n      tag_261\n      dup4\n      tag_262\n      jump\t// in\n    tag_261:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolClieent.sol\":4631:4644  totalProjects */\n      sload(0x0e)\n        /* \"DripWarrior/poolClieent.sol\":4619:4686  AddProject((totalProjects), (10000 - _tPPercentage), _tPPercentage) */\n      0xe1976e16ed8ce8e740235978fbe69b27d5eea683b2e017bb0bd2fabb33294b3f\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":4648:4669  10000 - _tPPercentage */\n      tag_263\n        /* \"DripWarrior/poolClieent.sol\":4656:4669  _tPPercentage */\n      dup4\n        /* \"DripWarrior/poolClieent.sol\":4648:4653  10000 */\n      0x2710\n        /* \"DripWarrior/poolClieent.sol\":4648:4669  10000 - _tPPercentage */\n      tag_264\n      jump\t// in\n    tag_263:\n        /* \"DripWarrior/poolClieent.sol\":4619:4686  AddProject((totalProjects), (10000 - _tPPercentage), _tPPercentage) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6457:6482   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":6513:6515   */\n      0x20\n        /* \"#utility.yul\":6498:6516   */\n      dup4\n      add\n        /* \"#utility.yul\":6491:6525   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6541:6559   */\n      dup2\n      add\n        /* \"#utility.yul\":6534:6568   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6445:6447   */\n      0x60\n        /* \"#utility.yul\":6430:6448   */\n      add\n        /* \"DripWarrior/poolClieent.sol\":4619:4686  AddProject((totalProjects), (10000 - _tPPercentage), _tPPercentage) */\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DripWarrior/poolClieent.sol\":4355:4693  function addProjects(uint256 _tPPercentage) external onlyOwner(){... */\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolClieent.sol\":10924:11705  function performUpkeep(bytes calldata /*performData*/) external  {... */\n    tag_108:\n        /* \"DripWarrior/poolClieent.sol\":11043:11061  s_forwarderAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"DripWarrior/poolClieent.sol\":11029:11039  msg.sender */\n      caller\n        /* \"DripWarrior/poolClieent.sol\":11029:11061  msg.sender == s_forwarderAddress */\n      eq\n        /* \"DripWarrior/poolClieent.sol\":11008:11146  require(... */\n      tag_268\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6781:6783   */\n      0x20\n        /* \"DripWarrior/poolClieent.sol\":11008:11146  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6763:6784   */\n      mstore\n        /* \"#utility.yul\":6820:6822   */\n      0x3b\n        /* \"#utility.yul\":6800:6818   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6793:6823   */\n      mstore\n        /* \"#utility.yul\":6859:6893   */\n      0x54686973206164647265737320646f6573206e6f742068617665207065726d69\n        /* \"#utility.yul\":6839:6857   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6832:6894   */\n      mstore\n        /* \"#utility.yul\":6930:6959   */\n      0x7373696f6e20746f2063616c6c20706572666f726d55706b6565700000000000\n        /* \"#utility.yul\":6910:6928   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6903:6960   */\n      mstore\n        /* \"#utility.yul\":6977:6996   */\n      0x84\n      add\n        /* \"DripWarrior/poolClieent.sol\":11008:11146  require(... */\n      tag_260\n        /* \"#utility.yul\":6579:7002   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":11008:11146  require(... */\n    tag_268:\n        /* \"DripWarrior/poolClieent.sol\":11168:11176  interval */\n      sload(0x0a)\n        /* \"DripWarrior/poolClieent.sol\":11180:11181  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":11168:11181  interval == 0 */\n      sub\n        /* \"DripWarrior/poolClieent.sol\":11164:11237  if (interval == 0){... */\n      tag_271\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":11217:11225  interval */\n      sload(0x0a)\n        /* \"DripWarrior/poolClieent.sol\":11203:11226  wrongInterval(interval) */\n      mload(0x40)\n      shl(0xe0, 0x71540007)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":11164:11237  if (interval == 0){... */\n    tag_271:\n        /* \"DripWarrior/poolClieent.sol\":11259:11268  checkOnce */\n      sload(0x09)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"DripWarrior/poolClieent.sol\":11255:11618  if(!checkOnce){... */\n      tag_273\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":11306:11318  startingTime */\n      sload(0x0b)\n        /* \"DripWarrior/poolClieent.sol\":11287:11302  block.timestamp */\n      timestamp\n        /* \"DripWarrior/poolClieent.sol\":11287:11318  block.timestamp >= startingTime */\n      lt\n        /* \"DripWarrior/poolClieent.sol\":11284:11497  if(block.timestamp >= startingTime){... */\n      tag_274\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":11353:11368  block.timestamp */\n      timestamp\n        /* \"DripWarrior/poolClieent.sol\":11337:11350  lastTimeStamp */\n      0x0c\n        /* \"DripWarrior/poolClieent.sol\":11337:11368  lastTimeStamp = block.timestamp */\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":11386:11402  weeklyTransfer() */\n      tag_275\n        /* \"DripWarrior/poolClieent.sol\":11386:11400  weeklyTransfer */\n      tag_241\n        /* \"DripWarrior/poolClieent.sol\":11386:11402  weeklyTransfer() */\n      jump\t// in\n    tag_275:\n        /* \"DripWarrior/poolClieent.sol\":11255:11618  if(!checkOnce){... */\n      jump(tag_279)\n        /* \"DripWarrior/poolClieent.sol\":11284:11497  if(block.timestamp >= startingTime){... */\n    tag_274:\n        /* \"DripWarrior/poolClieent.sol\":11469:11481  startingTime */\n      sload(0x0b)\n        /* \"DripWarrior/poolClieent.sol\":11459:11482  wrongTime(startingTime) */\n      mload(0x40)\n      shl(0xe0, 0x54593e75)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":11255:11618  if(!checkOnce){... */\n    tag_273:\n        /* \"DripWarrior/poolClieent.sol\":11562:11577  block.timestamp */\n      timestamp\n        /* \"DripWarrior/poolClieent.sol\":11546:11559  lastTimeStamp */\n      0x0c\n        /* \"DripWarrior/poolClieent.sol\":11546:11577  lastTimeStamp = block.timestamp */\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":11591:11607  weeklyTransfer() */\n      tag_279\n        /* \"DripWarrior/poolClieent.sol\":11591:11605  weeklyTransfer */\n      tag_241\n        /* \"DripWarrior/poolClieent.sol\":11591:11607  weeklyTransfer() */\n      jump\t// in\n    tag_279:\n        /* \"DripWarrior/poolClieent.sol\":11639:11648  checkOnce */\n      sload(0x09)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"DripWarrior/poolClieent.sol\":11635:11690  if(!checkOnce){... */\n      tag_280\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":11663:11672  checkOnce */\n      0x09\n        /* \"DripWarrior/poolClieent.sol\":11663:11679  checkOnce = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":11635:11690  if(!checkOnce){... */\n    tag_280:\n        /* \"DripWarrior/poolClieent.sol\":10924:11705  function performUpkeep(bytes calldata /*performData*/) external  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2664  _checkProxy */\n      tag_283\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      tag_285\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4291:4308  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4290  _authorizeUpgrade */\n      tag_286\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_280\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4341:4358  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4360:4364  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4340  _upgradeToAndCallUUPS */\n      tag_288\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":5110:5510  function addTreasuery(uint256 _amount) external onlyOwner(){... */\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_290\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_290:\n        /* \"DripWarrior/poolClieent.sol\":5202:5203  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":5191:5198  _amount */\n      dup2\n        /* \"DripWarrior/poolClieent.sol\":5191:5203  _amount <= 0 */\n      gt\n        /* \"DripWarrior/poolClieent.sol\":5188:5256  if(_amount <= 0){... */\n      tag_292\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":5225:5245  wrongAmount(_amount) */\n      mload(0x40)\n      shl(0xe4, 0x02ff4783)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":5225:5245  wrongAmount(_amount) */\n      tag_260\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":5188:5256  if(_amount <= 0){... */\n    tag_292:\n        /* \"DripWarrior/poolClieent.sol\":5289:5296  _amount */\n      dup1\n        /* \"DripWarrior/poolClieent.sol\":5267:5285  treasuryPoolAmount */\n      0x01\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":5267:5296  treasuryPoolAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_294\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolClieent.sol\":5307:5319  bool success */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":5322:5331  usdcToken */\n      dup1\n      sload\n        /* \"DripWarrior/poolClieent.sol\":5322:5379  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolClieent.sol\":5322:5331  usdcToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":5322:5344  usdcToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":5322:5379  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      tag_296\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":5345:5355  msg.sender */\n      caller\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":5364:5368  this */\n      address\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":5370:5377  _amount */\n      dup8\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":5322:5379  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      0x04\n      add\n      tag_297\n      jump\t// in\n    tag_296:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_299\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_299:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_300\n      swap2\n      swap1\n      tag_301\n      jump\t// in\n    tag_300:\n        /* \"DripWarrior/poolClieent.sol\":5307:5379  bool success = usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      swap1\n      pop\n        /* \"DripWarrior/poolClieent.sol\":5393:5400  success */\n      dup1\n        /* \"DripWarrior/poolClieent.sol\":5389:5456  if(!success){... */\n      tag_302\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":5422:5445  transferFailed(success) */\n      mload(0x40)\n      shl(0xe0, 0xd85d3cef)\n      dup2\n      mstore\n        /* \"#utility.yul\":1023:1037   */\n      dup2\n      iszero\n        /* \"#utility.yul\":1016:1038   */\n      iszero\n        /* \"DripWarrior/poolClieent.sol\":5422:5445  transferFailed(success) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":998:1039   */\n      mstore\n        /* \"#utility.yul\":971:989   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":5422:5445  transferFailed(success) */\n      tag_260\n        /* \"#utility.yul\":858:1045   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":5389:5456  if(!success){... */\n    tag_302:\n        /* \"DripWarrior/poolClieent.sol\":5471:5503  AddTreasuery(treasuryPoolAmount) */\n      0xa9f166643ec132a11638e74e3c3a78d4ae278fcbf92998240e0e97676f54e404\n        /* \"DripWarrior/poolClieent.sol\":5484:5502  treasuryPoolAmount */\n      sload(0x01)\n        /* \"DripWarrior/poolClieent.sol\":5471:5503  AddTreasuery(treasuryPoolAmount) */\n      mload(0x40)\n      tag_304\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":5471:5503  AddTreasuery(treasuryPoolAmount) */\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DripWarrior/poolClieent.sol\":5169:5510  {... */\n      pop\n        /* \"DripWarrior/poolClieent.sol\":5110:5510  function addTreasuery(uint256 _amount) external onlyOwner(){... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3774:3781  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      tag_306\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2942  _checkNotDelegated */\n      tag_307\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      jump\t// in\n    tag_306:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"DripWarrior/poolClieent.sol\":11717:12204  function setInterval (uint256 _startingTime, uint256 updateInterval) external  onlyOwner{... */\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_310\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_310:\n        /* \"DripWarrior/poolClieent.sol\":11846:11847  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":11828:11842  updateInterval */\n      dup2\n        /* \"DripWarrior/poolClieent.sol\":11828:11847  updateInterval <= 0 */\n      gt\n        /* \"DripWarrior/poolClieent.sol\":11825:11909  if(updateInterval <= 0){... */\n      tag_312\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":11869:11898  wrongInterval(updateInterval) */\n      mload(0x40)\n      shl(0xe0, 0x71540007)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":11869:11898  wrongInterval(updateInterval) */\n      tag_260\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":11825:11909  if(updateInterval <= 0){... */\n    tag_312:\n        /* \"DripWarrior/poolClieent.sol\":11946:11961  block.timestamp */\n      timestamp\n        /* \"DripWarrior/poolClieent.sol\":11930:11943  _startingTime */\n      dup3\n        /* \"DripWarrior/poolClieent.sol\":11930:11961  _startingTime < block.timestamp */\n      lt\n        /* \"DripWarrior/poolClieent.sol\":11927:12018  if(_startingTime < block.timestamp){... */\n      iszero\n      tag_314\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":11983:12007  wrongTime(_startingTime) */\n      mload(0x40)\n      shl(0xe0, 0x54593e75)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":11983:12007  wrongTime(_startingTime) */\n      tag_260\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":11927:12018  if(_startingTime < block.timestamp){... */\n    tag_314:\n        /* \"DripWarrior/poolClieent.sol\":12028:12036  interval */\n      0x0a\n        /* \"DripWarrior/poolClieent.sol\":12028:12053  interval = updateInterval */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":12063:12075  startingTime */\n      0x0b\n        /* \"DripWarrior/poolClieent.sol\":12063:12091  startingTime = _startingTime */\n      dup3\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":12117:12132  block.timestamp */\n      timestamp\n        /* \"DripWarrior/poolClieent.sol\":12101:12114  lastTimeStamp */\n      0x0c\n        /* \"DripWarrior/poolClieent.sol\":12101:12132  lastTimeStamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":12148:12196  SetInterval(msg.sender, interval, lastTimeStamp) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolClieent.sol\":12160:12170  msg.sender */\n      caller\n        /* \"#utility.yul\":7965:8016   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8047:8049   */\n      0x20\n        /* \"#utility.yul\":8032:8050   */\n      dup2\n      add\n        /* \"#utility.yul\":8025:8059   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":8075:8093   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":8068:8102   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":12148:12196  SetInterval(msg.sender, interval, lastTimeStamp) */\n      0x2b5090e035d3026f5448298c9adc68db8bbc1b26a8af5c81b2b2a9fc07ca4a00\n      swap1\n        /* \"#utility.yul\":7953:7955   */\n      0x60\n        /* \"#utility.yul\":7938:7956   */\n      add\n        /* \"DripWarrior/poolClieent.sol\":12148:12196  SetInterval(msg.sender, interval, lastTimeStamp) */\n      tag_304\n        /* \"#utility.yul\":7763:8108   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":12210:12358  function off () external  onlyOwner{... */\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_319\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_319:\n        /* \"DripWarrior/poolClieent.sol\":12274:12275  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":12263:12271  interval */\n      0x0a\n        /* \"DripWarrior/poolClieent.sol\":12263:12275  interval = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":12285:12294  checkOnce */\n      0x09\n        /* \"DripWarrior/poolClieent.sol\":12285:12302  checkOnce = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":12318:12351  offInterval(msg.sender, interval) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolClieent.sol\":12330:12340  msg.sender */\n      caller\n        /* \"#utility.yul\":8287:8338   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8369:8371   */\n      0x20\n        /* \"#utility.yul\":8354:8372   */\n      dup2\n      add\n        /* \"#utility.yul\":8347:8381   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":12318:12351  offInterval(msg.sender, interval) */\n      0x3b68dc4e210c46d3622293f2b941cdfde795bb6e17286bb289ba05a6a3b5541f\n      swap2\n        /* \"#utility.yul\":8260:8278   */\n      add\n        /* \"DripWarrior/poolClieent.sol\":12318:12351  offInterval(msg.sender, interval) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DripWarrior/poolClieent.sol\":12210:12358  function off () external  onlyOwner{... */\n      jump\t// out\n        /* \"DripWarrior/poolClieent.sol\":13101:13678  function userWithdrawAmoount(uint256 _amount) external nonReentrant {... */\n    tag_141:\n        /* \"DripWarrior/poolClieent.sol\":16149:16155  locked */\n      sload(0x09)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"DripWarrior/poolClieent.sol\":16148:16155  !locked */\n      iszero\n        /* \"DripWarrior/poolClieent.sol\":16140:16191  require(!locked, \"ReentrancyGuard: reentrant call\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8594:8596   */\n      0x20\n        /* \"DripWarrior/poolClieent.sol\":16140:16191  require(!locked, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8576:8597   */\n      mstore\n        /* \"#utility.yul\":8633:8635   */\n      0x1f\n        /* \"#utility.yul\":8613:8631   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8606:8636   */\n      mstore\n        /* \"#utility.yul\":8672:8705   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":8652:8670   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8645:8706   */\n      mstore\n        /* \"#utility.yul\":8723:8741   */\n      0x64\n      add\n        /* \"DripWarrior/poolClieent.sol\":16140:16191  require(!locked, \"ReentrancyGuard: reentrant call\") */\n      tag_260\n        /* \"#utility.yul\":8392:8747   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":16140:16191  require(!locked, \"ReentrancyGuard: reentrant call\") */\n    tag_324:\n        /* \"DripWarrior/poolClieent.sol\":16201:16207  locked */\n      0x09\n        /* \"DripWarrior/poolClieent.sol\":16201:16214  locked = true */\n      dup1\n      sload\n      not(shl(0xa8, 0xff))\n      and\n      shl(0xa8, 0x01)\n      or\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":13191:13203  _amount <= 0 */\n      dup1\n        /* \"DripWarrior/poolClieent.sol\":13188:13256  if(_amount <= 0){... */\n      tag_328\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":13225:13245  wrongAmount(_amount) */\n      mload(0x40)\n      shl(0xe4, 0x02ff4783)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":13225:13245  wrongAmount(_amount) */\n      tag_260\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":13188:13256  if(_amount <= 0){... */\n    tag_328:\n        /* \"DripWarrior/poolClieent.sol\":13299:13309  msg.sender */\n      caller\n        /* \"DripWarrior/poolClieent.sol\":13284:13310  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":13284:13298  userRegistered */\n      0x12\n        /* \"DripWarrior/poolClieent.sol\":13284:13310  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":13284:13325  userRegistered[msg.sender].receivedAmount */\n      0x01\n      add\n      sload\n        /* \"DripWarrior/poolClieent.sol\":13273:13325  _amount <= userRegistered[msg.sender].receivedAmount */\n      dup2\n      gt\n      iszero\n        /* \"DripWarrior/poolClieent.sol\":13265:13346  require(_amount <= userRegistered[msg.sender].receivedAmount, \"invalid _amount!\") */\n      tag_330\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8954:8956   */\n      0x20\n        /* \"DripWarrior/poolClieent.sol\":13265:13346  require(_amount <= userRegistered[msg.sender].receivedAmount, \"invalid _amount!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8936:8957   */\n      mstore\n        /* \"#utility.yul\":8993:8995   */\n      0x10\n        /* \"#utility.yul\":8973:8991   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8966:8996   */\n      mstore\n      shl(0x80, 0x696e76616c6964205f616d6f756e7421)\n        /* \"#utility.yul\":9012:9030   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9005:9051   */\n      mstore\n        /* \"#utility.yul\":9068:9086   */\n      0x64\n      add\n        /* \"DripWarrior/poolClieent.sol\":13265:13346  require(_amount <= userRegistered[msg.sender].receivedAmount, \"invalid _amount!\") */\n      tag_260\n        /* \"#utility.yul\":8752:9092   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":13265:13346  require(_amount <= userRegistered[msg.sender].receivedAmount, \"invalid _amount!\") */\n    tag_330:\n        /* \"DripWarrior/poolClieent.sol\":13372:13382  msg.sender */\n      caller\n        /* \"DripWarrior/poolClieent.sol\":13357:13383  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":13357:13371  userRegistered */\n      0x12\n        /* \"DripWarrior/poolClieent.sol\":13357:13383  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":13357:13398  userRegistered[msg.sender].receivedAmount */\n      0x01\n      add\n        /* \"DripWarrior/poolClieent.sol\":13357:13409  userRegistered[msg.sender].receivedAmount -= _amount */\n      dup1\n      sload\n        /* \"DripWarrior/poolClieent.sol\":13402:13409  _amount */\n      dup4\n      swap3\n        /* \"DripWarrior/poolClieent.sol\":13357:13383  userRegistered[msg.sender] */\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":13357:13409  userRegistered[msg.sender].receivedAmount -= _amount */\n      tag_333\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":13402:13409  _amount */\n      dup5\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":13357:13409  userRegistered[msg.sender].receivedAmount -= _amount */\n      tag_264\n      jump\t// in\n    tag_333:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolClieent.sol\":13434:13444  msg.sender */\n      caller\n        /* \"DripWarrior/poolClieent.sol\":13419:13445  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":13419:13433  userRegistered */\n      0x12\n        /* \"DripWarrior/poolClieent.sol\":13419:13445  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":13419:13460  userRegistered[msg.sender].withdrawAmount */\n      0x02\n      add\n        /* \"DripWarrior/poolClieent.sol\":13419:13471  userRegistered[msg.sender].withdrawAmount += _amount */\n      dup1\n      sload\n        /* \"DripWarrior/poolClieent.sol\":13464:13471  _amount */\n      dup4\n      swap3\n        /* \"DripWarrior/poolClieent.sol\":13419:13445  userRegistered[msg.sender] */\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":13419:13471  userRegistered[msg.sender].withdrawAmount += _amount */\n      tag_334\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":13464:13471  _amount */\n      dup5\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":13419:13471  userRegistered[msg.sender].withdrawAmount += _amount */\n      tag_295\n      jump\t// in\n    tag_334:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolClieent.sol\":13489:13501  bool success */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":13504:13513  usdcToken */\n      dup1\n      sload\n        /* \"DripWarrior/poolClieent.sol\":13504:13542  usdcToken.transfer(msg.sender,_amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":13523:13533  msg.sender */\n      caller\n        /* \"DripWarrior/poolClieent.sol\":13504:13542  usdcToken.transfer(msg.sender,_amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8287:8338   */\n      mstore\n        /* \"#utility.yul\":8354:8372   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8347:8381   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolClieent.sol\":13504:13513  usdcToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":13504:13522  usdcToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":8260:8278   */\n      0x44\n      add\n        /* \"DripWarrior/poolClieent.sol\":13504:13542  usdcToken.transfer(msg.sender,_amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_337\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_337:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_338\n      swap2\n      swap1\n      tag_301\n      jump\t// in\n    tag_338:\n        /* \"DripWarrior/poolClieent.sol\":13489:13542  bool success = usdcToken.transfer(msg.sender,_amount) */\n      swap1\n      pop\n        /* \"DripWarrior/poolClieent.sol\":13564:13571  success */\n      dup1\n        /* \"DripWarrior/poolClieent.sol\":13560:13627  if(!success){... */\n      tag_339\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":13593:13616  transferFailed(success) */\n      mload(0x40)\n      shl(0xe0, 0xd85d3cef)\n      dup2\n      mstore\n        /* \"#utility.yul\":1023:1037   */\n      dup2\n      iszero\n        /* \"#utility.yul\":1016:1038   */\n      iszero\n        /* \"DripWarrior/poolClieent.sol\":13593:13616  transferFailed(success) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":998:1039   */\n      mstore\n        /* \"#utility.yul\":971:989   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":13593:13616  transferFailed(success) */\n      tag_260\n        /* \"#utility.yul\":858:1045   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":13560:13627  if(!success){... */\n    tag_339:\n        /* \"DripWarrior/poolClieent.sol\":13642:13671  Withdraw(msg.sender, _amount) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolClieent.sol\":13651:13661  msg.sender */\n      caller\n        /* \"#utility.yul\":8287:8338   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8369:8371   */\n      0x20\n        /* \"#utility.yul\":8354:8372   */\n      dup2\n      add\n        /* \"#utility.yul\":8347:8381   */\n      dup5\n      swap1\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":13642:13671  Withdraw(msg.sender, _amount) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n      swap2\n        /* \"#utility.yul\":8260:8278   */\n      add\n        /* \"DripWarrior/poolClieent.sol\":13642:13671  Withdraw(msg.sender, _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n      pop\n        /* \"DripWarrior/poolClieent.sol\":16235:16241  locked */\n      0x09\n        /* \"DripWarrior/poolClieent.sol\":16235:16249  locked = false */\n      dup1\n      sload\n      not(shl(0xa8, 0xff))\n      and\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":13101:13678  function userWithdrawAmoount(uint256 _amount) external nonReentrant {... */\n      jump\t// out\n        /* \"DripWarrior/poolClieent.sol\":10686:10918  function checkUpkeep(bytes calldata /*checkData*/) external override view  returns (bool, bytes memory) {... */\n    tag_145:\n        /* \"DripWarrior/poolClieent.sol\":10770:10774  bool */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":10776:10788  bytes memory */\n      0x60\n        /* \"DripWarrior/poolClieent.sol\":10807:10823  bool needsUpkeep */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":10862:10870  interval */\n      sload(0x0a)\n        /* \"DripWarrior/poolClieent.sol\":10845:10858  lastTimeStamp */\n      sload(0x0c)\n        /* \"DripWarrior/poolClieent.sol\":10827:10842  block.timestamp */\n      timestamp\n        /* \"DripWarrior/poolClieent.sol\":10827:10858  block.timestamp - lastTimeStamp */\n      tag_343\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_343:\n        /* \"DripWarrior/poolClieent.sol\":10901:10910  bytes(\"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap2\n      lt\n      swap7\n      swap1\n      swap6\n      pop\n        /* \"DripWarrior/poolClieent.sol\":10686:10918  function checkUpkeep(bytes calldata /*checkData*/) external override view  returns (bool, bytes memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_150:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_345\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_347\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_348\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"DripWarrior/poolClieent.sol\":5516:6318  function stakeTokens(uint256 _amount) external  {... */\n    tag_154:\n        /* \"DripWarrior/poolClieent.sol\":5597:5598  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":5586:5593  _amount */\n      dup2\n        /* \"DripWarrior/poolClieent.sol\":5586:5598  _amount <= 0 */\n      gt\n        /* \"DripWarrior/poolClieent.sol\":5583:5651  if(_amount <= 0){... */\n      tag_350\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":5620:5640  wrongAmount(_amount) */\n      mload(0x40)\n      shl(0xe4, 0x02ff4783)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":5620:5640  wrongAmount(_amount) */\n      tag_260\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":5583:5651  if(_amount <= 0){... */\n    tag_350:\n        /* \"DripWarrior/poolClieent.sol\":5687:5697  msg.sender */\n      caller\n        /* \"DripWarrior/poolClieent.sol\":5672:5698  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":5672:5686  userRegistered */\n      0x12\n        /* \"DripWarrior/poolClieent.sol\":5672:5698  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":5672:5706  userRegistered[msg.sender].blocked */\n      sload\n      0xff\n      and\n        /* \"DripWarrior/poolClieent.sol\":5669:5786  if(userRegistered[msg.sender].blocked){... */\n      iszero\n      tag_352\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":5755:5765  msg.sender */\n      caller\n        /* \"DripWarrior/poolClieent.sol\":5740:5766  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":5740:5754  userRegistered */\n      0x12\n        /* \"DripWarrior/poolClieent.sol\":5740:5766  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":5740:5774  userRegistered[msg.sender].blocked */\n      sload\n        /* \"DripWarrior/poolClieent.sol\":5728:5775  userBlocked(userRegistered[msg.sender].blocked) */\n      swap1\n      mload\n      shl(0xe6, 0x01be970f)\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":5740:5774  userRegistered[msg.sender].blocked */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1023:1037   */\n      iszero\n        /* \"#utility.yul\":1016:1038   */\n      iszero\n        /* \"DripWarrior/poolClieent.sol\":5728:5775  userBlocked(userRegistered[msg.sender].blocked) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":998:1039   */\n      mstore\n        /* \"#utility.yul\":971:989   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":5728:5775  userBlocked(userRegistered[msg.sender].blocked) */\n      tag_260\n        /* \"#utility.yul\":858:1045   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":5669:5786  if(userRegistered[msg.sender].blocked){... */\n    tag_352:\n        /* \"DripWarrior/poolClieent.sol\":5811:5821  msg.sender */\n      caller\n        /* \"DripWarrior/poolClieent.sol\":5796:5822  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":5796:5810  userRegistered */\n      0x12\n        /* \"DripWarrior/poolClieent.sol\":5796:5822  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":5796:5840  userRegistered[msg.sender].totalStakedAmount */\n      0x05\n      add\n        /* \"DripWarrior/poolClieent.sol\":5796:5851  userRegistered[msg.sender].totalStakedAmount += _amount */\n      dup1\n      sload\n        /* \"DripWarrior/poolClieent.sol\":5844:5851  _amount */\n      dup4\n      swap3\n        /* \"DripWarrior/poolClieent.sol\":5796:5822  userRegistered[msg.sender] */\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":5796:5851  userRegistered[msg.sender].totalStakedAmount += _amount */\n      tag_354\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":5844:5851  _amount */\n      dup5\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":5796:5851  userRegistered[msg.sender].totalStakedAmount += _amount */\n      tag_295\n      jump\t// in\n    tag_354:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolClieent.sol\":5886:5896  msg.sender */\n      caller\n        /* \"DripWarrior/poolClieent.sol\":5873:5897  alreadyAdded[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":5873:5885  alreadyAdded */\n      0x0f\n        /* \"DripWarrior/poolClieent.sol\":5873:5897  alreadyAdded[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"DripWarrior/poolClieent.sol\":5869:6040  if(!alreadyAdded[msg.sender]){... */\n      tag_355\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":5936:5945  noOfUsers */\n      0x08\n      dup1\n      sload\n        /* \"DripWarrior/poolClieent.sol\":5925:5946  totalUsers[noOfUsers] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":5925:5935  totalUsers */\n      0x10\n        /* \"DripWarrior/poolClieent.sol\":5925:5946  totalUsers[noOfUsers] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":5925:5959  totalUsers[noOfUsers] = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"DripWarrior/poolClieent.sol\":5949:5959  msg.sender */\n      caller\n        /* \"DripWarrior/poolClieent.sol\":5925:5959  totalUsers[noOfUsers] = msg.sender */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":5973:5997  alreadyAdded[msg.sender] */\n      dup4\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":5973:5985  alreadyAdded */\n      0x0f\n        /* \"DripWarrior/poolClieent.sol\":5973:5997  alreadyAdded[msg.sender] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":5973:6004  alreadyAdded[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"DripWarrior/poolClieent.sol\":5925:5959  totalUsers[noOfUsers] = msg.sender */\n      0x01\n        /* \"DripWarrior/poolClieent.sol\":5973:6004  alreadyAdded[msg.sender] = true */\n      or\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":6018:6029  noOfUsers++ */\n      dup2\n      sload\n      swap2\n        /* \"DripWarrior/poolClieent.sol\":5936:5945  noOfUsers */\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":6018:6029  noOfUsers++ */\n      tag_356\n      dup4\n      tag_262\n      jump\t// in\n    tag_356:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"DripWarrior/poolClieent.sol\":5869:6040  if(!alreadyAdded[msg.sender]){... */\n    tag_355:\n        /* \"DripWarrior/poolClieent.sol\":6071:6078  _amount */\n      dup1\n        /* \"DripWarrior/poolClieent.sol\":6050:6067  totalStakedAmount */\n      0x03\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":6050:6078  totalStakedAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_357\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_357:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolClieent.sol\":6089:6101  bool success */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":6103:6112  usdcToken */\n      dup1\n      sload\n        /* \"DripWarrior/poolClieent.sol\":6137:6152  multisigAddress */\n      sload(0x09)\n        /* \"DripWarrior/poolClieent.sol\":6103:6161  usdcToken.transferFrom(msg.sender,multisigAddress,_amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolClieent.sol\":6103:6112  usdcToken */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"DripWarrior/poolClieent.sol\":6103:6125  usdcToken.transferFrom */\n      0x23b872dd\n      swap3\n        /* \"DripWarrior/poolClieent.sol\":6103:6161  usdcToken.transferFrom(msg.sender,multisigAddress,_amount) */\n      tag_358\n      swap3\n        /* \"DripWarrior/poolClieent.sol\":6126:6136  msg.sender */\n      caller\n      swap3\n        /* \"DripWarrior/poolClieent.sol\":6137:6152  multisigAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":6153:6160  _amount */\n      dup8\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":6103:6161  usdcToken.transferFrom(msg.sender,multisigAddress,_amount) */\n      0x04\n      add\n      tag_297\n      jump\t// in\n    tag_358:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_360\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_360:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_361\n      swap2\n      swap1\n      tag_301\n      jump\t// in\n    tag_361:\n        /* \"DripWarrior/poolClieent.sol\":6089:6161  bool success =usdcToken.transferFrom(msg.sender,multisigAddress,_amount) */\n      swap1\n      pop\n        /* \"DripWarrior/poolClieent.sol\":6184:6191  success */\n      dup1\n        /* \"DripWarrior/poolClieent.sol\":6180:6247  if(!success){... */\n      tag_362\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":6213:6236  transferFailed(success) */\n      mload(0x40)\n      shl(0xe0, 0xd85d3cef)\n      dup2\n      mstore\n        /* \"#utility.yul\":1023:1037   */\n      dup2\n      iszero\n        /* \"#utility.yul\":1016:1038   */\n      iszero\n        /* \"DripWarrior/poolClieent.sol\":6213:6236  transferFailed(success) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":998:1039   */\n      mstore\n        /* \"#utility.yul\":971:989   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":6213:6236  transferFailed(success) */\n      tag_260\n        /* \"#utility.yul\":858:1045   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":6180:6247  if(!success){... */\n    tag_362:\n        /* \"DripWarrior/poolClieent.sol\":6285:6300  multisigAddress */\n      sload(0x09)\n        /* \"DripWarrior/poolClieent.sol\":6262:6310  StakeTokens(msg.sender,multisigAddress, _amount) */\n      mload(0x40)\n      0x14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab\n      swap2\n      tag_304\n      swap2\n        /* \"DripWarrior/poolClieent.sol\":6274:6284  msg.sender */\n      caller\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolClieent.sol\":6285:6300  multisigAddress */\n      and\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":6302:6309  _amount */\n      dup7\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":6262:6310  StakeTokens(msg.sender,multisigAddress, _amount) */\n      tag_297\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":4699:5100  function addOwnership(uint256 _amount) external onlyOwner(){... */\n    tag_158:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_366\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_366:\n        /* \"DripWarrior/poolClieent.sol\":4791:4792  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":4780:4787  _amount */\n      dup2\n        /* \"DripWarrior/poolClieent.sol\":4780:4792  _amount <= 0 */\n      gt\n        /* \"DripWarrior/poolClieent.sol\":4777:4845  if(_amount <= 0){... */\n      tag_368\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":4814:4834  wrongAmount(_amount) */\n      mload(0x40)\n      shl(0xe4, 0x02ff4783)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":4814:4834  wrongAmount(_amount) */\n      tag_260\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":4777:4845  if(_amount <= 0){... */\n    tag_368:\n        /* \"DripWarrior/poolClieent.sol\":4878:4885  _amount */\n      dup1\n        /* \"DripWarrior/poolClieent.sol\":4855:4874  ownerShipPoolAmount */\n      0x02\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":4855:4885  ownerShipPoolAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_370\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_370:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolClieent.sol\":4896:4908  bool success */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":4911:4920  usdcToken */\n      dup1\n      sload\n        /* \"DripWarrior/poolClieent.sol\":4911:4968  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolClieent.sol\":4911:4920  usdcToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":4911:4933  usdcToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":4911:4968  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      tag_371\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":4934:4944  msg.sender */\n      caller\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":4953:4957  this */\n      address\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":4959:4966  _amount */\n      dup8\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":4911:4968  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      0x04\n      add\n      tag_297\n      jump\t// in\n    tag_371:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_373\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_373:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_374\n      swap2\n      swap1\n      tag_301\n      jump\t// in\n    tag_374:\n        /* \"DripWarrior/poolClieent.sol\":4896:4968  bool success = usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      swap1\n      pop\n        /* \"DripWarrior/poolClieent.sol\":4982:4989  success */\n      dup1\n        /* \"DripWarrior/poolClieent.sol\":4978:5045  if(!success){... */\n      tag_375\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":5011:5034  transferFailed(success) */\n      mload(0x40)\n      shl(0xe0, 0xd85d3cef)\n      dup2\n      mstore\n        /* \"#utility.yul\":1023:1037   */\n      dup2\n      iszero\n        /* \"#utility.yul\":1016:1038   */\n      iszero\n        /* \"DripWarrior/poolClieent.sol\":5011:5034  transferFailed(success) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":998:1039   */\n      mstore\n        /* \"#utility.yul\":971:989   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":5011:5034  transferFailed(success) */\n      tag_260\n        /* \"#utility.yul\":858:1045   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":4978:5045  if(!success){... */\n    tag_375:\n        /* \"DripWarrior/poolClieent.sol\":5060:5093  AddOwnership(ownerShipPoolAmount) */\n      0x73834e1d1ee73ba659470a3603b888903853d3a3c9fda34e71c093a0e35cab94\n        /* \"DripWarrior/poolClieent.sol\":5073:5092  ownerShipPoolAmount */\n      sload(0x02)\n        /* \"DripWarrior/poolClieent.sol\":5060:5093  AddOwnership(ownerShipPoolAmount) */\n      mload(0x40)\n      tag_304\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":15609:15932  function setmaintainceFeePercentage(uint256 _newPerccentage) external onlyOwner {... */\n    tag_162:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_379\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_379:\n        /* \"DripWarrior/poolClieent.sol\":15730:15731  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":15711:15726  _newPerccentage */\n      dup2\n        /* \"DripWarrior/poolClieent.sol\":15711:15731  _newPerccentage <= 0 */\n      gt\n        /* \"DripWarrior/poolClieent.sol\":15708:15796  if(_newPerccentage <= 0){... */\n      tag_381\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":15753:15785  wrongPercentage(_newPerccentage) */\n      mload(0x40)\n      shl(0xe0, 0xcdbc6335)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":15753:15785  wrongPercentage(_newPerccentage) */\n      tag_260\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":15708:15796  if(_newPerccentage <= 0){... */\n    tag_381:\n        /* \"DripWarrior/poolClieent.sol\":15814:15837  maintainceFeePercentage */\n      0x07\n        /* \"DripWarrior/poolClieent.sol\":15814:15855  maintainceFeePercentage = _newPerccentage */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":15871:15925  PercentageChanged(msg.sender, maintainceFeePercentage) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolClieent.sol\":15889:15899  msg.sender */\n      caller\n        /* \"#utility.yul\":8287:8338   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8369:8371   */\n      0x20\n        /* \"#utility.yul\":8354:8372   */\n      dup2\n      add\n        /* \"#utility.yul\":8347:8381   */\n      dup4\n      swap1\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_d85598d6ea860439b48fc265883a1cac638ff64dca5391fe12b46f27076e26fe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":15871:15925  PercentageChanged(msg.sender, maintainceFeePercentage) */\n      swap2\n        /* \"#utility.yul\":8260:8278   */\n      add\n        /* \"DripWarrior/poolClieent.sol\":15871:15925  PercentageChanged(msg.sender, maintainceFeePercentage) */\n      tag_265\n        /* \"#utility.yul\":8113:8387   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":14598:14928  function settdividentPayoutPercentage(uint256 _newPerccentage) external onlyOwner {... */\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_385\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_385:\n        /* \"DripWarrior/poolClieent.sol\":14721:14722  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":14702:14717  _newPerccentage */\n      dup2\n        /* \"DripWarrior/poolClieent.sol\":14702:14722  _newPerccentage <= 0 */\n      gt\n        /* \"DripWarrior/poolClieent.sol\":14699:14787  if(_newPerccentage <= 0){... */\n      tag_387\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":14744:14776  wrongPercentage(_newPerccentage) */\n      mload(0x40)\n      shl(0xe0, 0xcdbc6335)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":14744:14776  wrongPercentage(_newPerccentage) */\n      tag_260\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":14699:14787  if(_newPerccentage <= 0){... */\n    tag_387:\n        /* \"DripWarrior/poolClieent.sol\":14805:14830  tdividentPayoutPercentage */\n      0x04\n        /* \"DripWarrior/poolClieent.sol\":14805:14848  tdividentPayoutPercentage = _newPerccentage */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":14864:14920  PercentageChanged(msg.sender, tdividentPayoutPercentage) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolClieent.sol\":14882:14892  msg.sender */\n      caller\n        /* \"#utility.yul\":8287:8338   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8369:8371   */\n      0x20\n        /* \"#utility.yul\":8354:8372   */\n      dup2\n      add\n        /* \"#utility.yul\":8347:8381   */\n      dup4\n      swap1\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_d85598d6ea860439b48fc265883a1cac638ff64dca5391fe12b46f27076e26fe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":14864:14920  PercentageChanged(msg.sender, tdividentPayoutPercentage) */\n      swap2\n        /* \"#utility.yul\":8260:8278   */\n      add\n        /* \"DripWarrior/poolClieent.sol\":14864:14920  PercentageChanged(msg.sender, tdividentPayoutPercentage) */\n      tag_265\n        /* \"#utility.yul\":8113:8387   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":6324:7002  function reStakeTokens(uint256 _amount) external  {... */\n    tag_170:\n        /* \"DripWarrior/poolClieent.sol\":6407:6408  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":6396:6403  _amount */\n      dup2\n        /* \"DripWarrior/poolClieent.sol\":6396:6408  _amount <= 0 */\n      gt\n        /* \"DripWarrior/poolClieent.sol\":6393:6461  if(_amount <= 0){... */\n      tag_391\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":6430:6450  wrongAmount(_amount) */\n      mload(0x40)\n      shl(0xe4, 0x02ff4783)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":6430:6450  wrongAmount(_amount) */\n      tag_260\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":6393:6461  if(_amount <= 0){... */\n    tag_391:\n        /* \"DripWarrior/poolClieent.sol\":6496:6506  msg.sender */\n      caller\n        /* \"DripWarrior/poolClieent.sol\":6481:6507  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":6481:6495  userRegistered */\n      0x12\n        /* \"DripWarrior/poolClieent.sol\":6481:6507  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":6481:6515  userRegistered[msg.sender].blocked */\n      sload\n      0xff\n      and\n        /* \"DripWarrior/poolClieent.sol\":6478:6595  if(userRegistered[msg.sender].blocked){... */\n      iszero\n      tag_393\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":6564:6574  msg.sender */\n      caller\n        /* \"DripWarrior/poolClieent.sol\":6549:6575  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":6549:6563  userRegistered */\n      0x12\n        /* \"DripWarrior/poolClieent.sol\":6549:6575  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":6549:6583  userRegistered[msg.sender].blocked */\n      sload\n        /* \"DripWarrior/poolClieent.sol\":6537:6584  userBlocked(userRegistered[msg.sender].blocked) */\n      swap1\n      mload\n      shl(0xe6, 0x01be970f)\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":6549:6583  userRegistered[msg.sender].blocked */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1023:1037   */\n      iszero\n        /* \"#utility.yul\":1016:1038   */\n      iszero\n        /* \"DripWarrior/poolClieent.sol\":6537:6584  userBlocked(userRegistered[msg.sender].blocked) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":998:1039   */\n      mstore\n        /* \"#utility.yul\":971:989   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":6537:6584  userBlocked(userRegistered[msg.sender].blocked) */\n      tag_260\n        /* \"#utility.yul\":858:1045   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":6478:6595  if(userRegistered[msg.sender].blocked){... */\n    tag_393:\n        /* \"DripWarrior/poolClieent.sol\":6623:6633  msg.sender */\n      caller\n        /* \"DripWarrior/poolClieent.sol\":6608:6634  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":6608:6622  userRegistered */\n      0x12\n        /* \"DripWarrior/poolClieent.sol\":6608:6634  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":6608:6649  userRegistered[msg.sender].receivedAmount */\n      0x01\n      add\n      sload\n        /* \"DripWarrior/poolClieent.sol\":6608:6660  userRegistered[msg.sender].receivedAmount <= _amount */\n      dup2\n      lt\n        /* \"DripWarrior/poolClieent.sol\":6605:6718  if(userRegistered[msg.sender].receivedAmount <= _amount){... */\n      tag_395\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":6682:6707  notEnoughBalance(_amount) */\n      mload(0x40)\n      shl(0xe3, 0x0636dc6b)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":6682:6707  notEnoughBalance(_amount) */\n      tag_260\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":6605:6718  if(userRegistered[msg.sender].receivedAmount <= _amount){... */\n    tag_395:\n        /* \"DripWarrior/poolClieent.sol\":6743:6753  msg.sender */\n      caller\n        /* \"DripWarrior/poolClieent.sol\":6728:6754  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":6728:6742  userRegistered */\n      0x12\n        /* \"DripWarrior/poolClieent.sol\":6728:6754  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":6728:6769  userRegistered[msg.sender].receivedAmount */\n      0x01\n      add\n        /* \"DripWarrior/poolClieent.sol\":6728:6780  userRegistered[msg.sender].receivedAmount -= _amount */\n      dup1\n      sload\n        /* \"DripWarrior/poolClieent.sol\":6773:6780  _amount */\n      dup4\n      swap3\n        /* \"DripWarrior/poolClieent.sol\":6728:6754  userRegistered[msg.sender] */\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":6728:6780  userRegistered[msg.sender].receivedAmount -= _amount */\n      tag_397\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":6773:6780  _amount */\n      dup5\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":6728:6780  userRegistered[msg.sender].receivedAmount -= _amount */\n      tag_264\n      jump\t// in\n    tag_397:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolClieent.sol\":6805:6815  msg.sender */\n      caller\n        /* \"DripWarrior/poolClieent.sol\":6790:6816  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":6790:6804  userRegistered */\n      0x12\n        /* \"DripWarrior/poolClieent.sol\":6790:6816  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":6790:6834  userRegistered[msg.sender].totalStakedAmount */\n      0x05\n      add\n        /* \"DripWarrior/poolClieent.sol\":6790:6845  userRegistered[msg.sender].totalStakedAmount += _amount */\n      dup1\n      sload\n        /* \"DripWarrior/poolClieent.sol\":6838:6845  _amount */\n      dup4\n      swap3\n        /* \"DripWarrior/poolClieent.sol\":6790:6816  userRegistered[msg.sender] */\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":6790:6845  userRegistered[msg.sender].totalStakedAmount += _amount */\n      tag_398\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":6838:6845  _amount */\n      dup5\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":6790:6845  userRegistered[msg.sender].totalStakedAmount += _amount */\n      tag_295\n      jump\t// in\n    tag_398:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DripWarrior/poolClieent.sol\":6887:6894  _amount */\n      dup1\n        /* \"DripWarrior/poolClieent.sol\":6864:6883  ownerShipPoolAmount */\n      0x02\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":6864:6894  ownerShipPoolAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_399\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_399:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DripWarrior/poolClieent.sol\":6925:6932  _amount */\n      dup1\n        /* \"DripWarrior/poolClieent.sol\":6904:6921  totalStakedAmount */\n      0x03\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":6904:6932  totalStakedAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_400\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_400:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolClieent.sol\":6948:6994  StakeTokens(msg.sender,address(this), _amount) */\n      mload(0x40)\n      0x14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab\n      swap1\n      tag_265\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":6960:6970  msg.sender */\n      caller\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":6979:6983  this */\n      address\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":6986:6993  _amount */\n      dup6\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":6948:6994  StakeTokens(msg.sender,address(this), _amount) */\n      tag_297\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":7012:7551  function addFunds(uint256 _amount, uint256 _projectNo) external {... */\n    tag_174:\n        /* \"DripWarrior/poolClieent.sol\":7101:7102  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":7090:7097  _amount */\n      dup3\n        /* \"DripWarrior/poolClieent.sol\":7090:7102  _amount <= 0 */\n      gt\n        /* \"DripWarrior/poolClieent.sol\":7087:7155  if(_amount <= 0){... */\n      tag_403\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":7124:7144  wrongAmount(_amount) */\n      mload(0x40)\n      shl(0xe4, 0x02ff4783)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":7124:7144  wrongAmount(_amount) */\n      tag_260\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":7087:7155  if(_amount <= 0){... */\n    tag_403:\n        /* \"DripWarrior/poolClieent.sol\":7181:7194  totalProjects */\n      sload(0x0e)\n        /* \"DripWarrior/poolClieent.sol\":7168:7178  _projectNo */\n      dup2\n        /* \"DripWarrior/poolClieent.sol\":7168:7194  _projectNo > totalProjects */\n      gt\n        /* \"DripWarrior/poolClieent.sol\":7165:7253  if(_projectNo > totalProjects){... */\n      iszero\n      tag_405\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":7216:7242  wrongProjectNo(_projectNo) */\n      mload(0x40)\n      shl(0xe0, 0x222a50f3)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":7216:7242  wrongProjectNo(_projectNo) */\n      tag_260\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":7165:7253  if(_projectNo > totalProjects){... */\n    tag_405:\n        /* \"DripWarrior/poolClieent.sol\":7298:7323  tPPercentages[_projectNo] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":7298:7311  tPPercentages */\n      0x11\n        /* \"DripWarrior/poolClieent.sol\":7298:7323  tPPercentages[_projectNo] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DripWarrior/poolClieent.sol\":7275:7324  calculateFees(_amount, tPPercentages[_projectNo]) */\n      tag_407\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":7289:7296  _amount */\n      dup4\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":7275:7288  calculateFees */\n      tag_408\n        /* \"DripWarrior/poolClieent.sol\":7275:7324  calculateFees(_amount, tPPercentages[_projectNo]) */\n      jump\t// in\n    tag_407:\n        /* \"DripWarrior/poolClieent.sol\":7343:7355  bool success */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":7358:7367  usdcToken */\n      dup1\n      sload\n        /* \"DripWarrior/poolClieent.sol\":7358:7415  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolClieent.sol\":7358:7367  usdcToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":7358:7380  usdcToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":7358:7415  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      tag_409\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":7381:7391  msg.sender */\n      caller\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":7400:7404  this */\n      address\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":7406:7413  _amount */\n      dup9\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":7358:7415  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      0x04\n      add\n      tag_297\n      jump\t// in\n    tag_409:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_411\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_411:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_412\n      swap2\n      swap1\n      tag_301\n      jump\t// in\n    tag_412:\n        /* \"DripWarrior/poolClieent.sol\":7343:7415  bool success = usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      swap1\n      pop\n        /* \"DripWarrior/poolClieent.sol\":7429:7436  success */\n      dup1\n        /* \"DripWarrior/poolClieent.sol\":7425:7492  if(!success){... */\n      tag_413\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":7458:7481  transferFailed(success) */\n      mload(0x40)\n      shl(0xe0, 0xd85d3cef)\n      dup2\n      mstore\n        /* \"#utility.yul\":1023:1037   */\n      dup2\n      iszero\n        /* \"#utility.yul\":1016:1038   */\n      iszero\n        /* \"DripWarrior/poolClieent.sol\":7458:7481  transferFailed(success) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":998:1039   */\n      mstore\n        /* \"#utility.yul\":971:989   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":7458:7481  transferFailed(success) */\n      tag_260\n        /* \"#utility.yul\":858:1045   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":7425:7492  if(!success){... */\n    tag_413:\n        /* \"DripWarrior/poolClieent.sol\":7507:7535  AddFunds(_amount,_projectNo) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9271:9296   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":9327:9329   */\n      0x20\n        /* \"#utility.yul\":9312:9330   */\n      dup2\n      add\n        /* \"#utility.yul\":9305:9339   */\n      dup5\n      swap1\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":7507:7535  AddFunds(_amount,_projectNo) */\n      0xa89b69c5958ec1ccf0df0de746a8708f5b6a6b429430129f16f46f44b319c900\n      swap2\n        /* \"#utility.yul\":9244:9262   */\n      add\n        /* \"DripWarrior/poolClieent.sol\":7507:7535  AddFunds(_amount,_projectNo) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DripWarrior/poolClieent.sol\":7076:7551  {... */\n      pop\n        /* \"DripWarrior/poolClieent.sol\":7012:7551  function addFunds(uint256 _amount, uint256 _projectNo) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolClieent.sol\":15278:15603  function setflowToTreasuryPercentage(uint256 _newPerccentage) external onlyOwner {... */\n    tag_200:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_421\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_421:\n        /* \"DripWarrior/poolClieent.sol\":15399:15400  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":15380:15395  _newPerccentage */\n      dup2\n        /* \"DripWarrior/poolClieent.sol\":15380:15400  _newPerccentage <= 0 */\n      gt\n        /* \"DripWarrior/poolClieent.sol\":15377:15465  if(_newPerccentage <= 0){... */\n      tag_423\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":15422:15454  wrongPercentage(_newPerccentage) */\n      mload(0x40)\n      shl(0xe0, 0xcdbc6335)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":15422:15454  wrongPercentage(_newPerccentage) */\n      tag_260\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":15377:15465  if(_newPerccentage <= 0){... */\n    tag_423:\n        /* \"DripWarrior/poolClieent.sol\":15483:15507  flowToTreasuryPercentage */\n      0x06\n        /* \"DripWarrior/poolClieent.sol\":15483:15525  flowToTreasuryPercentage = _newPerccentage */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":15541:15596  PercentageChanged(msg.sender, flowToTreasuryPercentage) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolClieent.sol\":15559:15569  msg.sender */\n      caller\n        /* \"#utility.yul\":8287:8338   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8369:8371   */\n      0x20\n        /* \"#utility.yul\":8354:8372   */\n      dup2\n      add\n        /* \"#utility.yul\":8347:8381   */\n      dup4\n      swap1\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_d85598d6ea860439b48fc265883a1cac638ff64dca5391fe12b46f27076e26fe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":15541:15596  PercentageChanged(msg.sender, flowToTreasuryPercentage) */\n      swap2\n        /* \"#utility.yul\":8260:8278   */\n      add\n        /* \"DripWarrior/poolClieent.sol\":15541:15596  PercentageChanged(msg.sender, flowToTreasuryPercentage) */\n      tag_265\n        /* \"#utility.yul\":8113:8387   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":14938:15267  function setodividentPayoutPercentage(uint256 _newPerccentage) external onlyOwner {... */\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_427\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_427:\n        /* \"DripWarrior/poolClieent.sol\":15061:15062  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":15042:15057  _newPerccentage */\n      dup2\n        /* \"DripWarrior/poolClieent.sol\":15042:15062  _newPerccentage <= 0 */\n      gt\n        /* \"DripWarrior/poolClieent.sol\":15039:15127  if(_newPerccentage <= 0){... */\n      tag_429\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":15084:15116  wrongPercentage(_newPerccentage) */\n      mload(0x40)\n      shl(0xe0, 0xcdbc6335)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":15084:15116  wrongPercentage(_newPerccentage) */\n      tag_260\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":15039:15127  if(_newPerccentage <= 0){... */\n    tag_429:\n        /* \"DripWarrior/poolClieent.sol\":15145:15170  odividentPayoutPercentage */\n      0x05\n        /* \"DripWarrior/poolClieent.sol\":15145:15188  odividentPayoutPercentage = _newPerccentage */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":15204:15260  PercentageChanged(msg.sender, odividentPayoutPercentage) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolClieent.sol\":15222:15232  msg.sender */\n      caller\n        /* \"#utility.yul\":8287:8338   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8369:8371   */\n      0x20\n        /* \"#utility.yul\":8354:8372   */\n      dup2\n      add\n        /* \"#utility.yul\":8347:8381   */\n      dup4\n      swap1\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_d85598d6ea860439b48fc265883a1cac638ff64dca5391fe12b46f27076e26fe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":15204:15260  PercentageChanged(msg.sender, odividentPayoutPercentage) */\n      swap2\n        /* \"#utility.yul\":8260:8278   */\n      add\n        /* \"DripWarrior/poolClieent.sol\":15204:15260  PercentageChanged(msg.sender, odividentPayoutPercentage) */\n      tag_265\n        /* \"#utility.yul\":8113:8387   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":3601:4342  function initialize(address initialOwner,address _usdcAddress,... */\n    tag_220:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_435\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_435:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_436\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_436:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_437\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_437:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_438\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_438:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_439\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_439:\n        /* \"DripWarrior/poolClieent.sol\":3727:3755  __Ownable_init(initialOwner) */\n      tag_441\n        /* \"DripWarrior/poolClieent.sol\":3742:3754  initialOwner */\n      dup9\n        /* \"DripWarrior/poolClieent.sol\":3727:3741  __Ownable_init */\n      tag_442\n        /* \"DripWarrior/poolClieent.sol\":3727:3755  __Ownable_init(initialOwner) */\n      jump\t// in\n    tag_441:\n        /* \"DripWarrior/poolClieent.sol\":3765:3789  __UUPSUpgradeable_init() */\n      tag_443\n        /* \"DripWarrior/poolClieent.sol\":3765:3787  __UUPSUpgradeable_init */\n      tag_444\n        /* \"DripWarrior/poolClieent.sol\":3765:3789  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_443:\n        /* \"DripWarrior/poolClieent.sol\":3800:3809  usdcToken */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":3800:3832  usdcToken = IBEP20(_usdcAddress) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup11\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":4068:4072  5000 */\n      0x1388\n        /* \"DripWarrior/poolClieent.sol\":4040:4065  tdividentPayoutPercentage */\n      0x04\n        /* \"DripWarrior/poolClieent.sol\":4040:4072  tdividentPayoutPercentage = 5000 */\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":4122:4126  7500 */\n      0x1d4c\n        /* \"DripWarrior/poolClieent.sol\":4094:4119  odividentPayoutPercentage */\n      0x05\n        /* \"DripWarrior/poolClieent.sol\":4094:4126  odividentPayoutPercentage = 7500 */\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":4188:4192  1500 */\n      0x05dc\n        /* \"DripWarrior/poolClieent.sol\":4161:4185  flowToTreasuryPercentage */\n      0x06\n        /* \"DripWarrior/poolClieent.sol\":4161:4192  flowToTreasuryPercentage = 1500 */\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":4239:4243  1000 */\n      0x03e8\n        /* \"DripWarrior/poolClieent.sol\":4213:4236  maintainceFeePercentage */\n      0x07\n        /* \"DripWarrior/poolClieent.sol\":4213:4243  maintainceFeePercentage = 1000 */\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":4301:4316  multisigAddress */\n      0x09\n        /* \"DripWarrior/poolClieent.sol\":4301:4335  multisigAddress = _multisigAddress */\n      dup1\n      sload\n      swap3\n      dup10\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_445\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":9503:9553   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":9491:9493   */\n      0x20\n        /* \"#utility.yul\":9476:9494   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_445:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"DripWarrior/poolClieent.sol\":3601:4342  function initialize(address initialOwner,address _usdcAddress,... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolClieent.sol\":12365:12683  function setForwarderAddress(address forwarderAddress) external onlyOwner {... */\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_449\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_449:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolClieent.sol\":12461:12491  forwarderAddress == address(0) */\n      dup2\n      and\n        /* \"DripWarrior/poolClieent.sol\":12458:12554  if(forwarderAddress == address(0)){... */\n      tag_451\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":12513:12543  wrongAddress(forwarderAddress) */\n      mload(0x40)\n      shl(0xe0, 0xe4cfa94d)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":375:407   */\n      dup3\n      and\n        /* \"DripWarrior/poolClieent.sol\":12513:12543  wrongAddress(forwarderAddress) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":12513:12543  wrongAddress(forwarderAddress) */\n      tag_260\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":12458:12554  if(forwarderAddress == address(0)){... */\n    tag_451:\n        /* \"DripWarrior/poolClieent.sol\":12572:12590  s_forwarderAddress */\n      0x0d\n        /* \"DripWarrior/poolClieent.sol\":12572:12609  s_forwarderAddress = forwarderAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":12625:12676  SetForwarderAddress(msg.sender, s_forwarderAddress) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolClieent.sol\":12645:12655  msg.sender */\n      caller\n        /* \"#utility.yul\":9738:9789   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9820:9822   */\n      0x20\n        /* \"#utility.yul\":9805:9823   */\n      dup2\n      add\n        /* \"#utility.yul\":9798:9858   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":12625:12676  SetForwarderAddress(msg.sender, s_forwarderAddress) */\n      0x75f91f3cecb8c46f20150f60f77a6e1f0de00776627692db82ef1960af84c33a\n      swap2\n        /* \"#utility.yul\":9711:9729   */\n      add\n        /* \"DripWarrior/poolClieent.sol\":12625:12676  SetForwarderAddress(msg.sender, s_forwarderAddress) */\n      tag_265\n        /* \"#utility.yul\":9564:9864   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":13684:14238  function blockUser(address _userAddress, bool value) external onlyOwner {... */\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_456\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_456:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolClieent.sol\":13778:13804  _userAddress == address(0) */\n      dup3\n      and\n        /* \"DripWarrior/poolClieent.sol\":13775:13863  if(_userAddress == address(0)){... */\n      tag_458\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":13826:13852  wrongAddress(_userAddress) */\n      mload(0x40)\n      shl(0xe0, 0xe4cfa94d)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":375:407   */\n      dup4\n      and\n        /* \"DripWarrior/poolClieent.sol\":13826:13852  wrongAddress(_userAddress) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":13826:13852  wrongAddress(_userAddress) */\n      tag_260\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":13775:13863  if(_userAddress == address(0)){... */\n    tag_458:\n        /* \"DripWarrior/poolClieent.sol\":13885:13889  true */\n      0x01\n        /* \"DripWarrior/poolClieent.sol\":13876:13889  value != true */\n      dup2\n      iszero\n      iszero\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":13876:13907  value != true && value != false */\n      tag_460\n      jumpi\n      pop\n        /* \"DripWarrior/poolClieent.sol\":13893:13907  value != false */\n      dup1\n      iszero\n      iszero\n        /* \"DripWarrior/poolClieent.sol\":13876:13907  value != true && value != false */\n    tag_460:\n        /* \"DripWarrior/poolClieent.sol\":13873:13957  if(value != true && value != false){... */\n      iszero\n      tag_461\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":13929:13946  wrongValue(value) */\n      mload(0x40)\n      shl(0xe0, 0x81ed1ae3)\n      dup2\n      mstore\n        /* \"#utility.yul\":1023:1037   */\n      dup2\n      iszero\n        /* \"#utility.yul\":1016:1038   */\n      iszero\n        /* \"DripWarrior/poolClieent.sol\":13929:13946  wrongValue(value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":998:1039   */\n      mstore\n        /* \"#utility.yul\":971:989   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":13929:13946  wrongValue(value) */\n      tag_260\n        /* \"#utility.yul\":858:1045   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":13873:13957  if(value != true && value != false){... */\n    tag_461:\n        /* \"DripWarrior/poolClieent.sol\":13970:13983  value == true */\n      dup1\n      iszero\n      iszero\n        /* \"DripWarrior/poolClieent.sol\":13979:13983  true */\n      0x01\n        /* \"DripWarrior/poolClieent.sol\":13970:13983  value == true */\n      sub\n        /* \"DripWarrior/poolClieent.sol\":13967:14134  if(value == true){... */\n      tag_463\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolClieent.sol\":13999:14027  userRegistered[_userAddress] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":13999:14013  userRegistered */\n      0x12\n        /* \"DripWarrior/poolClieent.sol\":13999:14027  userRegistered[_userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":13999:14042  userRegistered[_userAddress].blocked = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"DripWarrior/poolClieent.sol\":14038:14042  true */\n      0x01\n        /* \"DripWarrior/poolClieent.sol\":13999:14042  userRegistered[_userAddress].blocked = true */\n      or\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":13967:14134  if(value == true){... */\n      jump(tag_464)\n    tag_463:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolClieent.sol\":14079:14107  userRegistered[_userAddress] */\n      dup3\n      and\n        /* \"DripWarrior/poolClieent.sol\":14118:14123  false */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":14079:14107  userRegistered[_userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":14079:14093  userRegistered */\n      0x12\n        /* \"DripWarrior/poolClieent.sol\":14079:14107  userRegistered[_userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":14079:14123  userRegistered[_userAddress].blocked = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":13967:14134  if(value == true){... */\n    tag_464:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolClieent.sol\":14194:14222  userRegistered[_userAddress] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":14194:14208  userRegistered */\n      0x12\n        /* \"DripWarrior/poolClieent.sol\":14194:14222  userRegistered[_userAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":14194:14230  userRegistered[_userAddress].blocked */\n      sload\n        /* \"DripWarrior/poolClieent.sol\":14157:14231  UserBlocked(msg.sender,_userAddress, userRegistered[_userAddress].blocked) */\n      dup3\n      mload\n        /* \"DripWarrior/poolClieent.sol\":14169:14179  msg.sender */\n      caller\n        /* \"#utility.yul\":10065:10116   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10132:10150   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":10125:10185   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":14194:14230  userRegistered[_userAddress].blocked */\n      0xff\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":10228:10242   */\n      iszero\n        /* \"#utility.yul\":10221:10243   */\n      iszero\n        /* \"#utility.yul\":10201:10219   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10194:10244   */\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":14157:14231  UserBlocked(msg.sender,_userAddress, userRegistered[_userAddress].blocked) */\n      0x7a1655bc3160d3413bf1d5235e55be12e01b7e8bc2436a9bff09c3b4fa2421f1\n      swap1\n        /* \"#utility.yul\":10053:10055   */\n      0x60\n        /* \"#utility.yul\":10038:10056   */\n      add\n        /* \"DripWarrior/poolClieent.sol\":14157:14231  UserBlocked(msg.sender,_userAddress, userRegistered[_userAddress].blocked) */\n      tag_304\n        /* \"#utility.yul\":9869:10250   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":7945:9517  function weeklyTransfer() public  {... */\n    tag_241:\n        /* \"DripWarrior/poolClieent.sol\":8161:8185  uint256 remainFiftyOPool */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":8186:8219  uint256 dividentPayoutOPoolAmount */\n      dup1\n        /* \"DripWarrior/poolClieent.sol\":8221:8247  uint256 perPersonFromTPool */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":8252:8272  perPoolCalculation() */\n      tag_468\n        /* \"DripWarrior/poolClieent.sol\":8252:8270  perPoolCalculation */\n      tag_469\n        /* \"DripWarrior/poolClieent.sol\":8252:8272  perPoolCalculation() */\n      jump\t// in\n    tag_468:\n        /* \"DripWarrior/poolClieent.sol\":8159:8272  ( uint256 remainFiftyOPool,uint256 dividentPayoutOPoolAmount, uint256 perPersonFromTPool)  = perPoolCalculation() */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"DripWarrior/poolClieent.sol\":8321:8322  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":8299:8318  ownerShipPoolAmount */\n      sload(0x02)\n        /* \"DripWarrior/poolClieent.sol\":8299:8322  ownerShipPoolAmount > 0 */\n      gt\n        /* \"DripWarrior/poolClieent.sol\":8299:8348  ownerShipPoolAmount > 0 && treasuryPoolAmount > 0 */\n      dup1\n      iszero\n      tag_470\n      jumpi\n      pop\n        /* \"DripWarrior/poolClieent.sol\":8347:8348  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":8326:8344  treasuryPoolAmount */\n      sload(0x01)\n        /* \"DripWarrior/poolClieent.sol\":8326:8348  treasuryPoolAmount > 0 */\n      gt\n        /* \"DripWarrior/poolClieent.sol\":8299:8348  ownerShipPoolAmount > 0 && treasuryPoolAmount > 0 */\n    tag_470:\n        /* \"DripWarrior/poolClieent.sol\":8291:8370  require(ownerShipPoolAmount > 0 && treasuryPoolAmount > 0, \"not enough amount\") */\n      tag_471\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10457:10459   */\n      0x20\n        /* \"DripWarrior/poolClieent.sol\":8291:8370  require(ownerShipPoolAmount > 0 && treasuryPoolAmount > 0, \"not enough amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10439:10460   */\n      mstore\n        /* \"#utility.yul\":10496:10498   */\n      0x11\n        /* \"#utility.yul\":10476:10494   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10469:10499   */\n      mstore\n      shl(0x7a, 0x1b9bdd08195b9bdd59da08185b5bdd5b9d)\n        /* \"#utility.yul\":10515:10533   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10508:10555   */\n      mstore\n        /* \"#utility.yul\":10572:10590   */\n      0x64\n      add\n        /* \"DripWarrior/poolClieent.sol\":8291:8370  require(ownerShipPoolAmount > 0 && treasuryPoolAmount > 0, \"not enough amount\") */\n      tag_260\n        /* \"#utility.yul\":10255:10596   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":8291:8370  require(ownerShipPoolAmount > 0 && treasuryPoolAmount > 0, \"not enough amount\") */\n    tag_471:\n        /* \"DripWarrior/poolClieent.sol\":8388:8404  uint256 maxlimit */\n      0x00\n      dup1\n        /* \"DripWarrior/poolClieent.sol\":8415:9425  for(uint256 i = 0; i < noOfUsers; i++){... */\n    tag_474:\n        /* \"DripWarrior/poolClieent.sol\":8438:8447  noOfUsers */\n      sload(0x08)\n        /* \"DripWarrior/poolClieent.sol\":8434:8435  i */\n      dup2\n        /* \"DripWarrior/poolClieent.sol\":8434:8447  i < noOfUsers */\n      lt\n        /* \"DripWarrior/poolClieent.sol\":8415:9425  for(uint256 i = 0; i < noOfUsers; i++){... */\n      iszero\n      tag_475\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":8472:8501  userRegistered[totalUsers[i]] */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":8487:8500  totalUsers[i] */\n      dup2\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":8487:8497  totalUsers */\n      0x10\n        /* \"DripWarrior/poolClieent.sol\":8487:8500  totalUsers[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"DripWarrior/poolClieent.sol\":8472:8501  userRegistered[totalUsers[i]] */\n      dup4\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":8472:8486  userRegistered */\n      0x12\n        /* \"DripWarrior/poolClieent.sol\":8472:8501  userRegistered[totalUsers[i]] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":8472:8509  userRegistered[totalUsers[i]].blocked */\n      sload\n      0xff\n      and\n        /* \"DripWarrior/poolClieent.sol\":8468:9402  if(!userRegistered[totalUsers[i]].blocked){... */\n      tag_477\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":8622:8639  totalStakedAmount */\n      sload(0x03)\n        /* \"DripWarrior/poolClieent.sol\":8529:8556  uint256 eachSharePercentage */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":8575:8588  totalUsers[i] */\n      dup3\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":8575:8585  totalUsers */\n      0x10\n        /* \"DripWarrior/poolClieent.sol\":8575:8588  totalUsers[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"DripWarrior/poolClieent.sol\":8560:8589  userRegistered[totalUsers[i]] */\n      dup4\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":8560:8574  userRegistered */\n      0x12\n        /* \"DripWarrior/poolClieent.sol\":8560:8589  userRegistered[totalUsers[i]] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":8560:8607  userRegistered[totalUsers[i]].totalStakedAmount */\n      0x05\n      add\n      sload\n        /* \"DripWarrior/poolClieent.sol\":8529:8556  uint256 eachSharePercentage */\n      swap1\n      swap2\n        /* \"DripWarrior/poolClieent.sol\":8622:8639  totalStakedAmount */\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":8560:8617  userRegistered[totalUsers[i]].totalStakedAmount * (10000) */\n      tag_478\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":8611:8616  10000 */\n      0x2710\n        /* \"DripWarrior/poolClieent.sol\":8560:8617  userRegistered[totalUsers[i]].totalStakedAmount * (10000) */\n      tag_479\n      jump\t// in\n    tag_478:\n        /* \"DripWarrior/poolClieent.sol\":8559:8640  (userRegistered[totalUsers[i]].totalStakedAmount * (10000)) / (totalStakedAmount) */\n      tag_480\n      swap2\n      swap1\n      tag_481\n      jump\t// in\n    tag_480:\n        /* \"DripWarrior/poolClieent.sol\":8529:8640  uint256 eachSharePercentage = (userRegistered[totalUsers[i]].totalStakedAmount * (10000)) / (totalStakedAmount) */\n      swap1\n      pop\n        /* \"DripWarrior/poolClieent.sol\":8675:8697  uint256 eachSendAmount */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":8700:8767  calculatePercentage(dividentPayoutOPoolAmount, eachSharePercentage) */\n      tag_482\n        /* \"DripWarrior/poolClieent.sol\":8720:8745  dividentPayoutOPoolAmount */\n      dup7\n        /* \"DripWarrior/poolClieent.sol\":8747:8766  eachSharePercentage */\n      dup4\n        /* \"DripWarrior/poolClieent.sol\":8700:8719  calculatePercentage */\n      tag_483\n        /* \"DripWarrior/poolClieent.sol\":8700:8767  calculatePercentage(dividentPayoutOPoolAmount, eachSharePercentage) */\n      jump\t// in\n    tag_482:\n        /* \"DripWarrior/poolClieent.sol\":8675:8767  uint256 eachSendAmount = calculatePercentage(dividentPayoutOPoolAmount, eachSharePercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolClieent.sol\":8808:8822  eachSendAmount */\n      dup1\n        /* \"DripWarrior/poolClieent.sol\":8785:8804  ownerShipPoolAmount */\n      0x02\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":8785:8822  ownerShipPoolAmount -= eachSendAmount */\n      dup3\n      dup3\n      sload\n      tag_484\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_484:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"DripWarrior/poolClieent.sol\":8865:8891  maxlimit += eachSendAmount */\n      tag_485\n      swap1\n      pop\n        /* \"DripWarrior/poolClieent.sol\":8877:8891  eachSendAmount */\n      dup2\n        /* \"DripWarrior/poolClieent.sol\":8865:8891  maxlimit += eachSendAmount */\n      dup6\n      tag_295\n      jump\t// in\n    tag_485:\n      swap4\n      pop\n        /* \"DripWarrior/poolClieent.sol\":8931:8949  perPersonFromTPool */\n      dup5\n        /* \"DripWarrior/poolClieent.sol\":8909:8927  treasuryPoolAmount */\n      0x01\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":8909:8949  treasuryPoolAmount -= perPersonFromTPool */\n      dup3\n      dup3\n      sload\n      tag_486\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_486:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolClieent.sol\":8968:8997  userRegistered[totalUsers[i]] */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":8983:8996  totalUsers[i] */\n      dup4\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":8983:8993  totalUsers */\n      0x10\n        /* \"DripWarrior/poolClieent.sol\":8983:8996  totalUsers[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"DripWarrior/poolClieent.sol\":8968:8997  userRegistered[totalUsers[i]] */\n      dup6\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":8968:8982  userRegistered */\n      0x12\n        /* \"DripWarrior/poolClieent.sol\":8968:8997  userRegistered[totalUsers[i]] */\n      swap1\n      swap4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":8968:9017  userRegistered[totalUsers[i]].receiveFromTreasury */\n      0x03\n      add\n        /* \"DripWarrior/poolClieent.sol\":8968:9038  userRegistered[totalUsers[i]].receiveFromTreasury = perPersonFromTPool */\n      dup10\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":9071:9084  totalUsers[i] */\n      sload\n      swap1\n      swap2\n      and\n        /* \"DripWarrior/poolClieent.sol\":9056:9085  userRegistered[totalUsers[i]] */\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":9056:9107  userRegistered[totalUsers[i]].receiveFromOwneerShip */\n      0x04\n      add\n        /* \"DripWarrior/poolClieent.sol\":9056:9124  userRegistered[totalUsers[i]].receiveFromOwneerShip = eachSendAmount */\n      dup3\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":9185:9220  eachSendAmount + perPersonFromTPool */\n      tag_487\n        /* \"DripWarrior/poolClieent.sol\":8968:9038  userRegistered[totalUsers[i]].receiveFromTreasury = perPersonFromTPool */\n      dup7\n        /* \"DripWarrior/poolClieent.sol\":9056:9124  userRegistered[totalUsers[i]].receiveFromOwneerShip = eachSendAmount */\n      dup4\n        /* \"DripWarrior/poolClieent.sol\":9185:9220  eachSendAmount + perPersonFromTPool */\n      tag_295\n      jump\t// in\n    tag_487:\n        /* \"DripWarrior/poolClieent.sol\":9238:9267  userRegistered[totalUsers[i]] */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":9253:9266  totalUsers[i] */\n      dup6\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":9253:9263  totalUsers */\n      0x10\n        /* \"DripWarrior/poolClieent.sol\":9253:9266  totalUsers[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"DripWarrior/poolClieent.sol\":9238:9267  userRegistered[totalUsers[i]] */\n      dup4\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":9238:9252  userRegistered */\n      0x12\n        /* \"DripWarrior/poolClieent.sol\":9238:9267  userRegistered[totalUsers[i]] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":9253:9266  totalUsers[i] */\n      0x01\n        /* \"DripWarrior/poolClieent.sol\":9238:9282  userRegistered[totalUsers[i]].receivedAmount */\n      add\n        /* \"DripWarrior/poolClieent.sol\":9238:9301  userRegistered[totalUsers[i]].receivedAmount += totalSendAmount */\n      dup1\n      sload\n        /* \"DripWarrior/poolClieent.sol\":9159:9220  uint256 totalSendAmount = eachSendAmount + perPersonFromTPool */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"DripWarrior/poolClieent.sol\":9238:9282  userRegistered[totalUsers[i]].receivedAmount */\n      swap1\n      swap2\n        /* \"DripWarrior/poolClieent.sol\":9238:9267  userRegistered[totalUsers[i]] */\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":9238:9301  userRegistered[totalUsers[i]].receivedAmount += totalSendAmount */\n      tag_488\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":9159:9220  uint256 totalSendAmount = eachSendAmount + perPersonFromTPool */\n      dup5\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":9238:9301  userRegistered[totalUsers[i]].receivedAmount += totalSendAmount */\n      tag_295\n      jump\t// in\n    tag_488:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolClieent.sol\":9328:9356  maxlimit <= remainFiftyOPool */\n      dup8\n      dup6\n      gt\n      iszero\n        /* \"DripWarrior/poolClieent.sol\":9320:9387  require(maxlimit <= remainFiftyOPool, \"Amount is greater then 50%\") */\n      tag_489\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11198:11200   */\n      0x20\n        /* \"DripWarrior/poolClieent.sol\":9320:9387  require(maxlimit <= remainFiftyOPool, \"Amount is greater then 50%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11180:11201   */\n      mstore\n        /* \"#utility.yul\":11237:11239   */\n      0x1a\n        /* \"#utility.yul\":11217:11235   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11210:11240   */\n      mstore\n        /* \"#utility.yul\":11276:11304   */\n      0x416d6f756e742069732067726561746572207468656e20353025000000000000\n        /* \"#utility.yul\":11256:11274   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11249:11305   */\n      mstore\n        /* \"#utility.yul\":11322:11340   */\n      0x64\n      add\n        /* \"DripWarrior/poolClieent.sol\":9320:9387  require(maxlimit <= remainFiftyOPool, \"Amount is greater then 50%\") */\n      tag_260\n        /* \"#utility.yul\":10996:11346   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":9320:9387  require(maxlimit <= remainFiftyOPool, \"Amount is greater then 50%\") */\n    tag_489:\n        /* \"DripWarrior/poolClieent.sol\":8510:9402  {... */\n      pop\n      pop\n      pop\n        /* \"DripWarrior/poolClieent.sol\":8468:9402  if(!userRegistered[totalUsers[i]].blocked){... */\n    tag_477:\n        /* \"DripWarrior/poolClieent.sol\":8449:8452  i++ */\n      0x01\n      add\n        /* \"DripWarrior/poolClieent.sol\":8415:9425  for(uint256 i = 0; i < noOfUsers; i++){... */\n      jump(tag_474)\n    tag_475:\n      pop\n        /* \"DripWarrior/poolClieent.sol\":9469:9488  ownerShipPoolAmount */\n      sload(0x02)\n        /* \"DripWarrior/poolClieent.sol\":9490:9508  treasuryPoolAmount */\n      sload(0x01)\n        /* \"DripWarrior/poolClieent.sol\":9440:9509  WeeklyTransfered(msg.sender, ownerShipPoolAmount, treasuryPoolAmount) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolClieent.sol\":9457:9467  msg.sender */\n      caller\n        /* \"#utility.yul\":7965:8016   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8047:8049   */\n      0x20\n        /* \"#utility.yul\":8032:8050   */\n      dup2\n      add\n        /* \"#utility.yul\":8025:8059   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":8075:8093   */\n      dup3\n      add\n        /* \"#utility.yul\":8068:8102   */\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":9440:9509  WeeklyTransfered(msg.sender, ownerShipPoolAmount, treasuryPoolAmount) */\n      0xee826440768329b0c72f81331212ee31fcdac1ea79a248d24821e40c34e58020\n      swap1\n        /* \"#utility.yul\":7953:7955   */\n      0x60\n        /* \"#utility.yul\":7938:7956   */\n      add\n        /* \"DripWarrior/poolClieent.sol\":9440:9509  WeeklyTransfered(msg.sender, ownerShipPoolAmount, treasuryPoolAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DripWarrior/poolClieent.sol\":7979:9517  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"DripWarrior/poolClieent.sol\":7945:9517  function weeklyTransfer() public  {... */\n      jump\t// out\n        /* \"DripWarrior/poolClieent.sol\":14250:14592  function setTeasueryPercentages(uint256 _projectId,uint256 _newPerccentage) external onlyOwner {... */\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_494\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_494:\n        /* \"DripWarrior/poolClieent.sol\":14386:14387  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":14367:14382  _newPerccentage */\n      dup2\n        /* \"DripWarrior/poolClieent.sol\":14367:14387  _newPerccentage <= 0 */\n      gt\n        /* \"DripWarrior/poolClieent.sol\":14364:14452  if(_newPerccentage <= 0){... */\n      tag_496\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":14409:14441  wrongPercentage(_newPerccentage) */\n      mload(0x40)\n      shl(0xe0, 0xcdbc6335)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":14409:14441  wrongPercentage(_newPerccentage) */\n      tag_260\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":14364:14452  if(_newPerccentage <= 0){... */\n    tag_496:\n        /* \"DripWarrior/poolClieent.sol\":14470:14495  tPPercentages[_projectId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":14470:14483  tPPercentages */\n      0x11\n        /* \"DripWarrior/poolClieent.sol\":14470:14495  tPPercentages[_projectId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DripWarrior/poolClieent.sol\":14470:14513  tPPercentages[_projectId] = _newPerccentage */\n      dup4\n      swap1\n      sstore\n        /* \"DripWarrior/poolClieent.sol\":14529:14585  PercentageChanged(msg.sender, tPPercentages[_projectId]) */\n      dup2\n      mload\n        /* \"DripWarrior/poolClieent.sol\":14547:14557  msg.sender */\n      caller\n        /* \"#utility.yul\":8287:8338   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8354:8372   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":8347:8381   */\n      dup4\n      swap1\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_d85598d6ea860439b48fc265883a1cac638ff64dca5391fe12b46f27076e26fe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":14529:14585  PercentageChanged(msg.sender, tPPercentages[_projectId]) */\n      swap2\n        /* \"#utility.yul\":8260:8278   */\n      add\n        /* \"DripWarrior/poolClieent.sol\":14529:14585  PercentageChanged(msg.sender, tPPercentages[_projectId]) */\n      tag_304\n        /* \"#utility.yul\":8113:8387   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_249:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_500\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_500:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_502\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      tag_260\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_502:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_504\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_348\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_504:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_257:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_508\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n    tag_508:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_260\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n    tag_283:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4679:4683  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4688:4694  __self */\n      immutable(\"0x6740f0f1ed974f4bbc4ea3ddf8917f81b1171208e4ec27e89df857ca2a56624a\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n      tag_513\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4785:4791  __self */\n      immutable(\"0x6740f0f1ed974f4bbc4ea3ddf8917f81b1171208e4ec27e89df857ca2a56624a\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      tag_514\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n    tag_514:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n    tag_513:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n      iszero\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4865:4894  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DripWarrior/poolClieent.sol\":16262:16374  function _authorizeUpgrade(address newImplementation)... */\n    tag_286:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_504\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_288:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6169:6186  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6201  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6203  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_521\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_522\n      swap2\n      dup2\n      add\n      swap1\n      tag_523\n      jump\t// in\n    tag_522:\n      0x01\n    tag_521:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_524\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":375:407   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_260\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_524:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6285  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_530\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      tag_260\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_530:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_532\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6404:6421  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6423:6427  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6403  ERC1967Utils.upgradeToAndCall */\n      tag_533\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_532:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6204:6439  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n    tag_307:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5102:5106  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5111:5117  __self */\n      immutable(\"0x6740f0f1ed974f4bbc4ea3ddf8917f81b1171208e4ec27e89df857ca2a56624a\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5195:5224  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_348:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolClieent.sol\":7558:7937  function calculateFees(uint256 _amount, uint256 _tPPercentage) private {... */\n    tag_408:\n        /* \"DripWarrior/poolClieent.sol\":7647:7667  uint256 oPPercentage */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":7670:7691  10000 - _tPPercentage */\n      tag_539\n        /* \"DripWarrior/poolClieent.sol\":7678:7691  _tPPercentage */\n      dup3\n        /* \"DripWarrior/poolClieent.sol\":7670:7675  10000 */\n      0x2710\n        /* \"DripWarrior/poolClieent.sol\":7670:7691  10000 - _tPPercentage */\n      tag_264\n      jump\t// in\n    tag_539:\n        /* \"DripWarrior/poolClieent.sol\":7647:7691  uint256 oPPercentage = 10000 - _tPPercentage */\n      swap1\n      pop\n        /* \"DripWarrior/poolClieent.sol\":7701:7721  uint256 ownerShipFee */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":7724:7766  calculatePercentage(_amount, oPPercentage) */\n      tag_540\n        /* \"DripWarrior/poolClieent.sol\":7744:7751  _amount */\n      dup5\n        /* \"DripWarrior/poolClieent.sol\":7753:7765  oPPercentage */\n      dup4\n        /* \"DripWarrior/poolClieent.sol\":7724:7743  calculatePercentage */\n      tag_483\n        /* \"DripWarrior/poolClieent.sol\":7724:7766  calculatePercentage(_amount, oPPercentage) */\n      jump\t// in\n    tag_540:\n        /* \"DripWarrior/poolClieent.sol\":7701:7766  uint256 ownerShipFee = calculatePercentage(_amount, oPPercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolClieent.sol\":7776:7795  uint256 treasuryFee */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":7798:7841  calculatePercentage(_amount, _tPPercentage) */\n      tag_541\n        /* \"DripWarrior/poolClieent.sol\":7818:7825  _amount */\n      dup6\n        /* \"DripWarrior/poolClieent.sol\":7827:7840  _tPPercentage */\n      dup6\n        /* \"DripWarrior/poolClieent.sol\":7798:7817  calculatePercentage */\n      tag_483\n        /* \"DripWarrior/poolClieent.sol\":7798:7841  calculatePercentage(_amount, _tPPercentage) */\n      jump\t// in\n    tag_541:\n        /* \"DripWarrior/poolClieent.sol\":7776:7841  uint256 treasuryFee = calculatePercentage(_amount, _tPPercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolClieent.sol\":7875:7887  ownerShipFee */\n      dup2\n        /* \"DripWarrior/poolClieent.sol\":7852:7871  ownerShipPoolAmount */\n      0x02\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":7852:7887  ownerShipPoolAmount += ownerShipFee */\n      dup3\n      dup3\n      sload\n      tag_542\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_542:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DripWarrior/poolClieent.sol\":7919:7930  treasuryFee */\n      dup1\n        /* \"DripWarrior/poolClieent.sol\":7897:7915  treasuryPoolAmount */\n      0x01\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":7897:7930  treasuryPoolAmount += treasuryFee */\n      dup3\n      dup3\n      sload\n      tag_543\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_543:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"DripWarrior/poolClieent.sol\":7558:7937  function calculateFees(uint256 _amount, uint256 _tPPercentage) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_442:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_547\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_548\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_547:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_504\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_551\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2968:3035  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_444:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_347\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_548\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"DripWarrior/poolClieent.sol\":9529:10680  function perPoolCalculation() private returns(uint256, uint256,uint256){... */\n    tag_469:\n        /* \"DripWarrior/poolClieent.sol\":9575:9582  uint256 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":9584:9591  uint256 */\n      dup1\n        /* \"DripWarrior/poolClieent.sol\":9592:9599  uint256 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":9620:9644  uint256 remainFiftyOPool */\n      dup1\n        /* \"DripWarrior/poolClieent.sol\":9647:9693  calculatePercentage(ownerShipPoolAmount, 5000) */\n      tag_556\n        /* \"DripWarrior/poolClieent.sol\":9667:9686  ownerShipPoolAmount */\n      sload(0x02)\n        /* \"DripWarrior/poolClieent.sol\":9688:9692  5000 */\n      0x1388\n        /* \"DripWarrior/poolClieent.sol\":9647:9666  calculatePercentage */\n      tag_483\n        /* \"DripWarrior/poolClieent.sol\":9647:9693  calculatePercentage(ownerShipPoolAmount, 5000) */\n      jump\t// in\n    tag_556:\n        /* \"DripWarrior/poolClieent.sol\":9620:9693  uint256 remainFiftyOPool = calculatePercentage(ownerShipPoolAmount, 5000) */\n      swap1\n      pop\n        /* \"DripWarrior/poolClieent.sol\":9704:9737  uint256 dividentPayoutOPoolAmount */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":9740:9804  calculatePercentage(remainFiftyOPool, odividentPayoutPercentage) */\n      tag_557\n        /* \"DripWarrior/poolClieent.sol\":9760:9776  remainFiftyOPool */\n      dup3\n        /* \"DripWarrior/poolClieent.sol\":9778:9803  odividentPayoutPercentage */\n      sload(0x05)\n        /* \"DripWarrior/poolClieent.sol\":9740:9759  calculatePercentage */\n      tag_483\n        /* \"DripWarrior/poolClieent.sol\":9740:9804  calculatePercentage(remainFiftyOPool, odividentPayoutPercentage) */\n      jump\t// in\n    tag_557:\n        /* \"DripWarrior/poolClieent.sol\":9704:9804  uint256 dividentPayoutOPoolAmount = calculatePercentage(remainFiftyOPool, odividentPayoutPercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolClieent.sol\":9814:9850  uint256 fifteenPercenntToTPoolAmount */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":9853:9916  calculatePercentage(remainFiftyOPool, flowToTreasuryPercentage) */\n      tag_558\n        /* \"DripWarrior/poolClieent.sol\":9873:9889  remainFiftyOPool */\n      dup4\n        /* \"DripWarrior/poolClieent.sol\":9891:9915  flowToTreasuryPercentage */\n      sload(0x06)\n        /* \"DripWarrior/poolClieent.sol\":9853:9872  calculatePercentage */\n      tag_483\n        /* \"DripWarrior/poolClieent.sol\":9853:9916  calculatePercentage(remainFiftyOPool, flowToTreasuryPercentage) */\n      jump\t// in\n    tag_558:\n        /* \"DripWarrior/poolClieent.sol\":9814:9916  uint256 fifteenPercenntToTPoolAmount = calculatePercentage(remainFiftyOPool, flowToTreasuryPercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolClieent.sol\":9926:9962  uint256 tenPercenntToMaintenceAmount */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":9965:10027  calculatePercentage(remainFiftyOPool, maintainceFeePercentage) */\n      tag_559\n        /* \"DripWarrior/poolClieent.sol\":9985:10001  remainFiftyOPool */\n      dup5\n        /* \"DripWarrior/poolClieent.sol\":10003:10026  maintainceFeePercentage */\n      sload(0x07)\n        /* \"DripWarrior/poolClieent.sol\":9965:9984  calculatePercentage */\n      tag_483\n        /* \"DripWarrior/poolClieent.sol\":9965:10027  calculatePercentage(remainFiftyOPool, maintainceFeePercentage) */\n      jump\t// in\n    tag_559:\n        /* \"DripWarrior/poolClieent.sol\":9926:10027  uint256 tenPercenntToMaintenceAmount = calculatePercentage(remainFiftyOPool, maintainceFeePercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolClieent.sol\":10037:10067  uint256 remainFiftyTPoolAmount */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":10070:10136  calculatePercentage(treasuryPoolAmount, tdividentPayoutPercentage) */\n      tag_560\n        /* \"DripWarrior/poolClieent.sol\":10090:10108  treasuryPoolAmount */\n      sload(0x01)\n        /* \"DripWarrior/poolClieent.sol\":10110:10135  tdividentPayoutPercentage */\n      sload(0x04)\n        /* \"DripWarrior/poolClieent.sol\":10070:10089  calculatePercentage */\n      tag_483\n        /* \"DripWarrior/poolClieent.sol\":10070:10136  calculatePercentage(treasuryPoolAmount, tdividentPayoutPercentage) */\n      jump\t// in\n    tag_560:\n        /* \"DripWarrior/poolClieent.sol\":10037:10136  uint256 remainFiftyTPoolAmount = calculatePercentage(treasuryPoolAmount, tdividentPayoutPercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolClieent.sol\":10167:10168  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":10155:10164  noOfUsers */\n      sload(0x08)\n        /* \"DripWarrior/poolClieent.sol\":10155:10168  noOfUsers > 0 */\n      gt\n        /* \"DripWarrior/poolClieent.sol\":10147:10182  require(noOfUsers > 0, \"no users!\") */\n      tag_561\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11742:11744   */\n      0x20\n        /* \"DripWarrior/poolClieent.sol\":10147:10182  require(noOfUsers > 0, \"no users!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11724:11745   */\n      mstore\n        /* \"#utility.yul\":11781:11782   */\n      0x09\n        /* \"#utility.yul\":11761:11779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11754:11783   */\n      mstore\n      shl(0xb8, 0x6e6f20757365727321)\n        /* \"#utility.yul\":11799:11817   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11792:11831   */\n      mstore\n        /* \"#utility.yul\":11848:11866   */\n      0x64\n      add\n        /* \"DripWarrior/poolClieent.sol\":10147:10182  require(noOfUsers > 0, \"no users!\") */\n      tag_260\n        /* \"#utility.yul\":11540:11872   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":10147:10182  require(noOfUsers > 0, \"no users!\") */\n    tag_561:\n        /* \"DripWarrior/poolClieent.sol\":10201:10227  uint256 perPersonFromTPool */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":10253:10262  noOfUsers */\n      sload(0x08)\n        /* \"DripWarrior/poolClieent.sol\":10230:10252  remainFiftyTPoolAmount */\n      dup3\n        /* \"DripWarrior/poolClieent.sol\":10230:10262  remainFiftyTPoolAmount/noOfUsers */\n      tag_564\n      swap2\n      swap1\n      tag_481\n      jump\t// in\n    tag_564:\n        /* \"DripWarrior/poolClieent.sol\":10201:10262  uint256 perPersonFromTPool = remainFiftyTPoolAmount/noOfUsers */\n      swap1\n      pop\n        /* \"DripWarrior/poolClieent.sol\":10305:10364  fifteenPercenntToTPoolAmount + tenPercenntToMaintenceAmount */\n      tag_565\n        /* \"DripWarrior/poolClieent.sol\":10336:10364  tenPercenntToMaintenceAmount */\n      dup4\n        /* \"DripWarrior/poolClieent.sol\":10305:10333  fifteenPercenntToTPoolAmount */\n      dup6\n        /* \"DripWarrior/poolClieent.sol\":10305:10364  fifteenPercenntToTPoolAmount + tenPercenntToMaintenceAmount */\n      tag_295\n      jump\t// in\n    tag_565:\n        /* \"DripWarrior/poolClieent.sol\":10281:10300  ownerShipPoolAmount */\n      0x02\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":10281:10365  ownerShipPoolAmount -= (fifteenPercenntToTPoolAmount + tenPercenntToMaintenceAmount) */\n      dup3\n      dup3\n      sload\n      tag_566\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_566:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DripWarrior/poolClieent.sol\":10397:10425  fifteenPercenntToTPoolAmount */\n      dup4\n        /* \"DripWarrior/poolClieent.sol\":10375:10393  treasuryPoolAmount */\n      0x01\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":10375:10425  treasuryPoolAmount += fifteenPercenntToTPoolAmount */\n      dup3\n      dup3\n      sload\n      tag_567\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_567:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolClieent.sol\":10436:10448  bool success */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":10451:10460  usdcToken */\n      dup1\n      sload\n        /* \"DripWarrior/poolClieent.sol\":10470:10485  multisigAddress */\n      sload(0x09)\n        /* \"DripWarrior/poolClieent.sol\":10451:10516  usdcToken.transfer(multisigAddress, tenPercenntToMaintenceAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolClieent.sol\":10470:10485  multisigAddress */\n      swap2\n      dup3\n      and\n        /* \"DripWarrior/poolClieent.sol\":10451:10516  usdcToken.transfer(multisigAddress, tenPercenntToMaintenceAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8287:8338   */\n      mstore\n        /* \"#utility.yul\":8354:8372   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8347:8381   */\n      dup8\n      swap1\n      mstore\n        /* \"DripWarrior/poolClieent.sol\":10451:10460  usdcToken */\n      swap2\n      and\n      swap1\n        /* \"DripWarrior/poolClieent.sol\":10451:10469  usdcToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":8260:8278   */\n      0x44\n      add\n        /* \"DripWarrior/poolClieent.sol\":10451:10516  usdcToken.transfer(multisigAddress, tenPercenntToMaintenceAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_570\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_570:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_571\n      swap2\n      swap1\n      tag_301\n      jump\t// in\n    tag_571:\n        /* \"DripWarrior/poolClieent.sol\":10436:10516  bool success = usdcToken.transfer(multisigAddress, tenPercenntToMaintenceAmount) */\n      swap1\n      pop\n        /* \"DripWarrior/poolClieent.sol\":10530:10537  success */\n      dup1\n        /* \"DripWarrior/poolClieent.sol\":10526:10593  if(!success){... */\n      tag_572\n      jumpi\n        /* \"DripWarrior/poolClieent.sol\":10559:10582  transferFailed(success) */\n      mload(0x40)\n      shl(0xe0, 0xd85d3cef)\n      dup2\n      mstore\n        /* \"#utility.yul\":1023:1037   */\n      dup2\n      iszero\n        /* \"#utility.yul\":1016:1038   */\n      iszero\n        /* \"DripWarrior/poolClieent.sol\":10559:10582  transferFailed(success) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":998:1039   */\n      mstore\n        /* \"#utility.yul\":971:989   */\n      0x24\n      add\n        /* \"DripWarrior/poolClieent.sol\":10559:10582  transferFailed(success) */\n      tag_260\n        /* \"#utility.yul\":858:1045   */\n      jump\n        /* \"DripWarrior/poolClieent.sol\":10526:10593  if(!success){... */\n    tag_572:\n      pop\n        /* \"DripWarrior/poolClieent.sol\":10611:10627  remainFiftyOPool */\n      swap5\n      swap9\n        /* \"DripWarrior/poolClieent.sol\":10628:10653  dividentPayoutOPoolAmount */\n      swap4\n      swap8\n      pop\n        /* \"DripWarrior/poolClieent.sol\":10654:10672  perPersonFromTPool */\n      swap4\n      swap6\n      pop\n        /* \"DripWarrior/poolClieent.sol\":9529:10680  function perPoolCalculation() private returns(uint256, uint256,uint256){... */\n      swap2\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolClieent.sol\":12689:13086  function calculatePercentage(uint256 _totalStakeAmount,uint256 percentageNumber) private pure returns(uint256) {... */\n    tag_483:\n        /* \"DripWarrior/poolClieent.sol\":12791:12798  uint256 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":12827:12844  _totalStakeAmount */\n      dup3\n        /* \"DripWarrior/poolClieent.sol\":12847:12848  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":12827:12848  _totalStakeAmount !=0 */\n      sub\n        /* \"DripWarrior/poolClieent.sol\":12819:12887  require(_totalStakeAmount !=0 , \"_totalStakeAmount can not be zero\") */\n      tag_575\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_577\n      jump\t// in\n    tag_575:\n        /* \"DripWarrior/poolClieent.sol\":12905:12921  percentageNumber */\n      dup2\n        /* \"DripWarrior/poolClieent.sol\":12924:12925  0 */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":12905:12925  percentageNumber !=0 */\n      sub\n        /* \"DripWarrior/poolClieent.sol\":12897:12964  require(percentageNumber !=0 , \"_totalStakeAmount can not be zero\") */\n      tag_578\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_577\n      jump\t// in\n    tag_578:\n        /* \"DripWarrior/poolClieent.sol\":12974:12992  uint256 serviceFee */\n      0x00\n        /* \"DripWarrior/poolClieent.sol\":13037:13042  10000 */\n      0x2710\n        /* \"DripWarrior/poolClieent.sol\":12995:13033  _totalStakeAmount * (percentageNumber) */\n      tag_580\n        /* \"DripWarrior/poolClieent.sol\":13016:13032  percentageNumber */\n      dup5\n        /* \"DripWarrior/poolClieent.sol\":12995:13012  _totalStakeAmount */\n      dup7\n        /* \"DripWarrior/poolClieent.sol\":12995:13033  _totalStakeAmount * (percentageNumber) */\n      tag_479\n      jump\t// in\n    tag_580:\n        /* \"DripWarrior/poolClieent.sol\":12995:13043  _totalStakeAmount * (percentageNumber) / (10000) */\n      tag_581\n      swap2\n      swap1\n      tag_481\n      jump\t// in\n    tag_581:\n        /* \"DripWarrior/poolClieent.sol\":12974:13043  uint256 serviceFee = _totalStakeAmount * (percentageNumber) / (10000) */\n      swap2\n      pop\n      pop\n        /* \"DripWarrior/poolClieent.sol\":12689:13086  function calculatePercentage(uint256 _totalStakeAmount,uint256 percentageNumber) private pure returns(uint256) {... */\n    tag_574:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_533:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      tag_587\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n      tag_588\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_587:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      tag_589\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_532\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n      tag_591\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_589:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      tag_280\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n      tag_594\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_548:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_551:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_500\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_548\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n    tag_588:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_607\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":375:407   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      tag_260\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_607:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_591:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      mload(0x40)\n      tag_611\n      swap2\n      swap1\n      tag_612\n      jump\t// in\n    tag_611:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_615\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_614)\n    tag_615:\n      0x60\n      swap2\n      pop\n    tag_614:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_616\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n      tag_617\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_616:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n    tag_594:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_617:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_623\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_624\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_625\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_624:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_626)\n    tag_623:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_627\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_627:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_628\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":375:407   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_260\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_628:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_626:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_625:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_631\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_631:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":419:645   */\n    tag_72:\n        /* \"#utility.yul\":478:484   */\n      0x00\n        /* \"#utility.yul\":531:533   */\n      0x20\n        /* \"#utility.yul\":519:528   */\n      dup3\n        /* \"#utility.yul\":510:517   */\n      dup5\n        /* \"#utility.yul\":506:529   */\n      sub\n        /* \"#utility.yul\":502:534   */\n      slt\n        /* \"#utility.yul\":499:551   */\n      iszero\n      tag_642\n      jumpi\n        /* \"#utility.yul\":547:548   */\n      0x00\n        /* \"#utility.yul\":544:545   */\n      dup1\n        /* \"#utility.yul\":537:549   */\n      revert\n        /* \"#utility.yul\":499:551   */\n    tag_642:\n      pop\n        /* \"#utility.yul\":592:615   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":419:645   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1050:1636   */\n    tag_107:\n        /* \"#utility.yul\":1120:1126   */\n      0x00\n        /* \"#utility.yul\":1128:1134   */\n      dup1\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1169:1178   */\n      dup4\n        /* \"#utility.yul\":1160:1167   */\n      dup6\n        /* \"#utility.yul\":1156:1179   */\n      sub\n        /* \"#utility.yul\":1152:1184   */\n      slt\n        /* \"#utility.yul\":1149:1201   */\n      iszero\n      tag_646\n      jumpi\n        /* \"#utility.yul\":1197:1198   */\n      0x00\n        /* \"#utility.yul\":1194:1195   */\n      dup1\n        /* \"#utility.yul\":1187:1199   */\n      revert\n        /* \"#utility.yul\":1149:1201   */\n    tag_646:\n        /* \"#utility.yul\":1237:1246   */\n      dup3\n        /* \"#utility.yul\":1224:1247   */\n      calldataload\n        /* \"#utility.yul\":1270:1288   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1262:1268   */\n      dup2\n        /* \"#utility.yul\":1259:1289   */\n      gt\n        /* \"#utility.yul\":1256:1306   */\n      iszero\n      tag_647\n      jumpi\n        /* \"#utility.yul\":1302:1303   */\n      0x00\n        /* \"#utility.yul\":1299:1300   */\n      dup1\n        /* \"#utility.yul\":1292:1304   */\n      revert\n        /* \"#utility.yul\":1256:1306   */\n    tag_647:\n        /* \"#utility.yul\":1325:1347   */\n      dup4\n      add\n        /* \"#utility.yul\":1378:1382   */\n      0x1f\n        /* \"#utility.yul\":1370:1383   */\n      dup2\n      add\n        /* \"#utility.yul\":1366:1393   */\n      dup6\n      sgt\n        /* \"#utility.yul\":1356:1411   */\n      tag_648\n      jumpi\n        /* \"#utility.yul\":1407:1408   */\n      0x00\n        /* \"#utility.yul\":1404:1405   */\n      dup1\n        /* \"#utility.yul\":1397:1409   */\n      revert\n        /* \"#utility.yul\":1356:1411   */\n    tag_648:\n        /* \"#utility.yul\":1447:1449   */\n      dup1\n        /* \"#utility.yul\":1434:1450   */\n      calldataload\n        /* \"#utility.yul\":1473:1491   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1465:1471   */\n      dup2\n        /* \"#utility.yul\":1462:1492   */\n      gt\n        /* \"#utility.yul\":1459:1509   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":1505:1506   */\n      0x00\n        /* \"#utility.yul\":1502:1503   */\n      dup1\n        /* \"#utility.yul\":1495:1507   */\n      revert\n        /* \"#utility.yul\":1459:1509   */\n    tag_649:\n        /* \"#utility.yul\":1550:1557   */\n      dup6\n        /* \"#utility.yul\":1545:1547   */\n      0x20\n        /* \"#utility.yul\":1536:1542   */\n      dup3\n        /* \"#utility.yul\":1532:1534   */\n      dup5\n        /* \"#utility.yul\":1528:1543   */\n      add\n        /* \"#utility.yul\":1524:1548   */\n      add\n        /* \"#utility.yul\":1521:1558   */\n      gt\n        /* \"#utility.yul\":1518:1575   */\n      iszero\n      tag_650\n      jumpi\n        /* \"#utility.yul\":1571:1572   */\n      0x00\n        /* \"#utility.yul\":1568:1569   */\n      dup1\n        /* \"#utility.yul\":1561:1573   */\n      revert\n        /* \"#utility.yul\":1518:1575   */\n    tag_650:\n        /* \"#utility.yul\":1602:1604   */\n      0x20\n        /* \"#utility.yul\":1594:1605   */\n      swap2\n      swap1\n      swap2\n      add\n      swap6\n        /* \"#utility.yul\":1624:1630   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":1050:1636   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1641:1814   */\n    tag_633:\n        /* \"#utility.yul\":1709:1729   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1758:1789   */\n      dup2\n      and\n        /* \"#utility.yul\":1748:1790   */\n      dup2\n      eq\n        /* \"#utility.yul\":1738:1808   */\n      tag_652\n      jumpi\n        /* \"#utility.yul\":1804:1805   */\n      0x00\n        /* \"#utility.yul\":1801:1802   */\n      dup1\n        /* \"#utility.yul\":1794:1806   */\n      revert\n        /* \"#utility.yul\":1738:1808   */\n    tag_652:\n        /* \"#utility.yul\":1641:1814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1819:1946   */\n    tag_634:\n        /* \"#utility.yul\":1880:1890   */\n      0x4e487b71\n        /* \"#utility.yul\":1875:1878   */\n      0xe0\n        /* \"#utility.yul\":1871:1891   */\n      shl\n        /* \"#utility.yul\":1868:1869   */\n      0x00\n        /* \"#utility.yul\":1861:1892   */\n      mstore\n        /* \"#utility.yul\":1911:1915   */\n      0x41\n        /* \"#utility.yul\":1908:1909   */\n      0x04\n        /* \"#utility.yul\":1901:1916   */\n      mstore\n        /* \"#utility.yul\":1935:1939   */\n      0x24\n        /* \"#utility.yul\":1932:1933   */\n      0x00\n        /* \"#utility.yul\":1925:1940   */\n      revert\n        /* \"#utility.yul\":1951:2969   */\n    tag_111:\n        /* \"#utility.yul\":2028:2034   */\n      0x00\n        /* \"#utility.yul\":2036:2042   */\n      dup1\n        /* \"#utility.yul\":2089:2091   */\n      0x40\n        /* \"#utility.yul\":2077:2086   */\n      dup4\n        /* \"#utility.yul\":2068:2075   */\n      dup6\n        /* \"#utility.yul\":2064:2087   */\n      sub\n        /* \"#utility.yul\":2060:2092   */\n      slt\n        /* \"#utility.yul\":2057:2109   */\n      iszero\n      tag_655\n      jumpi\n        /* \"#utility.yul\":2105:2106   */\n      0x00\n        /* \"#utility.yul\":2102:2103   */\n      dup1\n        /* \"#utility.yul\":2095:2107   */\n      revert\n        /* \"#utility.yul\":2057:2109   */\n    tag_655:\n        /* \"#utility.yul\":2128:2157   */\n      tag_656\n        /* \"#utility.yul\":2147:2156   */\n      dup4\n        /* \"#utility.yul\":2128:2157   */\n      tag_633\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":2118:2157   */\n      swap2\n      pop\n        /* \"#utility.yul\":2208:2210   */\n      0x20\n        /* \"#utility.yul\":2197:2206   */\n      dup4\n        /* \"#utility.yul\":2193:2211   */\n      add\n        /* \"#utility.yul\":2180:2212   */\n      calldataload\n        /* \"#utility.yul\":2235:2253   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2227:2233   */\n      dup2\n        /* \"#utility.yul\":2224:2254   */\n      gt\n        /* \"#utility.yul\":2221:2271   */\n      iszero\n      tag_657\n      jumpi\n        /* \"#utility.yul\":2267:2268   */\n      0x00\n        /* \"#utility.yul\":2264:2265   */\n      dup1\n        /* \"#utility.yul\":2257:2269   */\n      revert\n        /* \"#utility.yul\":2221:2271   */\n    tag_657:\n        /* \"#utility.yul\":2290:2312   */\n      dup4\n      add\n        /* \"#utility.yul\":2343:2347   */\n      0x1f\n        /* \"#utility.yul\":2335:2348   */\n      dup2\n      add\n        /* \"#utility.yul\":2331:2358   */\n      dup6\n      sgt\n        /* \"#utility.yul\":2321:2376   */\n      tag_658\n      jumpi\n        /* \"#utility.yul\":2372:2373   */\n      0x00\n        /* \"#utility.yul\":2369:2370   */\n      dup1\n        /* \"#utility.yul\":2362:2374   */\n      revert\n        /* \"#utility.yul\":2321:2376   */\n    tag_658:\n        /* \"#utility.yul\":2412:2414   */\n      dup1\n        /* \"#utility.yul\":2399:2415   */\n      calldataload\n        /* \"#utility.yul\":2438:2456   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2430:2436   */\n      dup2\n        /* \"#utility.yul\":2427:2457   */\n      gt\n        /* \"#utility.yul\":2424:2480   */\n      iszero\n      tag_660\n      jumpi\n        /* \"#utility.yul\":2460:2478   */\n      tag_660\n      tag_634\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":2509:2511   */\n      0x40\n        /* \"#utility.yul\":2503:2512   */\n      mload\n        /* \"#utility.yul\":2601:2603   */\n      0x1f\n        /* \"#utility.yul\":2563:2580   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2559:2590   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2592:2594   */\n      0x3f\n        /* \"#utility.yul\":2555:2595   */\n      add\n        /* \"#utility.yul\":2551:2605   */\n      and\n        /* \"#utility.yul\":2539:2606   */\n      dup2\n      add\n        /* \"#utility.yul\":2636:2654   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2621:2655   */\n      dup2\n      gt\n        /* \"#utility.yul\":2657:2679   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2618:2680   */\n      or\n        /* \"#utility.yul\":2615:2703   */\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":2683:2701   */\n      tag_662\n      tag_634\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":2719:2721   */\n      0x40\n        /* \"#utility.yul\":2712:2734   */\n      mstore\n        /* \"#utility.yul\":2743:2765   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":2784:2799   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2801:2803   */\n      0x20\n        /* \"#utility.yul\":2780:2804   */\n      add\n        /* \"#utility.yul\":2777:2814   */\n      dup8\n      lt\n        /* \"#utility.yul\":2774:2831   */\n      iszero\n      tag_663\n      jumpi\n        /* \"#utility.yul\":2827:2828   */\n      0x00\n        /* \"#utility.yul\":2824:2825   */\n      dup1\n        /* \"#utility.yul\":2817:2829   */\n      revert\n        /* \"#utility.yul\":2774:2831   */\n    tag_663:\n        /* \"#utility.yul\":2883:2889   */\n      dup2\n        /* \"#utility.yul\":2878:2880   */\n      0x20\n        /* \"#utility.yul\":2874:2876   */\n      dup5\n        /* \"#utility.yul\":2870:2881   */\n      add\n        /* \"#utility.yul\":2865:2867   */\n      0x20\n        /* \"#utility.yul\":2857:2863   */\n      dup4\n        /* \"#utility.yul\":2853:2868   */\n      add\n        /* \"#utility.yul\":2840:2890   */\n      calldatacopy\n        /* \"#utility.yul\":2936:2937   */\n      0x00\n        /* \"#utility.yul\":2931:2933   */\n      0x20\n        /* \"#utility.yul\":2922:2928   */\n      dup4\n        /* \"#utility.yul\":2914:2920   */\n      dup4\n        /* \"#utility.yul\":2910:2929   */\n      add\n        /* \"#utility.yul\":2906:2934   */\n      add\n        /* \"#utility.yul\":2899:2938   */\n      mstore\n        /* \"#utility.yul\":2957:2963   */\n      dup1\n        /* \"#utility.yul\":2947:2963   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1951:2969   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3156:3502   */\n    tag_133:\n        /* \"#utility.yul\":3224:3230   */\n      0x00\n        /* \"#utility.yul\":3232:3238   */\n      dup1\n        /* \"#utility.yul\":3285:3287   */\n      0x40\n        /* \"#utility.yul\":3273:3282   */\n      dup4\n        /* \"#utility.yul\":3264:3271   */\n      dup6\n        /* \"#utility.yul\":3260:3283   */\n      sub\n        /* \"#utility.yul\":3256:3288   */\n      slt\n        /* \"#utility.yul\":3253:3305   */\n      iszero\n      tag_666\n      jumpi\n        /* \"#utility.yul\":3301:3302   */\n      0x00\n        /* \"#utility.yul\":3298:3299   */\n      dup1\n        /* \"#utility.yul\":3291:3303   */\n      revert\n        /* \"#utility.yul\":3253:3305   */\n    tag_666:\n      pop\n      pop\n        /* \"#utility.yul\":3346:3369   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3466:3468   */\n      0x20\n        /* \"#utility.yul\":3451:3469   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3438:3470   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3156:3502   */\n      jump\t// out\n        /* \"#utility.yul\":3507:3795   */\n    tag_635:\n        /* \"#utility.yul\":3548:3551   */\n      0x00\n        /* \"#utility.yul\":3586:3591   */\n      dup2\n        /* \"#utility.yul\":3580:3592   */\n      mload\n        /* \"#utility.yul\":3613:3619   */\n      dup1\n        /* \"#utility.yul\":3608:3611   */\n      dup5\n        /* \"#utility.yul\":3601:3620   */\n      mstore\n        /* \"#utility.yul\":3669:3675   */\n      dup1\n        /* \"#utility.yul\":3662:3666   */\n      0x20\n        /* \"#utility.yul\":3655:3660   */\n      dup5\n        /* \"#utility.yul\":3651:3667   */\n      add\n        /* \"#utility.yul\":3644:3648   */\n      0x20\n        /* \"#utility.yul\":3639:3642   */\n      dup7\n        /* \"#utility.yul\":3635:3649   */\n      add\n        /* \"#utility.yul\":3629:3676   */\n      mcopy\n        /* \"#utility.yul\":3721:3722   */\n      0x00\n        /* \"#utility.yul\":3714:3718   */\n      0x20\n        /* \"#utility.yul\":3705:3711   */\n      dup3\n        /* \"#utility.yul\":3700:3703   */\n      dup7\n        /* \"#utility.yul\":3696:3712   */\n      add\n        /* \"#utility.yul\":3692:3719   */\n      add\n        /* \"#utility.yul\":3685:3723   */\n      mstore\n        /* \"#utility.yul\":3784:3788   */\n      0x20\n        /* \"#utility.yul\":3777:3779   */\n      0x1f\n        /* \"#utility.yul\":3773:3780   */\n      not\n        /* \"#utility.yul\":3768:3770   */\n      0x1f\n        /* \"#utility.yul\":3760:3766   */\n      dup4\n        /* \"#utility.yul\":3756:3771   */\n      add\n        /* \"#utility.yul\":3752:3781   */\n      and\n        /* \"#utility.yul\":3747:3750   */\n      dup6\n        /* \"#utility.yul\":3743:3782   */\n      add\n        /* \"#utility.yul\":3739:3789   */\n      add\n        /* \"#utility.yul\":3732:3789   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3507:3795   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3800:4098   */\n    tag_147:\n        /* \"#utility.yul\":3983:3989   */\n      dup3\n        /* \"#utility.yul\":3976:3990   */\n      iszero\n        /* \"#utility.yul\":3969:3991   */\n      iszero\n        /* \"#utility.yul\":3958:3967   */\n      dup2\n        /* \"#utility.yul\":3951:3992   */\n      mstore\n        /* \"#utility.yul\":4028:4030   */\n      0x40\n        /* \"#utility.yul\":4023:4025   */\n      0x20\n        /* \"#utility.yul\":4012:4021   */\n      dup3\n        /* \"#utility.yul\":4008:4026   */\n      add\n        /* \"#utility.yul\":4001:4031   */\n      mstore\n        /* \"#utility.yul\":3932:3936   */\n      0x00\n        /* \"#utility.yul\":4048:4092   */\n      tag_669\n        /* \"#utility.yul\":4088:4090   */\n      0x40\n        /* \"#utility.yul\":4077:4086   */\n      dup4\n        /* \"#utility.yul\":4073:4091   */\n      add\n        /* \"#utility.yul\":4065:4071   */\n      dup5\n        /* \"#utility.yul\":4048:4092   */\n      tag_635\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":4040:4092   */\n      swap5\n        /* \"#utility.yul\":3800:4098   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4103:4322   */\n    tag_196:\n        /* \"#utility.yul\":4252:4254   */\n      0x20\n        /* \"#utility.yul\":4241:4250   */\n      dup2\n        /* \"#utility.yul\":4234:4255   */\n      mstore\n        /* \"#utility.yul\":4215:4219   */\n      0x00\n        /* \"#utility.yul\":4272:4316   */\n      tag_626\n        /* \"#utility.yul\":4312:4314   */\n      0x20\n        /* \"#utility.yul\":4301:4310   */\n      dup4\n        /* \"#utility.yul\":4297:4315   */\n      add\n        /* \"#utility.yul\":4289:4295   */\n      dup5\n        /* \"#utility.yul\":4272:4316   */\n      tag_635\n      jump\t// in\n        /* \"#utility.yul\":4327:4513   */\n    tag_212:\n        /* \"#utility.yul\":4386:4392   */\n      0x00\n        /* \"#utility.yul\":4439:4441   */\n      0x20\n        /* \"#utility.yul\":4427:4436   */\n      dup3\n        /* \"#utility.yul\":4418:4425   */\n      dup5\n        /* \"#utility.yul\":4414:4437   */\n      sub\n        /* \"#utility.yul\":4410:4442   */\n      slt\n        /* \"#utility.yul\":4407:4459   */\n      iszero\n      tag_673\n      jumpi\n        /* \"#utility.yul\":4455:4456   */\n      0x00\n        /* \"#utility.yul\":4452:4453   */\n      dup1\n        /* \"#utility.yul\":4445:4457   */\n      revert\n        /* \"#utility.yul\":4407:4459   */\n    tag_673:\n        /* \"#utility.yul\":4478:4507   */\n      tag_626\n        /* \"#utility.yul\":4497:4506   */\n      dup3\n        /* \"#utility.yul\":4478:4507   */\n      tag_633\n      jump\t// in\n        /* \"#utility.yul\":5068:5402   */\n    tag_219:\n        /* \"#utility.yul\":5145:5151   */\n      0x00\n        /* \"#utility.yul\":5153:5159   */\n      dup1\n        /* \"#utility.yul\":5161:5167   */\n      0x00\n        /* \"#utility.yul\":5214:5216   */\n      0x60\n        /* \"#utility.yul\":5202:5211   */\n      dup5\n        /* \"#utility.yul\":5193:5200   */\n      dup7\n        /* \"#utility.yul\":5189:5212   */\n      sub\n        /* \"#utility.yul\":5185:5217   */\n      slt\n        /* \"#utility.yul\":5182:5234   */\n      iszero\n      tag_677\n      jumpi\n        /* \"#utility.yul\":5230:5231   */\n      0x00\n        /* \"#utility.yul\":5227:5228   */\n      dup1\n        /* \"#utility.yul\":5220:5232   */\n      revert\n        /* \"#utility.yul\":5182:5234   */\n    tag_677:\n        /* \"#utility.yul\":5253:5282   */\n      tag_678\n        /* \"#utility.yul\":5272:5281   */\n      dup5\n        /* \"#utility.yul\":5253:5282   */\n      tag_633\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":5243:5282   */\n      swap3\n      pop\n        /* \"#utility.yul\":5301:5339   */\n      tag_679\n        /* \"#utility.yul\":5335:5337   */\n      0x20\n        /* \"#utility.yul\":5324:5333   */\n      dup6\n        /* \"#utility.yul\":5320:5338   */\n      add\n        /* \"#utility.yul\":5301:5339   */\n      tag_633\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":5291:5339   */\n      swap2\n      pop\n        /* \"#utility.yul\":5358:5396   */\n      tag_680\n        /* \"#utility.yul\":5392:5394   */\n      0x40\n        /* \"#utility.yul\":5381:5390   */\n      dup6\n        /* \"#utility.yul\":5377:5395   */\n      add\n        /* \"#utility.yul\":5358:5396   */\n      tag_633\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":5348:5396   */\n      swap1\n      pop\n        /* \"#utility.yul\":5068:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5407:5525   */\n    tag_636:\n        /* \"#utility.yul\":5493:5498   */\n      dup1\n        /* \"#utility.yul\":5486:5499   */\n      iszero\n        /* \"#utility.yul\":5479:5500   */\n      iszero\n        /* \"#utility.yul\":5472:5477   */\n      dup2\n        /* \"#utility.yul\":5469:5501   */\n      eq\n        /* \"#utility.yul\":5459:5519   */\n      tag_504\n      jumpi\n        /* \"#utility.yul\":5515:5516   */\n      0x00\n        /* \"#utility.yul\":5512:5513   */\n      dup1\n        /* \"#utility.yul\":5505:5517   */\n      revert\n        /* \"#utility.yul\":5530:5845   */\n    tag_237:\n        /* \"#utility.yul\":5595:5601   */\n      0x00\n        /* \"#utility.yul\":5603:5609   */\n      dup1\n        /* \"#utility.yul\":5656:5658   */\n      0x40\n        /* \"#utility.yul\":5644:5653   */\n      dup4\n        /* \"#utility.yul\":5635:5642   */\n      dup6\n        /* \"#utility.yul\":5631:5654   */\n      sub\n        /* \"#utility.yul\":5627:5659   */\n      slt\n        /* \"#utility.yul\":5624:5676   */\n      iszero\n      tag_684\n      jumpi\n        /* \"#utility.yul\":5672:5673   */\n      0x00\n        /* \"#utility.yul\":5669:5670   */\n      dup1\n        /* \"#utility.yul\":5662:5674   */\n      revert\n        /* \"#utility.yul\":5624:5676   */\n    tag_684:\n        /* \"#utility.yul\":5695:5724   */\n      tag_685\n        /* \"#utility.yul\":5714:5723   */\n      dup4\n        /* \"#utility.yul\":5695:5724   */\n      tag_633\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":5685:5724   */\n      swap2\n      pop\n        /* \"#utility.yul\":5774:5776   */\n      0x20\n        /* \"#utility.yul\":5763:5772   */\n      dup4\n        /* \"#utility.yul\":5759:5777   */\n      add\n        /* \"#utility.yul\":5746:5778   */\n      calldataload\n        /* \"#utility.yul\":5787:5815   */\n      tag_686\n        /* \"#utility.yul\":5809:5814   */\n      dup2\n        /* \"#utility.yul\":5787:5815   */\n      tag_636\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":5834:5839   */\n      dup1\n        /* \"#utility.yul\":5824:5839   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5530:5845   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5977   */\n    tag_637:\n        /* \"#utility.yul\":5911:5921   */\n      0x4e487b71\n        /* \"#utility.yul\":5906:5909   */\n      0xe0\n        /* \"#utility.yul\":5902:5922   */\n      shl\n        /* \"#utility.yul\":5899:5900   */\n      0x00\n        /* \"#utility.yul\":5892:5923   */\n      mstore\n        /* \"#utility.yul\":5942:5946   */\n      0x11\n        /* \"#utility.yul\":5939:5940   */\n      0x04\n        /* \"#utility.yul\":5932:5947   */\n      mstore\n        /* \"#utility.yul\":5966:5970   */\n      0x24\n        /* \"#utility.yul\":5963:5964   */\n      0x00\n        /* \"#utility.yul\":5956:5971   */\n      revert\n        /* \"#utility.yul\":5982:6117   */\n    tag_262:\n        /* \"#utility.yul\":6021:6024   */\n      0x00\n        /* \"#utility.yul\":6042:6059   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":6039:6082   */\n      tag_690\n      jumpi\n        /* \"#utility.yul\":6062:6080   */\n      tag_690\n      tag_637\n      jump\t// in\n    tag_690:\n      pop\n        /* \"#utility.yul\":6109:6110   */\n      0x01\n        /* \"#utility.yul\":6098:6111   */\n      add\n      swap1\n        /* \"#utility.yul\":5982:6117   */\n      jump\t// out\n        /* \"#utility.yul\":6122:6250   */\n    tag_264:\n        /* \"#utility.yul\":6189:6198   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6210:6221   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6207:6244   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":6224:6242   */\n      tag_574\n      tag_637\n      jump\t// in\n        /* \"#utility.yul\":7007:7132   */\n    tag_295:\n        /* \"#utility.yul\":7072:7081   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7093:7103   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7090:7126   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":7106:7124   */\n      tag_574\n      tag_637\n      jump\t// in\n        /* \"#utility.yul\":7137:7508   */\n    tag_297:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7357:7389   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":7339:7390   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7426:7458   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":7421:7423   */\n      0x20\n        /* \"#utility.yul\":7406:7424   */\n      dup3\n      add\n        /* \"#utility.yul\":7399:7459   */\n      mstore\n        /* \"#utility.yul\":7490:7492   */\n      0x40\n        /* \"#utility.yul\":7475:7493   */\n      dup2\n      add\n        /* \"#utility.yul\":7468:7502   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":7327:7329   */\n      0x60\n        /* \"#utility.yul\":7312:7330   */\n      add\n      swap1\n        /* \"#utility.yul\":7137:7508   */\n      jump\t// out\n        /* \"#utility.yul\":7513:7758   */\n    tag_301:\n        /* \"#utility.yul\":7580:7586   */\n      0x00\n        /* \"#utility.yul\":7633:7635   */\n      0x20\n        /* \"#utility.yul\":7621:7630   */\n      dup3\n        /* \"#utility.yul\":7612:7619   */\n      dup5\n        /* \"#utility.yul\":7608:7631   */\n      sub\n        /* \"#utility.yul\":7604:7636   */\n      slt\n        /* \"#utility.yul\":7601:7653   */\n      iszero\n      tag_701\n      jumpi\n        /* \"#utility.yul\":7649:7650   */\n      0x00\n        /* \"#utility.yul\":7646:7647   */\n      dup1\n        /* \"#utility.yul\":7639:7651   */\n      revert\n        /* \"#utility.yul\":7601:7653   */\n    tag_701:\n        /* \"#utility.yul\":7681:7690   */\n      dup2\n        /* \"#utility.yul\":7675:7691   */\n      mload\n        /* \"#utility.yul\":7700:7728   */\n      tag_626\n        /* \"#utility.yul\":7722:7727   */\n      dup2\n        /* \"#utility.yul\":7700:7728   */\n      tag_636\n      jump\t// in\n        /* \"#utility.yul\":10601:10769   */\n    tag_479:\n        /* \"#utility.yul\":10674:10683   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":10705:10714   */\n      dup2\n      iszero\n        /* \"#utility.yul\":10722:10737   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":10716:10738   */\n      dup5\n      eq\n        /* \"#utility.yul\":10702:10739   */\n      or\n        /* \"#utility.yul\":10692:10763   */\n      tag_574\n      jumpi\n        /* \"#utility.yul\":10743:10761   */\n      tag_574\n      tag_637\n      jump\t// in\n        /* \"#utility.yul\":10774:10991   */\n    tag_481:\n        /* \"#utility.yul\":10814:10815   */\n      0x00\n        /* \"#utility.yul\":10840:10841   */\n      dup3\n        /* \"#utility.yul\":10830:10962   */\n      tag_716\n      jumpi\n        /* \"#utility.yul\":10884:10894   */\n      0x4e487b71\n        /* \"#utility.yul\":10879:10882   */\n      0xe0\n        /* \"#utility.yul\":10875:10895   */\n      shl\n        /* \"#utility.yul\":10872:10873   */\n      0x00\n        /* \"#utility.yul\":10865:10896   */\n      mstore\n        /* \"#utility.yul\":10919:10923   */\n      0x12\n        /* \"#utility.yul\":10916:10917   */\n      0x04\n        /* \"#utility.yul\":10909:10924   */\n      mstore\n        /* \"#utility.yul\":10947:10951   */\n      0x24\n        /* \"#utility.yul\":10944:10945   */\n      0x00\n        /* \"#utility.yul\":10937:10952   */\n      revert\n        /* \"#utility.yul\":10830:10962   */\n    tag_716:\n      pop\n        /* \"#utility.yul\":10976:10985   */\n      div\n      swap1\n        /* \"#utility.yul\":10774:10991   */\n      jump\t// out\n        /* \"#utility.yul\":11351:11535   */\n    tag_523:\n        /* \"#utility.yul\":11421:11427   */\n      0x00\n        /* \"#utility.yul\":11474:11476   */\n      0x20\n        /* \"#utility.yul\":11462:11471   */\n      dup3\n        /* \"#utility.yul\":11453:11460   */\n      dup5\n        /* \"#utility.yul\":11449:11472   */\n      sub\n        /* \"#utility.yul\":11445:11477   */\n      slt\n        /* \"#utility.yul\":11442:11494   */\n      iszero\n      tag_719\n      jumpi\n        /* \"#utility.yul\":11490:11491   */\n      0x00\n        /* \"#utility.yul\":11487:11488   */\n      dup1\n        /* \"#utility.yul\":11480:11492   */\n      revert\n        /* \"#utility.yul\":11442:11494   */\n    tag_719:\n      pop\n        /* \"#utility.yul\":11513:11529   */\n      mload\n      swap2\n        /* \"#utility.yul\":11351:11535   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11877:12274   */\n    tag_577:\n        /* \"#utility.yul\":12079:12081   */\n      0x20\n        /* \"#utility.yul\":12061:12082   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12118:12120   */\n      0x21\n        /* \"#utility.yul\":12098:12116   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12091:12121   */\n      mstore\n        /* \"#utility.yul\":12157:12191   */\n      0x5f746f74616c5374616b65416d6f756e742063616e206e6f74206265207a6572\n        /* \"#utility.yul\":12152:12154   */\n      0x40\n        /* \"#utility.yul\":12137:12155   */\n      dup3\n      add\n        /* \"#utility.yul\":12130:12192   */\n      mstore\n      shl(0xf8, 0x6f)\n        /* \"#utility.yul\":12223:12225   */\n      0x60\n        /* \"#utility.yul\":12208:12226   */\n      dup3\n      add\n        /* \"#utility.yul\":12201:12232   */\n      mstore\n        /* \"#utility.yul\":12264:12267   */\n      0x80\n        /* \"#utility.yul\":12249:12268   */\n      add\n      swap1\n        /* \"#utility.yul\":11877:12274   */\n      jump\t// out\n        /* \"#utility.yul\":12279:12580   */\n    tag_612:\n        /* \"#utility.yul\":12408:12411   */\n      0x00\n        /* \"#utility.yul\":12446:12452   */\n      dup3\n        /* \"#utility.yul\":12440:12453   */\n      mload\n        /* \"#utility.yul\":12492:12498   */\n      dup1\n        /* \"#utility.yul\":12485:12489   */\n      0x20\n        /* \"#utility.yul\":12477:12483   */\n      dup6\n        /* \"#utility.yul\":12473:12490   */\n      add\n        /* \"#utility.yul\":12468:12471   */\n      dup5\n        /* \"#utility.yul\":12462:12499   */\n      mcopy\n        /* \"#utility.yul\":12554:12555   */\n      0x00\n        /* \"#utility.yul\":12518:12534   */\n      swap3\n      add\n        /* \"#utility.yul\":12543:12556   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":12518:12534   */\n      swap2\n        /* \"#utility.yul\":12279:12580   */\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_d85598d6ea860439b48fc265883a1cac638ff64dca5391fe12b46f27076e26fe b5671393c7c6980552e50a31e778921eb17d764c2e98fbf4d44fff524712def9\n\n    auxdata: 0xa264697066735822122035be302540174fae70c4e731bbcb9b61546fa1e7b640471b5dc131f9b5e51e1464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1628": {
									"entryPoint": null,
									"id": 1628,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_435": {
									"entryPoint": 33,
									"id": 435,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_466": {
									"entryPoint": null,
									"id": 466,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:216:11",
										"nodeType": "YulBlock",
										"src": "0:216:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "113:101:11",
													"nodeType": "YulBlock",
													"src": "113:101:11",
													"statements": [
														{
															"nativeSrc": "123:26:11",
															"nodeType": "YulAssignment",
															"src": "123:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "135:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "146:2:11",
																		"nodeType": "YulLiteral",
																		"src": "146:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "131:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:11"
																},
																"nativeSrc": "131:18:11",
																"nodeType": "YulFunctionCall",
																"src": "131:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "123:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "165:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "180:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "196:2:11",
																								"nodeType": "YulLiteral",
																								"src": "196:2:11",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "200:1:11",
																								"nodeType": "YulLiteral",
																								"src": "200:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "192:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "192:3:11"
																						},
																						"nativeSrc": "192:10:11",
																						"nodeType": "YulFunctionCall",
																						"src": "192:10:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "204:1:11",
																						"nodeType": "YulLiteral",
																						"src": "204:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "188:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "188:3:11"
																				},
																				"nativeSrc": "188:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "188:18:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "176:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:11"
																		},
																		"nativeSrc": "176:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "176:31:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "158:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:11"
																},
																"nativeSrc": "158:50:11",
																"nodeType": "YulFunctionCall",
																"src": "158:50:11"
															},
															"nativeSrc": "158:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "158:50:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "14:200:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "82:9:11",
														"nodeType": "YulTypedName",
														"src": "82:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "93:6:11",
														"nodeType": "YulTypedName",
														"src": "93:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "104:4:11",
														"nodeType": "YulTypedName",
														"src": "104:4:11",
														"type": ""
													}
												],
												"src": "14:200:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405230608052348015610013575f80fd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6080516126d46100f95f395f8181611bfd01528181611c260152611d6a01526126d45ff3fe608060405260043610610275575f3560e01c806378fd078d1161014a578063b47ff951116100be578063d777cc6d11610078578063d777cc6d146107b8578063d9b998b4146107d7578063e9c68e2c146107f6578063ed0610671461080a578063f2fde38b14610829578063ff3d65d914610848575f80fd5b8063b47ff951146106a1578063b9dac1eb146106b6578063bccbc36c146106d5578063c0c53b8b14610756578063c7fd5bf014610775578063ce356a24146107a3575f80fd5b80638da5cb5b1161010f5780638da5cb5b146105ab578063947a36fb146105e75780639c361e4e146105fc578063a4f67b8b14610611578063ad3cb1cc14610645578063ad8e5ec414610682575f80fd5b806378fd078d146105105780637f111e601461052f5780637f70c5e71461054e5780637ffe4d931461056d57806385f452501461058c575f80fd5b80634585e33b116101ec5780635f17e616116101a65780635f17e6161461045e5780636626b26d1461047d57806367976974146104915780636e04ff0d146104b0578063715018a6146104dd5780637547c7a3146104f1575f80fd5b80634585e33b146103c55780634f1ef286146103e45780635256dbbf146103f757806352d1902d146104165780635462870d1461042a578063567e98f914610449575f80fd5b806330e3f8f81161023d57806330e3f8f81461032c57806333244c2c1461035c57806339518b5e146103715780633a71a9e4146103865780633f3b3b271461039b57806344490ff4146103b0575f80fd5b806301934a831461027957806311eac855146102a1578063188e07b9146102d75780632765df7a146102ec5780633070fbf81461030d575b5f80fd5b348015610284575f80fd5b5061028e60085481565b6040519081526020015b60405180910390f35b3480156102ac575f80fd5b505f546102bf906001600160a01b031681565b6040516001600160a01b039091168152602001610298565b3480156102e2575f80fd5b5061028e60015481565b3480156102f7575f80fd5b5061030b610306366004612294565b610873565b005b348015610318575f80fd5b50600d546102bf906001600160a01b031681565b348015610337575f80fd5b5060095461034c90600160a01b900460ff1681565b6040519015158152602001610298565b348015610367575f80fd5b5061028e60045481565b34801561037c575f80fd5b5061028e600b5481565b348015610391575f80fd5b5061028e60075481565b3480156103a6575f80fd5b5061028e600c5481565b3480156103bb575f80fd5b5061028e60055481565b3480156103d0575f80fd5b5061030b6103df3660046122ab565b61091d565b61030b6103f2366004612348565b610a44565b348015610402575f80fd5b5061030b610411366004612294565b610a5f565b348015610421575f80fd5b5061028e610b77565b348015610435575f80fd5b506009546102bf906001600160a01b031681565b348015610454575f80fd5b5061028e60035481565b348015610469575f80fd5b5061030b61047836600461240c565b610b92565b348015610488575f80fd5b5061030b610c30565b34801561049c575f80fd5b5061030b6104ab366004612294565b610c87565b3480156104bb575f80fd5b506104cf6104ca3660046122ab565b610e95565b60405161029892919061245a565b3480156104e8575f80fd5b5061030b610ec5565b3480156104fc575f80fd5b5061030b61050b366004612294565b610ed8565b34801561051b575f80fd5b5061030b61052a366004612294565b6110bf565b34801561053a575f80fd5b5061030b610549366004612294565b6111cb565b348015610559575f80fd5b5061030b610568366004612294565b61121e565b348015610578575f80fd5b5061030b610587366004612294565b611271565b348015610597575f80fd5b5061030b6105a636600461240c565b6113c0565b3480156105b6575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166102bf565b3480156105f2575f80fd5b5061028e600a5481565b348015610607575f80fd5b5061028e600e5481565b34801561061c575f80fd5b506102bf61062b366004612294565b60106020525f90815260409020546001600160a01b031681565b348015610650575f80fd5b50610675604051806040016040528060058152602001640352e302e360dc1b81525081565b604051610298919061247c565b34801561068d575f80fd5b5061030b61069c366004612294565b6114f8565b3480156106ac575f80fd5b5061028e60025481565b3480156106c1575f80fd5b5061030b6106d0366004612294565b61154b565b3480156106e0575f80fd5b506107276106ef36600461248e565b60126020525f908152604090208054600182015460028301546003840154600485015460059095015460ff9094169492939192909186565b6040805196151587526020870195909552938501929092526060840152608083015260a082015260c001610298565b348015610761575f80fd5b5061030b6107703660046124a7565b61159e565b348015610780575f80fd5b5061034c61078f36600461248e565b600f6020525f908152604090205460ff1681565b3480156107ae575f80fd5b5061028e60065481565b3480156107c3575f80fd5b5061030b6107d236600461248e565b6116fd565b3480156107e2575f80fd5b5061030b6107f13660046124f4565b61178c565b348015610801575f80fd5b5061030b6118a8565b348015610815575f80fd5b5061030b61082436600461240c565b611afb565b348015610834575f80fd5b5061030b61084336600461248e565b611b5a565b348015610853575f80fd5b5061028e610862366004612294565b60116020525f908152604090205481565b61087b611b97565b5f81116108a35760405163cdbc633560e01b8152600481018290526024015b60405180910390fd5b600e80545f908152601160205260408120839055815491906108c48361253d565b9091555050600e547fe1976e16ed8ce8e740235978fbe69b27d5eea683b2e017bb0bd2fabb33294b3f906108fa83612710612555565b60408051928352602083019190915281018390526060015b60405180910390a150565b600d546001600160a01b0316331461099d5760405162461bcd60e51b815260206004820152603b60248201527f54686973206164647265737320646f6573206e6f742068617665207065726d6960448201527f7373696f6e20746f2063616c6c20706572666f726d55706b6565700000000000606482015260840161089a565b600a545f036109c557600a54604051637154000760e01b815260040161089a91815260200190565b600954600160a01b900460ff16610a0f57600b5442106109f05742600c556109eb6118a8565b610a1b565b600b546040516354593e7560e01b815260040161089a91815260200190565b42600c55610a1b6118a8565b600954600160a01b900460ff16610a40576009805460ff60a01b1916600160a01b1790555b5050565b610a4c611bf2565b610a5582611c96565b610a408282611c9e565b610a67611b97565b5f8111610a8a576040516302ff478360e41b81526004810182905260240161089a565b8060015f828254610a9b9190612568565b90915550505f80546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610ad49033903090879060040161257b565b6020604051808303815f875af1158015610af0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b14919061259f565b905080610b385760405163d85d3cef60e01b8152811515600482015260240161089a565b7fa9f166643ec132a11638e74e3c3a78d4ae278fcbf92998240e0e97676f54e404600154604051610b6b91815260200190565b60405180910390a15050565b5f610b80611d5f565b505f8051602061265f83398151915290565b610b9a611b97565b5f8111610bbd57604051637154000760e01b81526004810182905260240161089a565b42821015610be1576040516354593e7560e01b81526004810183905260240161089a565b600a819055600b82905542600c8190556040805133815260208101849052908101919091527f2b5090e035d3026f5448298c9adc68db8bbc1b26a8af5c81b2b2a9fc07ca4a0090606001610b6b565b610c38611b97565b5f600a8190556009805460ff60a01b191690556040805133815260208101929092527f3b68dc4e210c46d3622293f2b941cdfde795bb6e17286bb289ba05a6a3b5541f910160405180910390a1565b600954600160a81b900460ff1615610ce15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161089a565b6009805460ff60a81b1916600160a81b17905580610d15576040516302ff478360e41b81526004810182905260240161089a565b335f90815260126020526040902060010154811115610d695760405162461bcd60e51b815260206004820152601060248201526f696e76616c6964205f616d6f756e742160801b604482015260640161089a565b335f9081526012602052604081206001018054839290610d8a908490612555565b9091555050335f9081526012602052604081206002018054839290610db0908490612568565b90915550505f805460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303815f875af1158015610e03573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e27919061259f565b905080610e4b5760405163d85d3cef60e01b8152811515600482015260240161089a565b60408051338152602081018490527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a150506009805460ff60a81b19169055565b5f60605f600a54600c5442610eaa9190612555565b60408051602081019091525f81529110969095509350505050565b610ecd611b97565b610ed65f611da8565b565b5f8111610efb576040516302ff478360e41b81526004810182905260240161089a565b335f9081526012602052604090205460ff1615610f4357335f90815260126020526040908190205490516301be970f60e61b815260ff9091161515600482015260240161089a565b335f9081526012602052604081206005018054839290610f64908490612568565b9091555050335f908152600f602052604090205460ff16610fcd57600880545f90815260106020908152604080832080546001600160a01b031916339081179091558352600f9091528120805460ff1916600117905581549190610fc78361253d565b91905055505b8060035f828254610fde9190612568565b90915550505f80546009546040516323b872dd60e01b81526001600160a01b03928316926323b872dd9261101c92339290911690879060040161257b565b6020604051808303815f875af1158015611038573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061105c919061259f565b9050806110805760405163d85d3cef60e01b8152811515600482015260240161089a565b6009546040517f14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab91610b6b9133916001600160a01b031690869061257b565b6110c7611b97565b5f81116110ea576040516302ff478360e41b81526004810182905260240161089a565b8060025f8282546110fb9190612568565b90915550505f80546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906111349033903090879060040161257b565b6020604051808303815f875af1158015611150573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611174919061259f565b9050806111985760405163d85d3cef60e01b8152811515600482015260240161089a565b7f73834e1d1ee73ba659470a3603b888903853d3a3c9fda34e71c093a0e35cab94600254604051610b6b91815260200190565b6111d3611b97565b5f81116111f65760405163cdbc633560e01b81526004810182905260240161089a565b600781905560408051338152602081018390525f8051602061267f8339815191529101610912565b611226611b97565b5f81116112495760405163cdbc633560e01b81526004810182905260240161089a565b600481905560408051338152602081018390525f8051602061267f8339815191529101610912565b5f8111611294576040516302ff478360e41b81526004810182905260240161089a565b335f9081526012602052604090205460ff16156112dc57335f90815260126020526040908190205490516301be970f60e61b815260ff9091161515600482015260240161089a565b335f90815260126020526040902060010154811061131057604051630636dc6b60e31b81526004810182905260240161089a565b335f9081526012602052604081206001018054839290611331908490612555565b9091555050335f9081526012602052604081206005018054839290611357908490612568565b925050819055508060025f82825461136f9190612568565b925050819055508060035f8282546113879190612568565b90915550506040517f14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab906109129033903090859061257b565b5f82116113e3576040516302ff478360e41b81526004810183905260240161089a565b600e548111156114095760405163222a50f360e01b81526004810182905260240161089a565b5f81815260116020526040902054611422908390611e18565b5f80546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906114569033903090889060040161257b565b6020604051808303815f875af1158015611472573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611496919061259f565b9050806114ba5760405163d85d3cef60e01b8152811515600482015260240161089a565b60408051848152602081018490527fa89b69c5958ec1ccf0df0de746a8708f5b6a6b429430129f16f46f44b319c900910160405180910390a1505050565b611500611b97565b5f81116115235760405163cdbc633560e01b81526004810182905260240161089a565b600681905560408051338152602081018390525f8051602061267f8339815191529101610912565b611553611b97565b5f81116115765760405163cdbc633560e01b81526004810182905260240161089a565b600581905560408051338152602081018390525f8051602061267f8339815191529101610912565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156115e35750825b90505f8267ffffffffffffffff1660011480156115ff5750303b155b90508115801561160d575080155b1561162b5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561165557845460ff60401b1916600160401b1785555b61165e88611e76565b611666611e87565b5f80546001600160a01b03808a166001600160a01b031992831617909255611388600455611d4c6005556105dc6006556103e8600755600980549289169290911691909117905583156116f357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b611705611b97565b6001600160a01b0381166117375760405163e4cfa94d60e01b81526001600160a01b038216600482015260240161089a565b600d80546001600160a01b0319166001600160a01b0383169081179091556040805133815260208101929092527f75f91f3cecb8c46f20150f60f77a6e1f0de00776627692db82ef1960af84c33a9101610912565b611794611b97565b6001600160a01b0382166117c65760405163e4cfa94d60e01b81526001600160a01b038316600482015260240161089a565b6001811515148015906117d857508015155b156117fa576040516381ed1ae360e01b8152811515600482015260240161089a565b80151560010361182b576001600160a01b0382165f908152601260205260409020805460ff1916600117905561184b565b6001600160a01b0382165f908152601260205260409020805460ff191690555b6001600160a01b0382165f818152601260209081526040918290205482513381529182019390935260ff9092161515908201527f7a1655bc3160d3413bf1d5235e55be12e01b7e8bc2436a9bff09c3b4fa2421f190606001610b6b565b5f805f6118b3611e8f565b9250925092505f6002541180156118cb57505f600154115b61190b5760405162461bcd60e51b81526020600482015260116024820152701b9bdd08195b9bdd59da08185b5bdd5b9d607a1b604482015260640161089a565b5f805b600854811015611aaf575f818152601060209081526040808320546001600160a01b03168352601290915290205460ff16611aa7576003545f828152601060209081526040808320546001600160a01b03168352601290915281206005015490919061197c906127106125ba565b61198691906125d1565b90505f6119938683612011565b90508060025f8282546119a69190612555565b909155506119b690508185612568565b93508460015f8282546119c99190612555565b90915550505f83815260106020908152604080832080546001600160a01b03908116855260129093528184206003018990555490911682528120600401829055611a138683612568565b5f858152601060209081526040808320546001600160a01b031683526012909152812060010180549293508392909190611a4e908490612568565b909155505087851115611aa35760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e742069732067726561746572207468656e20353025000000000000604482015260640161089a565b5050505b60010161190e565b506002546001546040805133815260208101939093528201527fee826440768329b0c72f81331212ee31fcdac1ea79a248d24821e40c34e580209060600160405180910390a150505050565b611b03611b97565b5f8111611b265760405163cdbc633560e01b81526004810182905260240161089a565b5f8281526011602090815260409182902083905581513381529081018390525f8051602061267f8339815191529101610b6b565b611b62611b97565b6001600160a01b038116611b8b57604051631e4fbdf760e01b81525f600482015260240161089a565b611b9481611da8565b50565b33611bc97f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610ed65760405163118cdaa760e01b815233600482015260240161089a565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480611c7857507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611c6c5f8051602061265f833981519152546001600160a01b031690565b6001600160a01b031614155b15610ed65760405163703e46dd60e11b815260040160405180910390fd5b611b94611b97565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611cf8575060408051601f3d908101601f19168201909252611cf5918101906125f0565b60015b611d2057604051634c9c8ce360e01b81526001600160a01b038316600482015260240161089a565b5f8051602061265f8339815191528114611d5057604051632a87526960e21b81526004810182905260240161089a565b611d5a8383612072565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ed65760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f611e2582612710612555565b90505f611e328483612011565b90505f611e3f8585612011565b90508160025f828254611e529190612568565b925050819055508060015f828254611e6a9190612568565b90915550505050505050565b611e7e6120c7565b611b9481612110565b610ed66120c7565b5f805f80611ea1600254611388612011565b90505f611eb082600554612011565b90505f611ebf83600654612011565b90505f611ece84600754612011565b90505f611edf600154600454612011565b90505f60085411611f1e5760405162461bcd60e51b81526020600482015260096024820152686e6f2075736572732160b81b604482015260640161089a565b5f60085482611f2d91906125d1565b9050611f398385612568565b60025f828254611f499190612555565b925050819055508360015f828254611f619190612568565b90915550505f805460095460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810187905291169063a9059cbb906044016020604051808303815f875af1158015611fb8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fdc919061259f565b9050806120005760405163d85d3cef60e01b8152811515600482015260240161089a565b509498939750939550919350505050565b5f825f036120315760405162461bcd60e51b815260040161089a90612607565b815f036120505760405162461bcd60e51b815260040161089a90612607565b5f61271061205e84866125ba565b61206891906125d1565b9150505b92915050565b61207b82612118565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156120bf57611d5a828261217b565b610a406121ed565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610ed657604051631afcd79f60e31b815260040160405180910390fd5b611b626120c7565b806001600160a01b03163b5f0361214d57604051634c9c8ce360e01b81526001600160a01b038216600482015260240161089a565b5f8051602061265f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516121979190612648565b5f60405180830381855af49150503d805f81146121cf576040519150601f19603f3d011682016040523d82523d5f602084013e6121d4565b606091505b50915091506121e485838361220c565b95945050505050565b3415610ed65760405163b398979f60e01b815260040160405180910390fd5b6060826122215761221c8261226b565b612264565b815115801561223857506001600160a01b0384163b155b1561226157604051639996b31560e01b81526001600160a01b038516600482015260240161089a565b50805b9392505050565b80511561227b5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f602082840312156122a4575f80fd5b5035919050565b5f80602083850312156122bc575f80fd5b823567ffffffffffffffff8111156122d2575f80fd5b8301601f810185136122e2575f80fd5b803567ffffffffffffffff8111156122f8575f80fd5b856020828401011115612309575f80fd5b6020919091019590945092505050565b80356001600160a01b038116811461232f575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215612359575f80fd5b61236283612319565b9150602083013567ffffffffffffffff81111561237d575f80fd5b8301601f8101851361238d575f80fd5b803567ffffffffffffffff8111156123a7576123a7612334565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156123d6576123d6612334565b6040528181528282016020018710156123ed575f80fd5b816020840160208301375f602083830101528093505050509250929050565b5f806040838503121561241d575f80fd5b50508035926020909101359150565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b8215158152604060208201525f612474604083018461242c565b949350505050565b602081525f612264602083018461242c565b5f6020828403121561249e575f80fd5b61226482612319565b5f805f606084860312156124b9575f80fd5b6124c284612319565b92506124d060208501612319565b91506124de60408501612319565b90509250925092565b8015158114611b94575f80fd5b5f8060408385031215612505575f80fd5b61250e83612319565b9150602083013561251e816124e7565b809150509250929050565b634e487b7160e01b5f52601160045260245ffd5b5f6001820161254e5761254e612529565b5060010190565b8181038181111561206c5761206c612529565b8082018082111561206c5761206c612529565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f602082840312156125af575f80fd5b8151612264816124e7565b808202811582820484141761206c5761206c612529565b5f826125eb57634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215612600575f80fd5b5051919050565b60208082526021908201527f5f746f74616c5374616b65416d6f756e742063616e206e6f74206265207a65726040820152606f60f81b606082015260800190565b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcb5671393c7c6980552e50a31e778921eb17d764c2e98fbf4d44fff524712def9a264697066735822122035be302540174fae70c4e731bbcb9b61546fa1e7b640471b5dc131f9b5e51e1464736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C PUSH2 0x21 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x71 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH2 0xD0 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x26D4 PUSH2 0xF9 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1BFD ADD MSTORE DUP2 DUP2 PUSH2 0x1C26 ADD MSTORE PUSH2 0x1D6A ADD MSTORE PUSH2 0x26D4 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x275 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78FD078D GT PUSH2 0x14A JUMPI DUP1 PUSH4 0xB47FF951 GT PUSH2 0xBE JUMPI DUP1 PUSH4 0xD777CC6D GT PUSH2 0x78 JUMPI DUP1 PUSH4 0xD777CC6D EQ PUSH2 0x7B8 JUMPI DUP1 PUSH4 0xD9B998B4 EQ PUSH2 0x7D7 JUMPI DUP1 PUSH4 0xE9C68E2C EQ PUSH2 0x7F6 JUMPI DUP1 PUSH4 0xED061067 EQ PUSH2 0x80A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x829 JUMPI DUP1 PUSH4 0xFF3D65D9 EQ PUSH2 0x848 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB47FF951 EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0xB9DAC1EB EQ PUSH2 0x6B6 JUMPI DUP1 PUSH4 0xBCCBC36C EQ PUSH2 0x6D5 JUMPI DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x756 JUMPI DUP1 PUSH4 0xC7FD5BF0 EQ PUSH2 0x775 JUMPI DUP1 PUSH4 0xCE356A24 EQ PUSH2 0x7A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x10F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0x947A36FB EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0x9C361E4E EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0xA4F67B8B EQ PUSH2 0x611 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x645 JUMPI DUP1 PUSH4 0xAD8E5EC4 EQ PUSH2 0x682 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x78FD078D EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x7F111E60 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0x7F70C5E7 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x7FFE4D93 EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0x85F45250 EQ PUSH2 0x58C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4585E33B GT PUSH2 0x1EC JUMPI DUP1 PUSH4 0x5F17E616 GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x5F17E616 EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x6626B26D EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0x67976974 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x4F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4585E33B EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0x5256DBBF EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0x5462870D EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x567E98F9 EQ PUSH2 0x449 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30E3F8F8 GT PUSH2 0x23D JUMPI DUP1 PUSH4 0x30E3F8F8 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x33244C2C EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x39518B5E EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x3A71A9E4 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x44490FF4 EQ PUSH2 0x3B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1934A83 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x11EAC855 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x188E07B9 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x2765DF7A EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x3070FBF8 EQ PUSH2 0x30D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x2BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x2BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x34C SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x3DF CALLDATASIZE PUSH1 0x4 PUSH2 0x22AB JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST PUSH2 0x30B PUSH2 0x3F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x411 CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH2 0xB77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x469 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x478 CALLDATASIZE PUSH1 0x4 PUSH2 0x240C JUMP JUMPDEST PUSH2 0xB92 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0xC30 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0xC87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CF PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x22AB JUMP JUMPDEST PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP3 SWAP2 SWAP1 PUSH2 0x245A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0xEC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x50B CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0xED8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x52A CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x10BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x11CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x559 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x568 CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x121E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x578 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x587 CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x1271 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x597 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x5A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x240C JUMP JUMPDEST PUSH2 0x13C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x607 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BF PUSH2 0x62B CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x675 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x247C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x69C CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x14F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x6D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x154B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x727 PUSH2 0x6EF CALLDATASIZE PUSH1 0x4 PUSH2 0x248E JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0xFF SWAP1 SWAP5 AND SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 ISZERO ISZERO DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x761 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x770 CALLDATASIZE PUSH1 0x4 PUSH2 0x24A7 JUMP JUMPDEST PUSH2 0x159E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x780 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH2 0x78F CALLDATASIZE PUSH1 0x4 PUSH2 0x248E JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x7D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x248E JUMP JUMPDEST PUSH2 0x16FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x7F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x24F4 JUMP JUMPDEST PUSH2 0x178C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x801 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x18A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x815 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x824 CALLDATASIZE PUSH1 0x4 PUSH2 0x240C JUMP JUMPDEST PUSH2 0x1AFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x834 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x843 CALLDATASIZE PUSH1 0x4 PUSH2 0x248E JUMP JUMPDEST PUSH2 0x1B5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x853 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH2 0x862 CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x87B PUSH2 0x1B97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP1 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0x8C4 DUP4 PUSH2 0x253D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xE SLOAD PUSH32 0xE1976E16ED8CE8E740235978FBE69B27D5EEA683B2E017BB0BD2FABB33294B3F SWAP1 PUSH2 0x8FA DUP4 PUSH2 0x2710 PUSH2 0x2555 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320646F6573206E6F742068617665207065726D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373696F6E20746F2063616C6C20706572666F726D55706B6565700000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0xA SLOAD PUSH0 SUB PUSH2 0x9C5 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x71540007 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA0F JUMPI PUSH1 0xB SLOAD TIMESTAMP LT PUSH2 0x9F0 JUMPI TIMESTAMP PUSH1 0xC SSTORE PUSH2 0x9EB PUSH2 0x18A8 JUMP JUMPDEST PUSH2 0xA1B JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x54593E75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST TIMESTAMP PUSH1 0xC SSTORE PUSH2 0xA1B PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA40 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA4C PUSH2 0x1BF2 JUMP JUMPDEST PUSH2 0xA55 DUP3 PUSH2 0x1C96 JUMP JUMPDEST PUSH2 0xA40 DUP3 DUP3 PUSH2 0x1C9E JUMP JUMPDEST PUSH2 0xA67 PUSH2 0x1B97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xA8A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xAD4 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x257B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB14 SWAP2 SWAP1 PUSH2 0x259F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xB38 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH32 0xA9F166643EC132A11638E74E3C3A78D4AE278FCBF92998240E0E97676F54E404 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0xB6B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB80 PUSH2 0x1D5F JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xB9A PUSH2 0x1B97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD PUSH4 0x71540007 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST TIMESTAMP DUP3 LT ISZERO PUSH2 0xBE1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x54593E75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xB DUP3 SWAP1 SSTORE TIMESTAMP PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x2B5090E035D3026F5448298C9ADC68DB8BBC1B26A8AF5C81B2B2A9FC07CA4A00 SWAP1 PUSH1 0x60 ADD PUSH2 0xB6B JUMP JUMPDEST PUSH2 0xC38 PUSH2 0x1B97 JUMP JUMPDEST PUSH0 PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x3B68DC4E210C46D3622293F2B941CDFDE795BB6E17286BB289BA05A6A3B5541F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE DUP1 PUSH2 0xD15 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x696E76616C6964205F616D6F756E7421 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x89A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xD8A SWAP1 DUP5 SWAP1 PUSH2 0x2555 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xDB0 SWAP1 DUP5 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE03 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE27 SWAP2 SWAP1 PUSH2 0x259F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xE4B JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH0 PUSH1 0xA SLOAD PUSH1 0xC SLOAD TIMESTAMP PUSH2 0xEAA SWAP2 SWAP1 PUSH2 0x2555 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP2 LT SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xECD PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0xED6 PUSH0 PUSH2 0x1DA8 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xEFB JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF43 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x1BE970F PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xF64 SWAP1 DUP5 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xFCD JUMPI PUSH1 0x8 DUP1 SLOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0xFC7 DUP4 PUSH2 0x253D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFDE SWAP2 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x101C SWAP3 CALLER SWAP3 SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x257B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1038 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105C SWAP2 SWAP1 PUSH2 0x259F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1080 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH32 0x14EE34C24635186D212F515353DADAE9C226529EDEF2D1FCF5504CB33B5C25AB SWAP2 PUSH2 0xB6B SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH2 0x10C7 PUSH2 0x1B97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x10EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10FB SWAP2 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1134 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x257B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1150 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1174 SWAP2 SWAP1 PUSH2 0x259F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1198 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH32 0x73834E1D1EE73BA659470A3603B888903853D3A3C9FDA34E71C093A0E35CAB94 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH2 0xB6B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x11D3 PUSH2 0x1B97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x11F6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x267F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0x912 JUMP JUMPDEST PUSH2 0x1226 PUSH2 0x1B97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1249 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x267F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0x912 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1294 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x12DC JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x1BE970F PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 LT PUSH2 0x1310 JUMPI PUSH1 0x40 MLOAD PUSH4 0x636DC6B PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1331 SWAP1 DUP5 SWAP1 PUSH2 0x2555 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1357 SWAP1 DUP5 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x136F SWAP2 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1387 SWAP2 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x14EE34C24635186D212F515353DADAE9C226529EDEF2D1FCF5504CB33B5C25AB SWAP1 PUSH2 0x912 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP6 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x13E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 GT ISZERO PUSH2 0x1409 JUMPI PUSH1 0x40 MLOAD PUSH4 0x222A50F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1422 SWAP1 DUP4 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1456 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x257B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1472 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1496 SWAP2 SWAP1 PUSH2 0x259F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x14BA JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xA89B69C5958EC1CCF0DF0DE746A8708F5B6A6B429430129F16F46F44B319C900 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x1500 PUSH2 0x1B97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1523 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x267F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0x912 JUMP JUMPDEST PUSH2 0x1553 PUSH2 0x1B97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1576 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x267F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0x912 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x15E3 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x15FF JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x160D JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x162B JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x1655 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x165E DUP9 PUSH2 0x1E76 JUMP JUMPDEST PUSH2 0x1666 PUSH2 0x1E87 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH2 0x1388 PUSH1 0x4 SSTORE PUSH2 0x1D4C PUSH1 0x5 SSTORE PUSH2 0x5DC PUSH1 0x6 SSTORE PUSH2 0x3E8 PUSH1 0x7 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP3 DUP10 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0x16F3 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1705 PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1737 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE4CFA94D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x75F91F3CECB8C46F20150F60F77A6E1F0DE00776627692DB82EF1960AF84C33A SWAP2 ADD PUSH2 0x912 JUMP JUMPDEST PUSH2 0x1794 PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x17C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE4CFA94D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x1 DUP2 ISZERO ISZERO EQ DUP1 ISZERO SWAP1 PUSH2 0x17D8 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x17FA JUMPI PUSH1 0x40 MLOAD PUSH4 0x81ED1AE3 PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x182B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x184B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD CALLER DUP2 MSTORE SWAP2 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF SWAP1 SWAP3 AND ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH32 0x7A1655BC3160D3413BF1D5235E55BE12E01B7E8BC2436A9BFF09C3B4FA2421F1 SWAP1 PUSH1 0x60 ADD PUSH2 0xB6B JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x18B3 PUSH2 0x1E8F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH0 PUSH1 0x2 SLOAD GT DUP1 ISZERO PUSH2 0x18CB JUMPI POP PUSH0 PUSH1 0x1 SLOAD GT JUMPDEST PUSH2 0x190B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1B9BDD08195B9BDD59DA08185B5BDD5B9D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x89A JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1AAF JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x12 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1AA7 JUMPI PUSH1 0x3 SLOAD PUSH0 DUP3 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x12 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x197C SWAP1 PUSH2 0x2710 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x1986 SWAP2 SWAP1 PUSH2 0x25D1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1993 DUP7 DUP4 PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x19A6 SWAP2 SWAP1 PUSH2 0x2555 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x19B6 SWAP1 POP DUP2 DUP6 PUSH2 0x2568 JUMP JUMPDEST SWAP4 POP DUP5 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x19C9 SWAP2 SWAP1 PUSH2 0x2555 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x12 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x3 ADD DUP10 SWAP1 SSTORE SLOAD SWAP1 SWAP2 AND DUP3 MSTORE DUP2 KECCAK256 PUSH1 0x4 ADD DUP3 SWAP1 SSTORE PUSH2 0x1A13 DUP7 DUP4 PUSH2 0x2568 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x12 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1A4E SWAP1 DUP5 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP8 DUP6 GT ISZERO PUSH2 0x1AA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742069732067726561746572207468656E20353025000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x89A JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x190E JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0xEE826440768329B0C72F81331212EE31FCDAC1EA79A248D24821E40C34E58020 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x1B03 PUSH2 0x1B97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1B26 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE DUP2 MLOAD CALLER DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x267F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xB6B JUMP JUMPDEST PUSH2 0x1B62 PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B8B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH2 0x1B94 DUP2 PUSH2 0x1DA8 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0x1BC9 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xED6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1C78 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C6C PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xED6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B94 PUSH2 0x1B97 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1CF8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1CF5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x25F0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1D20 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1D50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH2 0x1D5A DUP4 DUP4 PUSH2 0x2072 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xED6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E25 DUP3 PUSH2 0x2710 PUSH2 0x2555 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1E32 DUP5 DUP4 PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1E3F DUP6 DUP6 PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E52 SWAP2 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E6A SWAP2 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E7E PUSH2 0x20C7 JUMP JUMPDEST PUSH2 0x1B94 DUP2 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0xED6 PUSH2 0x20C7 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x1EA1 PUSH1 0x2 SLOAD PUSH2 0x1388 PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1EB0 DUP3 PUSH1 0x5 SLOAD PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1EBF DUP4 PUSH1 0x6 SLOAD PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1ECE DUP5 PUSH1 0x7 SLOAD PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1EDF PUSH1 0x1 SLOAD PUSH1 0x4 SLOAD PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD GT PUSH2 0x1F1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6E6F20757365727321 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x89A JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x1F2D SWAP2 SWAP1 PUSH2 0x25D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F39 DUP4 DUP6 PUSH2 0x2568 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1F49 SWAP2 SWAP1 PUSH2 0x2555 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1F61 SWAP2 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FB8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FDC SWAP2 SWAP1 PUSH2 0x259F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2000 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST POP SWAP5 SWAP9 SWAP4 SWAP8 POP SWAP4 SWAP6 POP SWAP2 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 SUB PUSH2 0x2031 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89A SWAP1 PUSH2 0x2607 JUMP JUMPDEST DUP2 PUSH0 SUB PUSH2 0x2050 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89A SWAP1 PUSH2 0x2607 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0x205E DUP5 DUP7 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x2068 SWAP2 SWAP1 PUSH2 0x25D1 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x207B DUP3 PUSH2 0x2118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x20BF JUMPI PUSH2 0x1D5A DUP3 DUP3 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xA40 PUSH2 0x21ED JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xED6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B62 PUSH2 0x20C7 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x214D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2197 SWAP2 SWAP1 PUSH2 0x2648 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x21CF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x21D4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x21E4 DUP6 DUP4 DUP4 PUSH2 0x220C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xED6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2221 JUMPI PUSH2 0x221C DUP3 PUSH2 0x226B JUMP JUMPDEST PUSH2 0x2264 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x2238 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x2261 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x227B JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22BC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x22E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x2309 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x232F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2359 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2362 DUP4 PUSH2 0x2319 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x237D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x238D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23A7 JUMPI PUSH2 0x23A7 PUSH2 0x2334 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x23D6 JUMPI PUSH2 0x23D6 PUSH2 0x2334 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x23ED JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x241D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x2474 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x242C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x2264 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x242C JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x249E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2264 DUP3 PUSH2 0x2319 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x24C2 DUP5 PUSH2 0x2319 JUMP JUMPDEST SWAP3 POP PUSH2 0x24D0 PUSH1 0x20 DUP6 ADD PUSH2 0x2319 JUMP JUMPDEST SWAP2 POP PUSH2 0x24DE PUSH1 0x40 DUP6 ADD PUSH2 0x2319 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B94 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2505 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x250E DUP4 PUSH2 0x2319 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x251E DUP2 PUSH2 0x24E7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x254E JUMPI PUSH2 0x254E PUSH2 0x2529 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x206C JUMPI PUSH2 0x206C PUSH2 0x2529 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x206C JUMPI PUSH2 0x206C PUSH2 0x2529 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25AF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2264 DUP2 PUSH2 0x24E7 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x206C JUMPI PUSH2 0x206C PUSH2 0x2529 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x25EB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2600 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x5F746F74616C5374616B65416D6F756E742063616E206E6F74206265207A6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x6F PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCB5671393C7C6980552E50A BALANCE 0xE7 PUSH25 0x921EB17D764C2E98FBF4D44FFF524712DEF9A2646970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xBE ADDRESS 0x25 BLOCKHASH OR 0x4F 0xAE PUSH17 0xC4E731BBCB9B61546FA1E7B640471B5DC1 BALANCE 0xF9 0xB5 0xE5 0x1E EQ PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "896:15480:10:-:0;;;1171:4:3;1128:48;;3542:53:10;;;;;;;;;-1:-1:-1;3566:22:10;:20;:22::i;:::-;896:15480;;7711:422:2;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:2;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:2;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:2;-1:-1:-1;;;;;8035:33:2;;;;;8087:29;;158:50:11;;;8087:29:2;;146:2:11;131:18;8087:29:2;;;;;;;7981:146;7760:373;7711:422::o;14:200:11:-;896:15480:10;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_491": {
									"entryPoint": null,
									"id": 491,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_73": {
									"entryPoint": 7798,
									"id": 73,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_100": {
									"entryPoint": 8464,
									"id": 100,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_521": {
									"entryPoint": 7815,
									"id": 521,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2831": {
									"entryPoint": 7318,
									"id": 2831,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_389": {
									"entryPoint": 8391,
									"id": 389,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1007": {
									"entryPoint": 8685,
									"id": 1007,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_597": {
									"entryPoint": 7519,
									"id": 597,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_141": {
									"entryPoint": 7063,
									"id": 141,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_581": {
									"entryPoint": 7154,
									"id": 581,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_466": {
									"entryPoint": null,
									"id": 466,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_457": {
									"entryPoint": null,
									"id": 457,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_677": {
									"entryPoint": null,
									"id": 677,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1270": {
									"entryPoint": 8811,
									"id": 1270,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_793": {
									"entryPoint": 8472,
									"id": 793,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_212": {
									"entryPoint": 7592,
									"id": 212,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_648": {
									"entryPoint": 7326,
									"id": 648,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addFunds_2028": {
									"entryPoint": 5056,
									"id": 2028,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addOwnership_1755": {
									"entryPoint": 4287,
									"id": 1755,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addProjects_1709": {
									"entryPoint": 2163,
									"id": 1709,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addTreasuery_1801": {
									"entryPoint": 2655,
									"id": 1801,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@alreadyAdded_1485": {
									"entryPoint": null,
									"id": 1485,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@blockUser_2642": {
									"entryPoint": 6028,
									"id": 2642,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@calculateFees_2064": {
									"entryPoint": 7704,
									"id": 2064,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@calculatePercentage_2510": {
									"entryPoint": 8209,
									"id": 2510,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkOnce_1456": {
									"entryPoint": null,
									"id": 1456,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkUpkeep_2312": {
									"entryPoint": 3733,
									"id": 2312,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@flowToTreasuryPercentage_1448": {
									"entryPoint": null,
									"id": 1448,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_1190": {
									"entryPoint": 8571,
									"id": 1190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1303": {
									"entryPoint": null,
									"id": 1303,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_766": {
									"entryPoint": null,
									"id": 766,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_1673": {
									"entryPoint": 5534,
									"id": 1673,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@interval_1460": {
									"entryPoint": null,
									"id": 1460,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastTimeStamp_1464": {
									"entryPoint": null,
									"id": 1464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maintainceFeePercentage_1450": {
									"entryPoint": null,
									"id": 1450,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@multisigAddress_1454": {
									"entryPoint": null,
									"id": 1454,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@noOfUsers_1452": {
									"entryPoint": null,
									"id": 1452,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@odividentPayoutPercentage_1446": {
									"entryPoint": null,
									"id": 1446,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@off_2444": {
									"entryPoint": 3120,
									"id": 2444,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerShipPoolAmount_1440": {
									"entryPoint": null,
									"id": 1440,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@perPoolCalculation_2284": {
									"entryPoint": 7823,
									"id": 2284,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@performUpkeep_2375": {
									"entryPoint": 2333,
									"id": 2375,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@proxiableUUID_539": {
									"entryPoint": 2935,
									"id": 539,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@reStakeTokens_1969": {
									"entryPoint": 4721,
									"id": 1969,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_155": {
									"entryPoint": 3781,
									"id": 155,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_forwarderAddress_1466": {
									"entryPoint": null,
									"id": 1466,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setForwarderAddress_2474": {
									"entryPoint": 5885,
									"id": 2474,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setInterval_2424": {
									"entryPoint": 2962,
									"id": 2424,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTeasueryPercentages_2675": {
									"entryPoint": 6907,
									"id": 2675,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setflowToTreasuryPercentage_2756": {
									"entryPoint": 5368,
									"id": 2756,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setmaintainceFeePercentage_2783": {
									"entryPoint": 4555,
									"id": 2783,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setodividentPayoutPercentage_2729": {
									"entryPoint": 5451,
									"id": 2729,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@settdividentPayoutPercentage_2702": {
									"entryPoint": 4638,
									"id": 2702,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeTokens_1892": {
									"entryPoint": 3800,
									"id": 1892,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@startingTime_1462": {
									"entryPoint": null,
									"id": 1462,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tPPercentages_1493": {
									"entryPoint": null,
									"id": 1493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tdividentPayoutPercentage_1444": {
									"entryPoint": null,
									"id": 1444,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalProjects_1481": {
									"entryPoint": null,
									"id": 1481,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStakedAmount_1442": {
									"entryPoint": null,
									"id": 1442,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalUsers_1489": {
									"entryPoint": null,
									"id": 1489,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_183": {
									"entryPoint": 7002,
									"id": 183,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@treasuryPoolAmount_1438": {
									"entryPoint": null,
									"id": 1438,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_559": {
									"entryPoint": 2628,
									"id": 559,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_827": {
									"entryPoint": 8306,
									"id": 827,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@usdcToken_1436": {
									"entryPoint": null,
									"id": 1436,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userRegistered_1498": {
									"entryPoint": null,
									"id": 1498,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userWithdrawAmoount_2577": {
									"entryPoint": 3207,
									"id": 2577,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1230": {
									"entryPoint": 8716,
									"id": 1230,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@weeklyTransfer_2194": {
									"entryPoint": 6312,
									"id": 2194,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 8985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address": {
									"entryPoint": 9383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 9032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 9712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_calldata_ptr": {
									"entryPoint": 8875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 9228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_bytes": {
									"entryPoint": 9260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9595,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9306,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$1425__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1476a1cda5feb6ab53a37c2c7223dd9dbe68eef7367c234c0265c2a3fba3931a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2896206a6aa8d5667f893f8cfc5e436c46f1afa2bf5470d00747369cbc513866__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_984c4c4b8842d5da27e0d4bd38d04c71d415ff13ebc33602156c2f6e28e0ad90__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_daaf22ee48ba14ce5532421d554d114832ad11cacc0a90889b6df539cd8418d7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_edf0ef2f15806b360b15962b170fb2777290898683710e6c2ca3b716acccdb55__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9513,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9012,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 9447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12582:11",
										"nodeType": "YulBlock",
										"src": "0:12582:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:11",
													"nodeType": "YulBlock",
													"src": "115:76:11",
													"statements": [
														{
															"nativeSrc": "125:26:11",
															"nodeType": "YulAssignment",
															"src": "125:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:11",
																		"nodeType": "YulLiteral",
																		"src": "148:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:11"
																},
																"nativeSrc": "133:18:11",
																"nodeType": "YulFunctionCall",
																"src": "133:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:11"
																},
																"nativeSrc": "160:25:11",
																"nodeType": "YulFunctionCall",
																"src": "160:25:11"
															},
															"nativeSrc": "160:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:11",
														"nodeType": "YulTypedName",
														"src": "84:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:11",
														"nodeType": "YulTypedName",
														"src": "95:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:11",
														"nodeType": "YulTypedName",
														"src": "106:4:11",
														"type": ""
													}
												],
												"src": "14:177:11"
											},
											{
												"body": {
													"nativeSrc": "312:102:11",
													"nodeType": "YulBlock",
													"src": "312:102:11",
													"statements": [
														{
															"nativeSrc": "322:26:11",
															"nodeType": "YulAssignment",
															"src": "322:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:11",
																		"nodeType": "YulLiteral",
																		"src": "345:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:11"
																},
																"nativeSrc": "330:18:11",
																"nodeType": "YulFunctionCall",
																"src": "330:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "364:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "364:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "379:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "379:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "395:3:11",
																								"nodeType": "YulLiteral",
																								"src": "395:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "400:1:11",
																								"nodeType": "YulLiteral",
																								"src": "400:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "391:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "391:3:11"
																						},
																						"nativeSrc": "391:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "391:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "404:1:11",
																						"nodeType": "YulLiteral",
																						"src": "404:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "387:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "387:3:11"
																				},
																				"nativeSrc": "387:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "387:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "375:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "375:3:11"
																		},
																		"nativeSrc": "375:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "375:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "357:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "357:6:11"
																},
																"nativeSrc": "357:51:11",
																"nodeType": "YulFunctionCall",
																"src": "357:51:11"
															},
															"nativeSrc": "357:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "357:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$1425__to_t_address__fromStack_reversed",
												"nativeSrc": "196:218:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "281:9:11",
														"nodeType": "YulTypedName",
														"src": "281:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "292:6:11",
														"nodeType": "YulTypedName",
														"src": "292:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "303:4:11",
														"nodeType": "YulTypedName",
														"src": "303:4:11",
														"type": ""
													}
												],
												"src": "196:218:11"
											},
											{
												"body": {
													"nativeSrc": "489:156:11",
													"nodeType": "YulBlock",
													"src": "489:156:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "535:16:11",
																"nodeType": "YulBlock",
																"src": "535:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "544:1:11",
																					"nodeType": "YulLiteral",
																					"src": "544:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "547:1:11",
																					"nodeType": "YulLiteral",
																					"src": "547:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "537:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "537:6:11"
																			},
																			"nativeSrc": "537:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "537:12:11"
																		},
																		"nativeSrc": "537:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "537:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "510:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "510:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "519:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "519:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "506:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:11"
																		},
																		"nativeSrc": "506:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "506:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "531:2:11",
																		"nodeType": "YulLiteral",
																		"src": "531:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "502:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:11"
																},
																"nativeSrc": "502:32:11",
																"nodeType": "YulFunctionCall",
																"src": "502:32:11"
															},
															"nativeSrc": "499:52:11",
															"nodeType": "YulIf",
															"src": "499:52:11"
														},
														{
															"nativeSrc": "560:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "560:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "573:1:11",
																"nodeType": "YulLiteral",
																"src": "573:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "564:5:11",
																	"nodeType": "YulTypedName",
																	"src": "564:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "583:32:11",
															"nodeType": "YulAssignment",
															"src": "583:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "605:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "605:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "592:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "592:12:11"
																},
																"nativeSrc": "592:23:11",
																"nodeType": "YulFunctionCall",
																"src": "592:23:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "583:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "583:5:11"
																}
															]
														},
														{
															"nativeSrc": "624:15:11",
															"nodeType": "YulAssignment",
															"src": "624:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "634:5:11",
																"nodeType": "YulIdentifier",
																"src": "634:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "419:226:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "455:9:11",
														"nodeType": "YulTypedName",
														"src": "455:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "466:7:11",
														"nodeType": "YulTypedName",
														"src": "466:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "478:6:11",
														"nodeType": "YulTypedName",
														"src": "478:6:11",
														"type": ""
													}
												],
												"src": "419:226:11"
											},
											{
												"body": {
													"nativeSrc": "751:102:11",
													"nodeType": "YulBlock",
													"src": "751:102:11",
													"statements": [
														{
															"nativeSrc": "761:26:11",
															"nodeType": "YulAssignment",
															"src": "761:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "773:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "773:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "784:2:11",
																		"nodeType": "YulLiteral",
																		"src": "784:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "769:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:11"
																},
																"nativeSrc": "769:18:11",
																"nodeType": "YulFunctionCall",
																"src": "769:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "761:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "761:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "803:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "803:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "818:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "818:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "834:3:11",
																								"nodeType": "YulLiteral",
																								"src": "834:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "839:1:11",
																								"nodeType": "YulLiteral",
																								"src": "839:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "830:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "830:3:11"
																						},
																						"nativeSrc": "830:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "830:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "843:1:11",
																						"nodeType": "YulLiteral",
																						"src": "843:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "826:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "826:3:11"
																				},
																				"nativeSrc": "826:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "826:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "814:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "814:3:11"
																		},
																		"nativeSrc": "814:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "814:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "796:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "796:6:11"
																},
																"nativeSrc": "796:51:11",
																"nodeType": "YulFunctionCall",
																"src": "796:51:11"
															},
															"nativeSrc": "796:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "796:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "650:203:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "720:9:11",
														"nodeType": "YulTypedName",
														"src": "720:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "731:6:11",
														"nodeType": "YulTypedName",
														"src": "731:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "742:4:11",
														"nodeType": "YulTypedName",
														"src": "742:4:11",
														"type": ""
													}
												],
												"src": "650:203:11"
											},
											{
												"body": {
													"nativeSrc": "953:92:11",
													"nodeType": "YulBlock",
													"src": "953:92:11",
													"statements": [
														{
															"nativeSrc": "963:26:11",
															"nodeType": "YulAssignment",
															"src": "963:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "975:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "975:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "986:2:11",
																		"nodeType": "YulLiteral",
																		"src": "986:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "971:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "971:3:11"
																},
																"nativeSrc": "971:18:11",
																"nodeType": "YulFunctionCall",
																"src": "971:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "963:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "963:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1005:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1005:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1030:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1030:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1023:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "1023:6:11"
																				},
																				"nativeSrc": "1023:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1023:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1016:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1016:6:11"
																		},
																		"nativeSrc": "1016:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "998:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "998:6:11"
																},
																"nativeSrc": "998:41:11",
																"nodeType": "YulFunctionCall",
																"src": "998:41:11"
															},
															"nativeSrc": "998:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "998:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "858:187:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "922:9:11",
														"nodeType": "YulTypedName",
														"src": "922:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "933:6:11",
														"nodeType": "YulTypedName",
														"src": "933:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "944:4:11",
														"nodeType": "YulTypedName",
														"src": "944:4:11",
														"type": ""
													}
												],
												"src": "858:187:11"
											},
											{
												"body": {
													"nativeSrc": "1139:497:11",
													"nodeType": "YulBlock",
													"src": "1139:497:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1185:16:11",
																"nodeType": "YulBlock",
																"src": "1185:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1194:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1194:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1197:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1197:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1187:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1187:6:11"
																			},
																			"nativeSrc": "1187:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1187:12:11"
																		},
																		"nativeSrc": "1187:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1187:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1160:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1160:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1169:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1169:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1156:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1156:3:11"
																		},
																		"nativeSrc": "1156:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1156:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1152:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1152:3:11"
																},
																"nativeSrc": "1152:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1152:32:11"
															},
															"nativeSrc": "1149:52:11",
															"nodeType": "YulIf",
															"src": "1149:52:11"
														},
														{
															"nativeSrc": "1210:37:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1210:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1237:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1237:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1224:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1224:12:11"
																},
																"nativeSrc": "1224:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1224:23:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1214:6:11",
																	"nodeType": "YulTypedName",
																	"src": "1214:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1290:16:11",
																"nodeType": "YulBlock",
																"src": "1290:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1299:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1299:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1302:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1302:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1292:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1292:6:11"
																			},
																			"nativeSrc": "1292:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1292:12:11"
																		},
																		"nativeSrc": "1292:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1292:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1262:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1270:18:11",
																		"nodeType": "YulLiteral",
																		"src": "1270:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1259:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:11"
																},
																"nativeSrc": "1259:30:11",
																"nodeType": "YulFunctionCall",
																"src": "1259:30:11"
															},
															"nativeSrc": "1256:50:11",
															"nodeType": "YulIf",
															"src": "1256:50:11"
														},
														{
															"nativeSrc": "1315:32:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1315:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1329:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1329:9:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1340:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1340:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1325:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1325:3:11"
																},
																"nativeSrc": "1325:22:11",
																"nodeType": "YulFunctionCall",
																"src": "1325:22:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1319:2:11",
																	"nodeType": "YulTypedName",
																	"src": "1319:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1395:16:11",
																"nodeType": "YulBlock",
																"src": "1395:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1404:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1404:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1407:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1407:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1397:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1397:6:11"
																			},
																			"nativeSrc": "1397:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1397:12:11"
																		},
																		"nativeSrc": "1397:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1397:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1374:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "1374:2:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1378:4:11",
																						"nodeType": "YulLiteral",
																						"src": "1378:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1370:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1370:3:11"
																				},
																				"nativeSrc": "1370:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1370:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1385:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1385:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1366:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1366:3:11"
																		},
																		"nativeSrc": "1366:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1366:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1359:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1359:6:11"
																},
																"nativeSrc": "1359:35:11",
																"nodeType": "YulFunctionCall",
																"src": "1359:35:11"
															},
															"nativeSrc": "1356:55:11",
															"nodeType": "YulIf",
															"src": "1356:55:11"
														},
														{
															"nativeSrc": "1420:30:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1420:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1447:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "1447:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1434:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1434:12:11"
																},
																"nativeSrc": "1434:16:11",
																"nodeType": "YulFunctionCall",
																"src": "1434:16:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1424:6:11",
																	"nodeType": "YulTypedName",
																	"src": "1424:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1493:16:11",
																"nodeType": "YulBlock",
																"src": "1493:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1502:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1502:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1505:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1505:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1495:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1495:6:11"
																			},
																			"nativeSrc": "1495:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1495:12:11"
																		},
																		"nativeSrc": "1495:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1495:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1465:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1465:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1473:18:11",
																		"nodeType": "YulLiteral",
																		"src": "1473:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1462:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1462:2:11"
																},
																"nativeSrc": "1462:30:11",
																"nodeType": "YulFunctionCall",
																"src": "1462:30:11"
															},
															"nativeSrc": "1459:50:11",
															"nodeType": "YulIf",
															"src": "1459:50:11"
														},
														{
															"body": {
																"nativeSrc": "1559:16:11",
																"nodeType": "YulBlock",
																"src": "1559:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1568:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1568:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1571:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1571:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1561:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1561:6:11"
																			},
																			"nativeSrc": "1561:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1561:12:11"
																		},
																		"nativeSrc": "1561:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1561:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1532:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "1532:2:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1536:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1536:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1528:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1528:3:11"
																				},
																				"nativeSrc": "1528:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1528:15:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1545:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1545:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1524:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1524:3:11"
																		},
																		"nativeSrc": "1524:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1524:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1550:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "1550:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1521:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1521:2:11"
																},
																"nativeSrc": "1521:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1521:37:11"
															},
															"nativeSrc": "1518:57:11",
															"nodeType": "YulIf",
															"src": "1518:57:11"
														},
														{
															"nativeSrc": "1584:21:11",
															"nodeType": "YulAssignment",
															"src": "1584:21:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1598:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "1598:2:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1602:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1602:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1594:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1594:3:11"
																},
																"nativeSrc": "1594:11:11",
																"nodeType": "YulFunctionCall",
																"src": "1594:11:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1584:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:11"
																}
															]
														},
														{
															"nativeSrc": "1614:16:11",
															"nodeType": "YulAssignment",
															"src": "1614:16:11",
															"value": {
																"name": "length",
																"nativeSrc": "1624:6:11",
																"nodeType": "YulIdentifier",
																"src": "1624:6:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1614:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1614:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptr",
												"nativeSrc": "1050:586:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1097:9:11",
														"nodeType": "YulTypedName",
														"src": "1097:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1108:7:11",
														"nodeType": "YulTypedName",
														"src": "1108:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1120:6:11",
														"nodeType": "YulTypedName",
														"src": "1120:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1128:6:11",
														"nodeType": "YulTypedName",
														"src": "1128:6:11",
														"type": ""
													}
												],
												"src": "1050:586:11"
											},
											{
												"body": {
													"nativeSrc": "1690:124:11",
													"nodeType": "YulBlock",
													"src": "1690:124:11",
													"statements": [
														{
															"nativeSrc": "1700:29:11",
															"nodeType": "YulAssignment",
															"src": "1700:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1722:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1722:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1709:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1709:12:11"
																},
																"nativeSrc": "1709:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1709:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1700:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1700:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1792:16:11",
																"nodeType": "YulBlock",
																"src": "1792:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1801:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1801:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1804:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1804:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1794:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1794:6:11"
																			},
																			"nativeSrc": "1794:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1794:12:11"
																		},
																		"nativeSrc": "1794:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1794:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1751:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1751:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1762:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1762:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1777:3:11",
																										"nodeType": "YulLiteral",
																										"src": "1777:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1782:1:11",
																										"nodeType": "YulLiteral",
																										"src": "1782:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1773:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "1773:3:11"
																								},
																								"nativeSrc": "1773:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "1773:11:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1786:1:11",
																								"nodeType": "YulLiteral",
																								"src": "1786:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1769:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1769:3:11"
																						},
																						"nativeSrc": "1769:19:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1769:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1758:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1758:3:11"
																				},
																				"nativeSrc": "1758:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1758:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1748:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1748:2:11"
																		},
																		"nativeSrc": "1748:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1748:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1741:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1741:6:11"
																},
																"nativeSrc": "1741:50:11",
																"nodeType": "YulFunctionCall",
																"src": "1741:50:11"
															},
															"nativeSrc": "1738:70:11",
															"nodeType": "YulIf",
															"src": "1738:70:11"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1641:173:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1669:6:11",
														"nodeType": "YulTypedName",
														"src": "1669:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1680:5:11",
														"nodeType": "YulTypedName",
														"src": "1680:5:11",
														"type": ""
													}
												],
												"src": "1641:173:11"
											},
											{
												"body": {
													"nativeSrc": "1851:95:11",
													"nodeType": "YulBlock",
													"src": "1851:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1868:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1868:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1875:3:11",
																				"nodeType": "YulLiteral",
																				"src": "1875:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1880:10:11",
																				"nodeType": "YulLiteral",
																				"src": "1880:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1871:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:11"
																		},
																		"nativeSrc": "1871:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1861:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1861:6:11"
																},
																"nativeSrc": "1861:31:11",
																"nodeType": "YulFunctionCall",
																"src": "1861:31:11"
															},
															"nativeSrc": "1861:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "1861:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1908:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1908:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1911:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1911:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1901:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1901:6:11"
																},
																"nativeSrc": "1901:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1901:15:11"
															},
															"nativeSrc": "1901:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1901:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1932:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1932:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1935:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1935:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1925:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1925:6:11"
																},
																"nativeSrc": "1925:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1925:15:11"
															},
															"nativeSrc": "1925:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1925:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1819:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1819:127:11"
											},
											{
												"body": {
													"nativeSrc": "2047:922:11",
													"nodeType": "YulBlock",
													"src": "2047:922:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2093:16:11",
																"nodeType": "YulBlock",
																"src": "2093:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2102:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2102:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2105:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2105:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2095:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2095:6:11"
																			},
																			"nativeSrc": "2095:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2095:12:11"
																		},
																		"nativeSrc": "2095:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2095:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2068:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2068:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2077:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2077:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2064:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2064:3:11"
																		},
																		"nativeSrc": "2064:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2064:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2089:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2089:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2060:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2060:3:11"
																},
																"nativeSrc": "2060:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2060:32:11"
															},
															"nativeSrc": "2057:52:11",
															"nodeType": "YulIf",
															"src": "2057:52:11"
														},
														{
															"nativeSrc": "2118:39:11",
															"nodeType": "YulAssignment",
															"src": "2118:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2147:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2147:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2128:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2128:18:11"
																},
																"nativeSrc": "2128:29:11",
																"nodeType": "YulFunctionCall",
																"src": "2128:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2118:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2118:6:11"
																}
															]
														},
														{
															"nativeSrc": "2166:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2166:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2197:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2197:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2208:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2208:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2193:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2193:3:11"
																		},
																		"nativeSrc": "2193:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2193:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2180:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2180:12:11"
																},
																"nativeSrc": "2180:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2180:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2170:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2170:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2255:16:11",
																"nodeType": "YulBlock",
																"src": "2255:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2264:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2264:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2267:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2267:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2257:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2257:6:11"
																			},
																			"nativeSrc": "2257:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2257:12:11"
																		},
																		"nativeSrc": "2257:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2257:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2227:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2227:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2235:18:11",
																		"nodeType": "YulLiteral",
																		"src": "2235:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2224:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2224:2:11"
																},
																"nativeSrc": "2224:30:11",
																"nodeType": "YulFunctionCall",
																"src": "2224:30:11"
															},
															"nativeSrc": "2221:50:11",
															"nodeType": "YulIf",
															"src": "2221:50:11"
														},
														{
															"nativeSrc": "2280:32:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2280:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2294:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2294:9:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2305:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2305:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2290:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2290:3:11"
																},
																"nativeSrc": "2290:22:11",
																"nodeType": "YulFunctionCall",
																"src": "2290:22:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2284:2:11",
																	"nodeType": "YulTypedName",
																	"src": "2284:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2360:16:11",
																"nodeType": "YulBlock",
																"src": "2360:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2369:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2369:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2372:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2372:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2362:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2362:6:11"
																			},
																			"nativeSrc": "2362:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2362:12:11"
																		},
																		"nativeSrc": "2362:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2362:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2339:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "2339:2:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2343:4:11",
																						"nodeType": "YulLiteral",
																						"src": "2343:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2335:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2335:3:11"
																				},
																				"nativeSrc": "2335:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2335:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2350:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2350:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2331:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2331:3:11"
																		},
																		"nativeSrc": "2331:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2331:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2324:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:11"
																},
																"nativeSrc": "2324:35:11",
																"nodeType": "YulFunctionCall",
																"src": "2324:35:11"
															},
															"nativeSrc": "2321:55:11",
															"nodeType": "YulIf",
															"src": "2321:55:11"
														},
														{
															"nativeSrc": "2385:30:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2385:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2412:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "2412:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2399:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2399:12:11"
																},
																"nativeSrc": "2399:16:11",
																"nodeType": "YulFunctionCall",
																"src": "2399:16:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2389:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2389:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2458:22:11",
																"nodeType": "YulBlock",
																"src": "2458:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2460:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "2460:16:11"
																			},
																			"nativeSrc": "2460:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2460:18:11"
																		},
																		"nativeSrc": "2460:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2460:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2430:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2430:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2438:18:11",
																		"nodeType": "YulLiteral",
																		"src": "2438:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2427:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2427:2:11"
																},
																"nativeSrc": "2427:30:11",
																"nodeType": "YulFunctionCall",
																"src": "2427:30:11"
															},
															"nativeSrc": "2424:56:11",
															"nodeType": "YulIf",
															"src": "2424:56:11"
														},
														{
															"nativeSrc": "2489:23:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2489:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2509:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2509:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2503:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2503:5:11"
																},
																"nativeSrc": "2503:9:11",
																"nodeType": "YulFunctionCall",
																"src": "2503:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2493:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2493:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2521:85:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2521:85:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2543:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2543:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "2567:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "2567:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2575:4:11",
																										"nodeType": "YulLiteral",
																										"src": "2575:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2563:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "2563:3:11"
																								},
																								"nativeSrc": "2563:17:11",
																								"nodeType": "YulFunctionCall",
																								"src": "2563:17:11"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2586:2:11",
																										"nodeType": "YulLiteral",
																										"src": "2586:2:11",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2582:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "2582:3:11"
																								},
																								"nativeSrc": "2582:7:11",
																								"nodeType": "YulFunctionCall",
																								"src": "2582:7:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "2559:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "2559:3:11"
																						},
																						"nativeSrc": "2559:31:11",
																						"nodeType": "YulFunctionCall",
																						"src": "2559:31:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2592:2:11",
																						"nodeType": "YulLiteral",
																						"src": "2592:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2555:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2555:3:11"
																				},
																				"nativeSrc": "2555:40:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2555:40:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2601:2:11",
																						"nodeType": "YulLiteral",
																						"src": "2601:2:11",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2597:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2597:3:11"
																				},
																				"nativeSrc": "2597:7:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2597:7:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2551:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2551:3:11"
																		},
																		"nativeSrc": "2551:54:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2551:54:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2539:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2539:3:11"
																},
																"nativeSrc": "2539:67:11",
																"nodeType": "YulFunctionCall",
																"src": "2539:67:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2525:10:11",
																	"nodeType": "YulTypedName",
																	"src": "2525:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2681:22:11",
																"nodeType": "YulBlock",
																"src": "2681:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2683:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "2683:16:11"
																			},
																			"nativeSrc": "2683:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2683:18:11"
																		},
																		"nativeSrc": "2683:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2683:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2624:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "2624:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2636:18:11",
																				"nodeType": "YulLiteral",
																				"src": "2636:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2621:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2621:2:11"
																		},
																		"nativeSrc": "2621:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2621:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2660:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "2660:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2672:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2672:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2657:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2657:2:11"
																		},
																		"nativeSrc": "2657:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2657:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2618:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2618:2:11"
																},
																"nativeSrc": "2618:62:11",
																"nodeType": "YulFunctionCall",
																"src": "2618:62:11"
															},
															"nativeSrc": "2615:88:11",
															"nodeType": "YulIf",
															"src": "2615:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2719:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2719:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2723:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "2723:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2712:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2712:6:11"
																},
																"nativeSrc": "2712:22:11",
																"nodeType": "YulFunctionCall",
																"src": "2712:22:11"
															},
															"nativeSrc": "2712:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "2712:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2750:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2750:6:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2758:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2758:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2743:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2743:6:11"
																},
																"nativeSrc": "2743:22:11",
																"nodeType": "YulFunctionCall",
																"src": "2743:22:11"
															},
															"nativeSrc": "2743:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "2743:22:11"
														},
														{
															"body": {
																"nativeSrc": "2815:16:11",
																"nodeType": "YulBlock",
																"src": "2815:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2824:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2824:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2827:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2827:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2817:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2817:6:11"
																			},
																			"nativeSrc": "2817:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2817:12:11"
																		},
																		"nativeSrc": "2817:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2817:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2788:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "2788:2:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2792:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2792:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2784:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2784:3:11"
																				},
																				"nativeSrc": "2784:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2784:15:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2801:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2801:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2780:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2780:3:11"
																		},
																		"nativeSrc": "2780:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2780:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2806:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "2806:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2777:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2777:2:11"
																},
																"nativeSrc": "2777:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2777:37:11"
															},
															"nativeSrc": "2774:57:11",
															"nodeType": "YulIf",
															"src": "2774:57:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2857:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2857:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2865:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2865:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2853:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2853:3:11"
																		},
																		"nativeSrc": "2853:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2853:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "2874:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "2874:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2878:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2878:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2870:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2870:3:11"
																		},
																		"nativeSrc": "2870:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2870:11:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2883:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2883:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2840:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2840:12:11"
																},
																"nativeSrc": "2840:50:11",
																"nodeType": "YulFunctionCall",
																"src": "2840:50:11"
															},
															"nativeSrc": "2840:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "2840:50:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "2914:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2914:6:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2922:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2922:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2910:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2910:3:11"
																				},
																				"nativeSrc": "2910:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2910:19:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2931:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2931:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2906:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2906:3:11"
																		},
																		"nativeSrc": "2906:28:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2906:28:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2936:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2936:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2899:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2899:6:11"
																},
																"nativeSrc": "2899:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2899:39:11"
															},
															"nativeSrc": "2899:39:11",
															"nodeType": "YulExpressionStatement",
															"src": "2899:39:11"
														},
														{
															"nativeSrc": "2947:16:11",
															"nodeType": "YulAssignment",
															"src": "2947:16:11",
															"value": {
																"name": "memPtr",
																"nativeSrc": "2957:6:11",
																"nodeType": "YulIdentifier",
																"src": "2957:6:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2947:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2947:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "1951:1018:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2005:9:11",
														"nodeType": "YulTypedName",
														"src": "2005:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2016:7:11",
														"nodeType": "YulTypedName",
														"src": "2016:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2028:6:11",
														"nodeType": "YulTypedName",
														"src": "2028:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2036:6:11",
														"nodeType": "YulTypedName",
														"src": "2036:6:11",
														"type": ""
													}
												],
												"src": "1951:1018:11"
											},
											{
												"body": {
													"nativeSrc": "3075:76:11",
													"nodeType": "YulBlock",
													"src": "3075:76:11",
													"statements": [
														{
															"nativeSrc": "3085:26:11",
															"nodeType": "YulAssignment",
															"src": "3085:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3097:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3097:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3108:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3108:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3093:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3093:3:11"
																},
																"nativeSrc": "3093:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3093:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3085:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3085:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3127:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3127:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3138:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3138:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3120:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3120:6:11"
																},
																"nativeSrc": "3120:25:11",
																"nodeType": "YulFunctionCall",
																"src": "3120:25:11"
															},
															"nativeSrc": "3120:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "3120:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2974:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3044:9:11",
														"nodeType": "YulTypedName",
														"src": "3044:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3055:6:11",
														"nodeType": "YulTypedName",
														"src": "3055:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3066:4:11",
														"nodeType": "YulTypedName",
														"src": "3066:4:11",
														"type": ""
													}
												],
												"src": "2974:177:11"
											},
											{
												"body": {
													"nativeSrc": "3243:259:11",
													"nodeType": "YulBlock",
													"src": "3243:259:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3289:16:11",
																"nodeType": "YulBlock",
																"src": "3289:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3298:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3298:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3301:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3301:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3291:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3291:6:11"
																			},
																			"nativeSrc": "3291:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3291:12:11"
																		},
																		"nativeSrc": "3291:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3291:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3264:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3264:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3273:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3273:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3260:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3260:3:11"
																		},
																		"nativeSrc": "3260:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3260:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3285:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3285:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3256:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3256:3:11"
																},
																"nativeSrc": "3256:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3256:32:11"
															},
															"nativeSrc": "3253:52:11",
															"nodeType": "YulIf",
															"src": "3253:52:11"
														},
														{
															"nativeSrc": "3314:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3314:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3327:1:11",
																"nodeType": "YulLiteral",
																"src": "3327:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3318:5:11",
																	"nodeType": "YulTypedName",
																	"src": "3318:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3337:32:11",
															"nodeType": "YulAssignment",
															"src": "3337:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3359:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3359:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3346:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3346:12:11"
																},
																"nativeSrc": "3346:23:11",
																"nodeType": "YulFunctionCall",
																"src": "3346:23:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3337:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3337:5:11"
																}
															]
														},
														{
															"nativeSrc": "3378:15:11",
															"nodeType": "YulAssignment",
															"src": "3378:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "3388:5:11",
																"nodeType": "YulIdentifier",
																"src": "3388:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3378:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3378:6:11"
																}
															]
														},
														{
															"nativeSrc": "3402:16:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3402:16:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3417:1:11",
																"nodeType": "YulLiteral",
																"src": "3417:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3406:7:11",
																	"nodeType": "YulTypedName",
																	"src": "3406:7:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3427:43:11",
															"nodeType": "YulAssignment",
															"src": "3427:43:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3455:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3455:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3466:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3466:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3451:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3451:3:11"
																		},
																		"nativeSrc": "3451:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3451:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3438:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3438:12:11"
																},
																"nativeSrc": "3438:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3438:32:11"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3427:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "3427:7:11"
																}
															]
														},
														{
															"nativeSrc": "3479:17:11",
															"nodeType": "YulAssignment",
															"src": "3479:17:11",
															"value": {
																"name": "value_1",
																"nativeSrc": "3489:7:11",
																"nodeType": "YulIdentifier",
																"src": "3489:7:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3479:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3479:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "3156:346:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3201:9:11",
														"nodeType": "YulTypedName",
														"src": "3201:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3212:7:11",
														"nodeType": "YulTypedName",
														"src": "3212:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3224:6:11",
														"nodeType": "YulTypedName",
														"src": "3224:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3232:6:11",
														"nodeType": "YulTypedName",
														"src": "3232:6:11",
														"type": ""
													}
												],
												"src": "3156:346:11"
											},
											{
												"body": {
													"nativeSrc": "3556:239:11",
													"nodeType": "YulBlock",
													"src": "3556:239:11",
													"statements": [
														{
															"nativeSrc": "3566:26:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3566:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3586:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3586:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3580:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3580:5:11"
																},
																"nativeSrc": "3580:12:11",
																"nodeType": "YulFunctionCall",
																"src": "3580:12:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3570:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3570:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3608:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3608:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3613:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3613:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3601:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3601:6:11"
																},
																"nativeSrc": "3601:19:11",
																"nodeType": "YulFunctionCall",
																"src": "3601:19:11"
															},
															"nativeSrc": "3601:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "3601:19:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3639:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3639:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3644:4:11",
																				"nodeType": "YulLiteral",
																				"src": "3644:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3635:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3635:3:11"
																		},
																		"nativeSrc": "3635:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3635:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3655:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3655:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3662:4:11",
																				"nodeType": "YulLiteral",
																				"src": "3662:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3651:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3651:3:11"
																		},
																		"nativeSrc": "3651:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3651:16:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3669:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3669:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "3629:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3629:5:11"
																},
																"nativeSrc": "3629:47:11",
																"nodeType": "YulFunctionCall",
																"src": "3629:47:11"
															},
															"nativeSrc": "3629:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "3629:47:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3700:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "3700:3:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3705:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3705:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3696:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3696:3:11"
																				},
																				"nativeSrc": "3696:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3696:16:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3714:4:11",
																				"nodeType": "YulLiteral",
																				"src": "3714:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3692:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3692:3:11"
																		},
																		"nativeSrc": "3692:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3692:27:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3721:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3721:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3685:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3685:6:11"
																},
																"nativeSrc": "3685:38:11",
																"nodeType": "YulFunctionCall",
																"src": "3685:38:11"
															},
															"nativeSrc": "3685:38:11",
															"nodeType": "YulExpressionStatement",
															"src": "3685:38:11"
														},
														{
															"nativeSrc": "3732:57:11",
															"nodeType": "YulAssignment",
															"src": "3732:57:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3747:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3747:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "3760:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "3760:6:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3768:2:11",
																								"nodeType": "YulLiteral",
																								"src": "3768:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3756:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "3756:3:11"
																						},
																						"nativeSrc": "3756:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "3756:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3777:2:11",
																								"nodeType": "YulLiteral",
																								"src": "3777:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "3773:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "3773:3:11"
																						},
																						"nativeSrc": "3773:7:11",
																						"nodeType": "YulFunctionCall",
																						"src": "3773:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3752:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3752:3:11"
																				},
																				"nativeSrc": "3752:29:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3752:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3743:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3743:3:11"
																		},
																		"nativeSrc": "3743:39:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3743:39:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3784:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3784:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3739:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3739:3:11"
																},
																"nativeSrc": "3739:50:11",
																"nodeType": "YulFunctionCall",
																"src": "3739:50:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3732:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3732:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nativeSrc": "3507:288:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3533:5:11",
														"nodeType": "YulTypedName",
														"src": "3533:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3540:3:11",
														"nodeType": "YulTypedName",
														"src": "3540:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3548:3:11",
														"nodeType": "YulTypedName",
														"src": "3548:3:11",
														"type": ""
													}
												],
												"src": "3507:288:11"
											},
											{
												"body": {
													"nativeSrc": "3941:157:11",
													"nodeType": "YulBlock",
													"src": "3941:157:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3958:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3958:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "3983:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3983:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3976:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "3976:6:11"
																				},
																				"nativeSrc": "3976:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3976:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3969:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3969:6:11"
																		},
																		"nativeSrc": "3969:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3969:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3951:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3951:6:11"
																},
																"nativeSrc": "3951:41:11",
																"nodeType": "YulFunctionCall",
																"src": "3951:41:11"
															},
															"nativeSrc": "3951:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "3951:41:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4012:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4012:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4023:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4023:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4008:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4008:3:11"
																		},
																		"nativeSrc": "4008:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4008:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4028:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4028:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4001:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4001:6:11"
																},
																"nativeSrc": "4001:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4001:30:11"
															},
															"nativeSrc": "4001:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "4001:30:11"
														},
														{
															"nativeSrc": "4040:52:11",
															"nodeType": "YulAssignment",
															"src": "4040:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4065:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4065:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4077:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4077:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4088:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4088:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4073:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4073:3:11"
																		},
																		"nativeSrc": "4073:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4073:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "4048:16:11",
																	"nodeType": "YulIdentifier",
																	"src": "4048:16:11"
																},
																"nativeSrc": "4048:44:11",
																"nodeType": "YulFunctionCall",
																"src": "4048:44:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4040:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4040:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "3800:298:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3902:9:11",
														"nodeType": "YulTypedName",
														"src": "3902:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3913:6:11",
														"nodeType": "YulTypedName",
														"src": "3913:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3921:6:11",
														"nodeType": "YulTypedName",
														"src": "3921:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3932:4:11",
														"nodeType": "YulTypedName",
														"src": "3932:4:11",
														"type": ""
													}
												],
												"src": "3800:298:11"
											},
											{
												"body": {
													"nativeSrc": "4224:98:11",
													"nodeType": "YulBlock",
													"src": "4224:98:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4241:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4241:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4252:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4252:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4234:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4234:6:11"
																},
																"nativeSrc": "4234:21:11",
																"nodeType": "YulFunctionCall",
																"src": "4234:21:11"
															},
															"nativeSrc": "4234:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "4234:21:11"
														},
														{
															"nativeSrc": "4264:52:11",
															"nodeType": "YulAssignment",
															"src": "4264:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4289:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4289:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4301:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4301:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4312:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4312:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4297:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4297:3:11"
																		},
																		"nativeSrc": "4297:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4297:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "4272:16:11",
																	"nodeType": "YulIdentifier",
																	"src": "4272:16:11"
																},
																"nativeSrc": "4272:44:11",
																"nodeType": "YulFunctionCall",
																"src": "4272:44:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4264:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4264:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4103:219:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4193:9:11",
														"nodeType": "YulTypedName",
														"src": "4193:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4204:6:11",
														"nodeType": "YulTypedName",
														"src": "4204:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4215:4:11",
														"nodeType": "YulTypedName",
														"src": "4215:4:11",
														"type": ""
													}
												],
												"src": "4103:219:11"
											},
											{
												"body": {
													"nativeSrc": "4397:116:11",
													"nodeType": "YulBlock",
													"src": "4397:116:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4443:16:11",
																"nodeType": "YulBlock",
																"src": "4443:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4452:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4452:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4455:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4455:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4445:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4445:6:11"
																			},
																			"nativeSrc": "4445:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4445:12:11"
																		},
																		"nativeSrc": "4445:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4445:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4418:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4418:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4427:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4427:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4414:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4414:3:11"
																		},
																		"nativeSrc": "4414:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4414:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4439:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4439:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4410:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4410:3:11"
																},
																"nativeSrc": "4410:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4410:32:11"
															},
															"nativeSrc": "4407:52:11",
															"nodeType": "YulIf",
															"src": "4407:52:11"
														},
														{
															"nativeSrc": "4468:39:11",
															"nodeType": "YulAssignment",
															"src": "4468:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4497:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4497:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4478:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "4478:18:11"
																},
																"nativeSrc": "4478:29:11",
																"nodeType": "YulFunctionCall",
																"src": "4478:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4468:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4468:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4327:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4363:9:11",
														"nodeType": "YulTypedName",
														"src": "4363:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4374:7:11",
														"nodeType": "YulTypedName",
														"src": "4374:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4386:6:11",
														"nodeType": "YulTypedName",
														"src": "4386:6:11",
														"type": ""
													}
												],
												"src": "4327:186:11"
											},
											{
												"body": {
													"nativeSrc": "4753:310:11",
													"nodeType": "YulBlock",
													"src": "4753:310:11",
													"statements": [
														{
															"nativeSrc": "4763:27:11",
															"nodeType": "YulAssignment",
															"src": "4763:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4775:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4775:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4786:3:11",
																		"nodeType": "YulLiteral",
																		"src": "4786:3:11",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4771:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4771:3:11"
																},
																"nativeSrc": "4771:19:11",
																"nodeType": "YulFunctionCall",
																"src": "4771:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4763:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4763:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4806:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4806:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "4831:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4831:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4824:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "4824:6:11"
																				},
																				"nativeSrc": "4824:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4824:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4817:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4817:6:11"
																		},
																		"nativeSrc": "4817:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4817:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4799:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4799:6:11"
																},
																"nativeSrc": "4799:41:11",
																"nodeType": "YulFunctionCall",
																"src": "4799:41:11"
															},
															"nativeSrc": "4799:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "4799:41:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4860:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4860:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4871:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4871:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4856:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4856:3:11"
																		},
																		"nativeSrc": "4856:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4856:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4876:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4876:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4849:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4849:6:11"
																},
																"nativeSrc": "4849:34:11",
																"nodeType": "YulFunctionCall",
																"src": "4849:34:11"
															},
															"nativeSrc": "4849:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "4849:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4903:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4903:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4914:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4914:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4899:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4899:3:11"
																		},
																		"nativeSrc": "4899:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4899:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4919:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4919:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4892:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4892:6:11"
																},
																"nativeSrc": "4892:34:11",
																"nodeType": "YulFunctionCall",
																"src": "4892:34:11"
															},
															"nativeSrc": "4892:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "4892:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4946:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4946:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4957:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4957:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4942:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4942:3:11"
																		},
																		"nativeSrc": "4942:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4942:18:11"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "4962:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4962:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4935:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4935:6:11"
																},
																"nativeSrc": "4935:34:11",
																"nodeType": "YulFunctionCall",
																"src": "4935:34:11"
															},
															"nativeSrc": "4935:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "4935:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4989:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4989:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5000:3:11",
																				"nodeType": "YulLiteral",
																				"src": "5000:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4985:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4985:3:11"
																		},
																		"nativeSrc": "4985:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4985:19:11"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "5006:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5006:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4978:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4978:6:11"
																},
																"nativeSrc": "4978:35:11",
																"nodeType": "YulFunctionCall",
																"src": "4978:35:11"
															},
															"nativeSrc": "4978:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "4978:35:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5033:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5033:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5044:3:11",
																				"nodeType": "YulLiteral",
																				"src": "5044:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5029:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5029:3:11"
																		},
																		"nativeSrc": "5029:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5029:19:11"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "5050:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5050:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5022:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5022:6:11"
																},
																"nativeSrc": "5022:35:11",
																"nodeType": "YulFunctionCall",
																"src": "5022:35:11"
															},
															"nativeSrc": "5022:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "5022:35:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4518:545:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4682:9:11",
														"nodeType": "YulTypedName",
														"src": "4682:9:11",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4693:6:11",
														"nodeType": "YulTypedName",
														"src": "4693:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4701:6:11",
														"nodeType": "YulTypedName",
														"src": "4701:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4709:6:11",
														"nodeType": "YulTypedName",
														"src": "4709:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4717:6:11",
														"nodeType": "YulTypedName",
														"src": "4717:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4725:6:11",
														"nodeType": "YulTypedName",
														"src": "4725:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4733:6:11",
														"nodeType": "YulTypedName",
														"src": "4733:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4744:4:11",
														"nodeType": "YulTypedName",
														"src": "4744:4:11",
														"type": ""
													}
												],
												"src": "4518:545:11"
											},
											{
												"body": {
													"nativeSrc": "5172:230:11",
													"nodeType": "YulBlock",
													"src": "5172:230:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5218:16:11",
																"nodeType": "YulBlock",
																"src": "5218:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5227:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5227:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5230:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5230:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5220:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5220:6:11"
																			},
																			"nativeSrc": "5220:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5220:12:11"
																		},
																		"nativeSrc": "5220:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5220:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5193:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5193:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5202:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5202:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5189:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5189:3:11"
																		},
																		"nativeSrc": "5189:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5189:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5214:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5214:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5185:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5185:3:11"
																},
																"nativeSrc": "5185:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5185:32:11"
															},
															"nativeSrc": "5182:52:11",
															"nodeType": "YulIf",
															"src": "5182:52:11"
														},
														{
															"nativeSrc": "5243:39:11",
															"nodeType": "YulAssignment",
															"src": "5243:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5272:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5272:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5253:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "5253:18:11"
																},
																"nativeSrc": "5253:29:11",
																"nodeType": "YulFunctionCall",
																"src": "5253:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5243:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5243:6:11"
																}
															]
														},
														{
															"nativeSrc": "5291:48:11",
															"nodeType": "YulAssignment",
															"src": "5291:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5324:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5324:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5335:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5335:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5320:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5320:3:11"
																		},
																		"nativeSrc": "5320:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5320:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5301:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "5301:18:11"
																},
																"nativeSrc": "5301:38:11",
																"nodeType": "YulFunctionCall",
																"src": "5301:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5291:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5291:6:11"
																}
															]
														},
														{
															"nativeSrc": "5348:48:11",
															"nodeType": "YulAssignment",
															"src": "5348:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5381:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5381:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5392:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5392:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5377:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5377:3:11"
																		},
																		"nativeSrc": "5377:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5377:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5358:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "5358:18:11"
																},
																"nativeSrc": "5358:38:11",
																"nodeType": "YulFunctionCall",
																"src": "5358:38:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5348:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5348:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address",
												"nativeSrc": "5068:334:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5122:9:11",
														"nodeType": "YulTypedName",
														"src": "5122:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5133:7:11",
														"nodeType": "YulTypedName",
														"src": "5133:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5145:6:11",
														"nodeType": "YulTypedName",
														"src": "5145:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5153:6:11",
														"nodeType": "YulTypedName",
														"src": "5153:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5161:6:11",
														"nodeType": "YulTypedName",
														"src": "5161:6:11",
														"type": ""
													}
												],
												"src": "5068:334:11"
											},
											{
												"body": {
													"nativeSrc": "5449:76:11",
													"nodeType": "YulBlock",
													"src": "5449:76:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5503:16:11",
																"nodeType": "YulBlock",
																"src": "5503:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5512:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5512:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5515:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5515:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5505:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5505:6:11"
																			},
																			"nativeSrc": "5505:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5505:12:11"
																		},
																		"nativeSrc": "5505:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5505:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5472:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5472:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "5493:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "5493:5:11"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "5486:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "5486:6:11"
																						},
																						"nativeSrc": "5486:13:11",
																						"nodeType": "YulFunctionCall",
																						"src": "5486:13:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5479:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "5479:6:11"
																				},
																				"nativeSrc": "5479:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5479:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5469:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "5469:2:11"
																		},
																		"nativeSrc": "5469:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5469:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5462:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5462:6:11"
																},
																"nativeSrc": "5462:40:11",
																"nodeType": "YulFunctionCall",
																"src": "5462:40:11"
															},
															"nativeSrc": "5459:60:11",
															"nodeType": "YulIf",
															"src": "5459:60:11"
														}
													]
												},
												"name": "validator_revert_bool",
												"nativeSrc": "5407:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5438:5:11",
														"nodeType": "YulTypedName",
														"src": "5438:5:11",
														"type": ""
													}
												],
												"src": "5407:118:11"
											},
											{
												"body": {
													"nativeSrc": "5614:231:11",
													"nodeType": "YulBlock",
													"src": "5614:231:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5660:16:11",
																"nodeType": "YulBlock",
																"src": "5660:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5669:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5669:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5672:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5672:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5662:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5662:6:11"
																			},
																			"nativeSrc": "5662:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5662:12:11"
																		},
																		"nativeSrc": "5662:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5662:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5635:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5635:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5644:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5644:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5631:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5631:3:11"
																		},
																		"nativeSrc": "5631:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5631:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5656:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5656:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5627:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5627:3:11"
																},
																"nativeSrc": "5627:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5627:32:11"
															},
															"nativeSrc": "5624:52:11",
															"nodeType": "YulIf",
															"src": "5624:52:11"
														},
														{
															"nativeSrc": "5685:39:11",
															"nodeType": "YulAssignment",
															"src": "5685:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5714:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5714:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5695:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "5695:18:11"
																},
																"nativeSrc": "5695:29:11",
																"nodeType": "YulFunctionCall",
																"src": "5695:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5685:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5685:6:11"
																}
															]
														},
														{
															"nativeSrc": "5733:45:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5733:45:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5763:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5763:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5774:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5774:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5759:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5759:3:11"
																		},
																		"nativeSrc": "5759:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5759:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5746:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5746:12:11"
																},
																"nativeSrc": "5746:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5746:32:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5737:5:11",
																	"nodeType": "YulTypedName",
																	"src": "5737:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5809:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5809:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "5787:21:11",
																	"nodeType": "YulIdentifier",
																	"src": "5787:21:11"
																},
																"nativeSrc": "5787:28:11",
																"nodeType": "YulFunctionCall",
																"src": "5787:28:11"
															},
															"nativeSrc": "5787:28:11",
															"nodeType": "YulExpressionStatement",
															"src": "5787:28:11"
														},
														{
															"nativeSrc": "5824:15:11",
															"nodeType": "YulAssignment",
															"src": "5824:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "5834:5:11",
																"nodeType": "YulIdentifier",
																"src": "5834:5:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5824:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5824:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "5530:315:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5572:9:11",
														"nodeType": "YulTypedName",
														"src": "5572:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5583:7:11",
														"nodeType": "YulTypedName",
														"src": "5583:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5595:6:11",
														"nodeType": "YulTypedName",
														"src": "5595:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5603:6:11",
														"nodeType": "YulTypedName",
														"src": "5603:6:11",
														"type": ""
													}
												],
												"src": "5530:315:11"
											},
											{
												"body": {
													"nativeSrc": "5882:95:11",
													"nodeType": "YulBlock",
													"src": "5882:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5899:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5899:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5906:3:11",
																				"nodeType": "YulLiteral",
																				"src": "5906:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5911:10:11",
																				"nodeType": "YulLiteral",
																				"src": "5911:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5902:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5902:3:11"
																		},
																		"nativeSrc": "5902:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5902:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5892:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5892:6:11"
																},
																"nativeSrc": "5892:31:11",
																"nodeType": "YulFunctionCall",
																"src": "5892:31:11"
															},
															"nativeSrc": "5892:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "5892:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5939:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5939:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5942:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5942:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5932:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5932:6:11"
																},
																"nativeSrc": "5932:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5932:15:11"
															},
															"nativeSrc": "5932:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5932:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5963:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5963:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5966:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5966:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5956:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5956:6:11"
																},
																"nativeSrc": "5956:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5956:15:11"
															},
															"nativeSrc": "5956:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5956:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5850:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "5850:127:11"
											},
											{
												"body": {
													"nativeSrc": "6029:88:11",
													"nodeType": "YulBlock",
													"src": "6029:88:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6060:22:11",
																"nodeType": "YulBlock",
																"src": "6060:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6062:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "6062:16:11"
																			},
																			"nativeSrc": "6062:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6062:18:11"
																		},
																		"nativeSrc": "6062:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6062:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6045:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6045:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6056:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6056:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6052:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6052:3:11"
																		},
																		"nativeSrc": "6052:6:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6052:6:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6042:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6042:2:11"
																},
																"nativeSrc": "6042:17:11",
																"nodeType": "YulFunctionCall",
																"src": "6042:17:11"
															},
															"nativeSrc": "6039:43:11",
															"nodeType": "YulIf",
															"src": "6039:43:11"
														},
														{
															"nativeSrc": "6091:20:11",
															"nodeType": "YulAssignment",
															"src": "6091:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6102:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6102:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6109:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6109:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6098:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6098:3:11"
																},
																"nativeSrc": "6098:13:11",
																"nodeType": "YulFunctionCall",
																"src": "6098:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6091:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6091:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "5982:135:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6011:5:11",
														"nodeType": "YulTypedName",
														"src": "6011:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6021:3:11",
														"nodeType": "YulTypedName",
														"src": "6021:3:11",
														"type": ""
													}
												],
												"src": "5982:135:11"
											},
											{
												"body": {
													"nativeSrc": "6171:79:11",
													"nodeType": "YulBlock",
													"src": "6171:79:11",
													"statements": [
														{
															"nativeSrc": "6181:17:11",
															"nodeType": "YulAssignment",
															"src": "6181:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6193:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6193:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6196:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6196:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6189:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6189:3:11"
																},
																"nativeSrc": "6189:9:11",
																"nodeType": "YulFunctionCall",
																"src": "6189:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6181:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6181:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6222:22:11",
																"nodeType": "YulBlock",
																"src": "6222:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6224:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "6224:16:11"
																			},
																			"nativeSrc": "6224:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6224:18:11"
																		},
																		"nativeSrc": "6224:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6224:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6213:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6213:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6219:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6219:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6210:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6210:2:11"
																},
																"nativeSrc": "6210:11:11",
																"nodeType": "YulFunctionCall",
																"src": "6210:11:11"
															},
															"nativeSrc": "6207:37:11",
															"nodeType": "YulIf",
															"src": "6207:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6122:128:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6153:1:11",
														"nodeType": "YulTypedName",
														"src": "6153:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6156:1:11",
														"nodeType": "YulTypedName",
														"src": "6156:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6162:4:11",
														"nodeType": "YulTypedName",
														"src": "6162:4:11",
														"type": ""
													}
												],
												"src": "6122:128:11"
											},
											{
												"body": {
													"nativeSrc": "6412:162:11",
													"nodeType": "YulBlock",
													"src": "6412:162:11",
													"statements": [
														{
															"nativeSrc": "6422:26:11",
															"nodeType": "YulAssignment",
															"src": "6422:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6434:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6434:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6445:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6445:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6430:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6430:3:11"
																},
																"nativeSrc": "6430:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6430:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6422:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6422:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6464:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6464:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6475:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6475:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6457:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6457:6:11"
																},
																"nativeSrc": "6457:25:11",
																"nodeType": "YulFunctionCall",
																"src": "6457:25:11"
															},
															"nativeSrc": "6457:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "6457:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6502:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6502:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6513:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6513:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6498:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6498:3:11"
																		},
																		"nativeSrc": "6498:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6498:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6518:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6518:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6491:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6491:6:11"
																},
																"nativeSrc": "6491:34:11",
																"nodeType": "YulFunctionCall",
																"src": "6491:34:11"
															},
															"nativeSrc": "6491:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "6491:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6545:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6545:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6556:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6556:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6541:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6541:3:11"
																		},
																		"nativeSrc": "6541:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6541:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6561:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6561:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6534:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6534:6:11"
																},
																"nativeSrc": "6534:34:11",
																"nodeType": "YulFunctionCall",
																"src": "6534:34:11"
															},
															"nativeSrc": "6534:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "6534:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6255:319:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6365:9:11",
														"nodeType": "YulTypedName",
														"src": "6365:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6376:6:11",
														"nodeType": "YulTypedName",
														"src": "6376:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6384:6:11",
														"nodeType": "YulTypedName",
														"src": "6384:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6392:6:11",
														"nodeType": "YulTypedName",
														"src": "6392:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6403:4:11",
														"nodeType": "YulTypedName",
														"src": "6403:4:11",
														"type": ""
													}
												],
												"src": "6255:319:11"
											},
											{
												"body": {
													"nativeSrc": "6753:249:11",
													"nodeType": "YulBlock",
													"src": "6753:249:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6770:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6770:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6781:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6781:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6763:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6763:6:11"
																},
																"nativeSrc": "6763:21:11",
																"nodeType": "YulFunctionCall",
																"src": "6763:21:11"
															},
															"nativeSrc": "6763:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "6763:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6804:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6804:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6815:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6815:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6800:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6800:3:11"
																		},
																		"nativeSrc": "6800:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6800:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6820:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6820:2:11",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6793:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6793:6:11"
																},
																"nativeSrc": "6793:30:11",
																"nodeType": "YulFunctionCall",
																"src": "6793:30:11"
															},
															"nativeSrc": "6793:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "6793:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6843:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6843:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6854:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6854:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6839:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6839:3:11"
																		},
																		"nativeSrc": "6839:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6839:18:11"
																	},
																	{
																		"hexValue": "54686973206164647265737320646f6573206e6f742068617665207065726d69",
																		"kind": "string",
																		"nativeSrc": "6859:34:11",
																		"nodeType": "YulLiteral",
																		"src": "6859:34:11",
																		"type": "",
																		"value": "This address does not have permi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6832:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6832:6:11"
																},
																"nativeSrc": "6832:62:11",
																"nodeType": "YulFunctionCall",
																"src": "6832:62:11"
															},
															"nativeSrc": "6832:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "6832:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6914:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6914:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6925:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6925:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6910:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6910:3:11"
																		},
																		"nativeSrc": "6910:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6910:18:11"
																	},
																	{
																		"hexValue": "7373696f6e20746f2063616c6c20706572666f726d55706b656570",
																		"kind": "string",
																		"nativeSrc": "6930:29:11",
																		"nodeType": "YulLiteral",
																		"src": "6930:29:11",
																		"type": "",
																		"value": "ssion to call performUpkeep"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6903:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6903:6:11"
																},
																"nativeSrc": "6903:57:11",
																"nodeType": "YulFunctionCall",
																"src": "6903:57:11"
															},
															"nativeSrc": "6903:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "6903:57:11"
														},
														{
															"nativeSrc": "6969:27:11",
															"nodeType": "YulAssignment",
															"src": "6969:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6981:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6981:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6992:3:11",
																		"nodeType": "YulLiteral",
																		"src": "6992:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6977:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6977:3:11"
																},
																"nativeSrc": "6977:19:11",
																"nodeType": "YulFunctionCall",
																"src": "6977:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6969:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6969:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6579:423:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6730:9:11",
														"nodeType": "YulTypedName",
														"src": "6730:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6744:4:11",
														"nodeType": "YulTypedName",
														"src": "6744:4:11",
														"type": ""
													}
												],
												"src": "6579:423:11"
											},
											{
												"body": {
													"nativeSrc": "7055:77:11",
													"nodeType": "YulBlock",
													"src": "7055:77:11",
													"statements": [
														{
															"nativeSrc": "7065:16:11",
															"nodeType": "YulAssignment",
															"src": "7065:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7076:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7076:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7079:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7079:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7072:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7072:3:11"
																},
																"nativeSrc": "7072:9:11",
																"nodeType": "YulFunctionCall",
																"src": "7072:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7065:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7065:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7104:22:11",
																"nodeType": "YulBlock",
																"src": "7104:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7106:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "7106:16:11"
																			},
																			"nativeSrc": "7106:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7106:18:11"
																		},
																		"nativeSrc": "7106:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7106:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7096:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7096:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7099:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7099:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7093:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7093:2:11"
																},
																"nativeSrc": "7093:10:11",
																"nodeType": "YulFunctionCall",
																"src": "7093:10:11"
															},
															"nativeSrc": "7090:36:11",
															"nodeType": "YulIf",
															"src": "7090:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7007:125:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7038:1:11",
														"nodeType": "YulTypedName",
														"src": "7038:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7041:1:11",
														"nodeType": "YulTypedName",
														"src": "7041:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7047:3:11",
														"nodeType": "YulTypedName",
														"src": "7047:3:11",
														"type": ""
													}
												],
												"src": "7007:125:11"
											},
											{
												"body": {
													"nativeSrc": "7294:214:11",
													"nodeType": "YulBlock",
													"src": "7294:214:11",
													"statements": [
														{
															"nativeSrc": "7304:26:11",
															"nodeType": "YulAssignment",
															"src": "7304:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7316:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7316:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7327:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7327:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7312:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7312:3:11"
																},
																"nativeSrc": "7312:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7312:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7304:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7304:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7346:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7346:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7361:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7361:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7377:3:11",
																								"nodeType": "YulLiteral",
																								"src": "7377:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7382:1:11",
																								"nodeType": "YulLiteral",
																								"src": "7382:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7373:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "7373:3:11"
																						},
																						"nativeSrc": "7373:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "7373:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7386:1:11",
																						"nodeType": "YulLiteral",
																						"src": "7386:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7369:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7369:3:11"
																				},
																				"nativeSrc": "7369:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7369:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7357:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7357:3:11"
																		},
																		"nativeSrc": "7357:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7357:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7339:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7339:6:11"
																},
																"nativeSrc": "7339:51:11",
																"nodeType": "YulFunctionCall",
																"src": "7339:51:11"
															},
															"nativeSrc": "7339:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "7339:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7410:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7410:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7421:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7421:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7406:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7406:3:11"
																		},
																		"nativeSrc": "7406:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7406:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7430:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7430:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7446:3:11",
																								"nodeType": "YulLiteral",
																								"src": "7446:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7451:1:11",
																								"nodeType": "YulLiteral",
																								"src": "7451:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7442:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "7442:3:11"
																						},
																						"nativeSrc": "7442:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "7442:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7455:1:11",
																						"nodeType": "YulLiteral",
																						"src": "7455:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7438:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7438:3:11"
																				},
																				"nativeSrc": "7438:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7438:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7426:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7426:3:11"
																		},
																		"nativeSrc": "7426:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7426:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7399:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7399:6:11"
																},
																"nativeSrc": "7399:60:11",
																"nodeType": "YulFunctionCall",
																"src": "7399:60:11"
															},
															"nativeSrc": "7399:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "7399:60:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7479:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7479:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7490:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7490:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7475:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7475:3:11"
																		},
																		"nativeSrc": "7475:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7475:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7495:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7495:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7468:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7468:6:11"
																},
																"nativeSrc": "7468:34:11",
																"nodeType": "YulFunctionCall",
																"src": "7468:34:11"
															},
															"nativeSrc": "7468:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "7468:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7137:371:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7247:9:11",
														"nodeType": "YulTypedName",
														"src": "7247:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7258:6:11",
														"nodeType": "YulTypedName",
														"src": "7258:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7266:6:11",
														"nodeType": "YulTypedName",
														"src": "7266:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7274:6:11",
														"nodeType": "YulTypedName",
														"src": "7274:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7285:4:11",
														"nodeType": "YulTypedName",
														"src": "7285:4:11",
														"type": ""
													}
												],
												"src": "7137:371:11"
											},
											{
												"body": {
													"nativeSrc": "7591:167:11",
													"nodeType": "YulBlock",
													"src": "7591:167:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7637:16:11",
																"nodeType": "YulBlock",
																"src": "7637:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7646:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7646:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7649:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7649:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7639:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7639:6:11"
																			},
																			"nativeSrc": "7639:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7639:12:11"
																		},
																		"nativeSrc": "7639:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7639:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7612:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7612:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7621:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7621:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7608:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7608:3:11"
																		},
																		"nativeSrc": "7608:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7608:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7633:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7633:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7604:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7604:3:11"
																},
																"nativeSrc": "7604:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7604:32:11"
															},
															"nativeSrc": "7601:52:11",
															"nodeType": "YulIf",
															"src": "7601:52:11"
														},
														{
															"nativeSrc": "7662:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7662:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7681:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7681:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7675:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7675:5:11"
																},
																"nativeSrc": "7675:16:11",
																"nodeType": "YulFunctionCall",
																"src": "7675:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7666:5:11",
																	"nodeType": "YulTypedName",
																	"src": "7666:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7722:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7722:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "7700:21:11",
																	"nodeType": "YulIdentifier",
																	"src": "7700:21:11"
																},
																"nativeSrc": "7700:28:11",
																"nodeType": "YulFunctionCall",
																"src": "7700:28:11"
															},
															"nativeSrc": "7700:28:11",
															"nodeType": "YulExpressionStatement",
															"src": "7700:28:11"
														},
														{
															"nativeSrc": "7737:15:11",
															"nodeType": "YulAssignment",
															"src": "7737:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "7747:5:11",
																"nodeType": "YulIdentifier",
																"src": "7747:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7737:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7737:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7513:245:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7557:9:11",
														"nodeType": "YulTypedName",
														"src": "7557:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7568:7:11",
														"nodeType": "YulTypedName",
														"src": "7568:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7580:6:11",
														"nodeType": "YulTypedName",
														"src": "7580:6:11",
														"type": ""
													}
												],
												"src": "7513:245:11"
											},
											{
												"body": {
													"nativeSrc": "7920:188:11",
													"nodeType": "YulBlock",
													"src": "7920:188:11",
													"statements": [
														{
															"nativeSrc": "7930:26:11",
															"nodeType": "YulAssignment",
															"src": "7930:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7942:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7942:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7953:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7953:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7938:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7938:3:11"
																},
																"nativeSrc": "7938:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7938:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7930:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7930:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7972:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7972:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7987:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7987:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8003:3:11",
																								"nodeType": "YulLiteral",
																								"src": "8003:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8008:1:11",
																								"nodeType": "YulLiteral",
																								"src": "8008:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7999:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "7999:3:11"
																						},
																						"nativeSrc": "7999:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "7999:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8012:1:11",
																						"nodeType": "YulLiteral",
																						"src": "8012:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7995:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7995:3:11"
																				},
																				"nativeSrc": "7995:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7995:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7983:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7983:3:11"
																		},
																		"nativeSrc": "7983:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7983:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7965:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7965:6:11"
																},
																"nativeSrc": "7965:51:11",
																"nodeType": "YulFunctionCall",
																"src": "7965:51:11"
															},
															"nativeSrc": "7965:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "7965:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8036:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8036:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8047:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8047:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8032:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8032:3:11"
																		},
																		"nativeSrc": "8032:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8032:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8052:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8052:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8025:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8025:6:11"
																},
																"nativeSrc": "8025:34:11",
																"nodeType": "YulFunctionCall",
																"src": "8025:34:11"
															},
															"nativeSrc": "8025:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "8025:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8079:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8079:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8090:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8090:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8075:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8075:3:11"
																		},
																		"nativeSrc": "8075:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8075:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8095:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8095:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8068:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8068:6:11"
																},
																"nativeSrc": "8068:34:11",
																"nodeType": "YulFunctionCall",
																"src": "8068:34:11"
															},
															"nativeSrc": "8068:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "8068:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7763:345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7873:9:11",
														"nodeType": "YulTypedName",
														"src": "7873:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7884:6:11",
														"nodeType": "YulTypedName",
														"src": "7884:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7892:6:11",
														"nodeType": "YulTypedName",
														"src": "7892:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7900:6:11",
														"nodeType": "YulTypedName",
														"src": "7900:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7911:4:11",
														"nodeType": "YulTypedName",
														"src": "7911:4:11",
														"type": ""
													}
												],
												"src": "7763:345:11"
											},
											{
												"body": {
													"nativeSrc": "8242:145:11",
													"nodeType": "YulBlock",
													"src": "8242:145:11",
													"statements": [
														{
															"nativeSrc": "8252:26:11",
															"nodeType": "YulAssignment",
															"src": "8252:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8264:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8264:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8275:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8275:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8260:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8260:3:11"
																},
																"nativeSrc": "8260:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8260:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8252:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8252:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8294:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8294:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8309:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8309:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8325:3:11",
																								"nodeType": "YulLiteral",
																								"src": "8325:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8330:1:11",
																								"nodeType": "YulLiteral",
																								"src": "8330:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8321:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "8321:3:11"
																						},
																						"nativeSrc": "8321:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "8321:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8334:1:11",
																						"nodeType": "YulLiteral",
																						"src": "8334:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8317:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8317:3:11"
																				},
																				"nativeSrc": "8317:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8317:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8305:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8305:3:11"
																		},
																		"nativeSrc": "8305:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8305:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8287:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8287:6:11"
																},
																"nativeSrc": "8287:51:11",
																"nodeType": "YulFunctionCall",
																"src": "8287:51:11"
															},
															"nativeSrc": "8287:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "8287:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8358:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8358:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8369:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8369:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8354:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8354:3:11"
																		},
																		"nativeSrc": "8354:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8354:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8374:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8374:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8347:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8347:6:11"
																},
																"nativeSrc": "8347:34:11",
																"nodeType": "YulFunctionCall",
																"src": "8347:34:11"
															},
															"nativeSrc": "8347:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "8347:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8113:274:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8203:9:11",
														"nodeType": "YulTypedName",
														"src": "8203:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8214:6:11",
														"nodeType": "YulTypedName",
														"src": "8214:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8222:6:11",
														"nodeType": "YulTypedName",
														"src": "8222:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8233:4:11",
														"nodeType": "YulTypedName",
														"src": "8233:4:11",
														"type": ""
													}
												],
												"src": "8113:274:11"
											},
											{
												"body": {
													"nativeSrc": "8566:181:11",
													"nodeType": "YulBlock",
													"src": "8566:181:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8583:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8583:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8594:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8594:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8576:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8576:6:11"
																},
																"nativeSrc": "8576:21:11",
																"nodeType": "YulFunctionCall",
																"src": "8576:21:11"
															},
															"nativeSrc": "8576:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "8576:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8617:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8617:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8628:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8628:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8613:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8613:3:11"
																		},
																		"nativeSrc": "8613:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8613:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8633:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8633:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8606:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8606:6:11"
																},
																"nativeSrc": "8606:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8606:30:11"
															},
															"nativeSrc": "8606:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "8606:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8656:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8656:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8667:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8667:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8652:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8652:3:11"
																		},
																		"nativeSrc": "8652:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8652:18:11"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "8672:33:11",
																		"nodeType": "YulLiteral",
																		"src": "8672:33:11",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8645:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8645:6:11"
																},
																"nativeSrc": "8645:61:11",
																"nodeType": "YulFunctionCall",
																"src": "8645:61:11"
															},
															"nativeSrc": "8645:61:11",
															"nodeType": "YulExpressionStatement",
															"src": "8645:61:11"
														},
														{
															"nativeSrc": "8715:26:11",
															"nodeType": "YulAssignment",
															"src": "8715:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8727:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8727:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8738:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8738:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8723:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8723:3:11"
																},
																"nativeSrc": "8723:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8723:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8715:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8715:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8392:355:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8543:9:11",
														"nodeType": "YulTypedName",
														"src": "8543:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8557:4:11",
														"nodeType": "YulTypedName",
														"src": "8557:4:11",
														"type": ""
													}
												],
												"src": "8392:355:11"
											},
											{
												"body": {
													"nativeSrc": "8926:166:11",
													"nodeType": "YulBlock",
													"src": "8926:166:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8943:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8943:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8954:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8954:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8936:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8936:6:11"
																},
																"nativeSrc": "8936:21:11",
																"nodeType": "YulFunctionCall",
																"src": "8936:21:11"
															},
															"nativeSrc": "8936:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "8936:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8977:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8977:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8988:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8988:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8973:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8973:3:11"
																		},
																		"nativeSrc": "8973:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8973:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8993:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8993:2:11",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8966:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8966:6:11"
																},
																"nativeSrc": "8966:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8966:30:11"
															},
															"nativeSrc": "8966:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "8966:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9016:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9016:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9027:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9027:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9012:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9012:3:11"
																		},
																		"nativeSrc": "9012:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9012:18:11"
																	},
																	{
																		"hexValue": "696e76616c6964205f616d6f756e7421",
																		"kind": "string",
																		"nativeSrc": "9032:18:11",
																		"nodeType": "YulLiteral",
																		"src": "9032:18:11",
																		"type": "",
																		"value": "invalid _amount!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9005:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9005:6:11"
																},
																"nativeSrc": "9005:46:11",
																"nodeType": "YulFunctionCall",
																"src": "9005:46:11"
															},
															"nativeSrc": "9005:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "9005:46:11"
														},
														{
															"nativeSrc": "9060:26:11",
															"nodeType": "YulAssignment",
															"src": "9060:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9072:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9072:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9083:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9083:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9068:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9068:3:11"
																},
																"nativeSrc": "9068:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9068:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9060:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9060:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_edf0ef2f15806b360b15962b170fb2777290898683710e6c2ca3b716acccdb55__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8752:340:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8903:9:11",
														"nodeType": "YulTypedName",
														"src": "8903:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8917:4:11",
														"nodeType": "YulTypedName",
														"src": "8917:4:11",
														"type": ""
													}
												],
												"src": "8752:340:11"
											},
											{
												"body": {
													"nativeSrc": "9226:119:11",
													"nodeType": "YulBlock",
													"src": "9226:119:11",
													"statements": [
														{
															"nativeSrc": "9236:26:11",
															"nodeType": "YulAssignment",
															"src": "9236:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9248:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9248:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9259:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9259:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9244:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9244:3:11"
																},
																"nativeSrc": "9244:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9244:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9236:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9236:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9278:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9278:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9289:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9289:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9271:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9271:6:11"
																},
																"nativeSrc": "9271:25:11",
																"nodeType": "YulFunctionCall",
																"src": "9271:25:11"
															},
															"nativeSrc": "9271:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "9271:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9316:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9316:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9327:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9327:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9312:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9312:3:11"
																		},
																		"nativeSrc": "9312:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9312:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9332:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9332:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9305:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9305:6:11"
																},
																"nativeSrc": "9305:34:11",
																"nodeType": "YulFunctionCall",
																"src": "9305:34:11"
															},
															"nativeSrc": "9305:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "9305:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9097:248:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9187:9:11",
														"nodeType": "YulTypedName",
														"src": "9187:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9198:6:11",
														"nodeType": "YulTypedName",
														"src": "9198:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9206:6:11",
														"nodeType": "YulTypedName",
														"src": "9206:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9217:4:11",
														"nodeType": "YulTypedName",
														"src": "9217:4:11",
														"type": ""
													}
												],
												"src": "9097:248:11"
											},
											{
												"body": {
													"nativeSrc": "9458:101:11",
													"nodeType": "YulBlock",
													"src": "9458:101:11",
													"statements": [
														{
															"nativeSrc": "9468:26:11",
															"nodeType": "YulAssignment",
															"src": "9468:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9480:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9480:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9491:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9491:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9476:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9476:3:11"
																},
																"nativeSrc": "9476:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9476:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9468:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9468:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9510:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9510:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9525:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9525:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9533:18:11",
																				"nodeType": "YulLiteral",
																				"src": "9533:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9521:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9521:3:11"
																		},
																		"nativeSrc": "9521:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9521:31:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9503:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9503:6:11"
																},
																"nativeSrc": "9503:50:11",
																"nodeType": "YulFunctionCall",
																"src": "9503:50:11"
															},
															"nativeSrc": "9503:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "9503:50:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "9350:209:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9427:9:11",
														"nodeType": "YulTypedName",
														"src": "9427:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9438:6:11",
														"nodeType": "YulTypedName",
														"src": "9438:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9449:4:11",
														"nodeType": "YulTypedName",
														"src": "9449:4:11",
														"type": ""
													}
												],
												"src": "9350:209:11"
											},
											{
												"body": {
													"nativeSrc": "9693:171:11",
													"nodeType": "YulBlock",
													"src": "9693:171:11",
													"statements": [
														{
															"nativeSrc": "9703:26:11",
															"nodeType": "YulAssignment",
															"src": "9703:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9715:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9715:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9726:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9726:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9711:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9711:3:11"
																},
																"nativeSrc": "9711:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9711:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9703:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9703:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9745:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9745:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9760:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9760:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9776:3:11",
																								"nodeType": "YulLiteral",
																								"src": "9776:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9781:1:11",
																								"nodeType": "YulLiteral",
																								"src": "9781:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9772:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "9772:3:11"
																						},
																						"nativeSrc": "9772:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "9772:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9785:1:11",
																						"nodeType": "YulLiteral",
																						"src": "9785:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9768:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9768:3:11"
																				},
																				"nativeSrc": "9768:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9768:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9756:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9756:3:11"
																		},
																		"nativeSrc": "9756:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9756:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9738:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9738:6:11"
																},
																"nativeSrc": "9738:51:11",
																"nodeType": "YulFunctionCall",
																"src": "9738:51:11"
															},
															"nativeSrc": "9738:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "9738:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9809:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9809:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9820:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9820:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9805:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9805:3:11"
																		},
																		"nativeSrc": "9805:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9805:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9829:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9829:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9845:3:11",
																								"nodeType": "YulLiteral",
																								"src": "9845:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9850:1:11",
																								"nodeType": "YulLiteral",
																								"src": "9850:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9841:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "9841:3:11"
																						},
																						"nativeSrc": "9841:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "9841:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9854:1:11",
																						"nodeType": "YulLiteral",
																						"src": "9854:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9837:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9837:3:11"
																				},
																				"nativeSrc": "9837:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9837:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9825:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:11"
																		},
																		"nativeSrc": "9825:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9798:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9798:6:11"
																},
																"nativeSrc": "9798:60:11",
																"nodeType": "YulFunctionCall",
																"src": "9798:60:11"
															},
															"nativeSrc": "9798:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "9798:60:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "9564:300:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9654:9:11",
														"nodeType": "YulTypedName",
														"src": "9654:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9665:6:11",
														"nodeType": "YulTypedName",
														"src": "9665:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9673:6:11",
														"nodeType": "YulTypedName",
														"src": "9673:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9684:4:11",
														"nodeType": "YulTypedName",
														"src": "9684:4:11",
														"type": ""
													}
												],
												"src": "9564:300:11"
											},
											{
												"body": {
													"nativeSrc": "10020:230:11",
													"nodeType": "YulBlock",
													"src": "10020:230:11",
													"statements": [
														{
															"nativeSrc": "10030:26:11",
															"nodeType": "YulAssignment",
															"src": "10030:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10042:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10042:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10053:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10053:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10038:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10038:3:11"
																},
																"nativeSrc": "10038:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10038:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10030:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10030:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10072:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10072:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10087:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10087:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10103:3:11",
																								"nodeType": "YulLiteral",
																								"src": "10103:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10108:1:11",
																								"nodeType": "YulLiteral",
																								"src": "10108:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10099:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "10099:3:11"
																						},
																						"nativeSrc": "10099:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "10099:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10112:1:11",
																						"nodeType": "YulLiteral",
																						"src": "10112:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10095:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10095:3:11"
																				},
																				"nativeSrc": "10095:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10095:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10083:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10083:3:11"
																		},
																		"nativeSrc": "10083:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10083:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10065:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10065:6:11"
																},
																"nativeSrc": "10065:51:11",
																"nodeType": "YulFunctionCall",
																"src": "10065:51:11"
															},
															"nativeSrc": "10065:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "10065:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10136:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10136:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10147:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10147:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10132:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10132:3:11"
																		},
																		"nativeSrc": "10132:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10132:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10156:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10156:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10172:3:11",
																								"nodeType": "YulLiteral",
																								"src": "10172:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10177:1:11",
																								"nodeType": "YulLiteral",
																								"src": "10177:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10168:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "10168:3:11"
																						},
																						"nativeSrc": "10168:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "10168:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10181:1:11",
																						"nodeType": "YulLiteral",
																						"src": "10181:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10164:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10164:3:11"
																				},
																				"nativeSrc": "10164:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10164:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10152:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10152:3:11"
																		},
																		"nativeSrc": "10152:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10152:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10125:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10125:6:11"
																},
																"nativeSrc": "10125:60:11",
																"nodeType": "YulFunctionCall",
																"src": "10125:60:11"
															},
															"nativeSrc": "10125:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "10125:60:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10205:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10205:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10216:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10216:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10201:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10201:3:11"
																		},
																		"nativeSrc": "10201:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10201:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nativeSrc": "10235:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "10235:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10228:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "10228:6:11"
																				},
																				"nativeSrc": "10228:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10228:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "10221:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "10221:6:11"
																		},
																		"nativeSrc": "10221:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10221:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10194:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10194:6:11"
																},
																"nativeSrc": "10194:50:11",
																"nodeType": "YulFunctionCall",
																"src": "10194:50:11"
															},
															"nativeSrc": "10194:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "10194:50:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed",
												"nativeSrc": "9869:381:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9973:9:11",
														"nodeType": "YulTypedName",
														"src": "9973:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9984:6:11",
														"nodeType": "YulTypedName",
														"src": "9984:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9992:6:11",
														"nodeType": "YulTypedName",
														"src": "9992:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10000:6:11",
														"nodeType": "YulTypedName",
														"src": "10000:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10011:4:11",
														"nodeType": "YulTypedName",
														"src": "10011:4:11",
														"type": ""
													}
												],
												"src": "9869:381:11"
											},
											{
												"body": {
													"nativeSrc": "10429:167:11",
													"nodeType": "YulBlock",
													"src": "10429:167:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10446:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10446:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10457:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10457:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10439:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10439:6:11"
																},
																"nativeSrc": "10439:21:11",
																"nodeType": "YulFunctionCall",
																"src": "10439:21:11"
															},
															"nativeSrc": "10439:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "10439:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10480:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10480:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10491:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10491:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10476:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10476:3:11"
																		},
																		"nativeSrc": "10476:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10476:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10496:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10496:2:11",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10469:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10469:6:11"
																},
																"nativeSrc": "10469:30:11",
																"nodeType": "YulFunctionCall",
																"src": "10469:30:11"
															},
															"nativeSrc": "10469:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "10469:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10519:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10519:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10530:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10530:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10515:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10515:3:11"
																		},
																		"nativeSrc": "10515:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10515:18:11"
																	},
																	{
																		"hexValue": "6e6f7420656e6f75676820616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "10535:19:11",
																		"nodeType": "YulLiteral",
																		"src": "10535:19:11",
																		"type": "",
																		"value": "not enough amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10508:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10508:6:11"
																},
																"nativeSrc": "10508:47:11",
																"nodeType": "YulFunctionCall",
																"src": "10508:47:11"
															},
															"nativeSrc": "10508:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "10508:47:11"
														},
														{
															"nativeSrc": "10564:26:11",
															"nodeType": "YulAssignment",
															"src": "10564:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10576:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10576:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10587:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10587:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10572:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10572:3:11"
																},
																"nativeSrc": "10572:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10572:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10564:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10564:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2896206a6aa8d5667f893f8cfc5e436c46f1afa2bf5470d00747369cbc513866__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10255:341:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10406:9:11",
														"nodeType": "YulTypedName",
														"src": "10406:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10420:4:11",
														"nodeType": "YulTypedName",
														"src": "10420:4:11",
														"type": ""
													}
												],
												"src": "10255:341:11"
											},
											{
												"body": {
													"nativeSrc": "10653:116:11",
													"nodeType": "YulBlock",
													"src": "10653:116:11",
													"statements": [
														{
															"nativeSrc": "10663:20:11",
															"nodeType": "YulAssignment",
															"src": "10663:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10678:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10678:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10681:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10681:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10674:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10674:3:11"
																},
																"nativeSrc": "10674:9:11",
																"nodeType": "YulFunctionCall",
																"src": "10674:9:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10663:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "10663:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10741:22:11",
																"nodeType": "YulBlock",
																"src": "10741:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10743:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10743:16:11"
																			},
																			"nativeSrc": "10743:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10743:18:11"
																		},
																		"nativeSrc": "10743:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10743:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10712:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "10712:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10705:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "10705:6:11"
																				},
																				"nativeSrc": "10705:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10705:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10719:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "10719:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10726:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "10726:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10735:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "10735:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10722:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "10722:3:11"
																						},
																						"nativeSrc": "10722:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "10722:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10716:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "10716:2:11"
																				},
																				"nativeSrc": "10716:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10716:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10702:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "10702:2:11"
																		},
																		"nativeSrc": "10702:37:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10702:37:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10695:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10695:6:11"
																},
																"nativeSrc": "10695:45:11",
																"nodeType": "YulFunctionCall",
																"src": "10695:45:11"
															},
															"nativeSrc": "10692:71:11",
															"nodeType": "YulIf",
															"src": "10692:71:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10601:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10632:1:11",
														"nodeType": "YulTypedName",
														"src": "10632:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10635:1:11",
														"nodeType": "YulTypedName",
														"src": "10635:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10641:7:11",
														"nodeType": "YulTypedName",
														"src": "10641:7:11",
														"type": ""
													}
												],
												"src": "10601:168:11"
											},
											{
												"body": {
													"nativeSrc": "10820:171:11",
													"nodeType": "YulBlock",
													"src": "10820:171:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "10851:111:11",
																"nodeType": "YulBlock",
																"src": "10851:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10872:1:11",
																					"nodeType": "YulLiteral",
																					"src": "10872:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10879:3:11",
																							"nodeType": "YulLiteral",
																							"src": "10879:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10884:10:11",
																							"nodeType": "YulLiteral",
																							"src": "10884:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "10875:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "10875:3:11"
																					},
																					"nativeSrc": "10875:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "10875:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10865:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10865:6:11"
																			},
																			"nativeSrc": "10865:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10865:31:11"
																		},
																		"nativeSrc": "10865:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10865:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10916:1:11",
																					"nodeType": "YulLiteral",
																					"src": "10916:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10919:4:11",
																					"nodeType": "YulLiteral",
																					"src": "10919:4:11",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10909:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10909:6:11"
																			},
																			"nativeSrc": "10909:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10909:15:11"
																		},
																		"nativeSrc": "10909:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10909:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10944:1:11",
																					"nodeType": "YulLiteral",
																					"src": "10944:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10947:4:11",
																					"nodeType": "YulLiteral",
																					"src": "10947:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10937:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10937:6:11"
																			},
																			"nativeSrc": "10937:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10937:15:11"
																		},
																		"nativeSrc": "10937:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10937:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10840:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10840:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10833:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10833:6:11"
																},
																"nativeSrc": "10833:9:11",
																"nodeType": "YulFunctionCall",
																"src": "10833:9:11"
															},
															"nativeSrc": "10830:132:11",
															"nodeType": "YulIf",
															"src": "10830:132:11"
														},
														{
															"nativeSrc": "10971:14:11",
															"nodeType": "YulAssignment",
															"src": "10971:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10980:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10980:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10983:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10983:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10976:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10976:3:11"
																},
																"nativeSrc": "10976:9:11",
																"nodeType": "YulFunctionCall",
																"src": "10976:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10971:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10971:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10774:217:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10805:1:11",
														"nodeType": "YulTypedName",
														"src": "10805:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10808:1:11",
														"nodeType": "YulTypedName",
														"src": "10808:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10814:1:11",
														"nodeType": "YulTypedName",
														"src": "10814:1:11",
														"type": ""
													}
												],
												"src": "10774:217:11"
											},
											{
												"body": {
													"nativeSrc": "11170:176:11",
													"nodeType": "YulBlock",
													"src": "11170:176:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11187:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11187:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11198:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11198:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11180:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11180:6:11"
																},
																"nativeSrc": "11180:21:11",
																"nodeType": "YulFunctionCall",
																"src": "11180:21:11"
															},
															"nativeSrc": "11180:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "11180:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11221:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11221:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11232:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11232:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11217:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11217:3:11"
																		},
																		"nativeSrc": "11217:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11217:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11237:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11237:2:11",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11210:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11210:6:11"
																},
																"nativeSrc": "11210:30:11",
																"nodeType": "YulFunctionCall",
																"src": "11210:30:11"
															},
															"nativeSrc": "11210:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "11210:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11260:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11260:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11271:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11271:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11256:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11256:3:11"
																		},
																		"nativeSrc": "11256:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11256:18:11"
																	},
																	{
																		"hexValue": "416d6f756e742069732067726561746572207468656e20353025",
																		"kind": "string",
																		"nativeSrc": "11276:28:11",
																		"nodeType": "YulLiteral",
																		"src": "11276:28:11",
																		"type": "",
																		"value": "Amount is greater then 50%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11249:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11249:6:11"
																},
																"nativeSrc": "11249:56:11",
																"nodeType": "YulFunctionCall",
																"src": "11249:56:11"
															},
															"nativeSrc": "11249:56:11",
															"nodeType": "YulExpressionStatement",
															"src": "11249:56:11"
														},
														{
															"nativeSrc": "11314:26:11",
															"nodeType": "YulAssignment",
															"src": "11314:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11326:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11326:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11337:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11337:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11322:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11322:3:11"
																},
																"nativeSrc": "11322:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11322:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11314:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11314:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_daaf22ee48ba14ce5532421d554d114832ad11cacc0a90889b6df539cd8418d7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10996:350:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11147:9:11",
														"nodeType": "YulTypedName",
														"src": "11147:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11161:4:11",
														"nodeType": "YulTypedName",
														"src": "11161:4:11",
														"type": ""
													}
												],
												"src": "10996:350:11"
											},
											{
												"body": {
													"nativeSrc": "11432:103:11",
													"nodeType": "YulBlock",
													"src": "11432:103:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "11478:16:11",
																"nodeType": "YulBlock",
																"src": "11478:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11487:1:11",
																					"nodeType": "YulLiteral",
																					"src": "11487:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11490:1:11",
																					"nodeType": "YulLiteral",
																					"src": "11490:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11480:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11480:6:11"
																			},
																			"nativeSrc": "11480:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11480:12:11"
																		},
																		"nativeSrc": "11480:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11480:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11453:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "11453:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11462:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11462:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11449:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11449:3:11"
																		},
																		"nativeSrc": "11449:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11449:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11474:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11474:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11445:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11445:3:11"
																},
																"nativeSrc": "11445:32:11",
																"nodeType": "YulFunctionCall",
																"src": "11445:32:11"
															},
															"nativeSrc": "11442:52:11",
															"nodeType": "YulIf",
															"src": "11442:52:11"
														},
														{
															"nativeSrc": "11503:26:11",
															"nodeType": "YulAssignment",
															"src": "11503:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11519:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11519:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11513:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "11513:5:11"
																},
																"nativeSrc": "11513:16:11",
																"nodeType": "YulFunctionCall",
																"src": "11513:16:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "11503:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11503:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "11351:184:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11398:9:11",
														"nodeType": "YulTypedName",
														"src": "11398:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11409:7:11",
														"nodeType": "YulTypedName",
														"src": "11409:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11421:6:11",
														"nodeType": "YulTypedName",
														"src": "11421:6:11",
														"type": ""
													}
												],
												"src": "11351:184:11"
											},
											{
												"body": {
													"nativeSrc": "11714:158:11",
													"nodeType": "YulBlock",
													"src": "11714:158:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11731:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11731:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11742:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11742:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11724:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11724:6:11"
																},
																"nativeSrc": "11724:21:11",
																"nodeType": "YulFunctionCall",
																"src": "11724:21:11"
															},
															"nativeSrc": "11724:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "11724:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11765:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11765:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11776:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11776:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11761:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11761:3:11"
																		},
																		"nativeSrc": "11761:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11761:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11781:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11781:1:11",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11754:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11754:6:11"
																},
																"nativeSrc": "11754:29:11",
																"nodeType": "YulFunctionCall",
																"src": "11754:29:11"
															},
															"nativeSrc": "11754:29:11",
															"nodeType": "YulExpressionStatement",
															"src": "11754:29:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11803:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11803:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11814:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11814:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11799:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11799:3:11"
																		},
																		"nativeSrc": "11799:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11799:18:11"
																	},
																	{
																		"hexValue": "6e6f20757365727321",
																		"kind": "string",
																		"nativeSrc": "11819:11:11",
																		"nodeType": "YulLiteral",
																		"src": "11819:11:11",
																		"type": "",
																		"value": "no users!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11792:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11792:6:11"
																},
																"nativeSrc": "11792:39:11",
																"nodeType": "YulFunctionCall",
																"src": "11792:39:11"
															},
															"nativeSrc": "11792:39:11",
															"nodeType": "YulExpressionStatement",
															"src": "11792:39:11"
														},
														{
															"nativeSrc": "11840:26:11",
															"nodeType": "YulAssignment",
															"src": "11840:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11852:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11852:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11863:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11863:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11848:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11848:3:11"
																},
																"nativeSrc": "11848:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11848:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11840:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11840:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1476a1cda5feb6ab53a37c2c7223dd9dbe68eef7367c234c0265c2a3fba3931a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11540:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11691:9:11",
														"nodeType": "YulTypedName",
														"src": "11691:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11705:4:11",
														"nodeType": "YulTypedName",
														"src": "11705:4:11",
														"type": ""
													}
												],
												"src": "11540:332:11"
											},
											{
												"body": {
													"nativeSrc": "12051:223:11",
													"nodeType": "YulBlock",
													"src": "12051:223:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12068:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12068:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12079:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12079:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12061:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12061:6:11"
																},
																"nativeSrc": "12061:21:11",
																"nodeType": "YulFunctionCall",
																"src": "12061:21:11"
															},
															"nativeSrc": "12061:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "12061:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12102:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12102:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12113:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12113:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12098:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12098:3:11"
																		},
																		"nativeSrc": "12098:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12098:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12118:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12118:2:11",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12091:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12091:6:11"
																},
																"nativeSrc": "12091:30:11",
																"nodeType": "YulFunctionCall",
																"src": "12091:30:11"
															},
															"nativeSrc": "12091:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "12091:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12141:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12141:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12152:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12152:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12137:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12137:3:11"
																		},
																		"nativeSrc": "12137:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12137:18:11"
																	},
																	{
																		"hexValue": "5f746f74616c5374616b65416d6f756e742063616e206e6f74206265207a6572",
																		"kind": "string",
																		"nativeSrc": "12157:34:11",
																		"nodeType": "YulLiteral",
																		"src": "12157:34:11",
																		"type": "",
																		"value": "_totalStakeAmount can not be zer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12130:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12130:6:11"
																},
																"nativeSrc": "12130:62:11",
																"nodeType": "YulFunctionCall",
																"src": "12130:62:11"
															},
															"nativeSrc": "12130:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "12130:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12212:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12212:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12223:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12223:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12208:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12208:3:11"
																		},
																		"nativeSrc": "12208:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12208:18:11"
																	},
																	{
																		"hexValue": "6f",
																		"kind": "string",
																		"nativeSrc": "12228:3:11",
																		"nodeType": "YulLiteral",
																		"src": "12228:3:11",
																		"type": "",
																		"value": "o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12201:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12201:6:11"
																},
																"nativeSrc": "12201:31:11",
																"nodeType": "YulFunctionCall",
																"src": "12201:31:11"
															},
															"nativeSrc": "12201:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "12201:31:11"
														},
														{
															"nativeSrc": "12241:27:11",
															"nodeType": "YulAssignment",
															"src": "12241:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12253:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12253:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12264:3:11",
																		"nodeType": "YulLiteral",
																		"src": "12264:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12249:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12249:3:11"
																},
																"nativeSrc": "12249:19:11",
																"nodeType": "YulFunctionCall",
																"src": "12249:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12241:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12241:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_984c4c4b8842d5da27e0d4bd38d04c71d415ff13ebc33602156c2f6e28e0ad90__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11877:397:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12028:9:11",
														"nodeType": "YulTypedName",
														"src": "12028:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12042:4:11",
														"nodeType": "YulTypedName",
														"src": "12042:4:11",
														"type": ""
													}
												],
												"src": "11877:397:11"
											},
											{
												"body": {
													"nativeSrc": "12416:164:11",
													"nodeType": "YulBlock",
													"src": "12416:164:11",
													"statements": [
														{
															"nativeSrc": "12426:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "12426:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12446:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12446:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12440:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "12440:5:11"
																},
																"nativeSrc": "12440:13:11",
																"nodeType": "YulFunctionCall",
																"src": "12440:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12430:6:11",
																	"nodeType": "YulTypedName",
																	"src": "12430:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12468:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12468:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12477:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12477:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12485:4:11",
																				"nodeType": "YulLiteral",
																				"src": "12485:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12473:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12473:3:11"
																		},
																		"nativeSrc": "12473:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12473:17:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12492:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12492:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "12462:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "12462:5:11"
																},
																"nativeSrc": "12462:37:11",
																"nodeType": "YulFunctionCall",
																"src": "12462:37:11"
															},
															"nativeSrc": "12462:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "12462:37:11"
														},
														{
															"nativeSrc": "12508:26:11",
															"nodeType": "YulVariableDeclaration",
															"src": "12508:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12522:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12522:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12527:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12527:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12518:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12518:3:11"
																},
																"nativeSrc": "12518:16:11",
																"nodeType": "YulFunctionCall",
																"src": "12518:16:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "12512:2:11",
																	"nodeType": "YulTypedName",
																	"src": "12512:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "12550:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "12550:2:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12554:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12554:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12543:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12543:6:11"
																},
																"nativeSrc": "12543:13:11",
																"nodeType": "YulFunctionCall",
																"src": "12543:13:11"
															},
															"nativeSrc": "12543:13:11",
															"nodeType": "YulExpressionStatement",
															"src": "12543:13:11"
														},
														{
															"nativeSrc": "12565:9:11",
															"nodeType": "YulAssignment",
															"src": "12565:9:11",
															"value": {
																"name": "_1",
																"nativeSrc": "12572:2:11",
																"nodeType": "YulIdentifier",
																"src": "12572:2:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12565:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12565:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12279:301:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12392:3:11",
														"nodeType": "YulTypedName",
														"src": "12392:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12397:6:11",
														"nodeType": "YulTypedName",
														"src": "12397:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12408:3:11",
														"nodeType": "YulTypedName",
														"src": "12408:3:11",
														"type": ""
													}
												],
												"src": "12279:301:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IBEP20_$1425__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"This address does not have permi\")\n        mstore(add(headStart, 96), \"ssion to call performUpkeep\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_edf0ef2f15806b360b15962b170fb2777290898683710e6c2ca3b716acccdb55__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"invalid _amount!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_encode_tuple_t_stringliteral_2896206a6aa8d5667f893f8cfc5e436c46f1afa2bf5470d00747369cbc513866__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"not enough amount\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_daaf22ee48ba14ce5532421d554d114832ad11cacc0a90889b6df539cd8418d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Amount is greater then 50%\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_1476a1cda5feb6ab53a37c2c7223dd9dbe68eef7367c234c0265c2a3fba3931a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"no users!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_984c4c4b8842d5da27e0d4bd38d04c71d415ff13ebc33602156c2f6e28e0ad90__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"_totalStakeAmount can not be zer\")\n        mstore(add(headStart, 96), \"o\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"487": [
									{
										"length": 32,
										"start": 7165
									},
									{
										"length": 32,
										"start": 7206
									},
									{
										"length": 32,
										"start": 7530
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610275575f3560e01c806378fd078d1161014a578063b47ff951116100be578063d777cc6d11610078578063d777cc6d146107b8578063d9b998b4146107d7578063e9c68e2c146107f6578063ed0610671461080a578063f2fde38b14610829578063ff3d65d914610848575f80fd5b8063b47ff951146106a1578063b9dac1eb146106b6578063bccbc36c146106d5578063c0c53b8b14610756578063c7fd5bf014610775578063ce356a24146107a3575f80fd5b80638da5cb5b1161010f5780638da5cb5b146105ab578063947a36fb146105e75780639c361e4e146105fc578063a4f67b8b14610611578063ad3cb1cc14610645578063ad8e5ec414610682575f80fd5b806378fd078d146105105780637f111e601461052f5780637f70c5e71461054e5780637ffe4d931461056d57806385f452501461058c575f80fd5b80634585e33b116101ec5780635f17e616116101a65780635f17e6161461045e5780636626b26d1461047d57806367976974146104915780636e04ff0d146104b0578063715018a6146104dd5780637547c7a3146104f1575f80fd5b80634585e33b146103c55780634f1ef286146103e45780635256dbbf146103f757806352d1902d146104165780635462870d1461042a578063567e98f914610449575f80fd5b806330e3f8f81161023d57806330e3f8f81461032c57806333244c2c1461035c57806339518b5e146103715780633a71a9e4146103865780633f3b3b271461039b57806344490ff4146103b0575f80fd5b806301934a831461027957806311eac855146102a1578063188e07b9146102d75780632765df7a146102ec5780633070fbf81461030d575b5f80fd5b348015610284575f80fd5b5061028e60085481565b6040519081526020015b60405180910390f35b3480156102ac575f80fd5b505f546102bf906001600160a01b031681565b6040516001600160a01b039091168152602001610298565b3480156102e2575f80fd5b5061028e60015481565b3480156102f7575f80fd5b5061030b610306366004612294565b610873565b005b348015610318575f80fd5b50600d546102bf906001600160a01b031681565b348015610337575f80fd5b5060095461034c90600160a01b900460ff1681565b6040519015158152602001610298565b348015610367575f80fd5b5061028e60045481565b34801561037c575f80fd5b5061028e600b5481565b348015610391575f80fd5b5061028e60075481565b3480156103a6575f80fd5b5061028e600c5481565b3480156103bb575f80fd5b5061028e60055481565b3480156103d0575f80fd5b5061030b6103df3660046122ab565b61091d565b61030b6103f2366004612348565b610a44565b348015610402575f80fd5b5061030b610411366004612294565b610a5f565b348015610421575f80fd5b5061028e610b77565b348015610435575f80fd5b506009546102bf906001600160a01b031681565b348015610454575f80fd5b5061028e60035481565b348015610469575f80fd5b5061030b61047836600461240c565b610b92565b348015610488575f80fd5b5061030b610c30565b34801561049c575f80fd5b5061030b6104ab366004612294565b610c87565b3480156104bb575f80fd5b506104cf6104ca3660046122ab565b610e95565b60405161029892919061245a565b3480156104e8575f80fd5b5061030b610ec5565b3480156104fc575f80fd5b5061030b61050b366004612294565b610ed8565b34801561051b575f80fd5b5061030b61052a366004612294565b6110bf565b34801561053a575f80fd5b5061030b610549366004612294565b6111cb565b348015610559575f80fd5b5061030b610568366004612294565b61121e565b348015610578575f80fd5b5061030b610587366004612294565b611271565b348015610597575f80fd5b5061030b6105a636600461240c565b6113c0565b3480156105b6575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166102bf565b3480156105f2575f80fd5b5061028e600a5481565b348015610607575f80fd5b5061028e600e5481565b34801561061c575f80fd5b506102bf61062b366004612294565b60106020525f90815260409020546001600160a01b031681565b348015610650575f80fd5b50610675604051806040016040528060058152602001640352e302e360dc1b81525081565b604051610298919061247c565b34801561068d575f80fd5b5061030b61069c366004612294565b6114f8565b3480156106ac575f80fd5b5061028e60025481565b3480156106c1575f80fd5b5061030b6106d0366004612294565b61154b565b3480156106e0575f80fd5b506107276106ef36600461248e565b60126020525f908152604090208054600182015460028301546003840154600485015460059095015460ff9094169492939192909186565b6040805196151587526020870195909552938501929092526060840152608083015260a082015260c001610298565b348015610761575f80fd5b5061030b6107703660046124a7565b61159e565b348015610780575f80fd5b5061034c61078f36600461248e565b600f6020525f908152604090205460ff1681565b3480156107ae575f80fd5b5061028e60065481565b3480156107c3575f80fd5b5061030b6107d236600461248e565b6116fd565b3480156107e2575f80fd5b5061030b6107f13660046124f4565b61178c565b348015610801575f80fd5b5061030b6118a8565b348015610815575f80fd5b5061030b61082436600461240c565b611afb565b348015610834575f80fd5b5061030b61084336600461248e565b611b5a565b348015610853575f80fd5b5061028e610862366004612294565b60116020525f908152604090205481565b61087b611b97565b5f81116108a35760405163cdbc633560e01b8152600481018290526024015b60405180910390fd5b600e80545f908152601160205260408120839055815491906108c48361253d565b9091555050600e547fe1976e16ed8ce8e740235978fbe69b27d5eea683b2e017bb0bd2fabb33294b3f906108fa83612710612555565b60408051928352602083019190915281018390526060015b60405180910390a150565b600d546001600160a01b0316331461099d5760405162461bcd60e51b815260206004820152603b60248201527f54686973206164647265737320646f6573206e6f742068617665207065726d6960448201527f7373696f6e20746f2063616c6c20706572666f726d55706b6565700000000000606482015260840161089a565b600a545f036109c557600a54604051637154000760e01b815260040161089a91815260200190565b600954600160a01b900460ff16610a0f57600b5442106109f05742600c556109eb6118a8565b610a1b565b600b546040516354593e7560e01b815260040161089a91815260200190565b42600c55610a1b6118a8565b600954600160a01b900460ff16610a40576009805460ff60a01b1916600160a01b1790555b5050565b610a4c611bf2565b610a5582611c96565b610a408282611c9e565b610a67611b97565b5f8111610a8a576040516302ff478360e41b81526004810182905260240161089a565b8060015f828254610a9b9190612568565b90915550505f80546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610ad49033903090879060040161257b565b6020604051808303815f875af1158015610af0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b14919061259f565b905080610b385760405163d85d3cef60e01b8152811515600482015260240161089a565b7fa9f166643ec132a11638e74e3c3a78d4ae278fcbf92998240e0e97676f54e404600154604051610b6b91815260200190565b60405180910390a15050565b5f610b80611d5f565b505f8051602061265f83398151915290565b610b9a611b97565b5f8111610bbd57604051637154000760e01b81526004810182905260240161089a565b42821015610be1576040516354593e7560e01b81526004810183905260240161089a565b600a819055600b82905542600c8190556040805133815260208101849052908101919091527f2b5090e035d3026f5448298c9adc68db8bbc1b26a8af5c81b2b2a9fc07ca4a0090606001610b6b565b610c38611b97565b5f600a8190556009805460ff60a01b191690556040805133815260208101929092527f3b68dc4e210c46d3622293f2b941cdfde795bb6e17286bb289ba05a6a3b5541f910160405180910390a1565b600954600160a81b900460ff1615610ce15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161089a565b6009805460ff60a81b1916600160a81b17905580610d15576040516302ff478360e41b81526004810182905260240161089a565b335f90815260126020526040902060010154811115610d695760405162461bcd60e51b815260206004820152601060248201526f696e76616c6964205f616d6f756e742160801b604482015260640161089a565b335f9081526012602052604081206001018054839290610d8a908490612555565b9091555050335f9081526012602052604081206002018054839290610db0908490612568565b90915550505f805460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303815f875af1158015610e03573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e27919061259f565b905080610e4b5760405163d85d3cef60e01b8152811515600482015260240161089a565b60408051338152602081018490527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a150506009805460ff60a81b19169055565b5f60605f600a54600c5442610eaa9190612555565b60408051602081019091525f81529110969095509350505050565b610ecd611b97565b610ed65f611da8565b565b5f8111610efb576040516302ff478360e41b81526004810182905260240161089a565b335f9081526012602052604090205460ff1615610f4357335f90815260126020526040908190205490516301be970f60e61b815260ff9091161515600482015260240161089a565b335f9081526012602052604081206005018054839290610f64908490612568565b9091555050335f908152600f602052604090205460ff16610fcd57600880545f90815260106020908152604080832080546001600160a01b031916339081179091558352600f9091528120805460ff1916600117905581549190610fc78361253d565b91905055505b8060035f828254610fde9190612568565b90915550505f80546009546040516323b872dd60e01b81526001600160a01b03928316926323b872dd9261101c92339290911690879060040161257b565b6020604051808303815f875af1158015611038573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061105c919061259f565b9050806110805760405163d85d3cef60e01b8152811515600482015260240161089a565b6009546040517f14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab91610b6b9133916001600160a01b031690869061257b565b6110c7611b97565b5f81116110ea576040516302ff478360e41b81526004810182905260240161089a565b8060025f8282546110fb9190612568565b90915550505f80546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906111349033903090879060040161257b565b6020604051808303815f875af1158015611150573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611174919061259f565b9050806111985760405163d85d3cef60e01b8152811515600482015260240161089a565b7f73834e1d1ee73ba659470a3603b888903853d3a3c9fda34e71c093a0e35cab94600254604051610b6b91815260200190565b6111d3611b97565b5f81116111f65760405163cdbc633560e01b81526004810182905260240161089a565b600781905560408051338152602081018390525f8051602061267f8339815191529101610912565b611226611b97565b5f81116112495760405163cdbc633560e01b81526004810182905260240161089a565b600481905560408051338152602081018390525f8051602061267f8339815191529101610912565b5f8111611294576040516302ff478360e41b81526004810182905260240161089a565b335f9081526012602052604090205460ff16156112dc57335f90815260126020526040908190205490516301be970f60e61b815260ff9091161515600482015260240161089a565b335f90815260126020526040902060010154811061131057604051630636dc6b60e31b81526004810182905260240161089a565b335f9081526012602052604081206001018054839290611331908490612555565b9091555050335f9081526012602052604081206005018054839290611357908490612568565b925050819055508060025f82825461136f9190612568565b925050819055508060035f8282546113879190612568565b90915550506040517f14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab906109129033903090859061257b565b5f82116113e3576040516302ff478360e41b81526004810183905260240161089a565b600e548111156114095760405163222a50f360e01b81526004810182905260240161089a565b5f81815260116020526040902054611422908390611e18565b5f80546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906114569033903090889060040161257b565b6020604051808303815f875af1158015611472573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611496919061259f565b9050806114ba5760405163d85d3cef60e01b8152811515600482015260240161089a565b60408051848152602081018490527fa89b69c5958ec1ccf0df0de746a8708f5b6a6b429430129f16f46f44b319c900910160405180910390a1505050565b611500611b97565b5f81116115235760405163cdbc633560e01b81526004810182905260240161089a565b600681905560408051338152602081018390525f8051602061267f8339815191529101610912565b611553611b97565b5f81116115765760405163cdbc633560e01b81526004810182905260240161089a565b600581905560408051338152602081018390525f8051602061267f8339815191529101610912565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156115e35750825b90505f8267ffffffffffffffff1660011480156115ff5750303b155b90508115801561160d575080155b1561162b5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561165557845460ff60401b1916600160401b1785555b61165e88611e76565b611666611e87565b5f80546001600160a01b03808a166001600160a01b031992831617909255611388600455611d4c6005556105dc6006556103e8600755600980549289169290911691909117905583156116f357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b611705611b97565b6001600160a01b0381166117375760405163e4cfa94d60e01b81526001600160a01b038216600482015260240161089a565b600d80546001600160a01b0319166001600160a01b0383169081179091556040805133815260208101929092527f75f91f3cecb8c46f20150f60f77a6e1f0de00776627692db82ef1960af84c33a9101610912565b611794611b97565b6001600160a01b0382166117c65760405163e4cfa94d60e01b81526001600160a01b038316600482015260240161089a565b6001811515148015906117d857508015155b156117fa576040516381ed1ae360e01b8152811515600482015260240161089a565b80151560010361182b576001600160a01b0382165f908152601260205260409020805460ff1916600117905561184b565b6001600160a01b0382165f908152601260205260409020805460ff191690555b6001600160a01b0382165f818152601260209081526040918290205482513381529182019390935260ff9092161515908201527f7a1655bc3160d3413bf1d5235e55be12e01b7e8bc2436a9bff09c3b4fa2421f190606001610b6b565b5f805f6118b3611e8f565b9250925092505f6002541180156118cb57505f600154115b61190b5760405162461bcd60e51b81526020600482015260116024820152701b9bdd08195b9bdd59da08185b5bdd5b9d607a1b604482015260640161089a565b5f805b600854811015611aaf575f818152601060209081526040808320546001600160a01b03168352601290915290205460ff16611aa7576003545f828152601060209081526040808320546001600160a01b03168352601290915281206005015490919061197c906127106125ba565b61198691906125d1565b90505f6119938683612011565b90508060025f8282546119a69190612555565b909155506119b690508185612568565b93508460015f8282546119c99190612555565b90915550505f83815260106020908152604080832080546001600160a01b03908116855260129093528184206003018990555490911682528120600401829055611a138683612568565b5f858152601060209081526040808320546001600160a01b031683526012909152812060010180549293508392909190611a4e908490612568565b909155505087851115611aa35760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e742069732067726561746572207468656e20353025000000000000604482015260640161089a565b5050505b60010161190e565b506002546001546040805133815260208101939093528201527fee826440768329b0c72f81331212ee31fcdac1ea79a248d24821e40c34e580209060600160405180910390a150505050565b611b03611b97565b5f8111611b265760405163cdbc633560e01b81526004810182905260240161089a565b5f8281526011602090815260409182902083905581513381529081018390525f8051602061267f8339815191529101610b6b565b611b62611b97565b6001600160a01b038116611b8b57604051631e4fbdf760e01b81525f600482015260240161089a565b611b9481611da8565b50565b33611bc97f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610ed65760405163118cdaa760e01b815233600482015260240161089a565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480611c7857507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611c6c5f8051602061265f833981519152546001600160a01b031690565b6001600160a01b031614155b15610ed65760405163703e46dd60e11b815260040160405180910390fd5b611b94611b97565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611cf8575060408051601f3d908101601f19168201909252611cf5918101906125f0565b60015b611d2057604051634c9c8ce360e01b81526001600160a01b038316600482015260240161089a565b5f8051602061265f8339815191528114611d5057604051632a87526960e21b81526004810182905260240161089a565b611d5a8383612072565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ed65760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f611e2582612710612555565b90505f611e328483612011565b90505f611e3f8585612011565b90508160025f828254611e529190612568565b925050819055508060015f828254611e6a9190612568565b90915550505050505050565b611e7e6120c7565b611b9481612110565b610ed66120c7565b5f805f80611ea1600254611388612011565b90505f611eb082600554612011565b90505f611ebf83600654612011565b90505f611ece84600754612011565b90505f611edf600154600454612011565b90505f60085411611f1e5760405162461bcd60e51b81526020600482015260096024820152686e6f2075736572732160b81b604482015260640161089a565b5f60085482611f2d91906125d1565b9050611f398385612568565b60025f828254611f499190612555565b925050819055508360015f828254611f619190612568565b90915550505f805460095460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810187905291169063a9059cbb906044016020604051808303815f875af1158015611fb8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fdc919061259f565b9050806120005760405163d85d3cef60e01b8152811515600482015260240161089a565b509498939750939550919350505050565b5f825f036120315760405162461bcd60e51b815260040161089a90612607565b815f036120505760405162461bcd60e51b815260040161089a90612607565b5f61271061205e84866125ba565b61206891906125d1565b9150505b92915050565b61207b82612118565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156120bf57611d5a828261217b565b610a406121ed565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610ed657604051631afcd79f60e31b815260040160405180910390fd5b611b626120c7565b806001600160a01b03163b5f0361214d57604051634c9c8ce360e01b81526001600160a01b038216600482015260240161089a565b5f8051602061265f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516121979190612648565b5f60405180830381855af49150503d805f81146121cf576040519150601f19603f3d011682016040523d82523d5f602084013e6121d4565b606091505b50915091506121e485838361220c565b95945050505050565b3415610ed65760405163b398979f60e01b815260040160405180910390fd5b6060826122215761221c8261226b565b612264565b815115801561223857506001600160a01b0384163b155b1561226157604051639996b31560e01b81526001600160a01b038516600482015260240161089a565b50805b9392505050565b80511561227b5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f602082840312156122a4575f80fd5b5035919050565b5f80602083850312156122bc575f80fd5b823567ffffffffffffffff8111156122d2575f80fd5b8301601f810185136122e2575f80fd5b803567ffffffffffffffff8111156122f8575f80fd5b856020828401011115612309575f80fd5b6020919091019590945092505050565b80356001600160a01b038116811461232f575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215612359575f80fd5b61236283612319565b9150602083013567ffffffffffffffff81111561237d575f80fd5b8301601f8101851361238d575f80fd5b803567ffffffffffffffff8111156123a7576123a7612334565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156123d6576123d6612334565b6040528181528282016020018710156123ed575f80fd5b816020840160208301375f602083830101528093505050509250929050565b5f806040838503121561241d575f80fd5b50508035926020909101359150565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b8215158152604060208201525f612474604083018461242c565b949350505050565b602081525f612264602083018461242c565b5f6020828403121561249e575f80fd5b61226482612319565b5f805f606084860312156124b9575f80fd5b6124c284612319565b92506124d060208501612319565b91506124de60408501612319565b90509250925092565b8015158114611b94575f80fd5b5f8060408385031215612505575f80fd5b61250e83612319565b9150602083013561251e816124e7565b809150509250929050565b634e487b7160e01b5f52601160045260245ffd5b5f6001820161254e5761254e612529565b5060010190565b8181038181111561206c5761206c612529565b8082018082111561206c5761206c612529565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f602082840312156125af575f80fd5b8151612264816124e7565b808202811582820484141761206c5761206c612529565b5f826125eb57634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215612600575f80fd5b5051919050565b60208082526021908201527f5f746f74616c5374616b65416d6f756e742063616e206e6f74206265207a65726040820152606f60f81b606082015260800190565b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcb5671393c7c6980552e50a31e778921eb17d764c2e98fbf4d44fff524712def9a264697066735822122035be302540174fae70c4e731bbcb9b61546fa1e7b640471b5dc131f9b5e51e1464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x275 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78FD078D GT PUSH2 0x14A JUMPI DUP1 PUSH4 0xB47FF951 GT PUSH2 0xBE JUMPI DUP1 PUSH4 0xD777CC6D GT PUSH2 0x78 JUMPI DUP1 PUSH4 0xD777CC6D EQ PUSH2 0x7B8 JUMPI DUP1 PUSH4 0xD9B998B4 EQ PUSH2 0x7D7 JUMPI DUP1 PUSH4 0xE9C68E2C EQ PUSH2 0x7F6 JUMPI DUP1 PUSH4 0xED061067 EQ PUSH2 0x80A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x829 JUMPI DUP1 PUSH4 0xFF3D65D9 EQ PUSH2 0x848 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB47FF951 EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0xB9DAC1EB EQ PUSH2 0x6B6 JUMPI DUP1 PUSH4 0xBCCBC36C EQ PUSH2 0x6D5 JUMPI DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x756 JUMPI DUP1 PUSH4 0xC7FD5BF0 EQ PUSH2 0x775 JUMPI DUP1 PUSH4 0xCE356A24 EQ PUSH2 0x7A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x10F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0x947A36FB EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0x9C361E4E EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0xA4F67B8B EQ PUSH2 0x611 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x645 JUMPI DUP1 PUSH4 0xAD8E5EC4 EQ PUSH2 0x682 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x78FD078D EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x7F111E60 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0x7F70C5E7 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x7FFE4D93 EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0x85F45250 EQ PUSH2 0x58C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4585E33B GT PUSH2 0x1EC JUMPI DUP1 PUSH4 0x5F17E616 GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x5F17E616 EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x6626B26D EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0x67976974 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x4F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4585E33B EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0x5256DBBF EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0x5462870D EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x567E98F9 EQ PUSH2 0x449 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30E3F8F8 GT PUSH2 0x23D JUMPI DUP1 PUSH4 0x30E3F8F8 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x33244C2C EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x39518B5E EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x3A71A9E4 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x44490FF4 EQ PUSH2 0x3B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1934A83 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x11EAC855 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x188E07B9 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x2765DF7A EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x3070FBF8 EQ PUSH2 0x30D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x2BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x2BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x34C SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x3DF CALLDATASIZE PUSH1 0x4 PUSH2 0x22AB JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST PUSH2 0x30B PUSH2 0x3F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x411 CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH2 0xB77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x469 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x478 CALLDATASIZE PUSH1 0x4 PUSH2 0x240C JUMP JUMPDEST PUSH2 0xB92 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0xC30 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0xC87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CF PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x22AB JUMP JUMPDEST PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP3 SWAP2 SWAP1 PUSH2 0x245A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0xEC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x50B CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0xED8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x52A CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x10BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x11CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x559 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x568 CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x121E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x578 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x587 CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x1271 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x597 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x5A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x240C JUMP JUMPDEST PUSH2 0x13C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x607 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BF PUSH2 0x62B CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x675 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x247C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x69C CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x14F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x6D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x154B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x727 PUSH2 0x6EF CALLDATASIZE PUSH1 0x4 PUSH2 0x248E JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0xFF SWAP1 SWAP5 AND SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 ISZERO ISZERO DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x761 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x770 CALLDATASIZE PUSH1 0x4 PUSH2 0x24A7 JUMP JUMPDEST PUSH2 0x159E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x780 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH2 0x78F CALLDATASIZE PUSH1 0x4 PUSH2 0x248E JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x7D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x248E JUMP JUMPDEST PUSH2 0x16FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x7F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x24F4 JUMP JUMPDEST PUSH2 0x178C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x801 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x18A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x815 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x824 CALLDATASIZE PUSH1 0x4 PUSH2 0x240C JUMP JUMPDEST PUSH2 0x1AFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x834 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x843 CALLDATASIZE PUSH1 0x4 PUSH2 0x248E JUMP JUMPDEST PUSH2 0x1B5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x853 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH2 0x862 CALLDATASIZE PUSH1 0x4 PUSH2 0x2294 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x87B PUSH2 0x1B97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP1 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0x8C4 DUP4 PUSH2 0x253D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xE SLOAD PUSH32 0xE1976E16ED8CE8E740235978FBE69B27D5EEA683B2E017BB0BD2FABB33294B3F SWAP1 PUSH2 0x8FA DUP4 PUSH2 0x2710 PUSH2 0x2555 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320646F6573206E6F742068617665207065726D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373696F6E20746F2063616C6C20706572666F726D55706B6565700000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0xA SLOAD PUSH0 SUB PUSH2 0x9C5 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x71540007 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA0F JUMPI PUSH1 0xB SLOAD TIMESTAMP LT PUSH2 0x9F0 JUMPI TIMESTAMP PUSH1 0xC SSTORE PUSH2 0x9EB PUSH2 0x18A8 JUMP JUMPDEST PUSH2 0xA1B JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x54593E75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST TIMESTAMP PUSH1 0xC SSTORE PUSH2 0xA1B PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA40 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA4C PUSH2 0x1BF2 JUMP JUMPDEST PUSH2 0xA55 DUP3 PUSH2 0x1C96 JUMP JUMPDEST PUSH2 0xA40 DUP3 DUP3 PUSH2 0x1C9E JUMP JUMPDEST PUSH2 0xA67 PUSH2 0x1B97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xA8A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xAD4 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x257B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB14 SWAP2 SWAP1 PUSH2 0x259F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xB38 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH32 0xA9F166643EC132A11638E74E3C3A78D4AE278FCBF92998240E0E97676F54E404 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0xB6B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB80 PUSH2 0x1D5F JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xB9A PUSH2 0x1B97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD PUSH4 0x71540007 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST TIMESTAMP DUP3 LT ISZERO PUSH2 0xBE1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x54593E75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xB DUP3 SWAP1 SSTORE TIMESTAMP PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x2B5090E035D3026F5448298C9ADC68DB8BBC1B26A8AF5C81B2B2A9FC07CA4A00 SWAP1 PUSH1 0x60 ADD PUSH2 0xB6B JUMP JUMPDEST PUSH2 0xC38 PUSH2 0x1B97 JUMP JUMPDEST PUSH0 PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x3B68DC4E210C46D3622293F2B941CDFDE795BB6E17286BB289BA05A6A3B5541F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE DUP1 PUSH2 0xD15 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x696E76616C6964205F616D6F756E7421 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x89A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xD8A SWAP1 DUP5 SWAP1 PUSH2 0x2555 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xDB0 SWAP1 DUP5 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE03 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE27 SWAP2 SWAP1 PUSH2 0x259F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xE4B JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH0 PUSH1 0xA SLOAD PUSH1 0xC SLOAD TIMESTAMP PUSH2 0xEAA SWAP2 SWAP1 PUSH2 0x2555 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP2 LT SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xECD PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0xED6 PUSH0 PUSH2 0x1DA8 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xEFB JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF43 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x1BE970F PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xF64 SWAP1 DUP5 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xFCD JUMPI PUSH1 0x8 DUP1 SLOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0xFC7 DUP4 PUSH2 0x253D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFDE SWAP2 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x101C SWAP3 CALLER SWAP3 SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x257B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1038 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105C SWAP2 SWAP1 PUSH2 0x259F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1080 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH32 0x14EE34C24635186D212F515353DADAE9C226529EDEF2D1FCF5504CB33B5C25AB SWAP2 PUSH2 0xB6B SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH2 0x10C7 PUSH2 0x1B97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x10EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10FB SWAP2 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1134 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x257B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1150 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1174 SWAP2 SWAP1 PUSH2 0x259F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1198 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH32 0x73834E1D1EE73BA659470A3603B888903853D3A3C9FDA34E71C093A0E35CAB94 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH2 0xB6B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x11D3 PUSH2 0x1B97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x11F6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x267F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0x912 JUMP JUMPDEST PUSH2 0x1226 PUSH2 0x1B97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1249 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x267F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0x912 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1294 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x12DC JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x1BE970F PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 LT PUSH2 0x1310 JUMPI PUSH1 0x40 MLOAD PUSH4 0x636DC6B PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1331 SWAP1 DUP5 SWAP1 PUSH2 0x2555 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1357 SWAP1 DUP5 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x136F SWAP2 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1387 SWAP2 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x14EE34C24635186D212F515353DADAE9C226529EDEF2D1FCF5504CB33B5C25AB SWAP1 PUSH2 0x912 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP6 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x13E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 GT ISZERO PUSH2 0x1409 JUMPI PUSH1 0x40 MLOAD PUSH4 0x222A50F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1422 SWAP1 DUP4 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1456 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x257B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1472 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1496 SWAP2 SWAP1 PUSH2 0x259F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x14BA JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xA89B69C5958EC1CCF0DF0DE746A8708F5B6A6B429430129F16F46F44B319C900 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x1500 PUSH2 0x1B97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1523 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x267F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0x912 JUMP JUMPDEST PUSH2 0x1553 PUSH2 0x1B97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1576 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x267F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0x912 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x15E3 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x15FF JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x160D JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x162B JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x1655 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x165E DUP9 PUSH2 0x1E76 JUMP JUMPDEST PUSH2 0x1666 PUSH2 0x1E87 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH2 0x1388 PUSH1 0x4 SSTORE PUSH2 0x1D4C PUSH1 0x5 SSTORE PUSH2 0x5DC PUSH1 0x6 SSTORE PUSH2 0x3E8 PUSH1 0x7 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP3 DUP10 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0x16F3 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1705 PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1737 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE4CFA94D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x75F91F3CECB8C46F20150F60F77A6E1F0DE00776627692DB82EF1960AF84C33A SWAP2 ADD PUSH2 0x912 JUMP JUMPDEST PUSH2 0x1794 PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x17C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE4CFA94D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH1 0x1 DUP2 ISZERO ISZERO EQ DUP1 ISZERO SWAP1 PUSH2 0x17D8 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x17FA JUMPI PUSH1 0x40 MLOAD PUSH4 0x81ED1AE3 PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x182B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x184B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD CALLER DUP2 MSTORE SWAP2 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF SWAP1 SWAP3 AND ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH32 0x7A1655BC3160D3413BF1D5235E55BE12E01B7E8BC2436A9BFF09C3B4FA2421F1 SWAP1 PUSH1 0x60 ADD PUSH2 0xB6B JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x18B3 PUSH2 0x1E8F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH0 PUSH1 0x2 SLOAD GT DUP1 ISZERO PUSH2 0x18CB JUMPI POP PUSH0 PUSH1 0x1 SLOAD GT JUMPDEST PUSH2 0x190B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1B9BDD08195B9BDD59DA08185B5BDD5B9D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x89A JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1AAF JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x12 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1AA7 JUMPI PUSH1 0x3 SLOAD PUSH0 DUP3 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x12 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x197C SWAP1 PUSH2 0x2710 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x1986 SWAP2 SWAP1 PUSH2 0x25D1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1993 DUP7 DUP4 PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x19A6 SWAP2 SWAP1 PUSH2 0x2555 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x19B6 SWAP1 POP DUP2 DUP6 PUSH2 0x2568 JUMP JUMPDEST SWAP4 POP DUP5 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x19C9 SWAP2 SWAP1 PUSH2 0x2555 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x12 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x3 ADD DUP10 SWAP1 SSTORE SLOAD SWAP1 SWAP2 AND DUP3 MSTORE DUP2 KECCAK256 PUSH1 0x4 ADD DUP3 SWAP1 SSTORE PUSH2 0x1A13 DUP7 DUP4 PUSH2 0x2568 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x12 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1A4E SWAP1 DUP5 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP8 DUP6 GT ISZERO PUSH2 0x1AA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742069732067726561746572207468656E20353025000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x89A JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x190E JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0xEE826440768329B0C72F81331212EE31FCDAC1EA79A248D24821E40C34E58020 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x1B03 PUSH2 0x1B97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1B26 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE DUP2 MLOAD CALLER DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x267F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xB6B JUMP JUMPDEST PUSH2 0x1B62 PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B8B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH2 0x1B94 DUP2 PUSH2 0x1DA8 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0x1BC9 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xED6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1C78 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C6C PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xED6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B94 PUSH2 0x1B97 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1CF8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1CF5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x25F0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1D20 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1D50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH2 0x1D5A DUP4 DUP4 PUSH2 0x2072 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xED6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E25 DUP3 PUSH2 0x2710 PUSH2 0x2555 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1E32 DUP5 DUP4 PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1E3F DUP6 DUP6 PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E52 SWAP2 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E6A SWAP2 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E7E PUSH2 0x20C7 JUMP JUMPDEST PUSH2 0x1B94 DUP2 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0xED6 PUSH2 0x20C7 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x1EA1 PUSH1 0x2 SLOAD PUSH2 0x1388 PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1EB0 DUP3 PUSH1 0x5 SLOAD PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1EBF DUP4 PUSH1 0x6 SLOAD PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1ECE DUP5 PUSH1 0x7 SLOAD PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1EDF PUSH1 0x1 SLOAD PUSH1 0x4 SLOAD PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD GT PUSH2 0x1F1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6E6F20757365727321 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x89A JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x1F2D SWAP2 SWAP1 PUSH2 0x25D1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F39 DUP4 DUP6 PUSH2 0x2568 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1F49 SWAP2 SWAP1 PUSH2 0x2555 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1F61 SWAP2 SWAP1 PUSH2 0x2568 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FB8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FDC SWAP2 SWAP1 PUSH2 0x259F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2000 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST POP SWAP5 SWAP9 SWAP4 SWAP8 POP SWAP4 SWAP6 POP SWAP2 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 SUB PUSH2 0x2031 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89A SWAP1 PUSH2 0x2607 JUMP JUMPDEST DUP2 PUSH0 SUB PUSH2 0x2050 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89A SWAP1 PUSH2 0x2607 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0x205E DUP5 DUP7 PUSH2 0x25BA JUMP JUMPDEST PUSH2 0x2068 SWAP2 SWAP1 PUSH2 0x25D1 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x207B DUP3 PUSH2 0x2118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x20BF JUMPI PUSH2 0x1D5A DUP3 DUP3 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xA40 PUSH2 0x21ED JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xED6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B62 PUSH2 0x20C7 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x214D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x265F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2197 SWAP2 SWAP1 PUSH2 0x2648 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x21CF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x21D4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x21E4 DUP6 DUP4 DUP4 PUSH2 0x220C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xED6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2221 JUMPI PUSH2 0x221C DUP3 PUSH2 0x226B JUMP JUMPDEST PUSH2 0x2264 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x2238 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x2261 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x89A JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x227B JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22BC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x22E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x2309 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x232F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2359 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2362 DUP4 PUSH2 0x2319 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x237D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x238D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23A7 JUMPI PUSH2 0x23A7 PUSH2 0x2334 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x23D6 JUMPI PUSH2 0x23D6 PUSH2 0x2334 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x23ED JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x241D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x2474 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x242C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x2264 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x242C JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x249E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2264 DUP3 PUSH2 0x2319 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x24C2 DUP5 PUSH2 0x2319 JUMP JUMPDEST SWAP3 POP PUSH2 0x24D0 PUSH1 0x20 DUP6 ADD PUSH2 0x2319 JUMP JUMPDEST SWAP2 POP PUSH2 0x24DE PUSH1 0x40 DUP6 ADD PUSH2 0x2319 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B94 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2505 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x250E DUP4 PUSH2 0x2319 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x251E DUP2 PUSH2 0x24E7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x254E JUMPI PUSH2 0x254E PUSH2 0x2529 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x206C JUMPI PUSH2 0x206C PUSH2 0x2529 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x206C JUMPI PUSH2 0x206C PUSH2 0x2529 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25AF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2264 DUP2 PUSH2 0x24E7 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x206C JUMPI PUSH2 0x206C PUSH2 0x2529 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x25EB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2600 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x5F746F74616C5374616B65416D6F756E742063616E206E6F74206265207A6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x6F PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCB5671393C7C6980552E50A BALANCE 0xE7 PUSH25 0x921EB17D764C2E98FBF4D44FFF524712DEF9A2646970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xBE ADDRESS 0x25 BLOCKHASH OR 0x4F 0xAE PUSH17 0xC4E731BBCB9B61546FA1E7B640471B5DC1 BALANCE 0xF9 0xB5 0xE5 0x1E EQ PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "896:15480:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1344:24;;;;;;;;;;;;;;;;;;;160:25:11;;;148:2;133:18;1344:24:10;;;;;;;;1010:23;;;;;;;;;;-1:-1:-1;1010:23:10;;;;-1:-1:-1;;;;;1010:23:10;;;;;;-1:-1:-1;;;;;375:32:11;;;357:51;;345:2;330:18;1010:23:10;196:218:11;1044:33:10;;;;;;;;;;;;;;;;4355:338;;;;;;;;;;-1:-1:-1;4355:338:10;;;;;:::i;:::-;;:::i;:::-;;1657:33;;;;;;;;;;-1:-1:-1;1657:33:10;;;;-1:-1:-1;;;;;1657:33:10;;;1411:21;;;;;;;;;;-1:-1:-1;1411:21:10;;;;-1:-1:-1;;;1411:21:10;;;;;;;;;1023:14:11;;1016:22;998:41;;986:2;971:18;1411:21:10;858:187:11;1162:40:10;;;;;;;;;;;;;;;;1539:27;;;;;;;;;;;;;;;;1299:38;;;;;;;;;;;;;;;;1573:28;;;;;;;;;;;;;;;;1208:40;;;;;;;;;;;;;;;;10924:781;;;;;;;;;;-1:-1:-1;10924:781:10;;;;;:::i;:::-;;:::i;4158:214:3:-;;;;;;:::i;:::-;;:::i;5110:400:10:-;;;;;;;;;;-1:-1:-1;5110:400:10;;;;;:::i;:::-;;:::i;3705:134:3:-;;;;;;;;;;;;;:::i;1374:30:10:-;;;;;;;;;;-1:-1:-1;1374:30:10;;;;-1:-1:-1;;;;;1374:30:10;;;1123:32;;;;;;;;;;;;;;;;11717:487;;;;;;;;;;-1:-1:-1;11717:487:10;;;;;:::i;:::-;;:::i;12210:148::-;;;;;;;;;;;;;:::i;13101:577::-;;;;;;;;;;-1:-1:-1;13101:577:10;;;;;:::i;:::-;;:::i;10686:232::-;;;;;;;;;;-1:-1:-1;10686:232:10;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3155:101:1:-;;;;;;;;;;;;;:::i;5516:802:10:-;;;;;;;;;;-1:-1:-1;5516:802:10;;;;;:::i;:::-;;:::i;4699:401::-;;;;;;;;;;-1:-1:-1;4699:401:10;;;;;:::i;:::-;;:::i;15609:323::-;;;;;;;;;;-1:-1:-1;15609:323:10;;;;;:::i;:::-;;:::i;14598:330::-;;;;;;;;;;-1:-1:-1;14598:330:10;;;;;:::i;:::-;;:::i;6324:678::-;;;;;;;;;;-1:-1:-1;6324:678:10;;;;;:::i;:::-;;:::i;7012:539::-;;;;;;;;;;-1:-1:-1;7012:539:10;;;;;:::i;:::-;;:::i;2441:144:1:-;;;;;;;;;;-1:-1:-1;1313:22:1;2570:8;-1:-1:-1;;;;;2570:8:1;2441:144;;1463:23:10;;;;;;;;;;;;;;;;1929:28;;;;;;;;;;;;;;;;2013:45;;;;;;;;;;-1:-1:-1;2013:45:10;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2013:45:10;;;1819:58:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:3;;;;;;;;;;;;:::i;15278:325:10:-;;;;;;;;;;-1:-1:-1;15278:325:10;;;;;:::i;:::-;;:::i;1083:34::-;;;;;;;;;;;;;;;;14938:329;;;;;;;;;;-1:-1:-1;14938:329:10;;;;;:::i;:::-;;:::i;2118:56::-;;;;;;;;;;-1:-1:-1;2118:56:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4824:14:11;;4817:22;4799:41;;4871:2;4856:18;;4849:34;;;;4899:18;;;4892:34;;;;4957:2;4942:18;;4935:34;5000:3;4985:19;;4978:35;5044:3;5029:19;;5022:35;4786:3;4771:19;2118:56:10;4518:545:11;3601:741:10;;;;;;;;;;-1:-1:-1;3601:741:10;;;;;:::i;:::-;;:::i;1963:44::-;;;;;;;;;;-1:-1:-1;1963:44:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;1254:39;;;;;;;;;;;;;;;;12365:318;;;;;;;;;;-1:-1:-1;12365:318:10;;;;;:::i;:::-;;:::i;13684:554::-;;;;;;;;;;-1:-1:-1;13684:554:10;;;;;:::i;:::-;;:::i;7945:1572::-;;;;;;;;;;;;;:::i;14250:342::-;;;;;;;;;;-1:-1:-1;14250:342:10;;;;;:::i;:::-;;:::i;3405:215:1:-;;;;;;;;;;-1:-1:-1;3405:215:1;;;;;:::i;:::-;;:::i;2064:48:10:-;;;;;;;;;;-1:-1:-1;2064:48:10;;;;;:::i;:::-;;;;;;;;;;;;;;4355:338;2334:13:1;:11;:13::i;:::-;4458:1:10::1;4441:13;:18;4438:84;;4481:30;::::0;-1:-1:-1;;;4481:30:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;4481:30:10::1;;;;;;;;4438:84;4546:13;::::0;;4532:28:::1;::::0;;;:13:::1;:28;::::0;;;;:44;;;4586:15;;;4546:13;4586:15:::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;4631:13:10::1;::::0;4619:67:::1;::::0;4648:21:::1;4656:13:::0;4648:5:::1;:21;:::i;:::-;4619:67;::::0;;6457:25:11;;;6513:2;6498:18;;6491:34;;;;6541:18;;6534:34;;;6445:2;6430:18;4619:67:10::1;;;;;;;;4355:338:::0;:::o;10924:781::-;11043:18;;-1:-1:-1;;;;;11043:18:10;11029:10;:32;11008:138;;;;-1:-1:-1;;;11008:138:10;;6781:2:11;11008:138:10;;;6763:21:11;6820:2;6800:18;;;6793:30;6859:34;6839:18;;;6832:62;6930:29;6910:18;;;6903:57;6977:19;;11008:138:10;6579:423:11;11008:138:10;11168:8;;11180:1;11168:13;11164:73;;11217:8;;11203:23;;-1:-1:-1;;;11203:23:10;;;;;;160:25:11;;148:2;133:18;;14:177;11164:73:10;11259:9;;-1:-1:-1;;;11259:9:10;;;;11255:363;;11306:12;;11287:15;:31;11284:213;;11353:15;11337:13;:31;11386:16;:14;:16::i;:::-;11255:363;;11284:213;11469:12;;11459:23;;-1:-1:-1;;;11459:23:10;;;;;;160:25:11;;148:2;133:18;;14:177;11255:363:10;11562:15;11546:13;:31;11591:16;:14;:16::i;:::-;11639:9;;-1:-1:-1;;;11639:9:10;;;;11635:55;;11663:9;:16;;-1:-1:-1;;;;11663:16:10;-1:-1:-1;;;11663:16:10;;;11635:55;10924:781;;:::o;4158:214:3:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;5110:400:10:-:0;2334:13:1;:11;:13::i;:::-;5202:1:10::1;5191:7;:12;5188:68;;5225:20;::::0;-1:-1:-1;;;5225:20:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;5225:20:10::1;14:177:11::0;5188:68:10::1;5289:7;5267:18;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5307:12:10::1;5322:9:::0;;:57:::1;::::0;-1:-1:-1;;;5322:57:10;;-1:-1:-1;;;;;5322:9:10;;::::1;::::0;:22:::1;::::0;:57:::1;::::0;5345:10:::1;::::0;5364:4:::1;::::0;5370:7;;5322:57:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5307:72;;5393:7;5389:67;;5422:23;::::0;-1:-1:-1;;;5422:23:10;;1023:14:11;;1016:22;5422:23:10::1;::::0;::::1;998:41:11::0;971:18;;5422:23:10::1;858:187:11::0;5389:67:10::1;5471:32;5484:18;;5471:32;;;;160:25:11::0;;148:2;133:18;;14:177;5471:32:10::1;;;;;;;;5169:341;5110:400:::0;:::o;3705:134:3:-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:3;:::o;11717:487:10:-;2334:13:1;:11;:13::i;:::-;11846:1:10::1;11828:14;:19;11825:84;;11869:29;::::0;-1:-1:-1;;;11869:29:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;11869:29:10::1;14:177:11::0;11825:84:10::1;11946:15;11930:13;:31;11927:91;;;11983:24;::::0;-1:-1:-1;;;11983:24:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;11983:24:10::1;14:177:11::0;11927:91:10::1;12028:8;:25:::0;;;12063:12:::1;:28:::0;;;12117:15:::1;12101:13;:31:::0;;;12148:48:::1;::::0;;12160:10:::1;7965:51:11::0;;8047:2;8032:18;;8025:34;;;8075:18;;;8068:34;;;;12148:48:10::1;::::0;7953:2:11;7938:18;12148:48:10::1;7763:345:11::0;12210:148:10;2334:13:1;:11;:13::i;:::-;12274:1:10::1;12263:8;:12:::0;;;12285:9:::1;:17:::0;;-1:-1:-1;;;;12285:17:10::1;::::0;;12318:33:::1;::::0;;12330:10:::1;8287:51:11::0;;8369:2;8354:18;;8347:34;;;;12318:33:10::1;::::0;8260:18:11;12318:33:10::1;;;;;;;12210:148::o:0;13101:577::-;16149:6;;-1:-1:-1;;;16149:6:10;;;;16148:7;16140:51;;;;-1:-1:-1;;;16140:51:10;;8594:2:11;16140:51:10;;;8576:21:11;8633:2;8613:18;;;8606:30;8672:33;8652:18;;;8645:61;8723:18;;16140:51:10;8392:355:11;16140:51:10;16201:6;:13;;-1:-1:-1;;;;16201:13:10;-1:-1:-1;;;16201:13:10;;;13191:12;13188:68:::1;;13225:20;::::0;-1:-1:-1;;;13225:20:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;13225:20:10::1;14:177:11::0;13188:68:10::1;13299:10;13284:26;::::0;;;:14:::1;:26;::::0;;;;:41:::1;;::::0;13273:52;::::1;;13265:81;;;::::0;-1:-1:-1;;;13265:81:10;;8954:2:11;13265:81:10::1;::::0;::::1;8936:21:11::0;8993:2;8973:18;;;8966:30;-1:-1:-1;;;9012:18:11;;;9005:46;9068:18;;13265:81:10::1;8752:340:11::0;13265:81:10::1;13372:10;13357:26;::::0;;;:14:::1;:26;::::0;;;;:41:::1;;:52:::0;;13402:7;;13357:26;:52:::1;::::0;13402:7;;13357:52:::1;:::i;:::-;::::0;;;-1:-1:-1;;13434:10:10::1;13419:26;::::0;;;:14:::1;:26;::::0;;;;:41:::1;;:52:::0;;13464:7;;13419:26;:52:::1;::::0;13464:7;;13419:52:::1;:::i;:::-;::::0;;;-1:-1:-1;;13489:12:10::1;13504:9:::0;;:38:::1;::::0;-1:-1:-1;;;13504:38:10;;13523:10:::1;13504:38;::::0;::::1;8287:51:11::0;8354:18;;;8347:34;;;-1:-1:-1;;;;;13504:9:10;;::::1;::::0;:18:::1;::::0;8260::11;;13504:38:10::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13489:53;;13564:7;13560:67;;13593:23;::::0;-1:-1:-1;;;13593:23:10;;1023:14:11;;1016:22;13593:23:10::1;::::0;::::1;998:41:11::0;971:18;;13593:23:10::1;858:187:11::0;13560:67:10::1;13642:29;::::0;;13651:10:::1;8287:51:11::0;;8369:2;8354:18;;8347:34;;;13642:29:10::1;::::0;8260:18:11;13642:29:10::1;;;;;;;-1:-1:-1::0;;16235:6:10;:14;;-1:-1:-1;;;;16235:14:10;;;13101:577::o;10686:232::-;10770:4;10776:12;10807:16;10862:8;;10845:13;;10827:15;:31;;;;:::i;:::-;10901:9;;;;;;;;;-1:-1:-1;10901:9:10;;-1:-1:-1;;;10901:9:10;;-1:-1:-1;10686:232:10;-1:-1:-1;;;;10686:232:10:o;3155:101:1:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;5516:802:10:-;5597:1;5586:7;:12;5583:68;;5620:20;;-1:-1:-1;;;5620:20:10;;;;;160:25:11;;;133:18;;5620:20:10;14:177:11;5583:68:10;5687:10;5672:26;;;;:14;:26;;;;;:34;;;5669:117;;;5755:10;5740:26;;;;:14;:26;;;;;;;:34;5728:47;;-1:-1:-1;;;5728:47:10;;5740:34;;;;1023:14:11;1016:22;5728:47:10;;;998:41:11;971:18;;5728:47:10;858:187:11;5669:117:10;5811:10;5796:26;;;;:14;:26;;;;;:44;;:55;;5844:7;;5796:26;:55;;5844:7;;5796:55;:::i;:::-;;;;-1:-1:-1;;5886:10:10;5873:24;;;;:12;:24;;;;;;;;5869:171;;5936:9;;;5925:21;;;;:10;:21;;;;;;;;:34;;-1:-1:-1;;;;;;5925:34:10;5949:10;5925:34;;;;;;5973:24;;:12;:24;;;;;:31;;-1:-1:-1;;5973:31:10;5925:34;5973:31;;;6018:11;;;5936:9;6018:11;;;:::i;:::-;;;;;;5869:171;6071:7;6050:17;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;6089:12:10;6103:9;;6137:15;;6103:58;;-1:-1:-1;;;6103:58:10;;-1:-1:-1;;;;;6103:9:10;;;;:22;;:58;;6126:10;;6137:15;;;;6153:7;;6103:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6089:72;;6184:7;6180:67;;6213:23;;-1:-1:-1;;;6213:23:10;;1023:14:11;;1016:22;6213:23:10;;;998:41:11;971:18;;6213:23:10;858:187:11;6180:67:10;6285:15;;6262:48;;;;;;6274:10;;-1:-1:-1;;;;;6285:15:10;;6302:7;;6262:48;:::i;4699:401::-;2334:13:1;:11;:13::i;:::-;4791:1:10::1;4780:7;:12;4777:68;;4814:20;::::0;-1:-1:-1;;;4814:20:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;4814:20:10::1;14:177:11::0;4777:68:10::1;4878:7;4855:19;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4896:12:10::1;4911:9:::0;;:57:::1;::::0;-1:-1:-1;;;4911:57:10;;-1:-1:-1;;;;;4911:9:10;;::::1;::::0;:22:::1;::::0;:57:::1;::::0;4934:10:::1;::::0;4953:4:::1;::::0;4959:7;;4911:57:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4896:72;;4982:7;4978:67;;5011:23;::::0;-1:-1:-1;;;5011:23:10;;1023:14:11;;1016:22;5011:23:10::1;::::0;::::1;998:41:11::0;971:18;;5011:23:10::1;858:187:11::0;4978:67:10::1;5060:33;5073:19;;5060:33;;;;160:25:11::0;;148:2;133:18;;14:177;15609:323:10;2334:13:1;:11;:13::i;:::-;15730:1:10::1;15711:15;:20;15708:88;;15753:32;::::0;-1:-1:-1;;;15753:32:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;15753:32:10::1;14:177:11::0;15708:88:10::1;15814:23;:41:::0;;;15871:54:::1;::::0;;15889:10:::1;8287:51:11::0;;8369:2;8354:18;;8347:34;;;-1:-1:-1;;;;;;;;;;;15871:54:10;8260:18:11;15871:54:10::1;8113:274:11::0;14598:330:10;2334:13:1;:11;:13::i;:::-;14721:1:10::1;14702:15;:20;14699:88;;14744:32;::::0;-1:-1:-1;;;14744:32:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;14744:32:10::1;14:177:11::0;14699:88:10::1;14805:25;:43:::0;;;14864:56:::1;::::0;;14882:10:::1;8287:51:11::0;;8369:2;8354:18;;8347:34;;;-1:-1:-1;;;;;;;;;;;14864:56:10;8260:18:11;14864:56:10::1;8113:274:11::0;6324:678:10;6407:1;6396:7;:12;6393:68;;6430:20;;-1:-1:-1;;;6430:20:10;;;;;160:25:11;;;133:18;;6430:20:10;14:177:11;6393:68:10;6496:10;6481:26;;;;:14;:26;;;;;:34;;;6478:117;;;6564:10;6549:26;;;;:14;:26;;;;;;;:34;6537:47;;-1:-1:-1;;;6537:47:10;;6549:34;;;;1023:14:11;1016:22;6537:47:10;;;998:41:11;971:18;;6537:47:10;858:187:11;6478:117:10;6623:10;6608:26;;;;:14;:26;;;;;:41;;;:52;-1:-1:-1;6605:113:10;;6682:25;;-1:-1:-1;;;6682:25:10;;;;;160::11;;;133:18;;6682:25:10;14:177:11;6605:113:10;6743:10;6728:26;;;;:14;:26;;;;;:41;;:52;;6773:7;;6728:26;:52;;6773:7;;6728:52;:::i;:::-;;;;-1:-1:-1;;6805:10:10;6790:26;;;;:14;:26;;;;;:44;;:55;;6838:7;;6790:26;:55;;6838:7;;6790:55;:::i;:::-;;;;;;;;6887:7;6864:19;;:30;;;;;;;:::i;:::-;;;;;;;;6925:7;6904:17;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;6948:46:10;;;;;;6960:10;;6979:4;;6986:7;;6948:46;:::i;7012:539::-;7101:1;7090:7;:12;7087:68;;7124:20;;-1:-1:-1;;;7124:20:10;;;;;160:25:11;;;133:18;;7124:20:10;14:177:11;7087:68:10;7181:13;;7168:10;:26;7165:88;;;7216:26;;-1:-1:-1;;;7216:26:10;;;;;160:25:11;;;133:18;;7216:26:10;14:177:11;7165:88:10;7298:25;;;;:13;:25;;;;;;7275:49;;7289:7;;7275:13;:49::i;:::-;7343:12;7358:9;;:57;;-1:-1:-1;;;7358:57:10;;-1:-1:-1;;;;;7358:9:10;;;;:22;;:57;;7381:10;;7400:4;;7406:7;;7358:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7343:72;;7429:7;7425:67;;7458:23;;-1:-1:-1;;;7458:23:10;;1023:14:11;;1016:22;7458:23:10;;;998:41:11;971:18;;7458:23:10;858:187:11;7425:67:10;7507:28;;;9271:25:11;;;9327:2;9312:18;;9305:34;;;7507:28:10;;9244:18:11;7507:28:10;;;;;;;7076:475;7012:539;;:::o;15278:325::-;2334:13:1;:11;:13::i;:::-;15399:1:10::1;15380:15;:20;15377:88;;15422:32;::::0;-1:-1:-1;;;15422:32:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;15422:32:10::1;14:177:11::0;15377:88:10::1;15483:24;:42:::0;;;15541:55:::1;::::0;;15559:10:::1;8287:51:11::0;;8369:2;8354:18;;8347:34;;;-1:-1:-1;;;;;;;;;;;15541:55:10;8260:18:11;15541:55:10::1;8113:274:11::0;14938:329:10;2334:13:1;:11;:13::i;:::-;15061:1:10::1;15042:15;:20;15039:88;;15084:32;::::0;-1:-1:-1;;;15084:32:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;15084:32:10::1;14:177:11::0;15039:88:10::1;15145:25;:43:::0;;;15204:56:::1;::::0;;15222:10:::1;8287:51:11::0;;8369:2;8354:18;;8347:34;;;-1:-1:-1;;;;;;;;;;;15204:56:10;8260:18:11;15204:56:10::1;8113:274:11::0;3601:741:10;8870:21:2;4302:15;;-1:-1:-1;;;4302:15:2;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:2;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:2;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:2;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:2;-1:-1:-1;;;5013:22:2;;;4979:67;3727:28:10::1;3742:12;3727:14;:28::i;:::-;3765:24;:22;:24::i;:::-;3800:9;:32:::0;;-1:-1:-1;;;;;3800:32:10;;::::1;-1:-1:-1::0;;;;;;3800:32:10;;::::1;;::::0;;;4068:4:::1;4040:25;:32:::0;4122:4:::1;4094:25;:32:::0;4188:4:::1;4161:24;:31:::0;4239:4:::1;4213:23;:30:::0;4301:15:::1;:34:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;5066:101:2;;;;5100:23;;-1:-1:-1;;;;5100:23:2;;;5142:14;;-1:-1:-1;9503:50:11;;5142:14:2;;9491:2:11;9476:18;5142:14:2;;;;;;;5066:101;4092:1081;;;;;3601:741:10;;;:::o;12365:318::-;2334:13:1;:11;:13::i;:::-;-1:-1:-1;;;;;12461:30:10;::::1;12458:96;;12513:30;::::0;-1:-1:-1;;;12513:30:10;;-1:-1:-1;;;;;375:32:11;;12513:30:10::1;::::0;::::1;357:51:11::0;330:18;;12513:30:10::1;196:218:11::0;12458:96:10::1;12572:18;:37:::0;;-1:-1:-1;;;;;;12572:37:10::1;-1:-1:-1::0;;;;;12572:37:10;::::1;::::0;;::::1;::::0;;;12625:51:::1;::::0;;12645:10:::1;9738:51:11::0;;9820:2;9805:18;;9798:60;;;;12625:51:10::1;::::0;9711:18:11;12625:51:10::1;9564:300:11::0;13684:554:10;2334:13:1;:11;:13::i;:::-;-1:-1:-1;;;;;13778:26:10;::::1;13775:88;;13826:26;::::0;-1:-1:-1;;;13826:26:10;;-1:-1:-1;;;;;375:32:11;;13826:26:10::1;::::0;::::1;357:51:11::0;330:18;;13826:26:10::1;196:218:11::0;13775:88:10::1;13885:4;13876:13:::0;::::1;;;::::0;::::1;::::0;:31:::1;;-1:-1:-1::0;13893:14:10;::::1;;13876:31;13873:84;;;13929:17;::::0;-1:-1:-1;;;13929:17:10;;1023:14:11;;1016:22;13929:17:10::1;::::0;::::1;998:41:11::0;971:18;;13929:17:10::1;858:187:11::0;13873:84:10::1;13970:13:::0;::::1;;13979:4;13970:13:::0;13967:167:::1;;-1:-1:-1::0;;;;;13999:28:10;::::1;;::::0;;;:14:::1;:28;::::0;;;;:43;;-1:-1:-1;;13999:43:10::1;14038:4;13999:43;::::0;;13967:167:::1;;;-1:-1:-1::0;;;;;14079:28:10;::::1;14118:5;14079:28:::0;;;:14:::1;:28;::::0;;;;:44;;-1:-1:-1;;14079:44:10::1;::::0;;13967:167:::1;-1:-1:-1::0;;;;;14194:28:10;::::1;;::::0;;;:14:::1;:28;::::0;;;;;;;;:36;14157:74;;14169:10:::1;10065:51:11::0;;10132:18;;;10125:60;;;;14194:36:10::1;::::0;;::::1;10228:14:11::0;10221:22;10201:18;;;10194:50;14157:74:10::1;::::0;10053:2:11;10038:18;14157:74:10::1;9869:381:11::0;7945:1572:10;8161:24;8186:33;8221:26;8252:20;:18;:20::i;:::-;8159:113;;;;;;8321:1;8299:19;;:23;:49;;;;;8347:1;8326:18;;:22;8299:49;8291:79;;;;-1:-1:-1;;;8291:79:10;;10457:2:11;8291:79:10;;;10439:21:11;10496:2;10476:18;;;10469:30;-1:-1:-1;;;10515:18:11;;;10508:47;10572:18;;8291:79:10;10255:341:11;8291:79:10;8388:16;;8415:1010;8438:9;;8434:1;:13;8415:1010;;;8472:29;8487:13;;;:10;:13;;;;;;;;;-1:-1:-1;;;;;8487:13:10;8472:29;;:14;:29;;;;;:37;;;8468:934;;8622:17;;8529:27;8575:13;;;:10;:13;;;;;;;;;-1:-1:-1;;;;;8575:13:10;8560:29;;:14;:29;;;;;:47;;;8529:27;;8622:17;8560:57;;8611:5;8560:57;:::i;:::-;8559:81;;;;:::i;:::-;8529:111;;8675:22;8700:67;8720:25;8747:19;8700;:67::i;:::-;8675:92;;8808:14;8785:19;;:37;;;;;;;:::i;:::-;;;;-1:-1:-1;8865:26:10;;-1:-1:-1;8877:14:10;8865:26;;:::i;:::-;;;8931:18;8909;;:40;;;;;;;:::i;:::-;;;;-1:-1:-1;;8968:29:10;8983:13;;;:10;:13;;;;;;;;;;-1:-1:-1;;;;;8983:13:10;;;8968:29;;:14;:29;;;;;;:49;;:70;;;9071:13;;;;9056:29;;;;:51;;:68;;;9185:35;8968:70;9056:68;9185:35;:::i;:::-;9238:29;9253:13;;;:10;:13;;;;;;;;;-1:-1:-1;;;;;9253:13:10;9238:29;;:14;:29;;;;;9253:13;9238:44;:63;;9159:61;;-1:-1:-1;9159:61:10;;9238:44;;:29;:63;;9159:61;;9238:63;:::i;:::-;;;;-1:-1:-1;;9328:28:10;;;;9320:67;;;;-1:-1:-1;;;9320:67:10;;11198:2:11;9320:67:10;;;11180:21:11;11237:2;11217:18;;;11210:30;11276:28;11256:18;;;11249:56;11322:18;;9320:67:10;10996:350:11;9320:67:10;8510:892;;;8468:934;8449:3;;8415:1010;;;-1:-1:-1;9469:19:10;;9490:18;;9440:69;;;9457:10;7965:51:11;;8047:2;8032:18;;8025:34;;;;8075:18;;8068:34;9440:69:10;;7953:2:11;7938:18;9440:69:10;;;;;;;7979:1538;;;;7945:1572::o;14250:342::-;2334:13:1;:11;:13::i;:::-;14386:1:10::1;14367:15;:20;14364:88;;14409:32;::::0;-1:-1:-1;;;14409:32:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;14409:32:10::1;14:177:11::0;14364:88:10::1;14470:25;::::0;;;:13:::1;:25;::::0;;;;;;;;:43;;;14529:56;;14547:10:::1;8287:51:11::0;;8354:18;;;8347:34;;;-1:-1:-1;;;;;;;;;;;14529:56:10;8260:18:11;14529:56:10::1;8113:274:11::0;3405:215:1;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:1;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:1;;3562:1:::1;3534:31;::::0;::::1;357:51:11::0;330:18;;3534:31:1::1;196:218:11::0;3485:91:1::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;2658:162::-;966:10:4;2717:7:1;1313:22;2570:8;-1:-1:-1;;;;;2570:8:1;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:1;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:1;;966:10:4;2763:40:1;;;357:51:11;330:18;;2763:40:1;196:218:11;4599:312:3;4679:4;-1:-1:-1;;;;;4688:6:3;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:3;:32;-1:-1:-1;;;;;;;;;;;2035:53:6;-1:-1:-1;;;;;2035:53:6;;1957:138;4749:32:3;-1:-1:-1;;;;;4749:42:3;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:3;;;;;;;;;;;16262:112:10;2334:13:1;:11;:13::i;6052:538:3:-;6169:17;-1:-1:-1;;;;;6151:50:3;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:3;;;;;;;;-1:-1:-1;;6151:52:3;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:3;;-1:-1:-1;;;;;375:32:11;;6513:60:3;;;357:51:11;330:18;;6513:60:3;196:218:11;6147:437:3;-1:-1:-1;;;;;;;;;;;6245:40:3;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:3;;;;;160:25:11;;;133:18;;6312:34:3;14:177:11;6241:120:3;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:3;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:3;;;;;;;;;;;3774:248:1;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:1;;-1:-1:-1;;;;;3941:19:1;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;7558:379:10:-;7647:20;7670:21;7678:13;7670:5;:21;:::i;:::-;7647:44;;7701:20;7724:42;7744:7;7753:12;7724:19;:42::i;:::-;7701:65;;7776:19;7798:43;7818:7;7827:13;7798:19;:43::i;:::-;7776:65;;7875:12;7852:19;;:35;;;;;;;:::i;:::-;;;;;;;;7919:11;7897:18;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7558:379:10:o;1847:127:1:-;6931:20:2;:18;:20::i;:::-;1929:38:1::1;1954:12;1929:24;:38::i;2968:67:3:-:0;6931:20:2;:18;:20::i;9529:1151:10:-;9575:7;9584;9592;9620:24;9647:46;9667:19;;9688:4;9647:19;:46::i;:::-;9620:73;;9704:33;9740:64;9760:16;9778:25;;9740:19;:64::i;:::-;9704:100;;9814:36;9853:63;9873:16;9891:24;;9853:19;:63::i;:::-;9814:102;;9926:36;9965:62;9985:16;10003:23;;9965:19;:62::i;:::-;9926:101;;10037:30;10070:66;10090:18;;10110:25;;10070:19;:66::i;:::-;10037:99;;10167:1;10155:9;;:13;10147:35;;;;-1:-1:-1;;;10147:35:10;;11742:2:11;10147:35:10;;;11724:21:11;11781:1;11761:18;;;11754:29;-1:-1:-1;;;11799:18:11;;;11792:39;11848:18;;10147:35:10;11540:332:11;10147:35:10;10201:26;10253:9;;10230:22;:32;;;;:::i;:::-;10201:61;-1:-1:-1;10305:59:10;10336:28;10305;:59;:::i;:::-;10281:19;;:84;;;;;;;:::i;:::-;;;;;;;;10397:28;10375:18;;:50;;;;;;;:::i;:::-;;;;-1:-1:-1;;10436:12:10;10451:9;;10470:15;;10451:65;;-1:-1:-1;;;10451:65:10;;-1:-1:-1;;;;;10470:15:10;;;10451:65;;;8287:51:11;8354:18;;;8347:34;;;10451:9:10;;;:18;;8260::11;;10451:65:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10436:80;;10530:7;10526:67;;10559:23;;-1:-1:-1;;;10559:23:10;;1023:14:11;;1016:22;10559:23:10;;;998:41:11;971:18;;10559:23:10;858:187:11;10526:67:10;-1:-1:-1;10611:16:10;;10628:25;;-1:-1:-1;10654:18:10;;-1:-1:-1;9529:1151:10;;-1:-1:-1;;;;9529:1151:10:o;12689:397::-;12791:7;12827:17;12847:1;12827:21;12819:68;;;;-1:-1:-1;;;12819:68:10;;;;;;;:::i;:::-;12905:16;12924:1;12905:20;12897:67;;;;-1:-1:-1;;;12897:67:10;;;;;;;:::i;:::-;12974:18;13037:5;12995:38;13016:16;12995:17;:38;:::i;:::-;:48;;;;:::i;:::-;12974:69;-1:-1:-1;;12689:397:10;;;;;:::o;2779:335:6:-;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:6;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:2:-;8870:21;8560:40;-1:-1:-1;;;8560:40:2;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:2;;;;;;;;;;;1980:235:1;6931:20:2;:18;:20::i;2186:281:6:-;2263:17;-1:-1:-1;;;;;2263:29:6;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:6;;-1:-1:-1;;;;;375:32:11;;2320:47:6;;;357:51:11;330:18;;2320:47:6;196:218:11;2259:119:6;-1:-1:-1;;;;;;;;;;;2387:73:6;;-1:-1:-1;;;;;;2387:73:6;-1:-1:-1;;;;;2387:73:6;;;;;;;;;;2186:281::o;4106:253:8:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:8;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:8:o;6598:122:6:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:6;;;;;;;;;;;4625:582:8;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:8;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:8;;-1:-1:-1;;;;;375:32:11;;5121:24:8;;;357:51:11;330:18;;5121:24:8;196:218:11;5041:119:8;-1:-1:-1;5180:10:8;4793:408;4625:582;;;;;:::o;5743:516::-;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:8;;;;;;;;;;;419:226:11;478:6;531:2;519:9;510:7;506:23;502:32;499:52;;;547:1;544;537:12;499:52;-1:-1:-1;592:23:11;;419:226;-1:-1:-1;419:226:11:o;1050:586::-;1120:6;1128;1181:2;1169:9;1160:7;1156:23;1152:32;1149:52;;;1197:1;1194;1187:12;1149:52;1237:9;1224:23;1270:18;1262:6;1259:30;1256:50;;;1302:1;1299;1292:12;1256:50;1325:22;;1378:4;1370:13;;1366:27;-1:-1:-1;1356:55:11;;1407:1;1404;1397:12;1356:55;1447:2;1434:16;1473:18;1465:6;1462:30;1459:50;;;1505:1;1502;1495:12;1459:50;1550:7;1545:2;1536:6;1532:2;1528:15;1524:24;1521:37;1518:57;;;1571:1;1568;1561:12;1518:57;1602:2;1594:11;;;;;1624:6;;-1:-1:-1;1050:586:11;-1:-1:-1;;;1050:586:11:o;1641:173::-;1709:20;;-1:-1:-1;;;;;1758:31:11;;1748:42;;1738:70;;1804:1;1801;1794:12;1738:70;1641:173;;;:::o;1819:127::-;1880:10;1875:3;1871:20;1868:1;1861:31;1911:4;1908:1;1901:15;1935:4;1932:1;1925:15;1951:1018;2028:6;2036;2089:2;2077:9;2068:7;2064:23;2060:32;2057:52;;;2105:1;2102;2095:12;2057:52;2128:29;2147:9;2128:29;:::i;:::-;2118:39;;2208:2;2197:9;2193:18;2180:32;2235:18;2227:6;2224:30;2221:50;;;2267:1;2264;2257:12;2221:50;2290:22;;2343:4;2335:13;;2331:27;-1:-1:-1;2321:55:11;;2372:1;2369;2362:12;2321:55;2412:2;2399:16;2438:18;2430:6;2427:30;2424:56;;;2460:18;;:::i;:::-;2509:2;2503:9;2601:2;2563:17;;-1:-1:-1;;2559:31:11;;;2592:2;2555:40;2551:54;2539:67;;2636:18;2621:34;;2657:22;;;2618:62;2615:88;;;2683:18;;:::i;:::-;2719:2;2712:22;2743;;;2784:15;;;2801:2;2780:24;2777:37;-1:-1:-1;2774:57:11;;;2827:1;2824;2817:12;2774:57;2883:6;2878:2;2874;2870:11;2865:2;2857:6;2853:15;2840:50;2936:1;2931:2;2922:6;2914;2910:19;2906:28;2899:39;2957:6;2947:16;;;;;1951:1018;;;;;:::o;3156:346::-;3224:6;3232;3285:2;3273:9;3264:7;3260:23;3256:32;3253:52;;;3301:1;3298;3291:12;3253:52;-1:-1:-1;;3346:23:11;;;3466:2;3451:18;;;3438:32;;-1:-1:-1;3156:346:11:o;3507:288::-;3548:3;3586:5;3580:12;3613:6;3608:3;3601:19;3669:6;3662:4;3655:5;3651:16;3644:4;3639:3;3635:14;3629:47;3721:1;3714:4;3705:6;3700:3;3696:16;3692:27;3685:38;3784:4;3777:2;3773:7;3768:2;3760:6;3756:15;3752:29;3747:3;3743:39;3739:50;3732:57;;;3507:288;;;;:::o;3800:298::-;3983:6;3976:14;3969:22;3958:9;3951:41;4028:2;4023;4012:9;4008:18;4001:30;3932:4;4048:44;4088:2;4077:9;4073:18;4065:6;4048:44;:::i;:::-;4040:52;3800:298;-1:-1:-1;;;;3800:298:11:o;4103:219::-;4252:2;4241:9;4234:21;4215:4;4272:44;4312:2;4301:9;4297:18;4289:6;4272:44;:::i;4327:186::-;4386:6;4439:2;4427:9;4418:7;4414:23;4410:32;4407:52;;;4455:1;4452;4445:12;4407:52;4478:29;4497:9;4478:29;:::i;5068:334::-;5145:6;5153;5161;5214:2;5202:9;5193:7;5189:23;5185:32;5182:52;;;5230:1;5227;5220:12;5182:52;5253:29;5272:9;5253:29;:::i;:::-;5243:39;;5301:38;5335:2;5324:9;5320:18;5301:38;:::i;:::-;5291:48;;5358:38;5392:2;5381:9;5377:18;5358:38;:::i;:::-;5348:48;;5068:334;;;;;:::o;5407:118::-;5493:5;5486:13;5479:21;5472:5;5469:32;5459:60;;5515:1;5512;5505:12;5530:315;5595:6;5603;5656:2;5644:9;5635:7;5631:23;5627:32;5624:52;;;5672:1;5669;5662:12;5624:52;5695:29;5714:9;5695:29;:::i;:::-;5685:39;;5774:2;5763:9;5759:18;5746:32;5787:28;5809:5;5787:28;:::i;:::-;5834:5;5824:15;;;5530:315;;;;;:::o;5850:127::-;5911:10;5906:3;5902:20;5899:1;5892:31;5942:4;5939:1;5932:15;5966:4;5963:1;5956:15;5982:135;6021:3;6042:17;;;6039:43;;6062:18;;:::i;:::-;-1:-1:-1;6109:1:11;6098:13;;5982:135::o;6122:128::-;6189:9;;;6210:11;;;6207:37;;;6224:18;;:::i;7007:125::-;7072:9;;;7093:10;;;7090:36;;;7106:18;;:::i;7137:371::-;-1:-1:-1;;;;;7357:32:11;;;7339:51;;7426:32;;;;7421:2;7406:18;;7399:60;7490:2;7475:18;;7468:34;;;;7327:2;7312:18;;7137:371::o;7513:245::-;7580:6;7633:2;7621:9;7612:7;7608:23;7604:32;7601:52;;;7649:1;7646;7639:12;7601:52;7681:9;7675:16;7700:28;7722:5;7700:28;:::i;10601:168::-;10674:9;;;10705;;10722:15;;;10716:22;;10702:37;10692:71;;10743:18;;:::i;10774:217::-;10814:1;10840;10830:132;;10884:10;10879:3;10875:20;10872:1;10865:31;10919:4;10916:1;10909:15;10947:4;10944:1;10937:15;10830:132;-1:-1:-1;10976:9:11;;10774:217::o;11351:184::-;11421:6;11474:2;11462:9;11453:7;11449:23;11445:32;11442:52;;;11490:1;11487;11480:12;11442:52;-1:-1:-1;11513:16:11;;11351:184;-1:-1:-1;11351:184:11:o;11877:397::-;12079:2;12061:21;;;12118:2;12098:18;;;12091:30;12157:34;12152:2;12137:18;;12130:62;-1:-1:-1;;;12223:2:11;12208:18;;12201:31;12264:3;12249:19;;11877:397::o;12279:301::-;12408:3;12446:6;12440:13;12492:6;12485:4;12477:6;12473:17;12468:3;12462:37;12554:1;12518:16;;12543:13;;;-1:-1:-1;12518:16:11;12279:301;-1:-1:-1;12279:301:11:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1988000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"addFunds(uint256,uint256)": "infinite",
								"addOwnership(uint256)": "infinite",
								"addProjects(uint256)": "54908",
								"addTreasuery(uint256)": "infinite",
								"alreadyAdded(address)": "2661",
								"blockUser(address,bool)": "30945",
								"checkOnce()": "2372",
								"checkUpkeep(bytes)": "infinite",
								"flowToTreasuryPercentage()": "2438",
								"initialize(address,address,address)": "infinite",
								"interval()": "2350",
								"lastTimeStamp()": "2417",
								"maintainceFeePercentage()": "2395",
								"multisigAddress()": "2470",
								"noOfUsers()": "2330",
								"odividentPayoutPercentage()": "2439",
								"off()": "32978",
								"owner()": "2375",
								"ownerShipPoolAmount()": "2328",
								"performUpkeep(bytes)": "infinite",
								"proxiableUUID()": "infinite",
								"reStakeTokens(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"s_forwarderAddress()": "2471",
								"setForwarderAddress(address)": "28189",
								"setInterval(uint256,uint256)": "70492",
								"setTeasueryPercentages(uint256,uint256)": "infinite",
								"setflowToTreasuryPercentage(uint256)": "infinite",
								"setmaintainceFeePercentage(uint256)": "infinite",
								"setodividentPayoutPercentage(uint256)": "infinite",
								"settdividentPayoutPercentage(uint256)": "infinite",
								"stakeTokens(uint256)": "infinite",
								"startingTime()": "2373",
								"tPPercentages(uint256)": "2578",
								"tdividentPayoutPercentage()": "2351",
								"totalProjects()": "2372",
								"totalStakedAmount()": "2439",
								"totalUsers(uint256)": "2585",
								"transferOwnership(address)": "28497",
								"treasuryPoolAmount()": "2374",
								"upgradeToAndCall(address,bytes)": "infinite",
								"usdcToken()": "2404",
								"userRegistered(address)": "13291",
								"userWithdrawAmoount(uint256)": "infinite",
								"weeklyTransfer()": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite",
								"calculateFees(uint256,uint256)": "infinite",
								"calculatePercentage(uint256,uint256)": "infinite",
								"perPoolCalculation()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 896,
									"end": 16376,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 896,
									"end": 16376,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 896,
									"end": 16376,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3542,
									"end": 3595,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 3542,
									"end": 3595,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3542,
									"end": 3595,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3542,
									"end": 3595,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3542,
									"end": 3595,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3542,
									"end": 3595,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3542,
									"end": 3595,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3542,
									"end": 3595,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3542,
									"end": 3595,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3542,
									"end": 3595,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3566,
									"end": 3588,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 3566,
									"end": 3586,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 3566,
									"end": 3588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3566,
									"end": 3588,
									"name": "tag",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 3566,
									"end": 3588,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 896,
									"end": 16376,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 896,
									"end": 16376,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8870,
									"end": 8891,
									"name": "PUSH",
									"source": 2,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 2,
									"value": "10000000000000000"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F92EE8A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 158,
									"end": 208,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 158,
									"end": 208,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 158,
									"end": 208,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 2,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 148,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 131,
									"end": 149,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "LOG1",
									"source": 2
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7760,
									"end": 8133,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7711,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 214,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 214,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 896,
									"end": 16376,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 896,
									"end": 16376,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 896,
									"end": 16376,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 896,
									"end": 16376,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 896,
									"end": 16376,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 896,
									"end": 16376,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 896,
									"end": 16376,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 896,
									"end": 16376,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "487"
								},
								{
									"begin": 896,
									"end": 16376,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 896,
									"end": 16376,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 896,
									"end": 16376,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122035be302540174fae70c4e731bbcb9b61546fa1e7b640471b5dc131f9b5e51e1464736f6c634300081a0033",
									".code": [
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "78FD078D"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "B47FF951"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "D777CC6D"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "D777CC6D"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "D9B998B4"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "E9C68E2C"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "ED061067"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "FF3D65D9"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "B47FF951"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "B9DAC1EB"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "BCCBC36C"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "C0C53B8B"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "C7FD5BF0"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "CE356A24"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "947A36FB"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "9C361E4E"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "A4F67B8B"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "AD3CB1CC"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "AD8E5EC4"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "78FD078D"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "7F111E60"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "7F70C5E7"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "7FFE4D93"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "85F45250"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "4585E33B"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "5F17E616"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "5F17E616"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "6626B26D"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "67976974"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "6E04FF0D"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "7547C7A3"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "4585E33B"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "4F1EF286"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "5256DBBF"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "52D1902D"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "5462870D"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "567E98F9"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "30E3F8F8"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "30E3F8F8"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "33244C2C"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "39518B5E"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "3A71A9E4"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "3F3B3B27"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "44490FF4"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "1934A83"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "11EAC855"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "188E07B9"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "2765DF7A"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "3070FBF8"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 16376,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 375,
											"end": 407,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 375,
											"end": 407,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 357,
											"end": 408,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 4355,
											"end": 4693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 4355,
											"end": 4693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1657,
											"end": 1690,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1038,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 998,
											"end": 1039,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 998,
											"end": 1039,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 986,
											"end": 988,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 971,
											"end": 989,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 858,
											"end": 1045,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1601,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1573,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1601,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1601,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1601,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1573,
											"end": 1601,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1601,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1601,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1601,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1601,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1573,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1601,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1573,
											"end": 1601,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 1573,
											"end": 1601,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1601,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1601,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 10924,
											"end": 11705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 10924,
											"end": 11705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 5110,
											"end": 5510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 5110,
											"end": 5510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 11717,
											"end": 12204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 11717,
											"end": 12204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12210,
											"end": 12358,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12210,
											"end": 12358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12210,
											"end": 12358,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 12210,
											"end": 12358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12210,
											"end": 12358,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12210,
											"end": 12358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 12210,
											"end": 12358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12210,
											"end": 12358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12210,
											"end": 12358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12210,
											"end": 12358,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12210,
											"end": 12358,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 12210,
											"end": 12358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12210,
											"end": 12358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12210,
											"end": 12358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 12210,
											"end": 12358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 12210,
											"end": 12358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 13101,
											"end": 13678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 13101,
											"end": 13678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 10686,
											"end": 10918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 10686,
											"end": 10918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 10686,
											"end": 10918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 5516,
											"end": 6318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 5516,
											"end": 6318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 4699,
											"end": 5100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 4699,
											"end": 5100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 15609,
											"end": 15932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 15609,
											"end": 15932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 14598,
											"end": 14928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 14598,
											"end": 14928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 6324,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 6324,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 7012,
											"end": 7551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 7012,
											"end": 7551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1957,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 2013,
											"end": 2058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2058,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 15278,
											"end": 15603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 15278,
											"end": 15603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 14938,
											"end": 15267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 14938,
											"end": 15267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 2118,
											"end": 2174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4824,
											"end": 4838,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 4824,
											"end": 4838,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4817,
											"end": 4839,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4799,
											"end": 4840,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4799,
											"end": 4840,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4871,
											"end": 4873,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4856,
											"end": 4874,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4874,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4849,
											"end": 4883,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4849,
											"end": 4883,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4849,
											"end": 4883,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4849,
											"end": 4883,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4917,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4917,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4917,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4926,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4926,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4926,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4926,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4969,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5003,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 4985,
											"end": 5004,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4985,
											"end": 5004,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4978,
											"end": 5013,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5047,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 5029,
											"end": 5048,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5029,
											"end": 5048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5022,
											"end": 5057,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4786,
											"end": 4789,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 4771,
											"end": 4790,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2118,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 4518,
											"end": 5063,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 3601,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3601,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 1963,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2007,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 12365,
											"end": 12683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 12365,
											"end": 12683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 13684,
											"end": 14238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 13684,
											"end": 14238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7945,
											"end": 9517,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7945,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7945,
											"end": 9517,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 7945,
											"end": 9517,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7945,
											"end": 9517,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7945,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 7945,
											"end": 9517,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7945,
											"end": 9517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7945,
											"end": 9517,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7945,
											"end": 9517,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7945,
											"end": 9517,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 7945,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7945,
											"end": 9517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7945,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 7945,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 7945,
											"end": 9517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 14250,
											"end": 14592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 14250,
											"end": 14592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 2064,
											"end": 2112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2112,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4454,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4459,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 4438,
											"end": 4522,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4481,
											"end": 4511,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDBC6335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4481,
											"end": 4511,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4511,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4481,
											"end": 4511,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4522,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 4438,
											"end": 4522,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 4546,
											"end": 4559,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4559,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4532,
											"end": 4560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4532,
											"end": 4545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 4532,
											"end": 4560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4532,
											"end": 4576,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4532,
											"end": 4576,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4532,
											"end": 4576,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4601,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4601,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4601,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4559,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 4586,
											"end": 4601,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 4586,
											"end": 4601,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4601,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 4586,
											"end": 4601,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4601,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4601,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4631,
											"end": 4644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 4631,
											"end": 4644,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E1976E16ED8CE8E740235978FBE69B27D5EEA683B2E017BB0BD2FABB33294B3F"
										},
										{
											"begin": 4619,
											"end": 4686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4669,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 4656,
											"end": 4669,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 4648,
											"end": 4669,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 4648,
											"end": 4669,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4669,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 4648,
											"end": 4669,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4619,
											"end": 4686,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4686,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6482,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6482,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6482,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6513,
											"end": 6515,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6491,
											"end": 6525,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6491,
											"end": 6525,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6491,
											"end": 6525,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6491,
											"end": 6525,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6541,
											"end": 6559,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6541,
											"end": 6559,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6568,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6568,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6534,
											"end": 6568,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6445,
											"end": 6447,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6430,
											"end": 6448,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4619,
											"end": 4686,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4619,
											"end": 4686,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4619,
											"end": 4686,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4686,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4686,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4686,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4686,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4686,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11043,
											"end": 11061,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 11043,
											"end": 11061,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11043,
											"end": 11061,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11029,
											"end": 11039,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 11029,
											"end": 11061,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 11008,
											"end": 11146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 11008,
											"end": 11146,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11008,
											"end": 11146,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11008,
											"end": 11146,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11008,
											"end": 11146,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11008,
											"end": 11146,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6781,
											"end": 6783,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11008,
											"end": 11146,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11008,
											"end": 11146,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11008,
											"end": 11146,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6763,
											"end": 6784,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6820,
											"end": 6822,
											"name": "PUSH",
											"source": 11,
											"value": "3B"
										},
										{
											"begin": 6800,
											"end": 6818,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6800,
											"end": 6818,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6800,
											"end": 6818,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6793,
											"end": 6823,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6859,
											"end": 6893,
											"name": "PUSH",
											"source": 11,
											"value": "54686973206164647265737320646F6573206E6F742068617665207065726D69"
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6839,
											"end": 6857,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6832,
											"end": 6894,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6930,
											"end": 6959,
											"name": "PUSH",
											"source": 11,
											"value": "7373696F6E20746F2063616C6C20706572666F726D55706B6565700000000000"
										},
										{
											"begin": 6910,
											"end": 6928,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6910,
											"end": 6928,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6910,
											"end": 6928,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6903,
											"end": 6960,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6977,
											"end": 6996,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 6977,
											"end": 6996,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11008,
											"end": 11146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 6579,
											"end": 7002,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11008,
											"end": 11146,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 11008,
											"end": 11146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11168,
											"end": 11176,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 11168,
											"end": 11176,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11180,
											"end": 11181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11168,
											"end": 11181,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11164,
											"end": 11237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 11164,
											"end": 11237,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11217,
											"end": 11225,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 11217,
											"end": 11225,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11203,
											"end": 11226,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11203,
											"end": 11226,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71540007"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11203,
											"end": 11226,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11203,
											"end": 11226,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11203,
											"end": 11226,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11203,
											"end": 11226,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11203,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 11203,
											"end": 11226,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11164,
											"end": 11237,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 11164,
											"end": 11237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11259,
											"end": 11268,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 11259,
											"end": 11268,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11259,
											"end": 11268,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11259,
											"end": 11268,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11259,
											"end": 11268,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 11259,
											"end": 11268,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11255,
											"end": 11618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 11255,
											"end": 11618,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11306,
											"end": 11318,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 11306,
											"end": 11318,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11287,
											"end": 11302,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 11287,
											"end": 11318,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 11284,
											"end": 11497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 11284,
											"end": 11497,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11353,
											"end": 11368,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 11337,
											"end": 11350,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 11337,
											"end": 11368,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11386,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 11386,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 11386,
											"end": 11402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11386,
											"end": 11402,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 11386,
											"end": 11402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11255,
											"end": 11618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 11255,
											"end": 11618,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11284,
											"end": 11497,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 11284,
											"end": 11497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11469,
											"end": 11481,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 11469,
											"end": 11481,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11459,
											"end": 11482,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11459,
											"end": 11482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54593E75"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11459,
											"end": 11482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11459,
											"end": 11482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11459,
											"end": 11482,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11459,
											"end": 11482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11459,
											"end": 11482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 11459,
											"end": 11482,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11255,
											"end": 11618,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 11255,
											"end": 11618,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11562,
											"end": 11577,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 11546,
											"end": 11559,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 11546,
											"end": 11577,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11591,
											"end": 11607,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 11591,
											"end": 11605,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 11591,
											"end": 11607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11591,
											"end": 11607,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 11591,
											"end": 11607,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11639,
											"end": 11648,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 11639,
											"end": 11648,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11639,
											"end": 11648,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11639,
											"end": 11648,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11639,
											"end": 11648,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 11639,
											"end": 11648,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11635,
											"end": 11690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 11635,
											"end": 11690,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11663,
											"end": 11672,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 11663,
											"end": 11679,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11663,
											"end": 11679,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11663,
											"end": 11679,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11663,
											"end": 11679,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 11663,
											"end": 11679,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11663,
											"end": 11679,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11635,
											"end": 11690,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 11635,
											"end": 11690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 11705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 11705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 2653,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 4291,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4273,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 4273,
											"end": 4309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 4341,
											"end": 4358,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4360,
											"end": 4364,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4319,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 4319,
											"end": 4365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5202,
											"end": 5203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5198,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5191,
											"end": 5203,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 5188,
											"end": 5256,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 5245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5225,
											"end": 5245,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FF4783"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5225,
											"end": 5245,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 5245,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 5245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5225,
											"end": 5245,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 5245,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5225,
											"end": 5245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5188,
											"end": 5256,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 5188,
											"end": 5256,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5289,
											"end": 5296,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5267,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5267,
											"end": 5296,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5296,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5296,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 5267,
											"end": 5296,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 5267,
											"end": 5296,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5296,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 5267,
											"end": 5296,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5296,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5296,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5296,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5307,
											"end": 5319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5331,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5331,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5322,
											"end": 5379,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5322,
											"end": 5379,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5322,
											"end": 5331,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5331,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5331,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5331,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 5322,
											"end": 5344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 5322,
											"end": 5379,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5345,
											"end": 5355,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5345,
											"end": 5355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5364,
											"end": 5368,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 5364,
											"end": 5368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5370,
											"end": 5377,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5370,
											"end": 5377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 5322,
											"end": 5379,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5379,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 5322,
											"end": 5379,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 5322,
											"end": 5379,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5307,
											"end": 5379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5307,
											"end": 5379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5393,
											"end": 5400,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5389,
											"end": 5456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 5389,
											"end": 5456,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5422,
											"end": 5445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5422,
											"end": 5445,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D85D3CEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5422,
											"end": 5445,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5422,
											"end": 5445,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1038,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5422,
											"end": 5445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5422,
											"end": 5445,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5422,
											"end": 5445,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 998,
											"end": 1039,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 971,
											"end": 989,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 971,
											"end": 989,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5422,
											"end": 5445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 858,
											"end": 1045,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5389,
											"end": 5456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 5389,
											"end": 5456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5471,
											"end": 5503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A9F166643EC132A11638E74E3C3A78D4AE278FCBF92998240E0E97676F54E404"
										},
										{
											"begin": 5484,
											"end": 5502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5484,
											"end": 5502,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5471,
											"end": 5503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5471,
											"end": 5503,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5471,
											"end": 5503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 5471,
											"end": 5503,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5471,
											"end": 5503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 5471,
											"end": 5503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5471,
											"end": 5503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5471,
											"end": 5503,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5471,
											"end": 5503,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5471,
											"end": 5503,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5471,
											"end": 5503,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5471,
											"end": 5503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5471,
											"end": 5503,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5510,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5510,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 2924,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 11717,
											"end": 12204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11846,
											"end": 11847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11828,
											"end": 11842,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11828,
											"end": 11847,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11825,
											"end": 11909,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 11825,
											"end": 11909,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11869,
											"end": 11898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11869,
											"end": 11898,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71540007"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11869,
											"end": 11898,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11869,
											"end": 11898,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11869,
											"end": 11898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11869,
											"end": 11898,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11869,
											"end": 11898,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11869,
											"end": 11898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11825,
											"end": 11909,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 11825,
											"end": 11909,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11946,
											"end": 11961,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 11930,
											"end": 11943,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11930,
											"end": 11961,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 11927,
											"end": 12018,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11927,
											"end": 12018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 11927,
											"end": 12018,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11983,
											"end": 12007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11983,
											"end": 12007,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54593E75"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11983,
											"end": 12007,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11983,
											"end": 12007,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11983,
											"end": 12007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11983,
											"end": 12007,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11983,
											"end": 12007,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11983,
											"end": 12007,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11927,
											"end": 12018,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 11927,
											"end": 12018,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12028,
											"end": 12036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 12028,
											"end": 12053,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12028,
											"end": 12053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12028,
											"end": 12053,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 12063,
											"end": 12075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 12063,
											"end": 12091,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12063,
											"end": 12091,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12063,
											"end": 12091,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 12117,
											"end": 12132,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 12101,
											"end": 12114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 12101,
											"end": 12132,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12101,
											"end": 12132,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12101,
											"end": 12132,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 12148,
											"end": 12196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12148,
											"end": 12196,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12148,
											"end": 12196,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12160,
											"end": 12170,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7965,
											"end": 8016,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7965,
											"end": 8016,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8047,
											"end": 8049,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8025,
											"end": 8059,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8025,
											"end": 8059,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8025,
											"end": 8059,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8075,
											"end": 8093,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8075,
											"end": 8093,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8075,
											"end": 8093,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8068,
											"end": 8102,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8068,
											"end": 8102,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8068,
											"end": 8102,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8068,
											"end": 8102,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12148,
											"end": 12196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2B5090E035D3026F5448298C9ADC68DB8BBC1B26A8AF5C81B2B2A9FC07CA4A00"
										},
										{
											"begin": 12148,
											"end": 12196,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7953,
											"end": 7955,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12148,
											"end": 12196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 7763,
											"end": 8108,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12210,
											"end": 12358,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 12210,
											"end": 12358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12274,
											"end": 12275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12263,
											"end": 12271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 12263,
											"end": 12275,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12263,
											"end": 12275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12263,
											"end": 12275,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 12285,
											"end": 12294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 12285,
											"end": 12302,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12285,
											"end": 12302,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12285,
											"end": 12302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12285,
											"end": 12302,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12285,
											"end": 12302,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12318,
											"end": 12351,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12351,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12330,
											"end": 12340,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8287,
											"end": 8338,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8287,
											"end": 8338,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8369,
											"end": 8371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12318,
											"end": 12351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3B68DC4E210C46D3622293F2B941CDFDE795BB6E17286BB289BA05A6A3B5541F"
										},
										{
											"begin": 12318,
											"end": 12351,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8260,
											"end": 8278,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12318,
											"end": 12351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12318,
											"end": 12351,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12351,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12351,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12351,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12351,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12351,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 12210,
											"end": 12358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 13101,
											"end": 13678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16149,
											"end": 16155,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 16149,
											"end": 16155,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16149,
											"end": 16155,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16149,
											"end": 16155,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 16149,
											"end": 16155,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 16149,
											"end": 16155,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16148,
											"end": 16155,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16140,
											"end": 16191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 16140,
											"end": 16191,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16140,
											"end": 16191,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16140,
											"end": 16191,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16140,
											"end": 16191,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16140,
											"end": 16191,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8594,
											"end": 8596,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16140,
											"end": 16191,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16140,
											"end": 16191,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16140,
											"end": 16191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8576,
											"end": 8597,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8633,
											"end": 8635,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 8613,
											"end": 8631,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8613,
											"end": 8631,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8613,
											"end": 8631,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8606,
											"end": 8636,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8672,
											"end": 8705,
											"name": "PUSH",
											"source": 11,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 8652,
											"end": 8670,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8652,
											"end": 8670,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8652,
											"end": 8670,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8645,
											"end": 8706,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8723,
											"end": 8741,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8723,
											"end": 8741,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16140,
											"end": 16191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 8392,
											"end": 8747,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16140,
											"end": 16191,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 16140,
											"end": 16191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16201,
											"end": 16207,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 16201,
											"end": 16214,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16201,
											"end": 16214,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16201,
											"end": 16214,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16201,
											"end": 16214,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 16201,
											"end": 16214,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16201,
											"end": 16214,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 13191,
											"end": 13203,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13188,
											"end": 13256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 13188,
											"end": 13256,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13225,
											"end": 13245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13225,
											"end": 13245,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FF4783"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13225,
											"end": 13245,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13225,
											"end": 13245,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13225,
											"end": 13245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13225,
											"end": 13245,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13225,
											"end": 13245,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13225,
											"end": 13245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13188,
											"end": 13256,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 13188,
											"end": 13256,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13299,
											"end": 13309,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 13284,
											"end": 13310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13284,
											"end": 13310,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13284,
											"end": 13310,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13284,
											"end": 13310,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13284,
											"end": 13298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 13284,
											"end": 13310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13284,
											"end": 13310,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13284,
											"end": 13310,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13284,
											"end": 13310,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13284,
											"end": 13310,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 13284,
											"end": 13325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13284,
											"end": 13325,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13284,
											"end": 13325,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 13273,
											"end": 13325,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13273,
											"end": 13325,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13273,
											"end": 13325,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13265,
											"end": 13346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 13265,
											"end": 13346,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13265,
											"end": 13346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13265,
											"end": 13346,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13265,
											"end": 13346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13265,
											"end": 13346,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8954,
											"end": 8956,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13265,
											"end": 13346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13265,
											"end": 13346,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13265,
											"end": 13346,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8936,
											"end": 8957,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8993,
											"end": 8995,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 8973,
											"end": 8991,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8973,
											"end": 8991,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8973,
											"end": 8991,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8966,
											"end": 8996,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E76616C6964205F616D6F756E7421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9012,
											"end": 9030,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 9012,
											"end": 9030,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9012,
											"end": 9030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9005,
											"end": 9051,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9068,
											"end": 9086,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 9068,
											"end": 9086,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13265,
											"end": 13346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 8752,
											"end": 9092,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13265,
											"end": 13346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 13265,
											"end": 13346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13372,
											"end": 13382,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13357,
											"end": 13383,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13383,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13383,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 13357,
											"end": 13383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13357,
											"end": 13383,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13383,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13357,
											"end": 13383,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13383,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13357,
											"end": 13398,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13409,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13409,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 13402,
											"end": 13409,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13402,
											"end": 13409,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13383,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 13357,
											"end": 13409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13402,
											"end": 13409,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13402,
											"end": 13409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 13357,
											"end": 13409,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13409,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 13357,
											"end": 13409,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13409,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13357,
											"end": 13409,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13434,
											"end": 13444,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 13419,
											"end": 13445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13419,
											"end": 13445,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13419,
											"end": 13445,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13419,
											"end": 13445,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13419,
											"end": 13433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 13419,
											"end": 13445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13419,
											"end": 13445,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13419,
											"end": 13445,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13419,
											"end": 13445,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13419,
											"end": 13445,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 13419,
											"end": 13460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 13419,
											"end": 13460,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13419,
											"end": 13471,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13419,
											"end": 13471,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 13464,
											"end": 13471,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13464,
											"end": 13471,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13419,
											"end": 13445,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13419,
											"end": 13471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 13419,
											"end": 13471,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13464,
											"end": 13471,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13464,
											"end": 13471,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13419,
											"end": 13471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 13419,
											"end": 13471,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13419,
											"end": 13471,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 13419,
											"end": 13471,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13419,
											"end": 13471,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13419,
											"end": 13471,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13419,
											"end": 13471,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13489,
											"end": 13501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13504,
											"end": 13513,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13513,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13504,
											"end": 13542,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13504,
											"end": 13542,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13523,
											"end": 13533,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13504,
											"end": 13542,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8287,
											"end": 8338,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13504,
											"end": 13513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13513,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13513,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 13504,
											"end": 13522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8260,
											"end": 8278,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8260,
											"end": 8278,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13504,
											"end": 13542,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 13504,
											"end": 13542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 13504,
											"end": 13542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13489,
											"end": 13542,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13489,
											"end": 13542,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13564,
											"end": 13571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13560,
											"end": 13627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 13560,
											"end": 13627,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13593,
											"end": 13616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13593,
											"end": 13616,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D85D3CEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13593,
											"end": 13616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13593,
											"end": 13616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1038,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13593,
											"end": 13616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13593,
											"end": 13616,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13593,
											"end": 13616,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 998,
											"end": 1039,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 971,
											"end": 989,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 971,
											"end": 989,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13593,
											"end": 13616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 858,
											"end": 1045,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13560,
											"end": 13627,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 13560,
											"end": 13627,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13642,
											"end": 13671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13642,
											"end": 13671,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13642,
											"end": 13671,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13651,
											"end": 13661,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8287,
											"end": 8338,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8287,
											"end": 8338,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8369,
											"end": 8371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 13642,
											"end": 13671,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8260,
											"end": 8278,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13642,
											"end": 13671,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13642,
											"end": 13671,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13642,
											"end": 13671,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13642,
											"end": 13671,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13642,
											"end": 13671,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13642,
											"end": 13671,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16235,
											"end": 16241,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 16235,
											"end": 16249,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16235,
											"end": 16249,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16235,
											"end": 16249,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16235,
											"end": 16249,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16235,
											"end": 16249,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 13101,
											"end": 13678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10770,
											"end": 10774,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10776,
											"end": 10788,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10807,
											"end": 10823,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10862,
											"end": 10870,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 10862,
											"end": 10870,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10845,
											"end": 10858,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 10845,
											"end": 10858,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10827,
											"end": 10842,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 10827,
											"end": 10858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 10827,
											"end": 10858,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10827,
											"end": 10858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10827,
											"end": 10858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 10827,
											"end": 10858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10827,
											"end": 10858,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 10827,
											"end": 10858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10901,
											"end": 10910,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10901,
											"end": 10910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10901,
											"end": 10910,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10901,
											"end": 10910,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10901,
											"end": 10910,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10901,
											"end": 10910,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10901,
											"end": 10910,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10901,
											"end": 10910,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10901,
											"end": 10910,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10901,
											"end": 10910,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10901,
											"end": 10910,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 10901,
											"end": 10910,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10901,
											"end": 10910,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10686,
											"end": 10918,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10686,
											"end": 10918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 5516,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5598,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5586,
											"end": 5593,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5586,
											"end": 5598,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5583,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 5583,
											"end": 5651,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5640,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5620,
											"end": 5640,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FF4783"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5620,
											"end": 5640,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5640,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5640,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5620,
											"end": 5640,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5620,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5583,
											"end": 5651,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 5583,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5697,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5672,
											"end": 5698,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5698,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5672,
											"end": 5698,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5672,
											"end": 5698,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5672,
											"end": 5686,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 5672,
											"end": 5698,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5672,
											"end": 5698,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5672,
											"end": 5698,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5672,
											"end": 5698,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5672,
											"end": 5698,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5672,
											"end": 5706,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5672,
											"end": 5706,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5672,
											"end": 5706,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5669,
											"end": 5786,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5669,
											"end": 5786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 5669,
											"end": 5786,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5755,
											"end": 5765,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5740,
											"end": 5766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5740,
											"end": 5766,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5740,
											"end": 5766,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5740,
											"end": 5766,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5740,
											"end": 5754,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 5740,
											"end": 5766,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5740,
											"end": 5766,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5740,
											"end": 5766,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5740,
											"end": 5766,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5740,
											"end": 5766,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5740,
											"end": 5766,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5740,
											"end": 5766,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5740,
											"end": 5774,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5728,
											"end": 5775,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5728,
											"end": 5775,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BE970F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5728,
											"end": 5775,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5728,
											"end": 5775,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5740,
											"end": 5774,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5740,
											"end": 5774,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5740,
											"end": 5774,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5740,
											"end": 5774,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1038,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5728,
											"end": 5775,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5728,
											"end": 5775,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5728,
											"end": 5775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 998,
											"end": 1039,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 971,
											"end": 989,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 971,
											"end": 989,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5728,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 858,
											"end": 1045,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5669,
											"end": 5786,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 5669,
											"end": 5786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5811,
											"end": 5821,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5810,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5796,
											"end": 5840,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5851,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5851,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5844,
											"end": 5851,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5844,
											"end": 5851,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 5796,
											"end": 5851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5844,
											"end": 5851,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5844,
											"end": 5851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 5796,
											"end": 5851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5851,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 5796,
											"end": 5851,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5851,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5851,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5886,
											"end": 5896,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5873,
											"end": 5897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5897,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5873,
											"end": 5897,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5873,
											"end": 5897,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5873,
											"end": 5885,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 5873,
											"end": 5897,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5873,
											"end": 5897,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5873,
											"end": 5897,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5897,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5873,
											"end": 5897,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5873,
											"end": 5897,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5873,
											"end": 5897,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5873,
											"end": 5897,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5869,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 5869,
											"end": 6040,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5936,
											"end": 5945,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 5936,
											"end": 5945,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5936,
											"end": 5945,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5946,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 5946,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5946,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5946,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5935,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 5925,
											"end": 5946,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5925,
											"end": 5946,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5946,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5946,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5946,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5925,
											"end": 5946,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5946,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5946,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5959,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5959,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5925,
											"end": 5959,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 5959,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5959,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5959,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5959,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5959,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5959,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5959,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 5997,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 5997,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 5985,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 5973,
											"end": 5997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 5997,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 5997,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 5997,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 5997,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6004,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6004,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5973,
											"end": 6004,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5959,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5973,
											"end": 6004,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6004,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 6004,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6029,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6029,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5936,
											"end": 5945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 6018,
											"end": 6029,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 6018,
											"end": 6029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6029,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 6018,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6029,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6029,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5869,
											"end": 6040,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 5869,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6071,
											"end": 6078,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6078,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6078,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6078,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 6050,
											"end": 6078,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6078,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 6050,
											"end": 6078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6078,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 6050,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6078,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6078,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6078,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6089,
											"end": 6101,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6112,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6112,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6137,
											"end": 6152,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 6137,
											"end": 6152,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6103,
											"end": 6112,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6112,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6112,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6112,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6125,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 6103,
											"end": 6125,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6126,
											"end": 6136,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6126,
											"end": 6136,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6137,
											"end": 6152,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6137,
											"end": 6152,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6137,
											"end": 6152,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6137,
											"end": 6152,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6153,
											"end": 6160,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6153,
											"end": 6160,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 6103,
											"end": 6161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 6103,
											"end": 6161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 6103,
											"end": 6161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6089,
											"end": 6161,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6089,
											"end": 6161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6184,
											"end": 6191,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 6180,
											"end": 6247,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6213,
											"end": 6236,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6213,
											"end": 6236,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D85D3CEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6213,
											"end": 6236,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6213,
											"end": 6236,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1038,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6213,
											"end": 6236,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6213,
											"end": 6236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6213,
											"end": 6236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 998,
											"end": 1039,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 971,
											"end": 989,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 971,
											"end": 989,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6213,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 858,
											"end": 1045,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6180,
											"end": 6247,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 6180,
											"end": 6247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6285,
											"end": 6300,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 6285,
											"end": 6300,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6262,
											"end": 6310,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6262,
											"end": 6310,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6262,
											"end": 6310,
											"name": "PUSH",
											"source": 10,
											"value": "14EE34C24635186D212F515353DADAE9C226529EDEF2D1FCF5504CB33B5C25AB"
										},
										{
											"begin": 6262,
											"end": 6310,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6262,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 6262,
											"end": 6310,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6274,
											"end": 6284,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6274,
											"end": 6284,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6285,
											"end": 6300,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6285,
											"end": 6300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6302,
											"end": 6309,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6302,
											"end": 6309,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6262,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 6262,
											"end": 6310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 4699,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4791,
											"end": 4792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4787,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4792,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4777,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 4777,
											"end": 4845,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4814,
											"end": 4834,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FF4783"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4814,
											"end": 4834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4834,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4814,
											"end": 4834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4834,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4814,
											"end": 4834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4777,
											"end": 4845,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 4777,
											"end": 4845,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4878,
											"end": 4885,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4855,
											"end": 4874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 4885,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4885,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4885,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 4855,
											"end": 4885,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4885,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 4855,
											"end": 4885,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4885,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 4855,
											"end": 4885,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4896,
											"end": 4908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4920,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4920,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4911,
											"end": 4968,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4911,
											"end": 4968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4911,
											"end": 4920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4920,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4920,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 4911,
											"end": 4933,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 4911,
											"end": 4968,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4934,
											"end": 4944,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4934,
											"end": 4944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 4957,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 4957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 4966,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 4966,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4911,
											"end": 4968,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4968,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4911,
											"end": 4968,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 4911,
											"end": 4968,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4896,
											"end": 4968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4896,
											"end": 4968,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4982,
											"end": 4989,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5045,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 4978,
											"end": 5045,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5011,
											"end": 5034,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D85D3CEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5034,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5034,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1038,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5011,
											"end": 5034,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5034,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 998,
											"end": 1039,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 971,
											"end": 989,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 971,
											"end": 989,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 858,
											"end": 1045,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4978,
											"end": 5045,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 4978,
											"end": 5045,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5060,
											"end": 5093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "73834E1D1EE73BA659470A3603B888903853D3A3C9FDA34E71C093A0E35CAB94"
										},
										{
											"begin": 5073,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5073,
											"end": 5092,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5060,
											"end": 5093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5060,
											"end": 5093,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5060,
											"end": 5093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 5060,
											"end": 5093,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 15609,
											"end": 15932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15730,
											"end": 15731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15711,
											"end": 15726,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15711,
											"end": 15731,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15708,
											"end": 15796,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 15708,
											"end": 15796,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15753,
											"end": 15785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15753,
											"end": 15785,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDBC6335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15753,
											"end": 15785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15753,
											"end": 15785,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15753,
											"end": 15785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15753,
											"end": 15785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15753,
											"end": 15785,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15753,
											"end": 15785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15708,
											"end": 15796,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 15708,
											"end": 15796,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15814,
											"end": 15837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 15814,
											"end": 15855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15814,
											"end": 15855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15814,
											"end": 15855,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15871,
											"end": 15925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15871,
											"end": 15925,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15871,
											"end": 15925,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15889,
											"end": 15899,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8287,
											"end": 8338,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8287,
											"end": 8338,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8369,
											"end": 8371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D85598D6EA860439B48FC265883A1CAC638FF64DCA5391FE12B46F27076E26FE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15871,
											"end": 15925,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8260,
											"end": 8278,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15871,
											"end": 15925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 8113,
											"end": 8387,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 14598,
											"end": 14928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14721,
											"end": 14722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14702,
											"end": 14717,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14702,
											"end": 14722,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14699,
											"end": 14787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 14699,
											"end": 14787,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14744,
											"end": 14776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14744,
											"end": 14776,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDBC6335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14744,
											"end": 14776,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14744,
											"end": 14776,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14744,
											"end": 14776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14744,
											"end": 14776,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14744,
											"end": 14776,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14744,
											"end": 14776,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14699,
											"end": 14787,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 14699,
											"end": 14787,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14805,
											"end": 14830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14805,
											"end": 14848,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14805,
											"end": 14848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14805,
											"end": 14848,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 14864,
											"end": 14920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14864,
											"end": 14920,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14864,
											"end": 14920,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14882,
											"end": 14892,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8287,
											"end": 8338,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8287,
											"end": 8338,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8369,
											"end": 8371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D85598D6EA860439B48FC265883A1CAC638FF64DCA5391FE12B46F27076E26FE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14864,
											"end": 14920,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8260,
											"end": 8278,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14864,
											"end": 14920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 8113,
											"end": 8387,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 6324,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6407,
											"end": 6408,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6396,
											"end": 6403,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6396,
											"end": 6408,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6393,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 6393,
											"end": 6461,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6430,
											"end": 6450,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6430,
											"end": 6450,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FF4783"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6430,
											"end": 6450,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6430,
											"end": 6450,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6430,
											"end": 6450,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6430,
											"end": 6450,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6430,
											"end": 6450,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6430,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6393,
											"end": 6461,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 6393,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6496,
											"end": 6506,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6507,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6481,
											"end": 6507,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6507,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6507,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 6481,
											"end": 6507,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6481,
											"end": 6507,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6507,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6481,
											"end": 6507,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6507,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6515,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6515,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6481,
											"end": 6515,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6478,
											"end": 6595,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6478,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 6478,
											"end": 6595,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6564,
											"end": 6574,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6583,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6537,
											"end": 6584,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6537,
											"end": 6584,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BE970F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6537,
											"end": 6584,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6537,
											"end": 6584,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6583,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6549,
											"end": 6583,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6583,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6583,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1038,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6584,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6537,
											"end": 6584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6537,
											"end": 6584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 998,
											"end": 1039,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 971,
											"end": 989,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 971,
											"end": 989,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 858,
											"end": 1045,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6478,
											"end": 6595,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 6478,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6633,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6608,
											"end": 6634,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6608,
											"end": 6634,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6608,
											"end": 6634,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6608,
											"end": 6634,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 6608,
											"end": 6634,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6608,
											"end": 6634,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6608,
											"end": 6634,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6608,
											"end": 6634,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6608,
											"end": 6634,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6608,
											"end": 6649,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6608,
											"end": 6649,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6608,
											"end": 6649,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6608,
											"end": 6660,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 6605,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 6605,
											"end": 6718,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6682,
											"end": 6707,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6682,
											"end": 6707,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "636DC6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6682,
											"end": 6707,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6682,
											"end": 6707,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6682,
											"end": 6707,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6682,
											"end": 6707,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6682,
											"end": 6707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6682,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6605,
											"end": 6718,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 6605,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6743,
											"end": 6753,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6754,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6754,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6754,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6754,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6742,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 6728,
											"end": 6754,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6728,
											"end": 6754,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6754,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6728,
											"end": 6754,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6754,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6769,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6728,
											"end": 6769,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6780,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6780,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6773,
											"end": 6780,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6773,
											"end": 6780,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6754,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 6728,
											"end": 6780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6773,
											"end": 6780,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6773,
											"end": 6780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 6728,
											"end": 6780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6780,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 6728,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6780,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6780,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6805,
											"end": 6815,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6816,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6790,
											"end": 6816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6816,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6804,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 6790,
											"end": 6816,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6790,
											"end": 6816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6816,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6790,
											"end": 6816,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6816,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6834,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6790,
											"end": 6834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6845,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6845,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6838,
											"end": 6845,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6838,
											"end": 6845,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 6790,
											"end": 6845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6838,
											"end": 6845,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6838,
											"end": 6845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 6790,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6845,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 6790,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6845,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6845,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6845,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6894,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6894,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6894,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 6864,
											"end": 6894,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 6864,
											"end": 6894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6894,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 6864,
											"end": 6894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6894,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6894,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6894,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6925,
											"end": 6932,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6904,
											"end": 6921,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6904,
											"end": 6921,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6904,
											"end": 6932,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6904,
											"end": 6932,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6904,
											"end": 6932,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6904,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 6904,
											"end": 6932,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6904,
											"end": 6932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6904,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 6904,
											"end": 6932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6904,
											"end": 6932,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 6904,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6904,
											"end": 6932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6904,
											"end": 6932,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6904,
											"end": 6932,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6948,
											"end": 6994,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6948,
											"end": 6994,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6948,
											"end": 6994,
											"name": "PUSH",
											"source": 10,
											"value": "14EE34C24635186D212F515353DADAE9C226529EDEF2D1FCF5504CB33B5C25AB"
										},
										{
											"begin": 6948,
											"end": 6994,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6948,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 6948,
											"end": 6994,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 6970,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 6970,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6979,
											"end": 6983,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 6979,
											"end": 6983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 6993,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 6993,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6948,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 6948,
											"end": 6994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7101,
											"end": 7102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7090,
											"end": 7097,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7090,
											"end": 7102,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 7087,
											"end": 7155,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7124,
											"end": 7144,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7124,
											"end": 7144,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FF4783"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7124,
											"end": 7144,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7124,
											"end": 7144,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7124,
											"end": 7144,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7124,
											"end": 7144,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7124,
											"end": 7144,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7124,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7087,
											"end": 7155,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 7087,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7168,
											"end": 7178,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7168,
											"end": 7194,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7253,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 7165,
											"end": 7253,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7216,
											"end": 7242,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7216,
											"end": 7242,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "222A50F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7216,
											"end": 7242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7216,
											"end": 7242,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7216,
											"end": 7242,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7216,
											"end": 7242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7216,
											"end": 7242,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7216,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7165,
											"end": 7253,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 7165,
											"end": 7253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7298,
											"end": 7323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7298,
											"end": 7323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7298,
											"end": 7323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7298,
											"end": 7323,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7298,
											"end": 7311,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 7298,
											"end": 7323,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7298,
											"end": 7323,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7298,
											"end": 7323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7298,
											"end": 7323,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7298,
											"end": 7323,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7275,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 7275,
											"end": 7324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7289,
											"end": 7296,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7289,
											"end": 7296,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7275,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 7275,
											"end": 7324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7275,
											"end": 7324,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 7275,
											"end": 7324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7343,
											"end": 7355,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7367,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7367,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7358,
											"end": 7367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7367,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7367,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7380,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 7358,
											"end": 7380,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7381,
											"end": 7391,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7381,
											"end": 7391,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7406,
											"end": 7413,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7406,
											"end": 7413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 7358,
											"end": 7415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 7358,
											"end": 7415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 7358,
											"end": 7415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7343,
											"end": 7415,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7343,
											"end": 7415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 7436,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7425,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 7425,
											"end": 7492,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7458,
											"end": 7481,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7458,
											"end": 7481,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D85D3CEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7458,
											"end": 7481,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7458,
											"end": 7481,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1038,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7458,
											"end": 7481,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7458,
											"end": 7481,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7458,
											"end": 7481,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 998,
											"end": 1039,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 971,
											"end": 989,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 971,
											"end": 989,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7458,
											"end": 7481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 858,
											"end": 1045,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7425,
											"end": 7492,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 7425,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7507,
											"end": 7535,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7507,
											"end": 7535,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7507,
											"end": 7535,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9271,
											"end": 9296,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9271,
											"end": 9296,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9271,
											"end": 9296,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9327,
											"end": 9329,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9312,
											"end": 9330,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9312,
											"end": 9330,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9305,
											"end": 9339,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9305,
											"end": 9339,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9305,
											"end": 9339,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7507,
											"end": 7535,
											"name": "PUSH",
											"source": 10,
											"value": "A89B69C5958EC1CCF0DF0DE746A8708F5B6A6B429430129F16F46F44B319C900"
										},
										{
											"begin": 7507,
											"end": 7535,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9244,
											"end": 9262,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7507,
											"end": 7535,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7507,
											"end": 7535,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7507,
											"end": 7535,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7507,
											"end": 7535,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7507,
											"end": 7535,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7507,
											"end": 7535,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7507,
											"end": 7535,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 7076,
											"end": 7551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 15278,
											"end": 15603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15399,
											"end": 15400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15380,
											"end": 15395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15380,
											"end": 15400,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15377,
											"end": 15465,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 15377,
											"end": 15465,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15422,
											"end": 15454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15422,
											"end": 15454,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDBC6335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15422,
											"end": 15454,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15422,
											"end": 15454,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15422,
											"end": 15454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15422,
											"end": 15454,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15422,
											"end": 15454,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15422,
											"end": 15454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15377,
											"end": 15465,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 15377,
											"end": 15465,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15483,
											"end": 15507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 15483,
											"end": 15525,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15483,
											"end": 15525,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15483,
											"end": 15525,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15541,
											"end": 15596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15541,
											"end": 15596,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15541,
											"end": 15596,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15559,
											"end": 15569,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8287,
											"end": 8338,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8287,
											"end": 8338,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8369,
											"end": 8371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D85598D6EA860439B48FC265883A1CAC638FF64DCA5391FE12B46F27076E26FE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15541,
											"end": 15596,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8260,
											"end": 8278,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15541,
											"end": 15596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 8113,
											"end": 8387,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 14938,
											"end": 15267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15061,
											"end": 15062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15042,
											"end": 15057,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15042,
											"end": 15062,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15039,
											"end": 15127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 15039,
											"end": 15127,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15084,
											"end": 15116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15084,
											"end": 15116,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDBC6335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15084,
											"end": 15116,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15084,
											"end": 15116,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15084,
											"end": 15116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15084,
											"end": 15116,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15084,
											"end": 15116,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15084,
											"end": 15116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15039,
											"end": 15127,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 15039,
											"end": 15127,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15145,
											"end": 15170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 15145,
											"end": 15188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15145,
											"end": 15188,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15145,
											"end": 15188,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15204,
											"end": 15260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15204,
											"end": 15260,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15204,
											"end": 15260,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15222,
											"end": 15232,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8287,
											"end": 8338,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8287,
											"end": 8338,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8369,
											"end": 8371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D85598D6EA860439B48FC265883A1CAC638FF64DCA5391FE12B46F27076E26FE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15204,
											"end": 15260,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8260,
											"end": 8278,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15204,
											"end": 15260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 8113,
											"end": 8387,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 2,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "435"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 2,
											"value": "435"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "437"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 2,
											"value": "437"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "439"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 2,
											"value": "439"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 3742,
											"end": 3754,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 3727,
											"end": 3755,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3755,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 3727,
											"end": 3755,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 3765,
											"end": 3787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3789,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 3765,
											"end": 3789,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3832,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3832,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3800,
											"end": 3832,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3832,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3832,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3800,
											"end": 3832,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3832,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3832,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3832,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3832,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4068,
											"end": 4072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1388"
										},
										{
											"begin": 4040,
											"end": 4065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4040,
											"end": 4072,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4122,
											"end": 4126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1D4C"
										},
										{
											"begin": 4094,
											"end": 4119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4094,
											"end": 4126,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5DC"
										},
										{
											"begin": 4161,
											"end": 4185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4161,
											"end": 4192,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3E8"
										},
										{
											"begin": 4213,
											"end": 4236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 4213,
											"end": 4243,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4335,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4335,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4335,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "445"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 9503,
											"end": 9553,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9503,
											"end": 9553,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 2,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9491,
											"end": 9493,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9476,
											"end": 9494,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 2,
											"value": "445"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 4342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 4342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 12365,
											"end": 12683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12461,
											"end": 12491,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12461,
											"end": 12491,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12458,
											"end": 12554,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 12458,
											"end": 12554,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12513,
											"end": 12543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12513,
											"end": 12543,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4CFA94D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12513,
											"end": 12543,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12513,
											"end": 12543,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 375,
											"end": 407,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12513,
											"end": 12543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12513,
											"end": 12543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12513,
											"end": 12543,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12513,
											"end": 12543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12458,
											"end": 12554,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 12458,
											"end": 12554,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12572,
											"end": 12590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 12572,
											"end": 12609,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12572,
											"end": 12609,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12572,
											"end": 12609,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12572,
											"end": 12609,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12572,
											"end": 12609,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12572,
											"end": 12609,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12572,
											"end": 12609,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12572,
											"end": 12609,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 12572,
											"end": 12609,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12572,
											"end": 12609,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12572,
											"end": 12609,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 12625,
											"end": 12676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12625,
											"end": 12676,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12625,
											"end": 12676,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12645,
											"end": 12655,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9738,
											"end": 9789,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9738,
											"end": 9789,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9820,
											"end": 9822,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9805,
											"end": 9823,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9805,
											"end": 9823,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9798,
											"end": 9858,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9798,
											"end": 9858,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9798,
											"end": 9858,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9798,
											"end": 9858,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12625,
											"end": 12676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "75F91F3CECB8C46F20150F60F77A6E1F0DE00776627692DB82EF1960AF84C33A"
										},
										{
											"begin": 12625,
											"end": 12676,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9711,
											"end": 9729,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12625,
											"end": 12676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 9564,
											"end": 9864,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 13684,
											"end": 14238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13778,
											"end": 13804,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13778,
											"end": 13804,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13775,
											"end": 13863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 13775,
											"end": 13863,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13826,
											"end": 13852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13826,
											"end": 13852,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4CFA94D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13826,
											"end": 13852,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13826,
											"end": 13852,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 375,
											"end": 407,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13826,
											"end": 13852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13826,
											"end": 13852,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13826,
											"end": 13852,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13826,
											"end": 13852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13775,
											"end": 13863,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 13775,
											"end": 13863,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13885,
											"end": 13889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13876,
											"end": 13889,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13876,
											"end": 13889,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13876,
											"end": 13889,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13876,
											"end": 13889,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 13876,
											"end": 13889,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13876,
											"end": 13889,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13876,
											"end": 13889,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13876,
											"end": 13907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 13876,
											"end": 13907,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13893,
											"end": 13907,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13893,
											"end": 13907,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13893,
											"end": 13907,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13876,
											"end": 13907,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 13876,
											"end": 13907,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13873,
											"end": 13957,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13873,
											"end": 13957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 13873,
											"end": 13957,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13929,
											"end": 13946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13929,
											"end": 13946,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81ED1AE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13929,
											"end": 13946,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13929,
											"end": 13946,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1038,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13929,
											"end": 13946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13929,
											"end": 13946,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13929,
											"end": 13946,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 998,
											"end": 1039,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 971,
											"end": 989,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 971,
											"end": 989,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13929,
											"end": 13946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 858,
											"end": 1045,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13873,
											"end": 13957,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 13873,
											"end": 13957,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13970,
											"end": 13983,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13970,
											"end": 13983,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13970,
											"end": 13983,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13979,
											"end": 13983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13970,
											"end": 13983,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13967,
											"end": 14134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 13967,
											"end": 14134,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13999,
											"end": 14027,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13999,
											"end": 14027,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13999,
											"end": 14027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13999,
											"end": 14027,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13999,
											"end": 14027,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13999,
											"end": 14027,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13999,
											"end": 14013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 13999,
											"end": 14027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13999,
											"end": 14027,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13999,
											"end": 14027,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13999,
											"end": 14027,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13999,
											"end": 14027,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 13999,
											"end": 14042,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13999,
											"end": 14042,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13999,
											"end": 14042,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14038,
											"end": 14042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13999,
											"end": 14042,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 13999,
											"end": 14042,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13999,
											"end": 14042,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 13967,
											"end": 14134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 13967,
											"end": 14134,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13967,
											"end": 14134,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 13967,
											"end": 14134,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14079,
											"end": 14107,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14079,
											"end": 14107,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14118,
											"end": 14123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14079,
											"end": 14107,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14079,
											"end": 14107,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14079,
											"end": 14107,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14079,
											"end": 14093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 14079,
											"end": 14107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14079,
											"end": 14107,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14079,
											"end": 14107,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14079,
											"end": 14107,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14079,
											"end": 14107,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 14079,
											"end": 14123,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14079,
											"end": 14123,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14079,
											"end": 14123,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14079,
											"end": 14123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14079,
											"end": 14123,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 13967,
											"end": 14134,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 13967,
											"end": 14134,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14194,
											"end": 14222,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14222,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14194,
											"end": 14222,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14222,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14222,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 14194,
											"end": 14222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14194,
											"end": 14222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14222,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14222,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14222,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14194,
											"end": 14222,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14222,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14222,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14230,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 14157,
											"end": 14231,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14157,
											"end": 14231,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14169,
											"end": 14179,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10065,
											"end": 10116,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10065,
											"end": 10116,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10132,
											"end": 10150,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10132,
											"end": 10150,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10132,
											"end": 10150,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10125,
											"end": 10185,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10125,
											"end": 10185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10125,
											"end": 10185,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10125,
											"end": 10185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14194,
											"end": 14230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 14194,
											"end": 14230,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14230,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10228,
											"end": 10242,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10221,
											"end": 10243,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10201,
											"end": 10219,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10201,
											"end": 10219,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10201,
											"end": 10219,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10194,
											"end": 10244,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14157,
											"end": 14231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7A1655BC3160D3413BF1D5235E55BE12E01B7E8BC2436A9BFF09C3B4FA2421F1"
										},
										{
											"begin": 14157,
											"end": 14231,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10053,
											"end": 10055,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 10038,
											"end": 10056,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14157,
											"end": 14231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 9869,
											"end": 10250,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7945,
											"end": 9517,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 7945,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8161,
											"end": 8185,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8186,
											"end": 8219,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8221,
											"end": 8247,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 8252,
											"end": 8270,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 8252,
											"end": 8272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8159,
											"end": 8272,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8159,
											"end": 8272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8159,
											"end": 8272,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8159,
											"end": 8272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8159,
											"end": 8272,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8159,
											"end": 8272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 8322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8299,
											"end": 8318,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8299,
											"end": 8318,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8322,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8348,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8348,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 8299,
											"end": 8348,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8347,
											"end": 8348,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8326,
											"end": 8348,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8348,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 8299,
											"end": 8348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8291,
											"end": 8370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 8291,
											"end": 8370,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8291,
											"end": 8370,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8291,
											"end": 8370,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8291,
											"end": 8370,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8291,
											"end": 8370,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10459,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8291,
											"end": 8370,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8291,
											"end": 8370,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8291,
											"end": 8370,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10460,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10496,
											"end": 10498,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 10476,
											"end": 10494,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10476,
											"end": 10494,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10476,
											"end": 10494,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10469,
											"end": 10499,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD08195B9BDD59DA08185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10515,
											"end": 10533,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 10515,
											"end": 10533,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10515,
											"end": 10533,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10508,
											"end": 10555,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10572,
											"end": 10590,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 10572,
											"end": 10590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8291,
											"end": 8370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 10255,
											"end": 10596,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8291,
											"end": 8370,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 8291,
											"end": 8370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8388,
											"end": 8404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8388,
											"end": 8404,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8415,
											"end": 9425,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 8415,
											"end": 9425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8438,
											"end": 8447,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 8438,
											"end": 8447,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8434,
											"end": 8435,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8434,
											"end": 8447,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8415,
											"end": 9425,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8415,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 8415,
											"end": 9425,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8472,
											"end": 8501,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8487,
											"end": 8500,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8487,
											"end": 8500,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8487,
											"end": 8500,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8487,
											"end": 8497,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 8487,
											"end": 8500,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8487,
											"end": 8500,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8487,
											"end": 8500,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8487,
											"end": 8500,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8487,
											"end": 8500,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8487,
											"end": 8500,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8487,
											"end": 8500,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8487,
											"end": 8500,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8487,
											"end": 8500,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8487,
											"end": 8500,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8472,
											"end": 8501,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8472,
											"end": 8501,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8472,
											"end": 8486,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 8472,
											"end": 8501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8472,
											"end": 8501,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8472,
											"end": 8501,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8472,
											"end": 8501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8472,
											"end": 8501,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8472,
											"end": 8509,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8472,
											"end": 8509,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 8472,
											"end": 8509,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8468,
											"end": 9402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 8468,
											"end": 9402,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8639,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 8622,
											"end": 8639,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8556,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8575,
											"end": 8588,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8575,
											"end": 8588,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8575,
											"end": 8588,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8575,
											"end": 8585,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 8575,
											"end": 8588,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8575,
											"end": 8588,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8575,
											"end": 8588,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8575,
											"end": 8588,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8575,
											"end": 8588,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8575,
											"end": 8588,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8575,
											"end": 8588,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8575,
											"end": 8588,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8575,
											"end": 8588,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8575,
											"end": 8588,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8589,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8589,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8574,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 8560,
											"end": 8589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8589,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8589,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8589,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8589,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8607,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 8560,
											"end": 8607,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8607,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8556,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8639,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 8560,
											"end": 8617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8611,
											"end": 8616,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 8560,
											"end": 8617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 8560,
											"end": 8617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8617,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 8560,
											"end": 8617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8559,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 8559,
											"end": 8640,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8559,
											"end": 8640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8559,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 8559,
											"end": 8640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8559,
											"end": 8640,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 8559,
											"end": 8640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8675,
											"end": 8697,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8700,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 8720,
											"end": 8745,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8747,
											"end": 8766,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8700,
											"end": 8719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 8700,
											"end": 8767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8700,
											"end": 8767,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 8700,
											"end": 8767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8675,
											"end": 8767,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8675,
											"end": 8767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8808,
											"end": 8822,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8804,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8785,
											"end": 8804,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8785,
											"end": 8822,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8822,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8822,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 8785,
											"end": 8822,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 8785,
											"end": 8822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8822,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 8785,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8822,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8822,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8865,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 8865,
											"end": 8891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8877,
											"end": 8891,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8865,
											"end": 8891,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8865,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 8865,
											"end": 8891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8865,
											"end": 8891,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 8865,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8865,
											"end": 8891,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8865,
											"end": 8891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8931,
											"end": 8949,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8909,
											"end": 8927,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8909,
											"end": 8927,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8909,
											"end": 8949,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8909,
											"end": 8949,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8909,
											"end": 8949,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8909,
											"end": 8949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 8909,
											"end": 8949,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8909,
											"end": 8949,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8909,
											"end": 8949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 8909,
											"end": 8949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8909,
											"end": 8949,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 8909,
											"end": 8949,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8909,
											"end": 8949,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8909,
											"end": 8949,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8909,
											"end": 8949,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8968,
											"end": 8997,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8983,
											"end": 8996,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 8996,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 8996,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 8993,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 8983,
											"end": 8996,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8983,
											"end": 8996,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 8996,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 8996,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 8996,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8983,
											"end": 8996,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 8996,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 8996,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 8996,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 8996,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8983,
											"end": 8996,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 8996,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 8996,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 8997,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 8997,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 8982,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 8968,
											"end": 8997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 8997,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 8997,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 8997,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 8997,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 8997,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 9017,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 8968,
											"end": 9017,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 9038,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 9038,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 9038,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9071,
											"end": 9084,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9071,
											"end": 9084,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9071,
											"end": 9084,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9071,
											"end": 9084,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9056,
											"end": 9085,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9056,
											"end": 9085,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9056,
											"end": 9085,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9056,
											"end": 9085,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9056,
											"end": 9107,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9056,
											"end": 9107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9056,
											"end": 9124,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9056,
											"end": 9124,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9056,
											"end": 9124,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9185,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 8968,
											"end": 9038,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9056,
											"end": 9124,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9185,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 9185,
											"end": 9220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9185,
											"end": 9220,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 9185,
											"end": 9220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9267,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9253,
											"end": 9266,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9253,
											"end": 9266,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9253,
											"end": 9266,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9253,
											"end": 9263,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 9253,
											"end": 9266,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9253,
											"end": 9266,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9253,
											"end": 9266,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9253,
											"end": 9266,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9253,
											"end": 9266,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9253,
											"end": 9266,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9253,
											"end": 9266,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9253,
											"end": 9266,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9253,
											"end": 9266,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9253,
											"end": 9266,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9267,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9267,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9252,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 9238,
											"end": 9267,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9267,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9267,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9267,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9267,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9253,
											"end": 9266,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9238,
											"end": 9282,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9301,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9220,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9220,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9159,
											"end": 9220,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9220,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9282,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9282,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9267,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 9238,
											"end": 9301,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9220,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9220,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 9238,
											"end": 9301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9301,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 9238,
											"end": 9301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9301,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9301,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9301,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9328,
											"end": 9356,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9328,
											"end": 9356,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9328,
											"end": 9356,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9328,
											"end": 9356,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9320,
											"end": 9387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 9320,
											"end": 9387,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9320,
											"end": 9387,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9320,
											"end": 9387,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9320,
											"end": 9387,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9320,
											"end": 9387,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11198,
											"end": 11200,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9320,
											"end": 9387,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9320,
											"end": 9387,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9320,
											"end": 9387,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11180,
											"end": 11201,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11237,
											"end": 11239,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 11217,
											"end": 11235,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11217,
											"end": 11235,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11217,
											"end": 11235,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11210,
											"end": 11240,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11276,
											"end": 11304,
											"name": "PUSH",
											"source": 11,
											"value": "416D6F756E742069732067726561746572207468656E20353025000000000000"
										},
										{
											"begin": 11256,
											"end": 11274,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 11256,
											"end": 11274,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11256,
											"end": 11274,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11249,
											"end": 11305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11322,
											"end": 11340,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 11322,
											"end": 11340,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 10996,
											"end": 11346,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9387,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 9320,
											"end": 9387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8510,
											"end": 9402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8510,
											"end": 9402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8510,
											"end": 9402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8468,
											"end": 9402,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 8468,
											"end": 9402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8449,
											"end": 8452,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8449,
											"end": 8452,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8415,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 8415,
											"end": 9425,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8415,
											"end": 9425,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 8415,
											"end": 9425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9469,
											"end": 9488,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 9469,
											"end": 9488,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9490,
											"end": 9508,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9490,
											"end": 9508,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9440,
											"end": 9509,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9440,
											"end": 9509,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9440,
											"end": 9509,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9457,
											"end": 9467,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7965,
											"end": 8016,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7965,
											"end": 8016,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8047,
											"end": 8049,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8025,
											"end": 8059,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8025,
											"end": 8059,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8025,
											"end": 8059,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8025,
											"end": 8059,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8075,
											"end": 8093,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8075,
											"end": 8093,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8068,
											"end": 8102,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9440,
											"end": 9509,
											"name": "PUSH",
											"source": 10,
											"value": "EE826440768329B0C72F81331212EE31FCDAC1EA79A248D24821E40C34E58020"
										},
										{
											"begin": 9440,
											"end": 9509,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7953,
											"end": 7955,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9440,
											"end": 9509,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9440,
											"end": 9509,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9440,
											"end": 9509,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9440,
											"end": 9509,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9440,
											"end": 9509,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9440,
											"end": 9509,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9440,
											"end": 9509,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 7979,
											"end": 9517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7979,
											"end": 9517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7979,
											"end": 9517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7979,
											"end": 9517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7945,
											"end": 9517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 14250,
											"end": 14592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14386,
											"end": 14387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14367,
											"end": 14382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14367,
											"end": 14387,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14364,
											"end": 14452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 14364,
											"end": 14452,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14409,
											"end": 14441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14409,
											"end": 14441,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDBC6335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14409,
											"end": 14441,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14409,
											"end": 14441,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14409,
											"end": 14441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14409,
											"end": 14441,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14409,
											"end": 14441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14409,
											"end": 14441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14364,
											"end": 14452,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 14364,
											"end": 14452,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14470,
											"end": 14495,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14495,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14495,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 14470,
											"end": 14495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14470,
											"end": 14495,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14495,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14495,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14495,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14470,
											"end": 14495,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14495,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14495,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14495,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14513,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14470,
											"end": 14513,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 14529,
											"end": 14585,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14529,
											"end": 14585,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14547,
											"end": 14557,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8287,
											"end": 8338,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8287,
											"end": 8338,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D85598D6EA860439B48FC265883A1CAC638FF64DCA5391FE12B46F27076E26FE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14529,
											"end": 14585,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8260,
											"end": 8278,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14529,
											"end": 14585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 8113,
											"end": 8387,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "487"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "513"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "487"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "514"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "tag",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "tag",
											"source": 3,
											"value": "513"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16262,
											"end": 16374,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 16262,
											"end": 16374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 3,
											"value": "52D1902D"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "521"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "522"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "523"
										},
										{
											"begin": 6151,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 3,
											"value": "522"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 3,
											"value": "521"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "524"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 375,
											"end": 407,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "tag",
											"source": 3,
											"value": "524"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "530"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "tag",
											"source": 3,
											"value": "530"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "532"
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "533"
										},
										{
											"begin": 6374,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "tag",
											"source": 3,
											"value": "532"
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6204,
											"end": 6439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6052,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5111,
											"end": 5117,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "487"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7558,
											"end": 7937,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 7558,
											"end": 7937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7670,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 7678,
											"end": 7691,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7675,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 7670,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 7670,
											"end": 7691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7691,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 7670,
											"end": 7691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7691,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7691,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7724,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 7744,
											"end": 7751,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7753,
											"end": 7765,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7724,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 7724,
											"end": 7766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7724,
											"end": 7766,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 7724,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7701,
											"end": 7766,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7701,
											"end": 7766,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7776,
											"end": 7795,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7798,
											"end": 7841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 7818,
											"end": 7825,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7827,
											"end": 7840,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7798,
											"end": 7817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 7798,
											"end": 7841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7798,
											"end": 7841,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 7798,
											"end": 7841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7776,
											"end": 7841,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7776,
											"end": 7841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7875,
											"end": 7887,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7871,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7852,
											"end": 7871,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7852,
											"end": 7887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7887,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 7852,
											"end": 7887,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7852,
											"end": 7887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7887,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 7852,
											"end": 7887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7887,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7887,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7887,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7919,
											"end": 7930,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7915,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7897,
											"end": 7915,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7897,
											"end": 7930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7930,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 7897,
											"end": 7930,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7930,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7897,
											"end": 7930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7930,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 7897,
											"end": 7930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7930,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7930,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7930,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7558,
											"end": 7937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "547"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "548"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 2,
											"value": "547"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3035,
											"name": "tag",
											"source": 3,
											"value": "444"
										},
										{
											"begin": 2968,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "548"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9529,
											"end": 10680,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 9529,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9582,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9584,
											"end": 9591,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9592,
											"end": 9599,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9620,
											"end": 9644,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9647,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 9667,
											"end": 9686,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 9667,
											"end": 9686,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9688,
											"end": 9692,
											"name": "PUSH",
											"source": 10,
											"value": "1388"
										},
										{
											"begin": 9647,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 9647,
											"end": 9693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9647,
											"end": 9693,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 9647,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9620,
											"end": 9693,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9620,
											"end": 9693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9740,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 9760,
											"end": 9776,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9778,
											"end": 9803,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 9778,
											"end": 9803,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 9740,
											"end": 9804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9740,
											"end": 9804,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 9740,
											"end": 9804,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9804,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9704,
											"end": 9804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9814,
											"end": 9850,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9853,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 9873,
											"end": 9889,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9891,
											"end": 9915,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 9891,
											"end": 9915,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9853,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 9853,
											"end": 9916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9853,
											"end": 9916,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 9853,
											"end": 9916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9814,
											"end": 9916,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9814,
											"end": 9916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9926,
											"end": 9962,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9965,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 9985,
											"end": 10001,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10003,
											"end": 10026,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 10003,
											"end": 10026,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 9965,
											"end": 10027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10027,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 9965,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9926,
											"end": 10027,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9926,
											"end": 10027,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10037,
											"end": 10067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10070,
											"end": 10136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 10090,
											"end": 10108,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10090,
											"end": 10108,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10110,
											"end": 10135,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10110,
											"end": 10135,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10070,
											"end": 10089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 10070,
											"end": 10136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10070,
											"end": 10136,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 10070,
											"end": 10136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10037,
											"end": 10136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10037,
											"end": 10136,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10155,
											"end": 10164,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 10155,
											"end": 10164,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10155,
											"end": 10168,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10147,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 10147,
											"end": 10182,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10147,
											"end": 10182,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10147,
											"end": 10182,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10147,
											"end": 10182,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10147,
											"end": 10182,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11742,
											"end": 11744,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10147,
											"end": 10182,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10147,
											"end": 10182,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10147,
											"end": 10182,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11724,
											"end": 11745,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11781,
											"end": 11782,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 11761,
											"end": 11779,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11761,
											"end": 11779,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11761,
											"end": 11779,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11754,
											"end": 11783,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F20757365727321"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11792,
											"end": 11831,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11848,
											"end": 11866,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 11848,
											"end": 11866,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10147,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 11540,
											"end": 11872,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10147,
											"end": 10182,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 10147,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10201,
											"end": 10227,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10253,
											"end": 10262,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 10253,
											"end": 10262,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10230,
											"end": 10252,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10230,
											"end": 10262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 10230,
											"end": 10262,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10230,
											"end": 10262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10230,
											"end": 10262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 10230,
											"end": 10262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10230,
											"end": 10262,
											"name": "tag",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 10230,
											"end": 10262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10201,
											"end": 10262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10305,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 10336,
											"end": 10364,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10305,
											"end": 10333,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10305,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 10305,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10305,
											"end": 10364,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 10305,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10281,
											"end": 10300,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10281,
											"end": 10300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10281,
											"end": 10365,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10281,
											"end": 10365,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10281,
											"end": 10365,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10281,
											"end": 10365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 10281,
											"end": 10365,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10281,
											"end": 10365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10281,
											"end": 10365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 10281,
											"end": 10365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10281,
											"end": 10365,
											"name": "tag",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 10281,
											"end": 10365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10281,
											"end": 10365,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10281,
											"end": 10365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10281,
											"end": 10365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10281,
											"end": 10365,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10281,
											"end": 10365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10281,
											"end": 10365,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 10281,
											"end": 10365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10397,
											"end": 10425,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10375,
											"end": 10393,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10375,
											"end": 10393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10375,
											"end": 10425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10375,
											"end": 10425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10375,
											"end": 10425,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10375,
											"end": 10425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 10375,
											"end": 10425,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10375,
											"end": 10425,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10375,
											"end": 10425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 10375,
											"end": 10425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10375,
											"end": 10425,
											"name": "tag",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 10375,
											"end": 10425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10375,
											"end": 10425,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10375,
											"end": 10425,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10375,
											"end": 10425,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10436,
											"end": 10448,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10451,
											"end": 10460,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10460,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10485,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 10470,
											"end": 10485,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10470,
											"end": 10485,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10485,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10485,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8287,
											"end": 8338,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8354,
											"end": 8372,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8381,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10451,
											"end": 10460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10460,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10469,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 10451,
											"end": 10469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8260,
											"end": 8278,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8260,
											"end": 8278,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "tag",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 10451,
											"end": 10516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 10451,
											"end": 10516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10436,
											"end": 10516,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10436,
											"end": 10516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10530,
											"end": 10537,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10526,
											"end": 10593,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 10526,
											"end": 10593,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10559,
											"end": 10582,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10559,
											"end": 10582,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D85D3CEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10559,
											"end": 10582,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10559,
											"end": 10582,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1038,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10559,
											"end": 10582,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10559,
											"end": 10582,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10559,
											"end": 10582,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 998,
											"end": 1039,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 971,
											"end": 989,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 971,
											"end": 989,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10559,
											"end": 10582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 858,
											"end": 1045,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10526,
											"end": 10593,
											"name": "tag",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 10526,
											"end": 10593,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10611,
											"end": 10627,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 10611,
											"end": 10627,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 10628,
											"end": 10653,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10628,
											"end": 10653,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9529,
											"end": 10680,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9529,
											"end": 10680,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9529,
											"end": 10680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12689,
											"end": 13086,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 12689,
											"end": 13086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12791,
											"end": 12798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12827,
											"end": 12844,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12847,
											"end": 12848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12827,
											"end": 12848,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12819,
											"end": 12887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 12819,
											"end": 12887,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12819,
											"end": 12887,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12819,
											"end": 12887,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12819,
											"end": 12887,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12819,
											"end": 12887,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12819,
											"end": 12887,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12819,
											"end": 12887,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12819,
											"end": 12887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 12819,
											"end": 12887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12819,
											"end": 12887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 12819,
											"end": 12887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12819,
											"end": 12887,
											"name": "tag",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 12819,
											"end": 12887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12905,
											"end": 12921,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12924,
											"end": 12925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12905,
											"end": 12925,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12897,
											"end": 12964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 12897,
											"end": 12964,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12897,
											"end": 12964,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12897,
											"end": 12964,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12897,
											"end": 12964,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12897,
											"end": 12964,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12897,
											"end": 12964,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12897,
											"end": 12964,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12897,
											"end": 12964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 12897,
											"end": 12964,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12897,
											"end": 12964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 12897,
											"end": 12964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12897,
											"end": 12964,
											"name": "tag",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 12897,
											"end": 12964,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12974,
											"end": 12992,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13037,
											"end": 13042,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 12995,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 13016,
											"end": 13032,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12995,
											"end": 13012,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12995,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 12995,
											"end": 13033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12995,
											"end": 13033,
											"name": "tag",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 12995,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12995,
											"end": 13043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 12995,
											"end": 13043,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12995,
											"end": 13043,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12995,
											"end": 13043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 12995,
											"end": 13043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12995,
											"end": 13043,
											"name": "tag",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 12995,
											"end": 13043,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12974,
											"end": 13043,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12689,
											"end": 13086,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 12689,
											"end": 13086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12689,
											"end": 13086,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12689,
											"end": 13086,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12689,
											"end": 13086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12689,
											"end": 13086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12689,
											"end": 13086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "tag",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "587"
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "588"
										},
										{
											"begin": 2870,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "tag",
											"source": 6,
											"value": "587"
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 6,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "589"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "532"
										},
										{
											"begin": 3024,
											"end": 3041,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "591"
										},
										{
											"begin": 2995,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 6,
											"value": "589"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "594"
										},
										{
											"begin": 3079,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 2,
											"value": "548"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 2,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "500"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "548"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "tag",
											"source": 6,
											"value": "588"
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2297,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "607"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 375,
											"end": 407,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 6,
											"value": "607"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "tag",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "611"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 4255,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 8,
											"value": "611"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DELEGATECALL",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "615"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 8,
											"value": "615"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "616"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4341,
											"end": 4351,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4297,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 4297,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "tag",
											"source": 8,
											"value": "616"
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "tag",
											"source": 6,
											"value": "594"
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "624"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 8,
											"value": "624"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 375,
											"end": 407,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 419,
											"end": 645,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 419,
											"end": 645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 478,
											"end": 484,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 533,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 519,
											"end": 528,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 510,
											"end": 517,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 506,
											"end": 529,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 502,
											"end": 534,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 499,
											"end": 551,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 499,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "642"
										},
										{
											"begin": 499,
											"end": 551,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 547,
											"end": 548,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 545,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 537,
											"end": 549,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 499,
											"end": 551,
											"name": "tag",
											"source": 11,
											"value": "642"
										},
										{
											"begin": 499,
											"end": 551,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 592,
											"end": 615,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 615,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 419,
											"end": 645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 419,
											"end": 645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1636,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1050,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1169,
											"end": 1178,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1160,
											"end": 1167,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1152,
											"end": 1184,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1149,
											"end": 1201,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1149,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "646"
										},
										{
											"begin": 1149,
											"end": 1201,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1149,
											"end": 1201,
											"name": "tag",
											"source": 11,
											"value": "646"
										},
										{
											"begin": 1149,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1246,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1288,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1262,
											"end": 1268,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1289,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1306,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "647"
										},
										{
											"begin": 1256,
											"end": 1306,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1300,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1304,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1306,
											"name": "tag",
											"source": 11,
											"value": "647"
										},
										{
											"begin": 1256,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1325,
											"end": 1347,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1325,
											"end": 1347,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1378,
											"end": 1382,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1370,
											"end": 1383,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1370,
											"end": 1383,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 1356,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "648"
										},
										{
											"begin": 1356,
											"end": 1411,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 1408,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1404,
											"end": 1405,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1409,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1411,
											"name": "tag",
											"source": 11,
											"value": "648"
										},
										{
											"begin": 1356,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1447,
											"end": 1449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1434,
											"end": 1450,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1473,
											"end": 1491,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1471,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1459,
											"end": 1509,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1459,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "649"
										},
										{
											"begin": 1459,
											"end": 1509,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1495,
											"end": 1507,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1459,
											"end": 1509,
											"name": "tag",
											"source": 11,
											"value": "649"
										},
										{
											"begin": 1459,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1550,
											"end": 1557,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1545,
											"end": 1547,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1532,
											"end": 1534,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1528,
											"end": 1543,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1548,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1558,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1575,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "650"
										},
										{
											"begin": 1518,
											"end": 1575,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1569,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1573,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1575,
											"name": "tag",
											"source": 11,
											"value": "650"
										},
										{
											"begin": 1518,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1594,
											"end": 1605,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1605,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1605,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1605,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1605,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 1624,
											"end": 1630,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1624,
											"end": 1630,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1050,
											"end": 1636,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1050,
											"end": 1636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1641,
											"end": 1814,
											"name": "tag",
											"source": 11,
											"value": "633"
										},
										{
											"begin": 1641,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1709,
											"end": 1729,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1709,
											"end": 1729,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1758,
											"end": 1789,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1758,
											"end": 1789,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "652"
										},
										{
											"begin": 1738,
											"end": 1808,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1804,
											"end": 1805,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1802,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1794,
											"end": 1806,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1808,
											"name": "tag",
											"source": 11,
											"value": "652"
										},
										{
											"begin": 1738,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1641,
											"end": 1814,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1641,
											"end": 1814,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1641,
											"end": 1814,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1641,
											"end": 1814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1819,
											"end": 1946,
											"name": "tag",
											"source": 11,
											"value": "634"
										},
										{
											"begin": 1819,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1880,
											"end": 1890,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 1875,
											"end": 1878,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1871,
											"end": 1891,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1868,
											"end": 1869,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1892,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1915,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1916,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1935,
											"end": 1939,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1932,
											"end": 1933,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2969,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 1951,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2034,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2042,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2091,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2086,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2075,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2064,
											"end": 2087,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2060,
											"end": 2092,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2057,
											"end": 2109,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2057,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "655"
										},
										{
											"begin": 2057,
											"end": 2109,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2105,
											"end": 2106,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2103,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2095,
											"end": 2107,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2057,
											"end": 2109,
											"name": "tag",
											"source": 11,
											"value": "655"
										},
										{
											"begin": 2057,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2128,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "656"
										},
										{
											"begin": 2147,
											"end": 2156,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2128,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "633"
										},
										{
											"begin": 2128,
											"end": 2157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2128,
											"end": 2157,
											"name": "tag",
											"source": 11,
											"value": "656"
										},
										{
											"begin": 2128,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2118,
											"end": 2157,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2118,
											"end": 2157,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2208,
											"end": 2210,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2206,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2211,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2180,
											"end": 2212,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2235,
											"end": 2253,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2254,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2221,
											"end": 2271,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2221,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "657"
										},
										{
											"begin": 2221,
											"end": 2271,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2267,
											"end": 2268,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2265,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2257,
											"end": 2269,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2221,
											"end": 2271,
											"name": "tag",
											"source": 11,
											"value": "657"
										},
										{
											"begin": 2221,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2290,
											"end": 2312,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2290,
											"end": 2312,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2343,
											"end": 2347,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2335,
											"end": 2348,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2335,
											"end": 2348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2331,
											"end": 2358,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2321,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "658"
										},
										{
											"begin": 2321,
											"end": 2376,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2370,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2321,
											"end": 2376,
											"name": "tag",
											"source": 11,
											"value": "658"
										},
										{
											"begin": 2321,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2412,
											"end": 2414,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2399,
											"end": 2415,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2457,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2424,
											"end": 2480,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2424,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "660"
										},
										{
											"begin": 2424,
											"end": 2480,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "660"
										},
										{
											"begin": 2460,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "634"
										},
										{
											"begin": 2460,
											"end": 2478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2478,
											"name": "tag",
											"source": 11,
											"value": "660"
										},
										{
											"begin": 2460,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2511,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2512,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 2603,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2563,
											"end": 2580,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2580,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2559,
											"end": 2590,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2559,
											"end": 2590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2559,
											"end": 2590,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2592,
											"end": 2594,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 2555,
											"end": 2595,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2551,
											"end": 2605,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2539,
											"end": 2606,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2539,
											"end": 2606,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2636,
											"end": 2654,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2621,
											"end": 2655,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2621,
											"end": 2655,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 2680,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2615,
											"end": 2703,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2615,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "662"
										},
										{
											"begin": 2615,
											"end": 2703,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "662"
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "634"
										},
										{
											"begin": 2683,
											"end": 2701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "tag",
											"source": 11,
											"value": "662"
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2719,
											"end": 2721,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2712,
											"end": 2734,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2743,
											"end": 2765,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2743,
											"end": 2765,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2743,
											"end": 2765,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 2799,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 2799,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 2799,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2801,
											"end": 2803,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2780,
											"end": 2804,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2777,
											"end": 2814,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 2831,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2774,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "663"
										},
										{
											"begin": 2774,
											"end": 2831,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2825,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2817,
											"end": 2829,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2774,
											"end": 2831,
											"name": "tag",
											"source": 11,
											"value": "663"
										},
										{
											"begin": 2774,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2878,
											"end": 2880,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2876,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2881,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2865,
											"end": 2867,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 2868,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2840,
											"end": 2890,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 2936,
											"end": 2937,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2933,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2922,
											"end": 2928,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2914,
											"end": 2920,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2929,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2906,
											"end": 2934,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2899,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2947,
											"end": 2963,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2947,
											"end": 2963,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2947,
											"end": 2963,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2947,
											"end": 2963,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2947,
											"end": 2963,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2969,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2969,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2969,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2969,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2969,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 2969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3156,
											"end": 3502,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3156,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3232,
											"end": 3238,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3285,
											"end": 3287,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3273,
											"end": 3282,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3271,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3283,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3256,
											"end": 3288,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "666"
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3301,
											"end": 3302,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3291,
											"end": 3303,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "tag",
											"source": 11,
											"value": "666"
										},
										{
											"begin": 3253,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3466,
											"end": 3468,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3451,
											"end": 3469,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3469,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3469,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3438,
											"end": 3470,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3438,
											"end": 3470,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3156,
											"end": 3502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3507,
											"end": 3795,
											"name": "tag",
											"source": 11,
											"value": "635"
										},
										{
											"begin": 3507,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3548,
											"end": 3551,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3580,
											"end": 3592,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3613,
											"end": 3619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3608,
											"end": 3611,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3601,
											"end": 3620,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3669,
											"end": 3675,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3662,
											"end": 3666,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3655,
											"end": 3660,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3667,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3644,
											"end": 3648,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3639,
											"end": 3642,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3635,
											"end": 3649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3629,
											"end": 3676,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 3721,
											"end": 3722,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3718,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3705,
											"end": 3711,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3700,
											"end": 3703,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3696,
											"end": 3712,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3692,
											"end": 3719,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3685,
											"end": 3723,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3784,
											"end": 3788,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3777,
											"end": 3779,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3773,
											"end": 3780,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3768,
											"end": 3770,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3760,
											"end": 3766,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3756,
											"end": 3771,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3781,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 3750,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3743,
											"end": 3782,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3789,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3732,
											"end": 3789,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3732,
											"end": 3789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3732,
											"end": 3789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3507,
											"end": 3795,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3507,
											"end": 3795,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3507,
											"end": 3795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3507,
											"end": 3795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3507,
											"end": 3795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3800,
											"end": 4098,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 3800,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3983,
											"end": 3989,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 3990,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3969,
											"end": 3991,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3958,
											"end": 3967,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3951,
											"end": 3992,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4028,
											"end": 4030,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4023,
											"end": 4025,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4012,
											"end": 4021,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4008,
											"end": 4026,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4001,
											"end": 4031,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3932,
											"end": 3936,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "669"
										},
										{
											"begin": 4088,
											"end": 4090,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4077,
											"end": 4086,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4048,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "635"
										},
										{
											"begin": 4048,
											"end": 4092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4048,
											"end": 4092,
											"name": "tag",
											"source": 11,
											"value": "669"
										},
										{
											"begin": 4048,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4040,
											"end": 4092,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3800,
											"end": 4098,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3800,
											"end": 4098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4322,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 4103,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4252,
											"end": 4254,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4234,
											"end": 4255,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4215,
											"end": 4219,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4272,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "626"
										},
										{
											"begin": 4312,
											"end": 4314,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4301,
											"end": 4310,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 4295,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4272,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "635"
										},
										{
											"begin": 4272,
											"end": 4316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4513,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 4327,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4386,
											"end": 4392,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4439,
											"end": 4441,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4427,
											"end": 4436,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4418,
											"end": 4425,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4414,
											"end": 4437,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4442,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4407,
											"end": 4459,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4407,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "673"
										},
										{
											"begin": 4407,
											"end": 4459,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4455,
											"end": 4456,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4452,
											"end": 4453,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4445,
											"end": 4457,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4407,
											"end": 4459,
											"name": "tag",
											"source": 11,
											"value": "673"
										},
										{
											"begin": 4407,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "626"
										},
										{
											"begin": 4497,
											"end": 4506,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "633"
										},
										{
											"begin": 4478,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5402,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 5068,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5145,
											"end": 5151,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5161,
											"end": 5167,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5214,
											"end": 5216,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5202,
											"end": 5211,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5193,
											"end": 5200,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5189,
											"end": 5212,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5185,
											"end": 5217,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5182,
											"end": 5234,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5182,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "677"
										},
										{
											"begin": 5182,
											"end": 5234,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5230,
											"end": 5231,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5228,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5232,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5182,
											"end": 5234,
											"name": "tag",
											"source": 11,
											"value": "677"
										},
										{
											"begin": 5182,
											"end": 5234,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5253,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "678"
										},
										{
											"begin": 5272,
											"end": 5281,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5253,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "633"
										},
										{
											"begin": 5253,
											"end": 5282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5253,
											"end": 5282,
											"name": "tag",
											"source": 11,
											"value": "678"
										},
										{
											"begin": 5253,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5282,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5282,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5301,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "679"
										},
										{
											"begin": 5335,
											"end": 5337,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5324,
											"end": 5333,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5301,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "633"
										},
										{
											"begin": 5301,
											"end": 5339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5301,
											"end": 5339,
											"name": "tag",
											"source": 11,
											"value": "679"
										},
										{
											"begin": 5301,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5291,
											"end": 5339,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5291,
											"end": 5339,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "680"
										},
										{
											"begin": 5392,
											"end": 5394,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5381,
											"end": 5390,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5377,
											"end": 5395,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "633"
										},
										{
											"begin": 5358,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5396,
											"name": "tag",
											"source": 11,
											"value": "680"
										},
										{
											"begin": 5358,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5348,
											"end": 5396,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5348,
											"end": 5396,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5402,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5402,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5402,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5407,
											"end": 5525,
											"name": "tag",
											"source": 11,
											"value": "636"
										},
										{
											"begin": 5407,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5493,
											"end": 5498,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5486,
											"end": 5499,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5479,
											"end": 5500,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5472,
											"end": 5477,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5469,
											"end": 5501,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5459,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 5459,
											"end": 5519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5516,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5513,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5505,
											"end": 5517,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5845,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 5530,
											"end": 5845,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5595,
											"end": 5601,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5603,
											"end": 5609,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5656,
											"end": 5658,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5644,
											"end": 5653,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5642,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5631,
											"end": 5654,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5627,
											"end": 5659,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5624,
											"end": 5676,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5624,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "684"
										},
										{
											"begin": 5624,
											"end": 5676,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5672,
											"end": 5673,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5670,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5662,
											"end": 5674,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5624,
											"end": 5676,
											"name": "tag",
											"source": 11,
											"value": "684"
										},
										{
											"begin": 5624,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5695,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "685"
										},
										{
											"begin": 5714,
											"end": 5723,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5695,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "633"
										},
										{
											"begin": 5695,
											"end": 5724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5695,
											"end": 5724,
											"name": "tag",
											"source": 11,
											"value": "685"
										},
										{
											"begin": 5695,
											"end": 5724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5685,
											"end": 5724,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5685,
											"end": 5724,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5774,
											"end": 5776,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5763,
											"end": 5772,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5759,
											"end": 5777,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5746,
											"end": 5778,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5787,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "686"
										},
										{
											"begin": 5809,
											"end": 5814,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5787,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "636"
										},
										{
											"begin": 5787,
											"end": 5815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5787,
											"end": 5815,
											"name": "tag",
											"source": 11,
											"value": "686"
										},
										{
											"begin": 5787,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5834,
											"end": 5839,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5824,
											"end": 5839,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5824,
											"end": 5839,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5824,
											"end": 5839,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5845,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5845,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5845,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5845,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5845,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5850,
											"end": 5977,
											"name": "tag",
											"source": 11,
											"value": "637"
										},
										{
											"begin": 5850,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5911,
											"end": 5921,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 5906,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 5902,
											"end": 5922,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5899,
											"end": 5900,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5892,
											"end": 5923,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 5939,
											"end": 5940,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5932,
											"end": 5947,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5966,
											"end": 5970,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5963,
											"end": 5964,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5971,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5982,
											"end": 6117,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 5982,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6021,
											"end": 6024,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6042,
											"end": 6059,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6042,
											"end": 6059,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6042,
											"end": 6059,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6039,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "690"
										},
										{
											"begin": 6039,
											"end": 6082,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "690"
										},
										{
											"begin": 6062,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "637"
										},
										{
											"begin": 6062,
											"end": 6080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6080,
											"name": "tag",
											"source": 11,
											"value": "690"
										},
										{
											"begin": 6062,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6109,
											"end": 6110,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6098,
											"end": 6111,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6098,
											"end": 6111,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5982,
											"end": 6117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6122,
											"end": 6250,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 6122,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6189,
											"end": 6198,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6189,
											"end": 6198,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6189,
											"end": 6198,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6210,
											"end": 6221,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6210,
											"end": 6221,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6210,
											"end": 6221,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6244,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6244,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 6207,
											"end": 6244,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6224,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 6224,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "637"
										},
										{
											"begin": 6224,
											"end": 6242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7132,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 7007,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7081,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7081,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7081,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7103,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7103,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7103,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7090,
											"end": 7126,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7090,
											"end": 7126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 7090,
											"end": 7126,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7106,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 7106,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "637"
										},
										{
											"begin": 7106,
											"end": 7124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7137,
											"end": 7508,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 7137,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7357,
											"end": 7389,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7357,
											"end": 7389,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7357,
											"end": 7389,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7339,
											"end": 7390,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7339,
											"end": 7390,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7426,
											"end": 7458,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7426,
											"end": 7458,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7426,
											"end": 7458,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7426,
											"end": 7458,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7421,
											"end": 7423,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7399,
											"end": 7459,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7490,
											"end": 7492,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7493,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7493,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7502,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7502,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7502,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7502,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7327,
											"end": 7329,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7137,
											"end": 7508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7513,
											"end": 7758,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 7513,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7580,
											"end": 7586,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7633,
											"end": 7635,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7621,
											"end": 7630,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7612,
											"end": 7619,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7608,
											"end": 7631,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7604,
											"end": 7636,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7601,
											"end": 7653,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7601,
											"end": 7653,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "701"
										},
										{
											"begin": 7601,
											"end": 7653,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7649,
											"end": 7650,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7646,
											"end": 7647,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7639,
											"end": 7651,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7601,
											"end": 7653,
											"name": "tag",
											"source": 11,
											"value": "701"
										},
										{
											"begin": 7601,
											"end": 7653,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7681,
											"end": 7690,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7675,
											"end": 7691,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "626"
										},
										{
											"begin": 7722,
											"end": 7727,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7700,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "636"
										},
										{
											"begin": 7700,
											"end": 7728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10601,
											"end": 10769,
											"name": "tag",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 10601,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10674,
											"end": 10683,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10674,
											"end": 10683,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10674,
											"end": 10683,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10705,
											"end": 10714,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10705,
											"end": 10714,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10722,
											"end": 10737,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10722,
											"end": 10737,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10722,
											"end": 10737,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10716,
											"end": 10738,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10716,
											"end": 10738,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 10702,
											"end": 10739,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 10692,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 10692,
											"end": 10763,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "637"
										},
										{
											"begin": 10743,
											"end": 10761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10774,
											"end": 10991,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 10774,
											"end": 10991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10814,
											"end": 10815,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10840,
											"end": 10841,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10830,
											"end": 10962,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "716"
										},
										{
											"begin": 10830,
											"end": 10962,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10884,
											"end": 10894,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 10879,
											"end": 10882,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 10875,
											"end": 10895,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 10872,
											"end": 10873,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10865,
											"end": 10896,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10919,
											"end": 10923,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 10916,
											"end": 10917,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10909,
											"end": 10924,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10947,
											"end": 10951,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10944,
											"end": 10945,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10937,
											"end": 10952,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10830,
											"end": 10962,
											"name": "tag",
											"source": 11,
											"value": "716"
										},
										{
											"begin": 10830,
											"end": 10962,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10976,
											"end": 10985,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10976,
											"end": 10985,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10774,
											"end": 10991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11351,
											"end": 11535,
											"name": "tag",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 11351,
											"end": 11535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11421,
											"end": 11427,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11474,
											"end": 11476,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11462,
											"end": 11471,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11453,
											"end": 11460,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11449,
											"end": 11472,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11445,
											"end": 11477,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11494,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "719"
										},
										{
											"begin": 11442,
											"end": 11494,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11490,
											"end": 11491,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11487,
											"end": 11488,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11480,
											"end": 11492,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11442,
											"end": 11494,
											"name": "tag",
											"source": 11,
											"value": "719"
										},
										{
											"begin": 11442,
											"end": 11494,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11513,
											"end": 11529,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11513,
											"end": 11529,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11351,
											"end": 11535,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11351,
											"end": 11535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11877,
											"end": 12274,
											"name": "tag",
											"source": 11,
											"value": "577"
										},
										{
											"begin": 11877,
											"end": 12274,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12079,
											"end": 12081,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12061,
											"end": 12082,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12061,
											"end": 12082,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12061,
											"end": 12082,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12118,
											"end": 12120,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 12098,
											"end": 12116,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12098,
											"end": 12116,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12098,
											"end": 12116,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12091,
											"end": 12121,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12157,
											"end": 12191,
											"name": "PUSH",
											"source": 11,
											"value": "5F746F74616C5374616B65416D6F756E742063616E206E6F74206265207A6572"
										},
										{
											"begin": 12152,
											"end": 12154,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12137,
											"end": 12155,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12137,
											"end": 12155,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12130,
											"end": 12192,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12223,
											"end": 12225,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 12208,
											"end": 12226,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12208,
											"end": 12226,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12201,
											"end": 12232,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12264,
											"end": 12267,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 12249,
											"end": 12268,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12249,
											"end": 12268,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11877,
											"end": 12274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12279,
											"end": 12580,
											"name": "tag",
											"source": 11,
											"value": "612"
										},
										{
											"begin": 12279,
											"end": 12580,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12408,
											"end": 12411,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12446,
											"end": 12452,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12440,
											"end": 12453,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12492,
											"end": 12498,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12485,
											"end": 12489,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12477,
											"end": 12483,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12473,
											"end": 12490,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12468,
											"end": 12471,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12462,
											"end": 12499,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 12554,
											"end": 12555,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12518,
											"end": 12534,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12518,
											"end": 12534,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12543,
											"end": 12556,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12543,
											"end": 12556,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12543,
											"end": 12556,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12518,
											"end": 12534,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12279,
											"end": 12580,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12279,
											"end": 12580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"D85598D6EA860439B48FC265883A1CAC638FF64DCA5391FE12B46F27076E26FE": "b5671393c7c6980552e50a31e778921eb17d764c2e98fbf4d44fff524712def9"
									}
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"DripWarrior/poolClieent.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"addFunds(uint256,uint256)": "85f45250",
							"addOwnership(uint256)": "78fd078d",
							"addProjects(uint256)": "2765df7a",
							"addTreasuery(uint256)": "5256dbbf",
							"alreadyAdded(address)": "c7fd5bf0",
							"blockUser(address,bool)": "d9b998b4",
							"checkOnce()": "30e3f8f8",
							"checkUpkeep(bytes)": "6e04ff0d",
							"flowToTreasuryPercentage()": "ce356a24",
							"initialize(address,address,address)": "c0c53b8b",
							"interval()": "947a36fb",
							"lastTimeStamp()": "3f3b3b27",
							"maintainceFeePercentage()": "3a71a9e4",
							"multisigAddress()": "5462870d",
							"noOfUsers()": "01934a83",
							"odividentPayoutPercentage()": "44490ff4",
							"off()": "6626b26d",
							"owner()": "8da5cb5b",
							"ownerShipPoolAmount()": "b47ff951",
							"performUpkeep(bytes)": "4585e33b",
							"proxiableUUID()": "52d1902d",
							"reStakeTokens(uint256)": "7ffe4d93",
							"renounceOwnership()": "715018a6",
							"s_forwarderAddress()": "3070fbf8",
							"setForwarderAddress(address)": "d777cc6d",
							"setInterval(uint256,uint256)": "5f17e616",
							"setTeasueryPercentages(uint256,uint256)": "ed061067",
							"setflowToTreasuryPercentage(uint256)": "ad8e5ec4",
							"setmaintainceFeePercentage(uint256)": "7f111e60",
							"setodividentPayoutPercentage(uint256)": "b9dac1eb",
							"settdividentPayoutPercentage(uint256)": "7f70c5e7",
							"stakeTokens(uint256)": "7547c7a3",
							"startingTime()": "39518b5e",
							"tPPercentages(uint256)": "ff3d65d9",
							"tdividentPayoutPercentage()": "33244c2c",
							"totalProjects()": "9c361e4e",
							"totalStakedAmount()": "567e98f9",
							"totalUsers(uint256)": "a4f67b8b",
							"transferOwnership(address)": "f2fde38b",
							"treasuryPoolAmount()": "188e07b9",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"usdcToken()": "11eac855",
							"userRegistered(address)": "bccbc36c",
							"userWithdrawAmoount(uint256)": "67976974",
							"weeklyTransfer()": "e9c68e2c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"notEnoughBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"transfered\",\"type\":\"bool\"}],\"name\":\"transferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"blocked\",\"type\":\"bool\"}],\"name\":\"userBlocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wrongAddress\",\"type\":\"address\"}],\"name\":\"wrongAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wrongAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"updateInterval\",\"type\":\"uint256\"}],\"name\":\"wrongInterval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"wrongOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"wrongPercentage\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"projectNO\",\"type\":\"uint256\"}],\"name\":\"wrongProjectNo\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"wrongTime\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"wrongValue\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_projectNo\",\"type\":\"uint256\"}],\"name\":\"AddFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ownerShipPoolAmount\",\"type\":\"uint256\"}],\"name\":\"AddOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"OpPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tpPercentage\",\"type\":\"uint256\"}],\"name\":\"AddProject\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_treasuryPoolAmount\",\"type\":\"uint256\"}],\"name\":\"AddTreasuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newPercentage\",\"type\":\"uint256\"}],\"name\":\"PercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_s_forwarderAddress\",\"type\":\"address\"}],\"name\":\"SetForwarderAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_interval\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lastTimeStamp\",\"type\":\"uint256\"}],\"name\":\"SetInterval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recepient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"StakeTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"blockUserAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"blocked\",\"type\":\"bool\"}],\"name\":\"UserBlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ownerShipPoolAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"treasuryPoolAmount\",\"type\":\"uint256\"}],\"name\":\"WeeklyTransfered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_interval\",\"type\":\"uint256\"}],\"name\":\"offInterval\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_projectNo\",\"type\":\"uint256\"}],\"name\":\"addFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tPPercentage\",\"type\":\"uint256\"}],\"name\":\"addProjects\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addTreasuery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"alreadyAdded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"blockUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkOnce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flowToTreasuryPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_multisigAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maintainceFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multisigAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"noOfUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"odividentPayoutPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"off\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerShipPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"reStakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_forwarderAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarderAddress\",\"type\":\"address\"}],\"name\":\"setForwarderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updateInterval\",\"type\":\"uint256\"}],\"name\":\"setInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newPerccentage\",\"type\":\"uint256\"}],\"name\":\"setTeasueryPercentages\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPerccentage\",\"type\":\"uint256\"}],\"name\":\"setflowToTreasuryPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPerccentage\",\"type\":\"uint256\"}],\"name\":\"setmaintainceFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPerccentage\",\"type\":\"uint256\"}],\"name\":\"setodividentPayoutPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPerccentage\",\"type\":\"uint256\"}],\"name\":\"settdividentPayoutPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tPPercentages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tdividentPayoutPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalProjects\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"blocked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"receivedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"receiveFromTreasury\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"receiveFromOwneerShip\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"userWithdrawAmoount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weeklyTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/poolClieent.sol\":\"PoolContrcat\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"DripWarrior/poolClieent.sol\":{\"keccak256\":\"0x017736c001606eb69d86c35febdba1b15b79aeb4bce6a5cf246e7f1806b2e4e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3a388e5925129f6b9aa4e9c893f943d84bcb54b0023ba2e567adf54bc8d4f59\",\"dweb:/ipfs/QmaGNcgGPPUVosdqkGXPde8EgaT8CyZGwq9wfWTTDPRiRp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1436,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "usdcToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IBEP20)1425"
							},
							{
								"astId": 1438,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "treasuryPoolAmount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1440,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "ownerShipPoolAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1442,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "totalStakedAmount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1444,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "tdividentPayoutPercentage",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1446,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "odividentPayoutPercentage",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1448,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "flowToTreasuryPercentage",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1450,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "maintainceFeePercentage",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1452,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "noOfUsers",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1454,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "multisigAddress",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1456,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "checkOnce",
								"offset": 20,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 1458,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "locked",
								"offset": 21,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 1460,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "interval",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1462,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "startingTime",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1464,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "lastTimeStamp",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1466,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "s_forwarderAddress",
								"offset": 0,
								"slot": "13",
								"type": "t_address"
							},
							{
								"astId": 1481,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "totalProjects",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1485,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "alreadyAdded",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1489,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "totalUsers",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1493,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "tPPercentages",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1498,
								"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
								"label": "userRegistered",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_struct(UserRegistered)1479_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IBEP20)1425": {
								"encoding": "inplace",
								"label": "contract IBEP20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(UserRegistered)1479_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct PoolContrcat.UserRegistered)",
								"numberOfBytes": "32",
								"value": "t_struct(UserRegistered)1479_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(UserRegistered)1479_storage": {
								"encoding": "inplace",
								"label": "struct PoolContrcat.UserRegistered",
								"members": [
									{
										"astId": 1468,
										"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
										"label": "blocked",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1470,
										"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
										"label": "receivedAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1472,
										"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
										"label": "withdrawAmount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1474,
										"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
										"label": "receiveFromTreasury",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1476,
										"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
										"label": "receiveFromOwneerShip",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1478,
										"contract": "DripWarrior/poolClieent.sol:PoolContrcat",
										"label": "totalStakedAmount",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
					"exportedSymbols": {
						"AutomationCompatibleInterface": [
							18
						]
					},
					"id": 19,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AutomationCompatibleInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 18,
							"linearizedBaseContracts": [
								18
							],
							"name": "AutomationCompatibleInterface",
							"nameLocation": "120:29:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "154:985:0",
										"text": " @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."
									},
									"functionSelector": "6e04ff0d",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "1151:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "checkData",
												"nameLocation": "1178:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "1163:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1163:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1162:26:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "upkeepNeeded",
												"nameLocation": "1212:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "1207:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1207:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "1239:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "1226:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1226:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1206:45:0"
									},
									"scope": 18,
									"src": "1142:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "1256:1003:0",
										"text": " @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."
									},
									"functionSelector": "4585e33b",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "2271:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "2300:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "2285:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2285:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:28:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:0:0"
									},
									"scope": 18,
									"src": "2262:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 19,
							"src": "110:2214:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2293:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							695
						],
						"Initializable": [
							467
						],
						"OwnableUpgradeable": [
							213
						]
					},
					"id": 214,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 20,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 22,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 214,
							"sourceUnit": 696,
							"src": "128:67:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 21,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 695,
										"src": "136:18:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 24,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 214,
							"sourceUnit": 468,
							"src": "196:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 23,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 467,
										"src": "204:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 26,
										"name": "Initializable",
										"nameLocations": [
											"789:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 467,
										"src": "789:13:1"
									},
									"id": 27,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:1"
								},
								{
									"baseName": {
										"id": 28,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 695,
										"src": "804:18:1"
									},
									"id": 29,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:1"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 25,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 213,
							"linearizedBaseContracts": [
								213,
								695,
								467
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:1",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 33,
									"members": [
										{
											"constant": false,
											"id": 32,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 33,
											"src": "931:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 31,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:1",
									"nodeType": "StructDefinition",
									"scope": 213,
									"src": "899:53:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 36,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 213,
									"src": "1069:116:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 34,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 35,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1270:81:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:1",
													"nodeType": "YulBlock",
													"src": "1289:56:1",
													"statements": [
														{
															"nativeSrc": "1303:32:1",
															"nodeType": "YulAssignment",
															"src": "1303:32:1",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:1",
																"nodeType": "YulIdentifier",
																"src": "1313:22:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 40,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 36,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:1",
														"valueSize": 1
													}
												],
												"id": 42,
												"nodeType": "InlineAssembly",
												"src": "1280:65:1"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:1"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1244:24:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 39,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 38,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 33,
														"src": "1244:14:1"
													},
													"referencedDeclaration": 33,
													"src": "1244:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:1"
									},
									"scope": 213,
									"src": "1192:159:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 49,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1480:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:1"
									},
									"src": "1447:50:1"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 54,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1616:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:1"
									},
									"src": "1590:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 60,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1664:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1695:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:1"
									},
									"src": "1637:84:1"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "1919:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 69,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "1954:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 68,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1929:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:1"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 376,
												"src": "1902:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:1"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1871:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:1"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:1"
									},
									"scope": 213,
									"src": "1847:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "2062:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 80,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2076:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 81,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 94,
												"nodeType": "IfStatement",
												"src": "2072:95:1",
												"trueBody": {
													"id": 93,
													"nodeType": "Block",
													"src": "2104:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 89,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 88,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 87,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 90,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 86,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "2125:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 92,
															"nodeType": "RevertStatement",
															"src": "2118:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "2195:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 95,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "2176:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:1"
											}
										]
									},
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 78,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 77,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 376,
												"src": "2045:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:1"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2014:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:1"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:1"
									},
									"scope": 213,
									"src": "1980:235:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2324:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 103,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "2334:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:1"
											},
											{
												"id": 106,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:1"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 108,
									"name": "onlyOwner",
									"nameLocation": "2312:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:1"
									},
									"src": "2303:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "2496:89:1",
										"statements": [
											{
												"assignments": [
													116
												],
												"declarations": [
													{
														"constant": false,
														"id": 116,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 123,
														"src": "2506:24:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 115,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 114,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 33,
																"src": "2506:14:1"
															},
															"referencedDeclaration": 33,
															"src": "2506:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 117,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2533:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$33_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:1"
											},
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "2570:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:1",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 32,
													"src": "2570:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 113,
												"id": 122,
												"nodeType": "Return",
												"src": "2563:15:1"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2487:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:1"
									},
									"scope": 213,
									"src": "2441:144:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "2703:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 128,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "2717:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 130,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "2728:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 139,
												"nodeType": "IfStatement",
												"src": "2713:101:1",
												"trueBody": {
													"id": 138,
													"nodeType": "Block",
													"src": "2742:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 134,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 677,
																			"src": "2790:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 133,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "2763:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 137,
															"nodeType": "RevertStatement",
															"src": "2756:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:1"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:1"
									},
									"scope": 213,
									"src": "2658:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "3209:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 148,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 147,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "3219:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:1"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 145,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 144,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 108,
												"src": "3199:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:1"
									},
									"scope": 213,
									"src": "3155:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "3475:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 163,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3489:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 164,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 177,
												"nodeType": "IfStatement",
												"src": "3485:91:1",
												"trueBody": {
													"id": 176,
													"nodeType": "Block",
													"src": "3513:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 172,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 170,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 169,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "3534:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 175,
															"nodeType": "RevertStatement",
															"src": "3527:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 179,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "3604:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 178,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "3585:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 161,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 160,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 108,
												"src": "3465:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "3432:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:1"
									},
									"scope": 213,
									"src": "3405:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "3837:185:1",
										"statements": [
											{
												"assignments": [
													191
												],
												"declarations": [
													{
														"constant": false,
														"id": 191,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "3847:24:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 190,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 189,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 33,
																"src": "3847:14:1"
															},
															"referencedDeclaration": 33,
															"src": "3847:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 194,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 192,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "3874:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$33_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:1"
											},
											{
												"assignments": [
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 196,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "3904:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 195,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 199,
												"initialValue": {
													"expression": {
														"id": 197,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "3923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:1",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 32,
													"src": "3923:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:1"
											},
											{
												"expression": {
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 200,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "3941:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:1",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 32,
														"src": "3941:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 203,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "3952:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 207,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "3996:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 208,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "4006:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 206,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "3975:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "EmitStatement",
												"src": "3970:45:1"
											}
										]
									},
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "3802:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:1"
									},
									"scope": 213,
									"src": "3774:248:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 214,
							"src": "749:3275:1",
							"usedErrors": [
								49,
								54,
								230,
								233
							],
							"usedEvents": [
								60,
								238
							]
						}
					],
					"src": "102:3923:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							467
						]
					},
					"id": 468,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 215,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 216,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:2",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 467,
							"linearizedBaseContracts": [
								467
							],
							"name": "Initializable",
							"nameLocation": "2367:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:2",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 224,
									"members": [
										{
											"constant": false,
											"id": 220,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 224,
											"src": "2813:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 219,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 223,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 224,
											"src": "2950:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 222,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:2",
									"nodeType": "StructDefinition",
									"scope": 467,
									"src": "2685:290:2",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 227,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "3098:115:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 225,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 226,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:2",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 230,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:2"
									},
									"src": "3285:30:2"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:2",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 233,
									"name": "NotInitializing",
									"nameLocation": "3389:15:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:2"
									},
									"src": "3383:24:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:2",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 238,
									"name": "Initialized",
									"nameLocation": "3514:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3526:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 235,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:2"
									},
									"src": "3508:34:2"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "4092:1081:2",
										"statements": [
											{
												"assignments": [
													243
												],
												"declarations": [
													{
														"constant": false,
														"id": 243,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "4158:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 242,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 241,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 224,
																"src": "4158:20:2"
															},
															"referencedDeclaration": 224,
															"src": "4158:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 244,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "4191:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$224_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:2"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "4279:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 252,
												"initialValue": {
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:2",
													"subExpression": {
														"expression": {
															"id": 249,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "4302:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "4302:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:2"
											},
											{
												"assignments": [
													254
												],
												"declarations": [
													{
														"constant": false,
														"id": 254,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "4327:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 253,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 257,
												"initialValue": {
													"expression": {
														"id": 255,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "4348:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:2",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 220,
													"src": "4348:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:2"
											},
											{
												"assignments": [
													259
												],
												"declarations": [
													{
														"constant": false,
														"id": 259,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "4706:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 258,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 265,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 260,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4726:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 263,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "4746:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:2"
											},
											{
												"assignments": [
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "4770:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 266,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 280,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 268,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4790:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 273,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$467",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$467",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 271,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:2",
														"subExpression": {
															"id": 281,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "4856:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:2",
														"subExpression": {
															"id": 283,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "4873:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 290,
												"nodeType": "IfStatement",
												"src": "4851:91:2",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "4887:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 286,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "4908:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 288,
															"nodeType": "RevertStatement",
															"src": "4901:30:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 291,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "4951:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 293,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "4951:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:2"
											},
											{
												"condition": {
													"id": 297,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 248,
													"src": "4983:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 305,
												"nodeType": "IfStatement",
												"src": "4979:67:2",
												"trueBody": {
													"id": 304,
													"nodeType": "Block",
													"src": "4999:47:2",
													"statements": [
														{
															"expression": {
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 298,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "5013:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:2",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 223,
																	"src": "5013:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 303,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:2"
														}
													]
												}
											},
											{
												"id": 306,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:2"
											},
											{
												"condition": {
													"id": 307,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 248,
													"src": "5070:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 319,
												"nodeType": "IfStatement",
												"src": "5066:101:2",
												"trueBody": {
													"id": 318,
													"nodeType": "Block",
													"src": "5086:81:2",
													"statements": [
														{
															"expression": {
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 308,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "5100:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:2",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 223,
																	"src": "5100:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 313,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 314,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "5142:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 317,
															"nodeType": "EmitStatement",
															"src": "5137:19:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:2",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 321,
									"name": "initializer",
									"nameLocation": "4078:11:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:2"
									},
									"src": "4069:1104:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "6291:392:2",
										"statements": [
											{
												"assignments": [
													328
												],
												"declarations": [
													{
														"constant": false,
														"id": 328,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 367,
														"src": "6357:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 327,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 326,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 224,
																"src": "6357:20:2"
															},
															"referencedDeclaration": 224,
															"src": "6357:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 331,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 329,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "6390:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$224_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 332,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "6431:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "6431:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 334,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "6450:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:2",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 220,
															"src": "6450:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 336,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "6468:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "IfStatement",
												"src": "6427:105:2",
												"trueBody": {
													"id": 342,
													"nodeType": "Block",
													"src": "6477:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 339,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "6498:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 341,
															"nodeType": "RevertStatement",
															"src": "6491:30:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 344,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "6541:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 346,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "6541:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 347,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "6558:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:2"
											},
											{
												"expression": {
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 350,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "6575:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "6575:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:2"
											},
											{
												"id": 356,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:2"
											},
											{
												"expression": {
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 357,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "6618:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "6618:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 364,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "6668:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 363,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "6656:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "EmitStatement",
												"src": "6651:25:2"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:2",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 368,
									"name": "reinitializer",
									"nameLocation": "6261:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "6275:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 323,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:2"
									},
									"src": "6252:431:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "6921:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 371,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "6931:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:2"
											},
											{
												"id": 374,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:2"
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:2",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 376,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:2"
									},
									"src": "6893:76:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "7136:89:2",
										"statements": [
											{
												"condition": {
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:2",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 380,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "7151:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 387,
												"nodeType": "IfStatement",
												"src": "7146:73:2",
												"trueBody": {
													"id": 386,
													"nodeType": "Block",
													"src": "7170:49:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 383,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "7191:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 385,
															"nodeType": "RevertStatement",
															"src": "7184:24:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:2",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:2"
									},
									"scope": 467,
									"src": "7084:141:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "7760:373:2",
										"statements": [
											{
												"assignments": [
													395
												],
												"declarations": [
													{
														"constant": false,
														"id": 395,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 434,
														"src": "7826:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 394,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 393,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 224,
																"src": "7826:20:2"
															},
															"referencedDeclaration": 224,
															"src": "7826:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 398,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 396,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "7859:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$224_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:2"
											},
											{
												"condition": {
													"expression": {
														"id": 399,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "7900:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:2",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 223,
													"src": "7900:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 405,
												"nodeType": "IfStatement",
												"src": "7896:76:2",
												"trueBody": {
													"id": 404,
													"nodeType": "Block",
													"src": "7917:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 401,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "7938:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 403,
															"nodeType": "RevertStatement",
															"src": "7931:30:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 406,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "7985:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "7985:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 409,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 408,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 433,
												"nodeType": "IfStatement",
												"src": "7981:146:2",
												"trueBody": {
													"id": 432,
													"nodeType": "Block",
													"src": "8021:106:2",
													"statements": [
														{
															"expression": {
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 414,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 395,
																		"src": "8035:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 416,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:2",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 220,
																	"src": "8035:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 418,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:2",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 417,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:2",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 423,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 427,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 426,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:2",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 425,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:2",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 424,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "8087:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 431,
															"nodeType": "EmitStatement",
															"src": "8082:34:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:2",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:2"
									},
									"scope": 467,
									"src": "7711:422:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "8308:63:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 441,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "8325:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$224_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:2",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 220,
													"src": "8325:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 440,
												"id": 444,
												"nodeType": "Return",
												"src": "8318:46:2"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:2",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "8300:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 438,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:2"
									},
									"scope": 467,
									"src": "8243:128:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "8543:64:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 452,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "8560:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$224_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:2",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 223,
													"src": "8560:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 451,
												"id": 455,
												"nodeType": "Return",
												"src": "8553:47:2"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:2",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:2"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "8537:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 449,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:2"
									},
									"scope": 467,
									"src": "8487:120:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "8827:80:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:2",
													"nodeType": "YulBlock",
													"src": "8846:55:2",
													"statements": [
														{
															"nativeSrc": "8860:31:2",
															"nodeType": "YulAssignment",
															"src": "8860:31:2",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:2",
																"nodeType": "YulIdentifier",
																"src": "8870:21:2"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 462,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 227,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:2",
														"valueSize": 1
													}
												],
												"id": 464,
												"nodeType": "InlineAssembly",
												"src": "8837:64:2"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:2",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:2"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "8795:30:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 461,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 460,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 224,
														"src": "8795:20:2"
													},
													"referencedDeclaration": 224,
													"src": "8795:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:2"
									},
									"scope": 467,
									"src": "8737:170:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 468,
							"src": "2349:6560:2",
							"usedErrors": [
								230,
								233
							],
							"usedEvents": [
								238
							]
						}
					],
					"src": "113:8797:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1008
						],
						"IERC1822Proxiable": [
							705
						],
						"Initializable": [
							467
						],
						"UUPSUpgradeable": [
							649
						]
					},
					"id": 650,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 469,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 471,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 706,
							"src": "141:88:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 470,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 705,
										"src": "149:17:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 473,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 1009,
							"src": "230:84:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 472,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1008,
										"src": "238:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 475,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 468,
							"src": "315:50:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 474,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 467,
										"src": "323:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 477,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 467,
										"src": "1023:13:3"
									},
									"id": 478,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:3"
								},
								{
									"baseName": {
										"id": 479,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 705,
										"src": "1038:17:3"
									},
									"id": 480,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:3"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 476,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:3",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 649,
							"linearizedBaseContracts": [
								649,
								705,
								467
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:3",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 487,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1128:48:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 482,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 485,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$649",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$649",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 484,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 483,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:3",
												"typeDescriptions": {}
											}
										},
										"id": 486,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:3",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 491,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1819:58:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 489,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 490,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:3",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 494,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:3"
									},
									"src": "1954:36:3"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:3",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 499,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "2104:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 496,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:3"
									},
									"src": "2069:49:3"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2643:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 502,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "2653:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2653:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "2653:13:3"
											},
											{
												"id": 505,
												"nodeType": "PlaceholderStatement",
												"src": "2676:1:3"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "2124:493:3",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 507,
									"name": "onlyProxy",
									"nameLocation": "2631:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:3"
									},
									"src": "2622:62:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "2914:48:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 510,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "2924:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2924:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "2924:20:3"
											},
											{
												"id": 513,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:3"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2690:195:3",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 515,
									"name": "notDelegated",
									"nameLocation": "2899:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2911:2:3"
									},
									"src": "2890:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "3028:7:3",
										"statements": []
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 518,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 517,
												"name": "onlyInitializing",
												"nameLocations": [
													"3011:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 376,
												"src": "3011:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3011:16:3"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2977:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2999:2:3"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:0:3"
									},
									"scope": 649,
									"src": "2968:67:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "3111:7:3",
										"statements": []
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 524,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 523,
												"name": "onlyInitializing",
												"nameLocations": [
													"3094:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 376,
												"src": "3094:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3094:16:3"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3050:32:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3082:2:3"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3111:0:3"
									},
									"scope": 649,
									"src": "3041:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										704
									],
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "3783:56:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 535,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "3800:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1008_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3813:19:3",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 735,
													"src": "3800:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 534,
												"id": 537,
												"nodeType": "Return",
												"src": "3793:39:3"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "3123:577:3",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 531,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 530,
												"name": "notDelegated",
												"nameLocations": [
													"3752:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 515,
												"src": "3752:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3752:12:3"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3714:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3727:2:3"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "3774:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 532,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:3"
									},
									"scope": 649,
									"src": "3705:134:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "4263:109:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4291:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 549,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "4273:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "4273:36:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 554,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4341:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "4360:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 553,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "4319:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "4319:46:3"
											}
										]
									},
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "3845:308:3",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 547,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 546,
												"name": "onlyProxy",
												"nameLocations": [
													"4253:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 507,
												"src": "4253:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4253:9:3"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4167:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4192:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "4184:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4224:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "4211:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 543,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4211:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:46:3"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4263:0:3"
									},
									"scope": 649,
									"src": "4158:214:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "4644:267:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 565,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4679:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$649",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$649",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4671:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 563,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4671:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4671:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 567,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "4688:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4671:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 569,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "4749:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1008_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4762:17:3",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 766,
																"src": "4749:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4749:32:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 572,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "4785:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4749:42:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4671:120:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "4654:251:3",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "4844:61:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 575,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "4865:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4865:29:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 577,
															"nodeType": "RevertStatement",
															"src": "4858:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "4378:216:3",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4608:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4619:2:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4644:0:3"
									},
									"scope": 649,
									"src": "4599:312:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "5080:161:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 587,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5102:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$649",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$649",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5094:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 585,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5094:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5094:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 589,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5111:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5094:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 595,
												"nodeType": "IfStatement",
												"src": "5090:145:3",
												"trueBody": {
													"id": 594,
													"nodeType": "Block",
													"src": "5119:116:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 591,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "5195:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5195:29:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 593,
															"nodeType": "RevertStatement",
															"src": "5188:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "4917:106:3",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5037:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5055:2:3"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5080:0:3"
									},
									"scope": 649,
									"src": "5028:213:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "5247:372:3",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5633:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5659:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "5651:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:27:3"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5694:0:3"
									},
									"scope": 649,
									"src": "5624:71:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "6137:453:3",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 636,
															"nodeType": "Block",
															"src": "6227:212:3",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 619,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "6245:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 620,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1008,
																				"src": "6253:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1008_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6266:19:3",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 735,
																			"src": "6253:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6245:40:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 628,
																	"nodeType": "IfStatement",
																	"src": "6241:120:3",
																	"trueBody": {
																		"id": 627,
																		"nodeType": "Block",
																		"src": "6287:74:3",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 624,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 617,
																							"src": "6341:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 623,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 499,
																						"src": "6312:28:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 625,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6312:34:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 626,
																				"nodeType": "RevertStatement",
																				"src": "6305:41:3"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 632,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 606,
																				"src": "6404:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 633,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 608,
																				"src": "6423:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 629,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1008,
																				"src": "6374:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1008_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6387:16:3",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 827,
																			"src": "6374:29:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6374:54:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 635,
																	"nodeType": "ExpressionStatement",
																	"src": "6374:54:3"
																}
															]
														},
														"errorName": "",
														"id": 637,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 618,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 617,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6221:4:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 637,
																	"src": "6213:12:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 616,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6213:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6212:14:3"
														},
														"src": "6204:235:3"
													},
													{
														"block": {
															"id": 644,
															"nodeType": "Block",
															"src": "6446:138:3",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 641,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 606,
																				"src": "6555:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 638,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1008,
																				"src": "6513:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1008_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6526:28:3",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 740,
																			"src": "6513:41:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6513:60:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 643,
																	"nodeType": "RevertStatement",
																	"src": "6506:67:3"
																}
															]
														},
														"errorName": "",
														"id": 645,
														"nodeType": "TryCatchClause",
														"src": "6440:144:3"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 612,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "6169:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 611,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "6151:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$705_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6151:36:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$705",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6188:13:3",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 704,
														"src": "6151:50:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6151:52:3",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 646,
												"nodeType": "TryStatement",
												"src": "6147:437:3"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "5701:346:3",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6061:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6091:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "6083:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6123:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "6110:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 607,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6110:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:46:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6137:0:3"
									},
									"scope": 649,
									"src": "6052:538:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 650,
							"src": "986:5606:3",
							"usedErrors": [
								230,
								233,
								494,
								499,
								740,
								753,
								1031,
								1034
							],
							"usedEvents": [
								238,
								719
							]
						}
					],
					"src": "115:6478:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							695
						],
						"Initializable": [
							467
						]
					},
					"id": 696,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 651,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 653,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 696,
							"sourceUnit": 468,
							"src": "126:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 652,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 467,
										"src": "134:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 655,
										"name": "Initializable",
										"nameLocations": [
											"728:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 467,
										"src": "728:13:4"
									},
									"id": 656,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:4"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 695,
							"linearizedBaseContracts": [
								695,
								467
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "800:7:4",
										"statements": []
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 659,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 658,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 376,
												"src": "783:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:4"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:4"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:4"
									},
									"scope": 695,
									"src": "748:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "875:7:4",
										"statements": []
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 665,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 664,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 376,
												"src": "858:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:4"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:4"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:4"
									},
									"scope": 695,
									"src": "813:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "949:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 673,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 672,
												"id": 675,
												"nodeType": "Return",
												"src": "959:17:4"
											}
										]
									},
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:4"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "940:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:4"
									},
									"scope": 695,
									"src": "887:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "1056:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 682,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 681,
												"id": 684,
												"nodeType": "Return",
												"src": "1066:15:4"
											}
										]
									},
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:4"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1040:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 679,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:4"
									},
									"scope": 695,
									"src": "989:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "1166:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 690,
												"id": 692,
												"nodeType": "Return",
												"src": "1176:8:4"
											}
										]
									},
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:4"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "1157:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:4"
									},
									"scope": 695,
									"src": "1094:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 696,
							"src": "688:505:4",
							"usedErrors": [
								230,
								233
							],
							"usedEvents": [
								238
							]
						}
					],
					"src": "101:1093:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							705
						]
					},
					"id": 706,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 697,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 698,
								"nodeType": "StructuredDocumentation",
								"src": "139:203:5",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 705,
							"linearizedBaseContracts": [
								705
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "353:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "377:438:5",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "829:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:5"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "868:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 701,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:5"
									},
									"scope": 705,
									"src": "820:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 706,
							"src": "343:536:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:767:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1271
						],
						"ERC1967Utils": [
							1008
						],
						"IBeacon": [
							1018
						],
						"StorageSlot": [
							1381
						]
					},
					"id": 1009,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 707,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 709,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1009,
							"sourceUnit": 1019,
							"src": "140:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 708,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1018,
										"src": "148:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1009,
							"sourceUnit": 1272,
							"src": "187:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 710,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1271,
										"src": "195:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1009,
							"sourceUnit": 1382,
							"src": "236:56:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 712,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1381,
										"src": "244:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 714,
								"nodeType": "StructuredDocumentation",
								"src": "294:154:6",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 1008,
							"linearizedBaseContracts": [
								1008
							],
							"name": "ERC1967Utils",
							"nameLocation": "457:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "660:68:6",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 719,
									"name": "Upgraded",
									"nameLocation": "739:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "764:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "748:30:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:32:6"
									},
									"src": "733:47:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "786:67:6",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 726,
									"name": "AdminChanged",
									"nameLocation": "864:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "885:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "877:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "908:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "900:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:41:6"
									},
									"src": "858:60:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "924:59:6",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 731,
									"name": "BeaconUpgraded",
									"nameLocation": "994:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1025:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1009:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:24:6"
									},
									"src": "988:45:6"
								},
								{
									"constant": true,
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "1039:170:6",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 735,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "1305:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1008,
									"src": "1279:114:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 733,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 734,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "1400:69:6",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 740,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "1480:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1517:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1509:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:24:6"
									},
									"src": "1474:59:6"
								},
								{
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "1539:60:6",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 745,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1610:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1638:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1630:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:6"
									},
									"src": "1604:41:6"
								},
								{
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "1651:61:6",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 750,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1723:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1752:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1744:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:16:6"
									},
									"src": "1717:43:6"
								},
								{
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "1766:82:6",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 753,
									"name": "ERC1967NonPayable",
									"nameLocation": "1859:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:2:6"
									},
									"src": "1853:26:6"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "2018:77:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 761,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "2062:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 759,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "2035:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1381_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2047:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1303,
															"src": "2035:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1277_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2035:47:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1277_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2083:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1276,
													"src": "2035:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 758,
												"id": 764,
												"nodeType": "Return",
												"src": "2028:60:6"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "1885:67:6",
										"text": " @dev Returns the current implementation address."
									},
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1966:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:6"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "2009:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:9:6"
									},
									"scope": 1008,
									"src": "1957:138:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "2249:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 772,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "2263:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2281:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2263:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2286:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2263:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 782,
												"nodeType": "IfStatement",
												"src": "2259:119:6",
												"trueBody": {
													"id": 781,
													"nodeType": "Block",
													"src": "2299:79:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 778,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 769,
																		"src": "2349:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 777,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "2320:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2320:47:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 780,
															"nodeType": "RevertStatement",
															"src": "2313:54:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 786,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "2414:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 783,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "2387:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1381_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2399:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1303,
																"src": "2387:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1277_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2387:47:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1277_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2435:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1276,
														"src": "2387:53:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 789,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "2443:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2387:73:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "2387:73:6"
											}
										]
									},
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "2101:80:6",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2195:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2222:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2214:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:27:6"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:6"
									},
									"scope": 1008,
									"src": "2186:281:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "2860:254:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 802,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "2889:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 801,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "2870:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "2870:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 806,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "2931:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 805,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "2922:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "EmitStatement",
												"src": "2917:32:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 809,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "2964:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2964:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2964:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 824,
													"nodeType": "Block",
													"src": "3065:43:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 821,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "3079:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3079:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 823,
															"nodeType": "ExpressionStatement",
															"src": "3079:18:6"
														}
													]
												},
												"id": 825,
												"nodeType": "IfStatement",
												"src": "2960:148:6",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "2981:78:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 816,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "3024:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 817,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "3043:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 813,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1271,
																		"src": "2995:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1271_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3003:20:6",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1190,
																	"src": "2995:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2995:53:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 819,
															"nodeType": "ExpressionStatement",
															"src": "2995:53:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "2473:301:6",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2788:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2813:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "2805:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2845:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "2832:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 797,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:46:6"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:6"
									},
									"scope": 1008,
									"src": "2779:335:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "3120:145:6",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 831,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "3361:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1008,
									"src": "3335:105:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 829,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3335:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 830,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3374:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "3844:68:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 839,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "3888:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 837,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "3861:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1381_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3873:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1303,
															"src": "3861:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1277_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:38:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1277_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3900:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1276,
													"src": "3861:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 836,
												"id": 842,
												"nodeType": "Return",
												"src": "3854:51:6"
											}
										]
									},
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "3447:340:6",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3801:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3809:2:6"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "3835:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3835:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:9:6"
									},
									"scope": 1008,
									"src": "3792:120:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "4039:172:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 850,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "4053:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 851,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4065:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4053:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 864,
												"nodeType": "IfStatement",
												"src": "4049:91:6",
												"trueBody": {
													"id": 863,
													"nodeType": "Block",
													"src": "4077:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 859,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4126:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4118:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 857,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4118:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 856,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "4098:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 862,
															"nodeType": "RevertStatement",
															"src": "4091:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 868,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "4176:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 865,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "4149:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1381_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4161:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1303,
																"src": "4149:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1277_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1277_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4188:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1276,
														"src": "4149:44:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 871,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "4196:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4149:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "4149:55:6"
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "3918:71:6",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4003:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4021:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "4013:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4012:18:6"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:0:6"
									},
									"scope": 1008,
									"src": "3994:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "4379:85:6",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 882,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "4407:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4407:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "4419:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 881,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "4394:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "EmitStatement",
												"src": "4389:39:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 888,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "4448:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 887,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "4438:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "4438:19:6"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "4217:109:6",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "4340:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4360:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "4352:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:18:6"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:6"
									},
									"scope": 1008,
									"src": "4331:133:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "4470:201:6",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 896,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4767:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1008,
									"src": "4741:106:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 894,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4741:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 895,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4781:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "4963:69:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 904,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "5007:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 902,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "4980:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1381_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4992:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1303,
															"src": "4980:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1277_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4980:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1277_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5020:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1276,
													"src": "4980:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 901,
												"id": 907,
												"nodeType": "Return",
												"src": "4973:52:6"
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "4854:51:6",
										"text": " @dev Returns the current beacon."
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4919:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4928:2:6"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "4954:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4954:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4953:9:6"
									},
									"scope": 1008,
									"src": "4910:122:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "5161:390:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 915,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "5175:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5185:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5175:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5190:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5175:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5200:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5175:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 925,
												"nodeType": "IfStatement",
												"src": "5171:95:6",
												"trueBody": {
													"id": 924,
													"nodeType": "Block",
													"src": "5203:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 921,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 912,
																		"src": "5245:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 920,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "5224:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5224:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 923,
															"nodeType": "RevertStatement",
															"src": "5217:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 929,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "5303:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 926,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "5276:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1381_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5288:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1303,
																"src": "5276:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1277_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5276:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1277_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5316:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1276,
														"src": "5276:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 932,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "5324:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5276:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "5276:57:6"
											},
											{
												"assignments": [
													936
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "5352:20:6",
														"nodeType": "VariableDeclaration",
														"scope": 954,
														"src": "5344:28:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 935,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5344:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 942,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 938,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "5383:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 937,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "5375:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1018_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5375:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1018",
																"typeString": "contract IBeacon"
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5394:14:6",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1017,
														"src": "5375:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5344:66:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 943,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "5424:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5445:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5424:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5450:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5424:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5460:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5424:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 953,
												"nodeType": "IfStatement",
												"src": "5420:125:6",
												"trueBody": {
													"id": 952,
													"nodeType": "Block",
													"src": "5463:82:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 949,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "5513:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 948,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "5484:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 951,
															"nodeType": "RevertStatement",
															"src": "5477:57:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "5038:71:6",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5123:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5142:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "5134:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:19:6"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 1008,
									"src": "5114:437:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "6155:254:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 964,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "6176:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 963,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "6165:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6165:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "6165:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 968,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "6216:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 967,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "6201:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "EmitStatement",
												"src": "6196:30:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 971,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "6241:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6246:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6241:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6255:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6241:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 990,
													"nodeType": "Block",
													"src": "6360:43:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 987,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "6374:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6374:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 989,
															"nodeType": "ExpressionStatement",
															"src": "6374:18:6"
														}
													]
												},
												"id": 991,
												"nodeType": "IfStatement",
												"src": "6237:166:6",
												"trueBody": {
													"id": 986,
													"nodeType": "Block",
													"src": "6258:96:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 979,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 958,
																						"src": "6309:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 978,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1018,
																					"src": "6301:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1018_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 980,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6301:18:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1018",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6320:14:6",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1017,
																			"src": "6301:33:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6301:35:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 983,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "6338:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 975,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1271,
																		"src": "6272:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1271_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6280:20:6",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1190,
																	"src": "6272:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 985,
															"nodeType": "ExpressionStatement",
															"src": "6272:71:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "5557:514:6",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "6085:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6116:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "6108:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6140:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "6127:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 959,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6127:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:38:6"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6155:0:6"
									},
									"scope": 1008,
									"src": "6076:333:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "6634:86:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 997,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6648:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6652:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6648:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6660:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6648:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1005,
												"nodeType": "IfStatement",
												"src": "6644:70:6",
												"trueBody": {
													"id": 1004,
													"nodeType": "Block",
													"src": "6663:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1001,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "6684:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6684:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1003,
															"nodeType": "RevertStatement",
															"src": "6677:26:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "6415:178:6",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6607:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6623:2:6"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:0:6"
									},
									"scope": 1008,
									"src": "6598:122:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1009,
							"src": "449:6273:6",
							"usedErrors": [
								740,
								745,
								750,
								753
							],
							"usedEvents": [
								719,
								726,
								731
							]
						}
					],
					"src": "114:6609:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1018
						]
					},
					"id": 1019,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1010,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1011,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:7",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1018,
							"linearizedBaseContracts": [
								1018
							],
							"name": "IBeacon",
							"nameLocation": "224:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:7",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:7"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "460:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:7"
									},
									"scope": 1018,
									"src": "411:58:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1019,
							"src": "214:257:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1271
						]
					},
					"id": 1272,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1020,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1021,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1271,
							"linearizedBaseContracts": [
								1271
							],
							"name": "Address",
							"nameLocation": "203:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:8",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1026,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "349:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:8"
									},
									"src": "316:50:8"
								},
								{
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1031,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "475:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:8"
									},
									"src": "452:39:8"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:8",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1034,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:8"
									},
									"src": "591:24:8"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "1602:260:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1044,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1271",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1271",
																		"typeString": "library Address"
																	}
																],
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1042,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1047,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "1640:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1057,
												"nodeType": "IfStatement",
												"src": "1612:109:8",
												"trueBody": {
													"id": 1056,
													"nodeType": "Block",
													"src": "1648:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1052,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1271",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1271",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1050,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1049,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "1669:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1055,
															"nodeType": "RevertStatement",
															"src": "1662:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													1059,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1059,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1074,
														"src": "1732:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1058,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1066,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1060,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "1750:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1062,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "1772:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:8"
											},
											{
												"condition": {
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:8",
													"subExpression": {
														"id": 1067,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "1798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1073,
												"nodeType": "IfStatement",
												"src": "1793:63:8",
												"trueBody": {
													"id": 1072,
													"nodeType": "Block",
													"src": "1807:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1069,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "1828:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1071,
															"nodeType": "RevertStatement",
															"src": "1821:24:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1550:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1577:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:8"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:8"
									},
									"scope": 1271,
									"src": "1531:331:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "2794:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1086,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "2833:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1087,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "2841:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1085,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "2811:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1084,
												"id": 1090,
												"nodeType": "Return",
												"src": "2804:45:8"
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "2727:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "2743:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1079,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:8"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "2780:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1082,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:8"
									},
									"scope": 1271,
									"src": "2705:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "3293:279:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1106,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1271",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1271",
																		"typeString": "library Address"
																	}
																],
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1104,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1109,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "3331:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1119,
												"nodeType": "IfStatement",
												"src": "3303:108:8",
												"trueBody": {
													"id": 1118,
													"nodeType": "Block",
													"src": "3338:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1114,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1271",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1271",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1112,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1111,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "3359:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1117,
															"nodeType": "RevertStatement",
															"src": "3352:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													1121,
													1123
												],
												"declarations": [
													{
														"constant": false,
														"id": 1121,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "3421:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1120,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1123,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "3435:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1122,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1130,
												"initialValue": {
													"arguments": [
														{
															"id": 1128,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "3488:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1124,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "3462:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1126,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1099,
																"src": "3481:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1132,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "3537:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1133,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "3545:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1134,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "3554:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1131,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "3510:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1103,
												"id": 1136,
												"nodeType": "Return",
												"src": "3503:62:8"
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3211:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3227:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3246:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:8"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3279:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:8"
									},
									"scope": 1271,
									"src": "3180:392:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "3811:154:8",
										"statements": [
											{
												"assignments": [
													1149,
													1151
												],
												"declarations": [
													{
														"constant": false,
														"id": 1149,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "3822:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1148,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1151,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "3836:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1150,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1156,
												"initialValue": {
													"arguments": [
														{
															"id": 1154,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "3881:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1152,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "3863:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1158,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "3930:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1159,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "3938:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1160,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "3947:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1157,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "3903:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1147,
												"id": 1162,
												"nodeType": "Return",
												"src": "3896:62:8"
											}
										]
									},
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "3739:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "3755:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:8"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "3797:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1145,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:8"
									},
									"scope": 1271,
									"src": "3711:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "4203:156:8",
										"statements": [
											{
												"assignments": [
													1175,
													1177
												],
												"declarations": [
													{
														"constant": false,
														"id": 1175,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1189,
														"src": "4214:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1174,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1177,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1189,
														"src": "4228:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1176,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1182,
												"initialValue": {
													"arguments": [
														{
															"id": 1180,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "4275:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1178,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "4255:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1184,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "4324:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1185,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "4332:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1186,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "4341:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1183,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "4297:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1173,
												"id": 1188,
												"nodeType": "Return",
												"src": "4290:62:8"
											}
										]
									},
									"documentation": {
										"id": 1165,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "4136:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "4152:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1168,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:8"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "4189:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1171,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:8"
									},
									"scope": 1271,
									"src": "4106:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "4783:424:8",
										"statements": [
											{
												"condition": {
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:8",
													"subExpression": {
														"id": 1202,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "4798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1227,
													"nodeType": "Block",
													"src": "4857:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1209,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "5045:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1213,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1193,
																				"src": "5071:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1224,
															"nodeType": "IfStatement",
															"src": "5041:119:8",
															"trueBody": {
																"id": 1223,
																"nodeType": "Block",
																"src": "5096:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1220,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1193,
																					"src": "5138:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1219,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1031,
																				"src": "5121:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1222,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1225,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "5180:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1201,
															"id": 1226,
															"nodeType": "Return",
															"src": "5173:17:8"
														}
													]
												},
												"id": 1228,
												"nodeType": "IfStatement",
												"src": "4793:408:8",
												"trueBody": {
													"id": 1208,
													"nodeType": "Block",
													"src": "4807:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1205,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1197,
																		"src": "4829:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1204,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1270,
																	"src": "4821:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1207,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "4670:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "4694:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "4716:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1196,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:8"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "4769:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1199,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:8"
									},
									"scope": 1271,
									"src": "4625:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "5509:122:8",
										"statements": [
											{
												"condition": {
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:8",
													"subExpression": {
														"id": 1240,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "5524:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1249,
													"nodeType": "Block",
													"src": "5583:42:8",
													"statements": [
														{
															"expression": {
																"id": 1247,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "5604:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1239,
															"id": 1248,
															"nodeType": "Return",
															"src": "5597:17:8"
														}
													]
												},
												"id": 1250,
												"nodeType": "IfStatement",
												"src": "5519:106:8",
												"trueBody": {
													"id": 1246,
													"nodeType": "Block",
													"src": "5533:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1243,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "5555:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1242,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1270,
																	"src": "5547:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1245,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5433:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1232,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5447:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:8"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5495:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:8"
									},
									"scope": 1271,
									"src": "5407:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "5798:461:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1258,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "5874:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1267,
													"nodeType": "Block",
													"src": "6204:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1264,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "6225:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1266,
															"nodeType": "RevertStatement",
															"src": "6218:24:8"
														}
													]
												},
												"id": 1268,
												"nodeType": "IfStatement",
												"src": "5870:383:8",
												"trueBody": {
													"id": 1263,
													"nodeType": "Block",
													"src": "5897:301:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:8",
																"nodeType": "YulBlock",
																"src": "6055:133:8",
																"statements": [
																	{
																		"nativeSrc": "6073:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:8"
																			},
																			"nativeSrc": "6096:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:8",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:8",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:8"
																					},
																					"nativeSrc": "6137:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:8"
																			},
																			"nativeSrc": "6130:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:8"
																		},
																		"nativeSrc": "6130:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:8"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1255,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1255,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:8",
																	"valueSize": 1
																}
															],
															"id": 1262,
															"nodeType": "InlineAssembly",
															"src": "6046:142:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "5760:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:8"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:8"
									},
									"scope": 1271,
									"src": "5743:516:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1272,
							"src": "195:6066:8",
							"usedErrors": [
								1026,
								1031,
								1034
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1381
						]
					},
					"id": 1382,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1273,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1274,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:9",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1381,
							"linearizedBaseContracts": [
								1381
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1277,
									"members": [
										{
											"constant": false,
											"id": 1276,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1277,
											"src": "1300:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1275,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:9",
									"nodeType": "StructDefinition",
									"scope": 1381,
									"src": "1271:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1280,
									"members": [
										{
											"constant": false,
											"id": 1279,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1280,
											"src": "1355:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1278,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:9",
									"nodeType": "StructDefinition",
									"scope": 1381,
									"src": "1326:46:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1283,
									"members": [
										{
											"constant": false,
											"id": 1282,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1283,
											"src": "1407:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1281,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:9",
									"nodeType": "StructDefinition",
									"scope": 1381,
									"src": "1378:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1286,
									"members": [
										{
											"constant": false,
											"id": 1285,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1286,
											"src": "1462:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1284,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:9",
									"nodeType": "StructDefinition",
									"scope": 1381,
									"src": "1433:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1289,
									"members": [
										{
											"constant": false,
											"id": 1288,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1289,
											"src": "1516:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1287,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:9",
									"nodeType": "StructDefinition",
									"scope": 1381,
									"src": "1488:47:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1292,
									"members": [
										{
											"constant": false,
											"id": 1291,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1292,
											"src": "1568:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1290,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:9",
									"nodeType": "StructDefinition",
									"scope": 1381,
									"src": "1541:45:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "1768:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:9",
													"nodeType": "YulBlock",
													"src": "1830:38:9",
													"statements": [
														{
															"nativeSrc": "1844:14:9",
															"nodeType": "YulAssignment",
															"src": "1844:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:9",
																"nodeType": "YulIdentifier",
																"src": "1854:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1299,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1295,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:9",
														"valueSize": 1
													}
												],
												"id": 1301,
												"nodeType": "InlineAssembly",
												"src": "1821:47:9"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:9",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1708:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1294,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:9"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1745:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1277_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1298,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1297,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1277,
														"src": "1745:11:9"
													},
													"referencedDeclaration": 1277,
													"src": "1745:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1277_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:9"
									},
									"scope": 1381,
									"src": "1684:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "2056:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:9",
													"nodeType": "YulBlock",
													"src": "2118:38:9",
													"statements": [
														{
															"nativeSrc": "2132:14:9",
															"nodeType": "YulAssignment",
															"src": "2132:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:9",
																"nodeType": "YulIdentifier",
																"src": "2142:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1310,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1306,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:9",
														"valueSize": 1
													}
												],
												"id": 1312,
												"nodeType": "InlineAssembly",
												"src": "2109:47:9"
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:9",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "1996:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:9"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2033:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1280_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1309,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1308,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "2033:11:9"
													},
													"referencedDeclaration": 1280,
													"src": "2033:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1280_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:9"
									},
									"scope": 1381,
									"src": "1972:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "2344:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:9",
													"nodeType": "YulBlock",
													"src": "2406:38:9",
													"statements": [
														{
															"nativeSrc": "2420:14:9",
															"nodeType": "YulAssignment",
															"src": "2420:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:9",
																"nodeType": "YulIdentifier",
																"src": "2430:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1321,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1317,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:9",
														"valueSize": 1
													}
												],
												"id": 1323,
												"nodeType": "InlineAssembly",
												"src": "2397:47:9"
											}
										]
									},
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:9",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "2284:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1316,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:9"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "2321:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1283_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1320,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1319,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1283,
														"src": "2321:11:9"
													},
													"referencedDeclaration": 1283,
													"src": "2321:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1283_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:9"
									},
									"scope": 1381,
									"src": "2260:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "2632:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:9",
													"nodeType": "YulBlock",
													"src": "2694:38:9",
													"statements": [
														{
															"nativeSrc": "2708:14:9",
															"nodeType": "YulAssignment",
															"src": "2708:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:9",
																"nodeType": "YulIdentifier",
																"src": "2718:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1332,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1328,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:9",
														"valueSize": 1
													}
												],
												"id": 1334,
												"nodeType": "InlineAssembly",
												"src": "2685:47:9"
											}
										]
									},
									"documentation": {
										"id": 1326,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:9",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "2572:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:9"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "2609:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1286_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1331,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1330,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1286,
														"src": "2609:11:9"
													},
													"referencedDeclaration": 1286,
													"src": "2609:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1286_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:9"
									},
									"scope": 1381,
									"src": "2548:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "2917:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:9",
													"nodeType": "YulBlock",
													"src": "2979:38:9",
													"statements": [
														{
															"nativeSrc": "2993:14:9",
															"nodeType": "YulAssignment",
															"src": "2993:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:9",
																"nodeType": "YulIdentifier",
																"src": "3003:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1343,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1339,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:9",
														"valueSize": 1
													}
												],
												"id": 1345,
												"nodeType": "InlineAssembly",
												"src": "2970:47:9"
											}
										]
									},
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:9",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "2858:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:9"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "2895:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1289_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1342,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1341,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1289,
														"src": "2895:10:9"
													},
													"referencedDeclaration": 1289,
													"src": "2895:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1289_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:9"
									},
									"scope": 1381,
									"src": "2835:188:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1357,
										"nodeType": "Block",
										"src": "3225:112:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:9",
													"nodeType": "YulBlock",
													"src": "3287:44:9",
													"statements": [
														{
															"nativeSrc": "3301:20:9",
															"nodeType": "YulAssignment",
															"src": "3301:20:9",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:9",
																"nodeType": "YulIdentifier",
																"src": "3311:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1354,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1350,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1356,
												"nodeType": "InlineAssembly",
												"src": "3278:53:9"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:9",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "3158:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1349,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:9"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "3203:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1289_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1353,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1352,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1289,
														"src": "3203:10:9"
													},
													"referencedDeclaration": 1289,
													"src": "3203:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1289_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:9"
									},
									"scope": 1381,
									"src": "3135:202:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "3513:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:9",
													"nodeType": "YulBlock",
													"src": "3575:38:9",
													"statements": [
														{
															"nativeSrc": "3589:14:9",
															"nodeType": "YulAssignment",
															"src": "3589:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:9",
																"nodeType": "YulIdentifier",
																"src": "3599:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1365,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1361,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:9",
														"valueSize": 1
													}
												],
												"id": 1367,
												"nodeType": "InlineAssembly",
												"src": "3566:47:9"
											}
										]
									},
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:9",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "3455:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:9"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "3492:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1292_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1364,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1363,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1292,
														"src": "3492:9:9"
													},
													"referencedDeclaration": 1292,
													"src": "3492:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1292_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:9"
									},
									"scope": 1381,
									"src": "3433:186:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "3816:112:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:9",
													"nodeType": "YulBlock",
													"src": "3878:44:9",
													"statements": [
														{
															"nativeSrc": "3892:20:9",
															"nodeType": "YulAssignment",
															"src": "3892:20:9",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:9",
																"nodeType": "YulIdentifier",
																"src": "3902:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1376,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1372,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1378,
												"nodeType": "InlineAssembly",
												"src": "3869:53:9"
											}
										]
									},
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:9",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "3751:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:9"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "3795:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1292_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1375,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1374,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1292,
														"src": "3795:9:9"
													},
													"referencedDeclaration": 1292,
													"src": "3795:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1292_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:9"
									},
									"scope": 1381,
									"src": "3729:199:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1382,
							"src": "1245:2685:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:9"
				},
				"id": 9
			},
			"DripWarrior/poolClieent.sol": {
				"ast": {
					"absolutePath": "DripWarrior/poolClieent.sol",
					"exportedSymbols": {
						"AutomationCompatibleInterface": [
							18
						],
						"ContextUpgradeable": [
							695
						],
						"ERC1967Utils": [
							1008
						],
						"IBEP20": [
							1425
						],
						"IERC1822Proxiable": [
							705
						],
						"Initializable": [
							467
						],
						"OwnableUpgradeable": [
							213
						],
						"PoolContrcat": [
							2832
						],
						"UUPSUpgradeable": [
							649
						]
					},
					"id": 2833,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1383,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2833,
							"sourceUnit": 214,
							"src": "107:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1385,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2833,
							"sourceUnit": 468,
							"src": "183:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 1386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2833,
							"sourceUnit": 650,
							"src": "259:77:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
							"file": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
							"id": 1388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2833,
							"sourceUnit": 19,
							"src": "337:132:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1387,
										"name": "AutomationCompatibleInterface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 18,
										"src": "345:29:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1425,
							"linearizedBaseContracts": [
								1425
							],
							"name": "IBEP20",
							"nameLocation": "528:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 1395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "563:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "581:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "573:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:17:10"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "613:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:9:10"
									},
									"scope": 1425,
									"src": "554:68:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1404,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "636:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "653:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "645:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "672:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "664:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:35:10"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "698:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "698:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:6:10"
									},
									"scope": 1425,
									"src": "627:77:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "718:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "736:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "728:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "751:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "743:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:32:10"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "783:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "782:9:10"
									},
									"scope": 1425,
									"src": "709:83:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "806:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "827:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "819:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "842:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "834:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "860:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "852:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:49:10"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "886:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "886:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "885:6:10"
									},
									"scope": 1425,
									"src": "797:95:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2833,
							"src": "518:376:10",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1426,
										"name": "Initializable",
										"nameLocations": [
											"921:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 467,
										"src": "921:13:10"
									},
									"id": 1427,
									"nodeType": "InheritanceSpecifier",
									"src": "921:13:10"
								},
								{
									"baseName": {
										"id": 1428,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"936:18:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 213,
										"src": "936:18:10"
									},
									"id": 1429,
									"nodeType": "InheritanceSpecifier",
									"src": "936:18:10"
								},
								{
									"baseName": {
										"id": 1430,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"956:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 649,
										"src": "956:15:10"
									},
									"id": 1431,
									"nodeType": "InheritanceSpecifier",
									"src": "956:15:10"
								},
								{
									"baseName": {
										"id": 1432,
										"name": "AutomationCompatibleInterface",
										"nameLocations": [
											"973:29:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 18,
										"src": "973:29:10"
									},
									"id": 1433,
									"nodeType": "InheritanceSpecifier",
									"src": "973:29:10"
								}
							],
							"canonicalName": "PoolContrcat",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2832,
							"linearizedBaseContracts": [
								2832,
								18,
								649,
								705,
								213,
								695,
								467
							],
							"name": "PoolContrcat",
							"nameLocation": "905:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "11eac855",
									"id": 1436,
									"mutability": "mutable",
									"name": "usdcToken",
									"nameLocation": "1024:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "1010:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$1425",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 1435,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1434,
											"name": "IBEP20",
											"nameLocations": [
												"1010:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1425,
											"src": "1010:6:10"
										},
										"referencedDeclaration": 1425,
										"src": "1010:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$1425",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "188e07b9",
									"id": 1438,
									"mutability": "mutable",
									"name": "treasuryPoolAmount",
									"nameLocation": "1059:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "1044:33:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1437,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1044:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b47ff951",
									"id": 1440,
									"mutability": "mutable",
									"name": "ownerShipPoolAmount",
									"nameLocation": "1098:19:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "1083:34:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1439,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1083:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "567e98f9",
									"id": 1442,
									"mutability": "mutable",
									"name": "totalStakedAmount",
									"nameLocation": "1138:17:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "1123:32:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1441,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1123:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "33244c2c",
									"id": 1444,
									"mutability": "mutable",
									"name": "tdividentPayoutPercentage",
									"nameLocation": "1177:25:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "1162:40:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1443,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1162:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "44490ff4",
									"id": 1446,
									"mutability": "mutable",
									"name": "odividentPayoutPercentage",
									"nameLocation": "1223:25:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "1208:40:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1445,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1208:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ce356a24",
									"id": 1448,
									"mutability": "mutable",
									"name": "flowToTreasuryPercentage",
									"nameLocation": "1269:24:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "1254:39:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1447,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1254:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3a71a9e4",
									"id": 1450,
									"mutability": "mutable",
									"name": "maintainceFeePercentage",
									"nameLocation": "1314:23:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "1299:38:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1449,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1299:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "01934a83",
									"id": 1452,
									"mutability": "mutable",
									"name": "noOfUsers",
									"nameLocation": "1359:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "1344:24:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1451,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1344:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5462870d",
									"id": 1454,
									"mutability": "mutable",
									"name": "multisigAddress",
									"nameLocation": "1389:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "1374:30:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1453,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1374:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "30e3f8f8",
									"id": 1456,
									"mutability": "mutable",
									"name": "checkOnce",
									"nameLocation": "1423:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "1411:21:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1455,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1411:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1458,
									"mutability": "mutable",
									"name": "locked",
									"nameLocation": "1451:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "1438:19:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1457,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1438:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "947a36fb",
									"id": 1460,
									"mutability": "mutable",
									"name": "interval",
									"nameLocation": "1478:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "1463:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1463:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "39518b5e",
									"id": 1462,
									"mutability": "mutable",
									"name": "startingTime",
									"nameLocation": "1554:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "1539:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1461,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1539:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3f3b3b27",
									"id": 1464,
									"mutability": "mutable",
									"name": "lastTimeStamp",
									"nameLocation": "1588:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "1573:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1463,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1573:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3070fbf8",
									"id": 1466,
									"mutability": "mutable",
									"name": "s_forwarderAddress",
									"nameLocation": "1672:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "1657:33:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1465,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1657:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "PoolContrcat.UserRegistered",
									"id": 1479,
									"members": [
										{
											"constant": false,
											"id": 1468,
											"mutability": "mutable",
											"name": "blocked",
											"nameLocation": "1734:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1479,
											"src": "1729:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1467,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1729:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1470,
											"mutability": "mutable",
											"name": "receivedAmount",
											"nameLocation": "1759:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 1479,
											"src": "1751:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1469,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1751:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1472,
											"mutability": "mutable",
											"name": "withdrawAmount",
											"nameLocation": "1791:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 1479,
											"src": "1783:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1471,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1783:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1474,
											"mutability": "mutable",
											"name": "receiveFromTreasury",
											"nameLocation": "1823:19:10",
											"nodeType": "VariableDeclaration",
											"scope": 1479,
											"src": "1815:27:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1473,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1815:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1476,
											"mutability": "mutable",
											"name": "receiveFromOwneerShip",
											"nameLocation": "1860:21:10",
											"nodeType": "VariableDeclaration",
											"scope": 1479,
											"src": "1852:29:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1475,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1852:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1478,
											"mutability": "mutable",
											"name": "totalStakedAmount",
											"nameLocation": "1899:17:10",
											"nodeType": "VariableDeclaration",
											"scope": 1479,
											"src": "1891:25:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1477,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1891:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserRegistered",
									"nameLocation": "1704:14:10",
									"nodeType": "StructDefinition",
									"scope": 2832,
									"src": "1697:226:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9c361e4e",
									"id": 1481,
									"mutability": "mutable",
									"name": "totalProjects",
									"nameLocation": "1944:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "1929:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1480,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1929:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c7fd5bf0",
									"id": 1485,
									"mutability": "mutable",
									"name": "alreadyAdded",
									"nameLocation": "1995:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "1963:44:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1484,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1482,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1971:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1963:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1483,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1982:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a4f67b8b",
									"id": 1489,
									"mutability": "mutable",
									"name": "totalUsers",
									"nameLocation": "2048:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "2013:45:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1488,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1486,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2021:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2013:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1487,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2032:7:10",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ff3d65d9",
									"id": 1493,
									"mutability": "mutable",
									"name": "tPPercentages",
									"nameLocation": "2099:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "2064:48:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1492,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1490,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2072:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2064:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1491,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2083:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bccbc36c",
									"id": 1498,
									"mutability": "mutable",
									"name": "userRegistered",
									"nameLocation": "2160:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 2832,
									"src": "2118:56:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
										"typeString": "mapping(address => struct PoolContrcat.UserRegistered)"
									},
									"typeName": {
										"id": 1497,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1494,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2126:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2118:34:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
											"typeString": "mapping(address => struct PoolContrcat.UserRegistered)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1496,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1495,
												"name": "UserRegistered",
												"nameLocations": [
													"2137:14:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1479,
												"src": "2137:14:10"
											},
											"referencedDeclaration": 1479,
											"src": "2137:14:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserRegistered_$1479_storage_ptr",
												"typeString": "struct PoolContrcat.UserRegistered"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "a9f166643ec132a11638e74e3c3a78d4ae278fcbf92998240e0e97676f54e404",
									"id": 1502,
									"name": "AddTreasuery",
									"nameLocation": "2187:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"indexed": false,
												"mutability": "mutable",
												"name": "_treasuryPoolAmount",
												"nameLocation": "2208:19:10",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "2200:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2199:29:10"
									},
									"src": "2181:48:10"
								},
								{
									"anonymous": false,
									"eventSelector": "73834e1d1ee73ba659470a3603b888903853d3a3c9fda34e71c093a0e35cab94",
									"id": 1506,
									"name": "AddOwnership",
									"nameLocation": "2240:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"indexed": false,
												"mutability": "mutable",
												"name": "_ownerShipPoolAmount",
												"nameLocation": "2261:20:10",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "2253:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2253:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2252:30:10"
									},
									"src": "2234:49:10"
								},
								{
									"anonymous": false,
									"eventSelector": "a89b69c5958ec1ccf0df0de746a8708f5b6a6b429430129f16f46f44b319c900",
									"id": 1512,
									"name": "AddFunds",
									"nameLocation": "2294:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2311:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "2303:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2303:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"indexed": false,
												"mutability": "mutable",
												"name": "_projectNo",
												"nameLocation": "2328:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "2320:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2320:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:37:10"
									},
									"src": "2288:52:10"
								},
								{
									"anonymous": false,
									"eventSelector": "3b68dc4e210c46d3622293f2b941cdfde795bb6e17286bb289ba05a6a3b5541f",
									"id": 1518,
									"name": "offInterval",
									"nameLocation": "2351:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"indexed": false,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "2371:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "2363:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2363:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"indexed": false,
												"mutability": "mutable",
												"name": "_interval",
												"nameLocation": "2387:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "2379:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2379:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2362:35:10"
									},
									"src": "2345:53:10"
								},
								{
									"anonymous": false,
									"eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
									"id": 1524,
									"name": "Withdraw",
									"nameLocation": "2409:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2427:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "2419:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2419:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdcAmount",
												"nameLocation": "2446:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "2438:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2418:39:10"
									},
									"src": "2403:55:10"
								},
								{
									"anonymous": false,
									"eventSelector": "b5671393c7c6980552e50a31e778921eb17d764c2e98fbf4d44fff524712def9",
									"id": 1530,
									"name": "PercentageChanged",
									"nameLocation": "2469:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"indexed": false,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "2495:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "2487:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"indexed": false,
												"mutability": "mutable",
												"name": "_newPercentage",
												"nameLocation": "2511:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "2503:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2503:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:40:10"
									},
									"src": "2463:64:10"
								},
								{
									"anonymous": false,
									"eventSelector": "75f91f3cecb8c46f20150f60f77a6e1f0de00776627692db82ef1960af84c33a",
									"id": 1536,
									"name": "SetForwarderAddress",
									"nameLocation": "2538:19:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"indexed": false,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "2566:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "2558:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"indexed": false,
												"mutability": "mutable",
												"name": "_s_forwarderAddress",
												"nameLocation": "2582:19:10",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "2574:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2574:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2557:45:10"
									},
									"src": "2532:71:10"
								},
								{
									"anonymous": false,
									"eventSelector": "7a1655bc3160d3413bf1d5235e55be12e01b7e8bc2436a9bff09c3b4fa2421f1",
									"id": 1544,
									"name": "UserBlocked",
									"nameLocation": "2614:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2634:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "2626:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2626:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockUserAddress",
												"nameLocation": "2648:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "2640:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2640:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"indexed": false,
												"mutability": "mutable",
												"name": "blocked",
												"nameLocation": "2671:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "2666:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2666:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:54:10"
									},
									"src": "2608:72:10"
								},
								{
									"anonymous": false,
									"eventSelector": "14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab",
									"id": 1552,
									"name": "StakeTokens",
									"nameLocation": "2691:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2712:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "2704:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"indexed": false,
												"mutability": "mutable",
												"name": "recepient",
												"nameLocation": "2728:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "2720:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2720:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdcAmount",
												"nameLocation": "2746:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "2738:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:54:10"
									},
									"src": "2685:73:10"
								},
								{
									"anonymous": false,
									"eventSelector": "2b5090e035d3026f5448298c9adc68db8bbc1b26a8af5c81b2b2a9fc07ca4a00",
									"id": 1560,
									"name": "SetInterval",
									"nameLocation": "2769:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"indexed": false,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "2789:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "2781:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2781:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"indexed": false,
												"mutability": "mutable",
												"name": "_interval",
												"nameLocation": "2805:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "2797:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"indexed": false,
												"mutability": "mutable",
												"name": "_lastTimeStamp",
												"nameLocation": "2824:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "2816:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2816:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2780:59:10"
									},
									"src": "2763:77:10"
								},
								{
									"anonymous": false,
									"eventSelector": "e1976e16ed8ce8e740235978fbe69b27d5eea683b2e017bb0bd2fabb33294b3f",
									"id": 1568,
									"name": "AddProject",
									"nameLocation": "2851:10:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"indexed": false,
												"mutability": "mutable",
												"name": "projectId",
												"nameLocation": "2870:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "2862:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2862:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"indexed": false,
												"mutability": "mutable",
												"name": "OpPercentage",
												"nameLocation": "2889:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "2881:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2881:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"indexed": false,
												"mutability": "mutable",
												"name": "tpPercentage",
												"nameLocation": "2910:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "2902:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2861:62:10"
									},
									"src": "2845:79:10"
								},
								{
									"anonymous": false,
									"eventSelector": "ee826440768329b0c72f81331212ee31fcdac1ea79a248d24821e40c34e58020",
									"id": 1576,
									"name": "WeeklyTransfered",
									"nameLocation": "2935:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"indexed": false,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "2960:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2952:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"indexed": false,
												"mutability": "mutable",
												"name": "ownerShipPoolAmount",
												"nameLocation": "2976:19:10",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2967:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2967:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"indexed": false,
												"mutability": "mutable",
												"name": "treasuryPoolAmount",
												"nameLocation": "3006:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2997:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:74:10"
									},
									"src": "2929:97:10"
								},
								{
									"errorSelector": "81ed1ae3",
									"id": 1580,
									"name": "wrongValue",
									"nameLocation": "3038:10:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3054:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "3049:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3049:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3048:12:10"
									},
									"src": "3032:29:10"
								},
								{
									"errorSelector": "54593e75",
									"id": 1584,
									"name": "wrongTime",
									"nameLocation": "3072:9:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "3090:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "3082:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3081:14:10"
									},
									"src": "3066:30:10"
								},
								{
									"errorSelector": "6fa5c3c0",
									"id": 1588,
									"name": "userBlocked",
									"nameLocation": "3107:11:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "blocked",
												"nameLocation": "3124:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "3119:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1585,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3119:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3118:14:10"
									},
									"src": "3101:32:10"
								},
								{
									"errorSelector": "f6b79c58",
									"id": 1592,
									"name": "wrongOwner",
									"nameLocation": "3144:10:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3163:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "3155:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3154:15:10"
									},
									"src": "3138:32:10"
								},
								{
									"errorSelector": "2ff47830",
									"id": 1596,
									"name": "wrongAmount",
									"nameLocation": "3181:11:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3201:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "3193:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3193:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3192:16:10"
									},
									"src": "3175:34:10"
								},
								{
									"errorSelector": "d85d3cef",
									"id": 1600,
									"name": "transferFailed",
									"nameLocation": "3220:14:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "transfered",
												"nameLocation": "3240:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "3235:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3235:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3234:17:10"
									},
									"src": "3214:38:10"
								},
								{
									"errorSelector": "31b6e358",
									"id": 1604,
									"name": "notEnoughBalance",
									"nameLocation": "3263:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3288:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "3280:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3280:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:16:10"
									},
									"src": "3257:39:10"
								},
								{
									"errorSelector": "222a50f3",
									"id": 1608,
									"name": "wrongProjectNo",
									"nameLocation": "3307:14:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "projectNO",
												"nameLocation": "3330:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "3322:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3322:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3321:19:10"
									},
									"src": "3301:40:10"
								},
								{
									"errorSelector": "e4cfa94d",
									"id": 1612,
									"name": "wrongAddress",
									"nameLocation": "3352:12:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "wrongAddress",
												"nameLocation": "3373:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3365:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3365:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:22:10"
									},
									"src": "3346:41:10"
								},
								{
									"errorSelector": "cdbc6335",
									"id": 1616,
									"name": "wrongPercentage",
									"nameLocation": "3398:15:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "percentage",
												"nameLocation": "3422:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "3414:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3413:20:10"
									},
									"src": "3392:42:10"
								},
								{
									"errorSelector": "71540007",
									"id": 1620,
									"name": "wrongInterval",
									"nameLocation": "3445:13:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "updateInterval",
												"nameLocation": "3467:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "3459:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3459:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3458:24:10"
									},
									"src": "3439:44:10"
								},
								{
									"body": {
										"id": 1627,
										"nodeType": "Block",
										"src": "3556:39:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1624,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "3566:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3566:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1626,
												"nodeType": "ExpressionStatement",
												"src": "3566:22:10"
											}
										]
									},
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "3489:48:10",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 1628,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3553:2:10"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3556:0:10"
									},
									"scope": 2832,
									"src": "3542:53:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1672,
										"nodeType": "Block",
										"src": "3717:625:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1640,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "3742:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1639,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "3727:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3727:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "3727:28:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1643,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "3765:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3765:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1645,
												"nodeType": "ExpressionStatement",
												"src": "3765:24:10"
											},
											{
												"expression": {
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1646,
														"name": "usdcToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "3800:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$1425",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1648,
																"name": "_usdcAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1632,
																"src": "3819:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1647,
															"name": "IBEP20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "3812:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBEP20_$1425_$",
																"typeString": "type(contract IBEP20)"
															}
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3812:20:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$1425",
															"typeString": "contract IBEP20"
														}
													},
													"src": "3800:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1425",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1651,
												"nodeType": "ExpressionStatement",
												"src": "3800:32:10"
											},
											{
												"expression": {
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1652,
														"name": "tdividentPayoutPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "4040:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35303030",
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4068:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000_by_1",
															"typeString": "int_const 5000"
														},
														"value": "5000"
													},
													"src": "4040:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "4040:32:10"
											},
											{
												"expression": {
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1656,
														"name": "odividentPayoutPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "4094:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37353030",
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4122:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7500_by_1",
															"typeString": "int_const 7500"
														},
														"value": "7500"
													},
													"src": "4094:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "4094:32:10"
											},
											{
												"expression": {
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1660,
														"name": "flowToTreasuryPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "4161:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31353030",
														"id": 1661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4188:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1500_by_1",
															"typeString": "int_const 1500"
														},
														"value": "1500"
													},
													"src": "4161:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1663,
												"nodeType": "ExpressionStatement",
												"src": "4161:31:10"
											},
											{
												"expression": {
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1664,
														"name": "maintainceFeePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "4213:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4239:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "4213:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1667,
												"nodeType": "ExpressionStatement",
												"src": "4213:30:10"
											},
											{
												"expression": {
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1668,
														"name": "multisigAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "4301:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1669,
														"name": "_multisigAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1634,
														"src": "4319:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4301:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1671,
												"nodeType": "ExpressionStatement",
												"src": "4301:34:10"
											}
										]
									},
									"functionSelector": "c0c53b8b",
									"id": 1673,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1637,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1636,
												"name": "initializer",
												"nameLocations": [
													"3698:11:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 321,
												"src": "3698:11:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3698:11:10"
										}
									],
									"name": "initialize",
									"nameLocation": "3610:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "3629:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3621:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3621:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "_usdcAddress",
												"nameLocation": "3650:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3642:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3642:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "_multisigAddress",
												"nameLocation": "3680:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3672:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3672:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3620:77:10"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3717:0:10"
									},
									"scope": 2832,
									"src": "3601:741:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "4419:274:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1680,
														"name": "_tPPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "4441:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4458:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4441:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1688,
												"nodeType": "IfStatement",
												"src": "4438:84:10",
												"trueBody": {
													"id": 1687,
													"nodeType": "Block",
													"src": "4460:62:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1684,
																		"name": "_tPPercentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1675,
																		"src": "4497:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1683,
																	"name": "wrongPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "4481:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4481:30:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1686,
															"nodeType": "RevertStatement",
															"src": "4474:37:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1689,
															"name": "tPPercentages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "4532:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1691,
														"indexExpression": {
															"id": 1690,
															"name": "totalProjects",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "4546:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4532:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1692,
														"name": "_tPPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "4563:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4532:44:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "4532:44:10"
											},
											{
												"expression": {
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4586:15:10",
													"subExpression": {
														"id": 1695,
														"name": "totalProjects",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "4586:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1697,
												"nodeType": "ExpressionStatement",
												"src": "4586:15:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"components": [
																{
																	"id": 1699,
																	"name": "totalProjects",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "4631:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1700,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4630:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130303030",
																		"id": 1701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4648:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1702,
																		"name": "_tPPercentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1675,
																		"src": "4656:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4648:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1704,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4647:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1705,
															"name": "_tPPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "4672:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1698,
														"name": "AddProject",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "4619:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4619:67:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1707,
												"nodeType": "EmitStatement",
												"src": "4614:72:10"
											}
										]
									},
									"functionSelector": "2765df7a",
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1678,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1677,
												"name": "onlyOwner",
												"nameLocations": [
													"4408:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 108,
												"src": "4408:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4408:11:10"
										}
									],
									"name": "addProjects",
									"nameLocation": "4364:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "_tPPercentage",
												"nameLocation": "4384:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "4376:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4376:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4375:23:10"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4419:0:10"
									},
									"scope": 2832,
									"src": "4355:338:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1754,
										"nodeType": "Block",
										"src": "4758:342:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1716,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "4780:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4791:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4780:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1724,
												"nodeType": "IfStatement",
												"src": "4777:68:10",
												"trueBody": {
													"id": 1723,
													"nodeType": "Block",
													"src": "4793:52:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1720,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1711,
																		"src": "4826:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1719,
																	"name": "wrongAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "4814:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4814:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1722,
															"nodeType": "RevertStatement",
															"src": "4807:27:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1725,
														"name": "ownerShipPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "4855:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1726,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "4878:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4855:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1728,
												"nodeType": "ExpressionStatement",
												"src": "4855:30:10"
											},
											{
												"assignments": [
													1730
												],
												"declarations": [
													{
														"constant": false,
														"id": 1730,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4901:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1754,
														"src": "4896:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1729,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4896:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1741,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1733,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4934:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4938:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4934:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1737,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4953:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PoolContrcat_$2832",
																		"typeString": "contract PoolContrcat"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PoolContrcat_$2832",
																		"typeString": "contract PoolContrcat"
																	}
																],
																"id": 1736,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4945:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1735,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4945:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4945:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1739,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "4959:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1731,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "4911:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1425",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4921:12:10",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1424,
														"src": "4911:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4911:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4896:72:10"
											},
											{
												"condition": {
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4981:8:10",
													"subExpression": {
														"id": 1742,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1730,
														"src": "4982:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1749,
												"nodeType": "IfStatement",
												"src": "4978:67:10",
												"trueBody": {
													"id": 1748,
													"nodeType": "Block",
													"src": "4990:55:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1745,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1730,
																		"src": "5026:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1744,
																	"name": "transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1600,
																	"src": "5011:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 1746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5011:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1747,
															"nodeType": "RevertStatement",
															"src": "5004:30:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1751,
															"name": "ownerShipPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "5073:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1750,
														"name": "AddOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "5060:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5060:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1753,
												"nodeType": "EmitStatement",
												"src": "5055:38:10"
											}
										]
									},
									"functionSelector": "78fd078d",
									"id": 1755,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1714,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1713,
												"name": "onlyOwner",
												"nameLocations": [
													"4747:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 108,
												"src": "4747:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4747:11:10"
										}
									],
									"name": "addOwnership",
									"nameLocation": "4708:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4729:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "4721:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4721:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4720:17:10"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4758:0:10"
									},
									"scope": 2832,
									"src": "4699:401:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1800,
										"nodeType": "Block",
										"src": "5169:341:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1762,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1757,
														"src": "5191:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5202:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5191:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1770,
												"nodeType": "IfStatement",
												"src": "5188:68:10",
												"trueBody": {
													"id": 1769,
													"nodeType": "Block",
													"src": "5204:52:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1766,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1757,
																		"src": "5237:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1765,
																	"name": "wrongAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "5225:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5225:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1768,
															"nodeType": "RevertStatement",
															"src": "5218:27:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1771,
														"name": "treasuryPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "5267:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1772,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1757,
														"src": "5289:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5267:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1774,
												"nodeType": "ExpressionStatement",
												"src": "5267:29:10"
											},
											{
												"assignments": [
													1776
												],
												"declarations": [
													{
														"constant": false,
														"id": 1776,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5312:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1800,
														"src": "5307:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1775,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5307:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1787,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1779,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5345:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5349:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5345:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1783,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5364:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PoolContrcat_$2832",
																		"typeString": "contract PoolContrcat"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PoolContrcat_$2832",
																		"typeString": "contract PoolContrcat"
																	}
																],
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5356:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1781,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5356:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5356:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1785,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1757,
															"src": "5370:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1777,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "5322:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1425",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5332:12:10",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1424,
														"src": "5322:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5322:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5307:72:10"
											},
											{
												"condition": {
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5392:8:10",
													"subExpression": {
														"id": 1788,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1776,
														"src": "5393:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1795,
												"nodeType": "IfStatement",
												"src": "5389:67:10",
												"trueBody": {
													"id": 1794,
													"nodeType": "Block",
													"src": "5401:55:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1791,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1776,
																		"src": "5437:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1790,
																	"name": "transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1600,
																	"src": "5422:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5422:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1793,
															"nodeType": "RevertStatement",
															"src": "5415:30:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1797,
															"name": "treasuryPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "5484:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1796,
														"name": "AddTreasuery",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "5471:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5471:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1799,
												"nodeType": "EmitStatement",
												"src": "5466:37:10"
											}
										]
									},
									"functionSelector": "5256dbbf",
									"id": 1801,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1760,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1759,
												"name": "onlyOwner",
												"nameLocations": [
													"5158:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 108,
												"src": "5158:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5158:11:10"
										}
									],
									"name": "addTreasuery",
									"nameLocation": "5119:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5140:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "5132:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5132:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5131:17:10"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5169:0:10"
									},
									"scope": 2832,
									"src": "5110:400:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1891,
										"nodeType": "Block",
										"src": "5564:754:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1806,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "5586:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5597:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5586:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1814,
												"nodeType": "IfStatement",
												"src": "5583:68:10",
												"trueBody": {
													"id": 1813,
													"nodeType": "Block",
													"src": "5599:52:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1810,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "5632:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1809,
																	"name": "wrongAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "5620:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5620:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1812,
															"nodeType": "RevertStatement",
															"src": "5613:27:10"
														}
													]
												}
											},
											{
												"condition": {
													"expression": {
														"baseExpression": {
															"id": 1815,
															"name": "userRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "5672:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
															}
														},
														"id": 1818,
														"indexExpression": {
															"expression": {
																"id": 1816,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5687:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5691:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5687:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5672:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
															"typeString": "struct PoolContrcat.UserRegistered storage ref"
														}
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5699:7:10",
													"memberName": "blocked",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1468,
													"src": "5672:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1829,
												"nodeType": "IfStatement",
												"src": "5669:117:10",
												"trueBody": {
													"id": 1828,
													"nodeType": "Block",
													"src": "5707:79:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1821,
																				"name": "userRegistered",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1498,
																				"src": "5740:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																					"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																				}
																			},
																			"id": 1824,
																			"indexExpression": {
																				"expression": {
																					"id": 1822,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "5755:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1823,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5759:6:10",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "5755:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5740:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
																				"typeString": "struct PoolContrcat.UserRegistered storage ref"
																			}
																		},
																		"id": 1825,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5767:7:10",
																		"memberName": "blocked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1468,
																		"src": "5740:34:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1820,
																	"name": "userBlocked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "5728:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5728:47:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1827,
															"nodeType": "RevertStatement",
															"src": "5721:54:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1830,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "5796:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 1833,
															"indexExpression": {
																"expression": {
																	"id": 1831,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5811:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5815:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5811:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5796:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 1834,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5823:17:10",
														"memberName": "totalStakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1478,
														"src": "5796:44:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1835,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "5844:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5796:55:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "5796:55:10"
											},
											{
												"condition": {
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5872:25:10",
													"subExpression": {
														"baseExpression": {
															"id": 1838,
															"name": "alreadyAdded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "5873:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1841,
														"indexExpression": {
															"expression": {
																"id": 1839,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5886:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5890:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5886:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5873:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1861,
												"nodeType": "IfStatement",
												"src": "5869:171:10",
												"trueBody": {
													"id": 1860,
													"nodeType": "Block",
													"src": "5898:142:10",
													"statements": [
														{
															"expression": {
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1843,
																		"name": "totalUsers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1489,
																		"src": "5925:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 1845,
																	"indexExpression": {
																		"id": 1844,
																		"name": "noOfUsers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "5936:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5925:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1846,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5949:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5953:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5949:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5925:34:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1849,
															"nodeType": "ExpressionStatement",
															"src": "5925:34:10"
														},
														{
															"expression": {
																"id": 1855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1850,
																		"name": "alreadyAdded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1485,
																		"src": "5973:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1853,
																	"indexExpression": {
																		"expression": {
																			"id": 1851,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5986:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5990:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5986:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5973:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6000:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5973:31:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1856,
															"nodeType": "ExpressionStatement",
															"src": "5973:31:10"
														},
														{
															"expression": {
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "6018:11:10",
																"subExpression": {
																	"id": 1857,
																	"name": "noOfUsers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "6018:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1859,
															"nodeType": "ExpressionStatement",
															"src": "6018:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1862,
														"name": "totalStakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "6050:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1863,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "6071:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6050:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1865,
												"nodeType": "ExpressionStatement",
												"src": "6050:28:10"
											},
											{
												"assignments": [
													1867
												],
												"declarations": [
													{
														"constant": false,
														"id": 1867,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6094:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1891,
														"src": "6089:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1866,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6089:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1875,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1870,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6126:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6130:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6126:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1872,
															"name": "multisigAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "6137:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1873,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "6153:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1868,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "6103:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1425",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6113:12:10",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1424,
														"src": "6103:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6103:58:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6089:72:10"
											},
											{
												"condition": {
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6183:8:10",
													"subExpression": {
														"id": 1876,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "6184:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1883,
												"nodeType": "IfStatement",
												"src": "6180:67:10",
												"trueBody": {
													"id": 1882,
													"nodeType": "Block",
													"src": "6192:55:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1879,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1867,
																		"src": "6228:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1878,
																	"name": "transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1600,
																	"src": "6213:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 1880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6213:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1881,
															"nodeType": "RevertStatement",
															"src": "6206:30:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1885,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6274:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6278:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6274:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1887,
															"name": "multisigAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "6285:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1888,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "6302:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1884,
														"name": "StakeTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "6262:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6262:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1890,
												"nodeType": "EmitStatement",
												"src": "6257:53:10"
											}
										]
									},
									"functionSelector": "7547c7a3",
									"id": 1892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeTokens",
									"nameLocation": "5525:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5545:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "5537:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5537:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5536:17:10"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5564:0:10"
									},
									"scope": 2832,
									"src": "5516:802:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1968,
										"nodeType": "Block",
										"src": "6374:628:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1897,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "6396:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6407:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6396:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1905,
												"nodeType": "IfStatement",
												"src": "6393:68:10",
												"trueBody": {
													"id": 1904,
													"nodeType": "Block",
													"src": "6409:52:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1901,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1894,
																		"src": "6442:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1900,
																	"name": "wrongAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "6430:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6430:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1903,
															"nodeType": "RevertStatement",
															"src": "6423:27:10"
														}
													]
												}
											},
											{
												"condition": {
													"expression": {
														"baseExpression": {
															"id": 1906,
															"name": "userRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "6481:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
															}
														},
														"id": 1909,
														"indexExpression": {
															"expression": {
																"id": 1907,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6496:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6500:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6496:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6481:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
															"typeString": "struct PoolContrcat.UserRegistered storage ref"
														}
													},
													"id": 1910,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6508:7:10",
													"memberName": "blocked",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1468,
													"src": "6481:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1920,
												"nodeType": "IfStatement",
												"src": "6478:117:10",
												"trueBody": {
													"id": 1919,
													"nodeType": "Block",
													"src": "6516:79:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1912,
																				"name": "userRegistered",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1498,
																				"src": "6549:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																					"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																				}
																			},
																			"id": 1915,
																			"indexExpression": {
																				"expression": {
																					"id": 1913,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "6564:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6568:6:10",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "6564:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6549:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
																				"typeString": "struct PoolContrcat.UserRegistered storage ref"
																			}
																		},
																		"id": 1916,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6576:7:10",
																		"memberName": "blocked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1468,
																		"src": "6549:34:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1911,
																	"name": "userBlocked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "6537:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 1917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6537:47:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1918,
															"nodeType": "RevertStatement",
															"src": "6530:54:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1921,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "6608:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 1924,
															"indexExpression": {
																"expression": {
																	"id": 1922,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6623:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6627:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6623:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6608:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 1925,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6635:14:10",
														"memberName": "receivedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1470,
														"src": "6608:41:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1926,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "6653:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6608:52:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1933,
												"nodeType": "IfStatement",
												"src": "6605:113:10",
												"trueBody": {
													"id": 1932,
													"nodeType": "Block",
													"src": "6661:57:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1929,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1894,
																		"src": "6699:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1928,
																	"name": "notEnoughBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1604,
																	"src": "6682:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6682:25:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1931,
															"nodeType": "RevertStatement",
															"src": "6675:32:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1934,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "6728:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 1937,
															"indexExpression": {
																"expression": {
																	"id": 1935,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6743:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6747:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6743:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6728:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 1938,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6755:14:10",
														"memberName": "receivedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1470,
														"src": "6728:41:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1939,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "6773:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6728:52:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1941,
												"nodeType": "ExpressionStatement",
												"src": "6728:52:10"
											},
											{
												"expression": {
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1942,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "6790:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 1945,
															"indexExpression": {
																"expression": {
																	"id": 1943,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6805:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6809:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6805:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6790:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 1946,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6817:17:10",
														"memberName": "totalStakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1478,
														"src": "6790:44:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1947,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "6838:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6790:55:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1949,
												"nodeType": "ExpressionStatement",
												"src": "6790:55:10"
											},
											{
												"expression": {
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1950,
														"name": "ownerShipPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "6864:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1951,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "6887:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6864:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1953,
												"nodeType": "ExpressionStatement",
												"src": "6864:30:10"
											},
											{
												"expression": {
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1954,
														"name": "totalStakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "6904:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1955,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "6925:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6904:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "6904:28:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1959,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6960:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6964:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6960:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1963,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6979:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PoolContrcat_$2832",
																		"typeString": "contract PoolContrcat"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PoolContrcat_$2832",
																		"typeString": "contract PoolContrcat"
																	}
																],
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6971:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1961,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6971:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6971:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1965,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "6986:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1958,
														"name": "StakeTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "6948:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6948:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1967,
												"nodeType": "EmitStatement",
												"src": "6943:51:10"
											}
										]
									},
									"functionSelector": "7ffe4d93",
									"id": 1969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reStakeTokens",
									"nameLocation": "6333:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6355:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "6347:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6347:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6346:17:10"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6374:0:10"
									},
									"scope": 2832,
									"src": "6324:678:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2027,
										"nodeType": "Block",
										"src": "7076:475:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1976,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1971,
														"src": "7090:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7101:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7090:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1984,
												"nodeType": "IfStatement",
												"src": "7087:68:10",
												"trueBody": {
													"id": 1983,
													"nodeType": "Block",
													"src": "7103:52:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1980,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1971,
																		"src": "7136:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1979,
																	"name": "wrongAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "7124:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7124:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1982,
															"nodeType": "RevertStatement",
															"src": "7117:27:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1985,
														"name": "_projectNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1973,
														"src": "7168:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1986,
														"name": "totalProjects",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "7181:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7168:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1993,
												"nodeType": "IfStatement",
												"src": "7165:88:10",
												"trueBody": {
													"id": 1992,
													"nodeType": "Block",
													"src": "7195:58:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1989,
																		"name": "_projectNo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1973,
																		"src": "7231:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1988,
																	"name": "wrongProjectNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1608,
																	"src": "7216:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7216:26:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1991,
															"nodeType": "RevertStatement",
															"src": "7209:33:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1995,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "7289:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1996,
																"name": "tPPercentages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "7298:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1998,
															"indexExpression": {
																"id": 1997,
																"name": "_projectNo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "7312:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7298:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1994,
														"name": "calculateFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2064,
														"src": "7275:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7275:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2000,
												"nodeType": "ExpressionStatement",
												"src": "7275:49:10"
											},
											{
												"assignments": [
													2002
												],
												"declarations": [
													{
														"constant": false,
														"id": 2002,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7348:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2027,
														"src": "7343:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2001,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7343:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2013,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2005,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7381:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7385:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7381:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2009,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7400:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PoolContrcat_$2832",
																		"typeString": "contract PoolContrcat"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PoolContrcat_$2832",
																		"typeString": "contract PoolContrcat"
																	}
																],
																"id": 2008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7392:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2007,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7392:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7392:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2011,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "7406:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2003,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "7358:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1425",
																"typeString": "contract IBEP20"
															}
														},
														"id": 2004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7368:12:10",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1424,
														"src": "7358:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7358:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7343:72:10"
											},
											{
												"condition": {
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7428:8:10",
													"subExpression": {
														"id": 2014,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2002,
														"src": "7429:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2021,
												"nodeType": "IfStatement",
												"src": "7425:67:10",
												"trueBody": {
													"id": 2020,
													"nodeType": "Block",
													"src": "7437:55:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2017,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2002,
																		"src": "7473:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2016,
																	"name": "transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1600,
																	"src": "7458:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7458:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2019,
															"nodeType": "RevertStatement",
															"src": "7451:30:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2023,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "7516:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2024,
															"name": "_projectNo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "7524:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2022,
														"name": "AddFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "7507:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7507:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2026,
												"nodeType": "EmitStatement",
												"src": "7502:33:10"
											}
										]
									},
									"functionSelector": "85f45250",
									"id": 2028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addFunds",
									"nameLocation": "7021:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7038:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "7030:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7030:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "_projectNo",
												"nameLocation": "7055:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "7047:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7047:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7029:37:10"
									},
									"returnParameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7076:0:10"
									},
									"scope": 2832,
									"src": "7012:539:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2063,
										"nodeType": "Block",
										"src": "7629:308:10",
										"statements": [
											{
												"assignments": [
													2036
												],
												"declarations": [
													{
														"constant": false,
														"id": 2036,
														"mutability": "mutable",
														"name": "oPPercentage",
														"nameLocation": "7655:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 2063,
														"src": "7647:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2035,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7647:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2040,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130303030",
														"id": 2037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7670:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2038,
														"name": "_tPPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2032,
														"src": "7678:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7670:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7647:44:10"
											},
											{
												"assignments": [
													2042
												],
												"declarations": [
													{
														"constant": false,
														"id": 2042,
														"mutability": "mutable",
														"name": "ownerShipFee",
														"nameLocation": "7709:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 2063,
														"src": "7701:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2041,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7701:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2047,
												"initialValue": {
													"arguments": [
														{
															"id": 2044,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2030,
															"src": "7744:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2045,
															"name": "oPPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "7753:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2043,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2510,
														"src": "7724:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7724:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7701:65:10"
											},
											{
												"assignments": [
													2049
												],
												"declarations": [
													{
														"constant": false,
														"id": 2049,
														"mutability": "mutable",
														"name": "treasuryFee",
														"nameLocation": "7784:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 2063,
														"src": "7776:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2048,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7776:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2054,
												"initialValue": {
													"arguments": [
														{
															"id": 2051,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2030,
															"src": "7818:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2052,
															"name": "_tPPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "7827:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2050,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2510,
														"src": "7798:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7798:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7776:65:10"
											},
											{
												"expression": {
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2055,
														"name": "ownerShipPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "7852:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2056,
														"name": "ownerShipFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2042,
														"src": "7875:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7852:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2058,
												"nodeType": "ExpressionStatement",
												"src": "7852:35:10"
											},
											{
												"expression": {
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2059,
														"name": "treasuryPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "7897:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2060,
														"name": "treasuryFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2049,
														"src": "7919:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7897:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2062,
												"nodeType": "ExpressionStatement",
												"src": "7897:33:10"
											}
										]
									},
									"id": 2064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateFees",
									"nameLocation": "7567:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7589:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "7581:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7581:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "_tPPercentage",
												"nameLocation": "7606:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "7598:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7598:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7580:40:10"
									},
									"returnParameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7629:0:10"
									},
									"scope": 2832,
									"src": "7558:379:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2193,
										"nodeType": "Block",
										"src": "7979:1538:10",
										"statements": [
											{
												"assignments": [
													2068,
													2070,
													2072
												],
												"declarations": [
													{
														"constant": false,
														"id": 2068,
														"mutability": "mutable",
														"name": "remainFiftyOPool",
														"nameLocation": "8169:16:10",
														"nodeType": "VariableDeclaration",
														"scope": 2193,
														"src": "8161:24:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2067,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8161:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2070,
														"mutability": "mutable",
														"name": "dividentPayoutOPoolAmount",
														"nameLocation": "8194:25:10",
														"nodeType": "VariableDeclaration",
														"scope": 2193,
														"src": "8186:33:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2069,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8186:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2072,
														"mutability": "mutable",
														"name": "perPersonFromTPool",
														"nameLocation": "8229:18:10",
														"nodeType": "VariableDeclaration",
														"scope": 2193,
														"src": "8221:26:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2071,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8221:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2075,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2073,
														"name": "perPoolCalculation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2284,
														"src": "8252:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function () returns (uint256,uint256,uint256)"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8252:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8159:113:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2077,
																	"name": "ownerShipPoolAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "8299:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8321:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8299:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2080,
																	"name": "treasuryPoolAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1438,
																	"src": "8326:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8347:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8326:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8299:49:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420656e6f75676820616d6f756e74",
															"id": 2084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8350:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2896206a6aa8d5667f893f8cfc5e436c46f1afa2bf5470d00747369cbc513866",
																"typeString": "literal_string \"not enough amount\""
															},
															"value": "not enough amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2896206a6aa8d5667f893f8cfc5e436c46f1afa2bf5470d00747369cbc513866",
																"typeString": "literal_string \"not enough amount\""
															}
														],
														"id": 2076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8291:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8291:79:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2086,
												"nodeType": "ExpressionStatement",
												"src": "8291:79:10"
											},
											{
												"assignments": [
													2088
												],
												"declarations": [
													{
														"constant": false,
														"id": 2088,
														"mutability": "mutable",
														"name": "maxlimit",
														"nameLocation": "8396:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 2193,
														"src": "8388:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2087,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8388:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2089,
												"nodeType": "VariableDeclarationStatement",
												"src": "8388:16:10"
											},
											{
												"body": {
													"id": 2184,
													"nodeType": "Block",
													"src": "8453:972:10",
													"statements": [
														{
															"condition": {
																"id": 2106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "8471:38:10",
																"subExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2100,
																			"name": "userRegistered",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "8472:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																				"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																			}
																		},
																		"id": 2104,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2101,
																				"name": "totalUsers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1489,
																				"src": "8487:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																					"typeString": "mapping(uint256 => address)"
																				}
																			},
																			"id": 2103,
																			"indexExpression": {
																				"id": 2102,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2091,
																				"src": "8498:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8487:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8472:29:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
																			"typeString": "struct PoolContrcat.UserRegistered storage ref"
																		}
																	},
																	"id": 2105,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8502:7:10",
																	"memberName": "blocked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1468,
																	"src": "8472:37:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2183,
															"nodeType": "IfStatement",
															"src": "8468:934:10",
															"trueBody": {
																"id": 2182,
																"nodeType": "Block",
																"src": "8510:892:10",
																"statements": [
																	{
																		"assignments": [
																			2108
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2108,
																				"mutability": "mutable",
																				"name": "eachSharePercentage",
																				"nameLocation": "8537:19:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 2182,
																				"src": "8529:27:10",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2107,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "8529:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2122,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2117,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 2109,
																									"name": "userRegistered",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1498,
																									"src": "8560:14:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																										"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																									}
																								},
																								"id": 2113,
																								"indexExpression": {
																									"baseExpression": {
																										"id": 2110,
																										"name": "totalUsers",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1489,
																										"src": "8575:10:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																											"typeString": "mapping(uint256 => address)"
																										}
																									},
																									"id": 2112,
																									"indexExpression": {
																										"id": 2111,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2091,
																										"src": "8586:1:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "8575:13:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "8560:29:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
																									"typeString": "struct PoolContrcat.UserRegistered storage ref"
																								}
																							},
																							"id": 2114,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8590:17:10",
																							"memberName": "totalStakedAmount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1478,
																							"src": "8560:47:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"components": [
																								{
																									"hexValue": "3130303030",
																									"id": 2115,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "8611:5:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10000_by_1",
																										"typeString": "int_const 10000"
																									},
																									"value": "10000"
																								}
																							],
																							"id": 2116,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "8610:7:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10000_by_1",
																								"typeString": "int_const 10000"
																							}
																						},
																						"src": "8560:57:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2118,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "8559:59:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"components": [
																					{
																						"id": 2119,
																						"name": "totalStakedAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1442,
																						"src": "8622:17:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2120,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "8621:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8559:81:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "8529:111:10"
																	},
																	{
																		"assignments": [
																			2124
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2124,
																				"mutability": "mutable",
																				"name": "eachSendAmount",
																				"nameLocation": "8683:14:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 2182,
																				"src": "8675:22:10",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2123,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "8675:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2129,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 2126,
																					"name": "dividentPayoutOPoolAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2070,
																					"src": "8720:25:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2127,
																					"name": "eachSharePercentage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2108,
																					"src": "8747:19:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2125,
																				"name": "calculatePercentage",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2510,
																				"src": "8700:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8700:67:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "8675:92:10"
																	},
																	{
																		"expression": {
																			"id": 2132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2130,
																				"name": "ownerShipPoolAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1440,
																				"src": "8785:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 2131,
																				"name": "eachSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2124,
																				"src": "8808:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8785:37:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2133,
																		"nodeType": "ExpressionStatement",
																		"src": "8785:37:10"
																	},
																	{
																		"expression": {
																			"id": 2136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2134,
																				"name": "maxlimit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2088,
																				"src": "8865:8:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2135,
																				"name": "eachSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2124,
																				"src": "8877:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8865:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2137,
																		"nodeType": "ExpressionStatement",
																		"src": "8865:26:10"
																	},
																	{
																		"expression": {
																			"id": 2140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2138,
																				"name": "treasuryPoolAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1438,
																				"src": "8909:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 2139,
																				"name": "perPersonFromTPool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2072,
																				"src": "8931:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8909:40:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2141,
																		"nodeType": "ExpressionStatement",
																		"src": "8909:40:10"
																	},
																	{
																		"expression": {
																			"id": 2149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 2142,
																						"name": "userRegistered",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1498,
																						"src": "8968:14:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																							"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																						}
																					},
																					"id": 2146,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 2143,
																							"name": "totalUsers",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1489,
																							"src": "8983:10:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																								"typeString": "mapping(uint256 => address)"
																							}
																						},
																						"id": 2145,
																						"indexExpression": {
																							"id": 2144,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2091,
																							"src": "8994:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "8983:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8968:29:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
																						"typeString": "struct PoolContrcat.UserRegistered storage ref"
																					}
																				},
																				"id": 2147,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "8998:19:10",
																				"memberName": "receiveFromTreasury",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1474,
																				"src": "8968:49:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2148,
																				"name": "perPersonFromTPool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2072,
																				"src": "9020:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8968:70:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2150,
																		"nodeType": "ExpressionStatement",
																		"src": "8968:70:10"
																	},
																	{
																		"expression": {
																			"id": 2158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 2151,
																						"name": "userRegistered",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1498,
																						"src": "9056:14:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																							"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																						}
																					},
																					"id": 2155,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 2152,
																							"name": "totalUsers",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1489,
																							"src": "9071:10:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																								"typeString": "mapping(uint256 => address)"
																							}
																						},
																						"id": 2154,
																						"indexExpression": {
																							"id": 2153,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2091,
																							"src": "9082:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "9071:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9056:29:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
																						"typeString": "struct PoolContrcat.UserRegistered storage ref"
																					}
																				},
																				"id": 2156,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "9086:21:10",
																				"memberName": "receiveFromOwneerShip",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1476,
																				"src": "9056:51:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2157,
																				"name": "eachSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2124,
																				"src": "9110:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9056:68:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2159,
																		"nodeType": "ExpressionStatement",
																		"src": "9056:68:10"
																	},
																	{
																		"assignments": [
																			2161
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2161,
																				"mutability": "mutable",
																				"name": "totalSendAmount",
																				"nameLocation": "9167:15:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 2182,
																				"src": "9159:23:10",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2160,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9159:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2165,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2162,
																				"name": "eachSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2124,
																				"src": "9185:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 2163,
																				"name": "perPersonFromTPool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2072,
																				"src": "9202:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9185:35:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "9159:61:10"
																	},
																	{
																		"expression": {
																			"id": 2173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 2166,
																						"name": "userRegistered",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1498,
																						"src": "9238:14:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																							"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																						}
																					},
																					"id": 2170,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 2167,
																							"name": "totalUsers",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1489,
																							"src": "9253:10:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																								"typeString": "mapping(uint256 => address)"
																							}
																						},
																						"id": 2169,
																						"indexExpression": {
																							"id": 2168,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2091,
																							"src": "9264:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "9253:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9238:29:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
																						"typeString": "struct PoolContrcat.UserRegistered storage ref"
																					}
																				},
																				"id": 2171,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "9268:14:10",
																				"memberName": "receivedAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1470,
																				"src": "9238:44:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2172,
																				"name": "totalSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2161,
																				"src": "9286:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9238:63:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2174,
																		"nodeType": "ExpressionStatement",
																		"src": "9238:63:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2178,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2176,
																						"name": "maxlimit",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2088,
																						"src": "9328:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 2177,
																						"name": "remainFiftyOPool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2068,
																						"src": "9340:16:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9328:28:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416d6f756e742069732067726561746572207468656e20353025",
																					"id": 2179,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9358:28:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_daaf22ee48ba14ce5532421d554d114832ad11cacc0a90889b6df539cd8418d7",
																						"typeString": "literal_string \"Amount is greater then 50%\""
																					},
																					"value": "Amount is greater then 50%"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_daaf22ee48ba14ce5532421d554d114832ad11cacc0a90889b6df539cd8418d7",
																						"typeString": "literal_string \"Amount is greater then 50%\""
																					}
																				],
																				"id": 2175,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "9320:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9320:67:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2181,
																		"nodeType": "ExpressionStatement",
																		"src": "9320:67:10"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2094,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2091,
														"src": "8434:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2095,
														"name": "noOfUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "8438:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8434:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2185,
												"initializationExpression": {
													"assignments": [
														2091
													],
													"declarations": [
														{
															"constant": false,
															"id": 2091,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8427:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2185,
															"src": "8419:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2090,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8419:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2093,
													"initialValue": {
														"hexValue": "30",
														"id": 2092,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8431:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8419:13:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8449:3:10",
														"subExpression": {
															"id": 2097,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2091,
															"src": "8449:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2099,
													"nodeType": "ExpressionStatement",
													"src": "8449:3:10"
												},
												"nodeType": "ForStatement",
												"src": "8415:1010:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2187,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9457:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9461:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9457:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2189,
															"name": "ownerShipPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "9469:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2190,
															"name": "treasuryPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "9490:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2186,
														"name": "WeeklyTransfered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1576,
														"src": "9440:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9440:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2192,
												"nodeType": "EmitStatement",
												"src": "9435:74:10"
											}
										]
									},
									"functionSelector": "e9c68e2c",
									"id": 2194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "weeklyTransfer",
									"nameLocation": "7954:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7968:2:10"
									},
									"returnParameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7979:0:10"
									},
									"scope": 2832,
									"src": "7945:1572:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2283,
										"nodeType": "Block",
										"src": "9600:1080:10",
										"statements": [
											{
												"assignments": [
													2204
												],
												"declarations": [
													{
														"constant": false,
														"id": 2204,
														"mutability": "mutable",
														"name": "remainFiftyOPool",
														"nameLocation": "9628:16:10",
														"nodeType": "VariableDeclaration",
														"scope": 2283,
														"src": "9620:24:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2203,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9620:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2209,
												"initialValue": {
													"arguments": [
														{
															"id": 2206,
															"name": "ownerShipPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "9667:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "35303030",
															"id": 2207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9688:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5000_by_1",
																"typeString": "int_const 5000"
															},
															"value": "5000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_5000_by_1",
																"typeString": "int_const 5000"
															}
														],
														"id": 2205,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2510,
														"src": "9647:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9647:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9620:73:10"
											},
											{
												"assignments": [
													2211
												],
												"declarations": [
													{
														"constant": false,
														"id": 2211,
														"mutability": "mutable",
														"name": "dividentPayoutOPoolAmount",
														"nameLocation": "9712:25:10",
														"nodeType": "VariableDeclaration",
														"scope": 2283,
														"src": "9704:33:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2210,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9704:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2216,
												"initialValue": {
													"arguments": [
														{
															"id": 2213,
															"name": "remainFiftyOPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2204,
															"src": "9760:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2214,
															"name": "odividentPayoutPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "9778:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2212,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2510,
														"src": "9740:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9740:64:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9704:100:10"
											},
											{
												"assignments": [
													2218
												],
												"declarations": [
													{
														"constant": false,
														"id": 2218,
														"mutability": "mutable",
														"name": "fifteenPercenntToTPoolAmount",
														"nameLocation": "9822:28:10",
														"nodeType": "VariableDeclaration",
														"scope": 2283,
														"src": "9814:36:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2217,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9814:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2223,
												"initialValue": {
													"arguments": [
														{
															"id": 2220,
															"name": "remainFiftyOPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2204,
															"src": "9873:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2221,
															"name": "flowToTreasuryPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "9891:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2219,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2510,
														"src": "9853:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9853:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9814:102:10"
											},
											{
												"assignments": [
													2225
												],
												"declarations": [
													{
														"constant": false,
														"id": 2225,
														"mutability": "mutable",
														"name": "tenPercenntToMaintenceAmount",
														"nameLocation": "9934:28:10",
														"nodeType": "VariableDeclaration",
														"scope": 2283,
														"src": "9926:36:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2224,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9926:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2230,
												"initialValue": {
													"arguments": [
														{
															"id": 2227,
															"name": "remainFiftyOPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2204,
															"src": "9985:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2228,
															"name": "maintainceFeePercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "10003:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2226,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2510,
														"src": "9965:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9965:62:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9926:101:10"
											},
											{
												"assignments": [
													2232
												],
												"declarations": [
													{
														"constant": false,
														"id": 2232,
														"mutability": "mutable",
														"name": "remainFiftyTPoolAmount",
														"nameLocation": "10045:22:10",
														"nodeType": "VariableDeclaration",
														"scope": 2283,
														"src": "10037:30:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2231,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10037:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2237,
												"initialValue": {
													"arguments": [
														{
															"id": 2234,
															"name": "treasuryPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "10090:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2235,
															"name": "tdividentPayoutPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "10110:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2233,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2510,
														"src": "10070:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10070:66:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10037:99:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2239,
																"name": "noOfUsers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1452,
																"src": "10155:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10167:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10155:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f20757365727321",
															"id": 2242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10170:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1476a1cda5feb6ab53a37c2c7223dd9dbe68eef7367c234c0265c2a3fba3931a",
																"typeString": "literal_string \"no users!\""
															},
															"value": "no users!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1476a1cda5feb6ab53a37c2c7223dd9dbe68eef7367c234c0265c2a3fba3931a",
																"typeString": "literal_string \"no users!\""
															}
														],
														"id": 2238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10147:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10147:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2244,
												"nodeType": "ExpressionStatement",
												"src": "10147:35:10"
											},
											{
												"assignments": [
													2246
												],
												"declarations": [
													{
														"constant": false,
														"id": 2246,
														"mutability": "mutable",
														"name": "perPersonFromTPool",
														"nameLocation": "10209:18:10",
														"nodeType": "VariableDeclaration",
														"scope": 2283,
														"src": "10201:26:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2245,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10201:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2250,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2247,
														"name": "remainFiftyTPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2232,
														"src": "10230:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2248,
														"name": "noOfUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "10253:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10230:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10201:61:10"
											},
											{
												"expression": {
													"id": 2256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2251,
														"name": "ownerShipPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "10281:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2252,
																	"name": "fifteenPercenntToTPoolAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2218,
																	"src": "10305:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2253,
																	"name": "tenPercenntToMaintenceAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2225,
																	"src": "10336:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10305:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2255,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10304:61:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10281:84:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2257,
												"nodeType": "ExpressionStatement",
												"src": "10281:84:10"
											},
											{
												"expression": {
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2258,
														"name": "treasuryPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "10375:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2259,
														"name": "fifteenPercenntToTPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2218,
														"src": "10397:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10375:50:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2261,
												"nodeType": "ExpressionStatement",
												"src": "10375:50:10"
											},
											{
												"assignments": [
													2263
												],
												"declarations": [
													{
														"constant": false,
														"id": 2263,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10441:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2283,
														"src": "10436:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2262,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10436:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2269,
												"initialValue": {
													"arguments": [
														{
															"id": 2266,
															"name": "multisigAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "10470:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2267,
															"name": "tenPercenntToMaintenceAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "10487:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2264,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "10451:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1425",
																"typeString": "contract IBEP20"
															}
														},
														"id": 2265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10461:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1404,
														"src": "10451:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10451:65:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10436:80:10"
											},
											{
												"condition": {
													"id": 2271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10529:8:10",
													"subExpression": {
														"id": 2270,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2263,
														"src": "10530:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2277,
												"nodeType": "IfStatement",
												"src": "10526:67:10",
												"trueBody": {
													"id": 2276,
													"nodeType": "Block",
													"src": "10538:55:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2273,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2263,
																		"src": "10574:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2272,
																	"name": "transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1600,
																	"src": "10559:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10559:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2275,
															"nodeType": "RevertStatement",
															"src": "10552:30:10"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2278,
															"name": "remainFiftyOPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2204,
															"src": "10611:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2279,
															"name": "dividentPayoutOPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "10628:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2280,
															"name": "perPersonFromTPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2246,
															"src": "10654:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2281,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10610:63:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 2202,
												"id": 2282,
												"nodeType": "Return",
												"src": "10603:70:10"
											}
										]
									},
									"id": 2284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "perPoolCalculation",
									"nameLocation": "9538:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9556:2:10"
									},
									"returnParameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "9575:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9575:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "9584:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9584:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "9592:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9592:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9574:26:10"
									},
									"scope": 2832,
									"src": "9529:1151:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										11
									],
									"body": {
										"id": 2311,
										"nodeType": "Block",
										"src": "10790:128:10",
										"statements": [
											{
												"assignments": [
													2295
												],
												"declarations": [
													{
														"constant": false,
														"id": 2295,
														"mutability": "mutable",
														"name": "needsUpkeep",
														"nameLocation": "10812:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 2311,
														"src": "10807:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2294,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10807:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2303,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2296,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "10827:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10833:9:10",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "10827:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2298,
																	"name": "lastTimeStamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "10845:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10827:31:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2300,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10826:33:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2301,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "10862:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10826:44:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10807:63:10"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2304,
															"name": "needsUpkeep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2295,
															"src": "10888:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "",
																	"id": 2307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10907:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10901:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2305,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "10901:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10901:9:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"id": 2309,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10887:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"functionReturnParameters": 2293,
												"id": 2310,
												"nodeType": "Return",
												"src": "10880:31:10"
											}
										]
									},
									"functionSelector": "6e04ff0d",
									"id": 2312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "10695:11:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10746:8:10"
									},
									"parameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "10707:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2285,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10707:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10706:30:10"
									},
									"returnParameters": {
										"id": 2293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "10770:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10770:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "10776:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2291,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10776:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10769:20:10"
									},
									"scope": 2832,
									"src": "10686:232:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										17
									],
									"body": {
										"id": 2374,
										"nodeType": "Block",
										"src": "10989:716:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2318,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "11029:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11033:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "11029:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2320,
																"name": "s_forwarderAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "11043:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11029:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973206164647265737320646f6573206e6f742068617665207065726d697373696f6e20746f2063616c6c20706572666f726d55706b656570",
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11075:61:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f",
																"typeString": "literal_string \"This address does not have permission to call performUpkeep\""
															},
															"value": "This address does not have permission to call performUpkeep"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f",
																"typeString": "literal_string \"This address does not have permission to call performUpkeep\""
															}
														],
														"id": 2317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11008:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11008:138:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2324,
												"nodeType": "ExpressionStatement",
												"src": "11008:138:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2325,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "11168:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11180:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11168:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2333,
												"nodeType": "IfStatement",
												"src": "11164:73:10",
												"trueBody": {
													"id": 2332,
													"nodeType": "Block",
													"src": "11182:55:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2329,
																		"name": "interval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1460,
																		"src": "11217:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2328,
																	"name": "wrongInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1620,
																	"src": "11203:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11203:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2331,
															"nodeType": "RevertStatement",
															"src": "11196:30:10"
														}
													]
												}
											},
											{
												"condition": {
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11258:10:10",
													"subExpression": {
														"id": 2334,
														"name": "checkOnce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "11259:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2364,
													"nodeType": "Block",
													"src": "11520:98:10",
													"statements": [
														{
															"expression": {
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2356,
																	"name": "lastTimeStamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "11546:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2357,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "11562:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11568:9:10",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "11562:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11546:31:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2360,
															"nodeType": "ExpressionStatement",
															"src": "11546:31:10"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2361,
																	"name": "weeklyTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2194,
																	"src": "11591:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11591:16:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2363,
															"nodeType": "ExpressionStatement",
															"src": "11591:16:10"
														}
													]
												},
												"id": 2365,
												"nodeType": "IfStatement",
												"src": "11255:363:10",
												"trueBody": {
													"id": 2355,
													"nodeType": "Block",
													"src": "11269:238:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2336,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "11287:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11293:9:10",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "11287:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 2338,
																	"name": "startingTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1462,
																	"src": "11306:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11287:31:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2353,
																"nodeType": "Block",
																"src": "11434:63:10",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2350,
																					"name": "startingTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1462,
																					"src": "11469:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2349,
																				"name": "wrongTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1584,
																				"src": "11459:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 2351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11459:23:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2352,
																		"nodeType": "RevertStatement",
																		"src": "11452:30:10"
																	}
																]
															},
															"id": 2354,
															"nodeType": "IfStatement",
															"src": "11284:213:10",
															"trueBody": {
																"id": 2348,
																"nodeType": "Block",
																"src": "11319:98:10",
																"statements": [
																	{
																		"expression": {
																			"id": 2343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2340,
																				"name": "lastTimeStamp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1464,
																				"src": "11337:13:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 2341,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "11353:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 2342,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11359:9:10",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "11353:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11337:31:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2344,
																		"nodeType": "ExpressionStatement",
																		"src": "11337:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2345,
																				"name": "weeklyTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2194,
																				"src": "11386:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																					"typeString": "function ()"
																				}
																			},
																			"id": 2346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11386:16:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2347,
																		"nodeType": "ExpressionStatement",
																		"src": "11386:16:10"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"id": 2367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11638:10:10",
													"subExpression": {
														"id": 2366,
														"name": "checkOnce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "11639:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2373,
												"nodeType": "IfStatement",
												"src": "11635:55:10",
												"trueBody": {
													"id": 2372,
													"nodeType": "Block",
													"src": "11649:41:10",
													"statements": [
														{
															"expression": {
																"id": 2370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2368,
																	"name": "checkOnce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1456,
																	"src": "11663:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11675:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "11663:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2371,
															"nodeType": "ExpressionStatement",
															"src": "11663:16:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4585e33b",
									"id": 2375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "10933:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2375,
												"src": "10947:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10947:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10946:32:10"
									},
									"returnParameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10989:0:10"
									},
									"scope": 2832,
									"src": "10924:781:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2423,
										"nodeType": "Block",
										"src": "11805:399:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2384,
														"name": "updateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2379,
														"src": "11828:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11846:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11828:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2392,
												"nodeType": "IfStatement",
												"src": "11825:84:10",
												"trueBody": {
													"id": 2391,
													"nodeType": "Block",
													"src": "11848:61:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2388,
																		"name": "updateInterval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2379,
																		"src": "11883:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2387,
																	"name": "wrongInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1620,
																	"src": "11869:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11869:29:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2390,
															"nodeType": "RevertStatement",
															"src": "11862:36:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2393,
														"name": "_startingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2377,
														"src": "11930:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2394,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "11946:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11952:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "11946:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11930:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2402,
												"nodeType": "IfStatement",
												"src": "11927:91:10",
												"trueBody": {
													"id": 2401,
													"nodeType": "Block",
													"src": "11962:56:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2398,
																		"name": "_startingTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2377,
																		"src": "11993:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2397,
																	"name": "wrongTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1584,
																	"src": "11983:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11983:24:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2400,
															"nodeType": "RevertStatement",
															"src": "11976:31:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2403,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "12028:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2404,
														"name": "updateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2379,
														"src": "12039:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12028:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2406,
												"nodeType": "ExpressionStatement",
												"src": "12028:25:10"
											},
											{
												"expression": {
													"id": 2409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2407,
														"name": "startingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "12063:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2408,
														"name": "_startingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2377,
														"src": "12078:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12063:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2410,
												"nodeType": "ExpressionStatement",
												"src": "12063:28:10"
											},
											{
												"expression": {
													"id": 2414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2411,
														"name": "lastTimeStamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1464,
														"src": "12101:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2412,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12117:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12123:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "12117:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12101:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2415,
												"nodeType": "ExpressionStatement",
												"src": "12101:31:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2417,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12160:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12164:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12160:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2419,
															"name": "interval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "12172:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2420,
															"name": "lastTimeStamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "12182:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2416,
														"name": "SetInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "12148:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12148:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2422,
												"nodeType": "EmitStatement",
												"src": "12143:53:10"
											}
										]
									},
									"functionSelector": "5f17e616",
									"id": 2424,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2382,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2381,
												"name": "onlyOwner",
												"nameLocations": [
													"11796:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 108,
												"src": "11796:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "11796:9:10"
										}
									],
									"name": "setInterval",
									"nameLocation": "11726:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "_startingTime",
												"nameLocation": "11747:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "11739:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11739:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "updateInterval",
												"nameLocation": "11770:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "11762:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11738:47:10"
									},
									"returnParameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11805:0:10"
									},
									"scope": 2832,
									"src": "11717:487:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2443,
										"nodeType": "Block",
										"src": "12245:113:10",
										"statements": [
											{
												"expression": {
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2429,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "12263:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12274:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12263:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2432,
												"nodeType": "ExpressionStatement",
												"src": "12263:12:10"
											},
											{
												"expression": {
													"id": 2435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2433,
														"name": "checkOnce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "12285:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12297:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "12285:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2436,
												"nodeType": "ExpressionStatement",
												"src": "12285:17:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2438,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12330:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12334:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12330:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2440,
															"name": "interval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "12342:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2437,
														"name": "offInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "12318:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12318:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2442,
												"nodeType": "EmitStatement",
												"src": "12313:38:10"
											}
										]
									},
									"functionSelector": "6626b26d",
									"id": 2444,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2427,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2426,
												"name": "onlyOwner",
												"nameLocations": [
													"12236:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 108,
												"src": "12236:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "12236:9:10"
										}
									],
									"name": "off",
									"nameLocation": "12219:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12223:2:10"
									},
									"returnParameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12245:0:10"
									},
									"scope": 2832,
									"src": "12210:148:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2473,
										"nodeType": "Block",
										"src": "12439:244:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2451,
														"name": "forwarderAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2446,
														"src": "12461:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12489:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12481:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2452,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12481:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12481:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12461:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2462,
												"nodeType": "IfStatement",
												"src": "12458:96:10",
												"trueBody": {
													"id": 2461,
													"nodeType": "Block",
													"src": "12492:62:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2458,
																		"name": "forwarderAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2446,
																		"src": "12526:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2457,
																	"name": "wrongAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1612,
																	"src": "12513:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12513:30:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2460,
															"nodeType": "RevertStatement",
															"src": "12506:37:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2463,
														"name": "s_forwarderAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "12572:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2464,
														"name": "forwarderAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2446,
														"src": "12593:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12572:37:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2466,
												"nodeType": "ExpressionStatement",
												"src": "12572:37:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2468,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12645:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12649:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12645:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2470,
															"name": "s_forwarderAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "12657:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2467,
														"name": "SetForwarderAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1536,
														"src": "12625:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12625:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2472,
												"nodeType": "EmitStatement",
												"src": "12620:56:10"
											}
										]
									},
									"functionSelector": "d777cc6d",
									"id": 2474,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2449,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2448,
												"name": "onlyOwner",
												"nameLocations": [
													"12429:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 108,
												"src": "12429:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "12429:9:10"
										}
									],
									"name": "setForwarderAddress",
									"nameLocation": "12374:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "forwarderAddress",
												"nameLocation": "12402:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "12394:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12394:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12393:26:10"
									},
									"returnParameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12439:0:10"
									},
									"scope": 2832,
									"src": "12365:318:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2509,
										"nodeType": "Block",
										"src": "12800:286:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2484,
																"name": "_totalStakeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2476,
																"src": "12827:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12847:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12827:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5f746f74616c5374616b65416d6f756e742063616e206e6f74206265207a65726f",
															"id": 2487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12851:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_984c4c4b8842d5da27e0d4bd38d04c71d415ff13ebc33602156c2f6e28e0ad90",
																"typeString": "literal_string \"_totalStakeAmount can not be zero\""
															},
															"value": "_totalStakeAmount can not be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_984c4c4b8842d5da27e0d4bd38d04c71d415ff13ebc33602156c2f6e28e0ad90",
																"typeString": "literal_string \"_totalStakeAmount can not be zero\""
															}
														],
														"id": 2483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12819:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12819:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2489,
												"nodeType": "ExpressionStatement",
												"src": "12819:68:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2491,
																"name": "percentageNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2478,
																"src": "12905:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12924:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12905:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5f746f74616c5374616b65416d6f756e742063616e206e6f74206265207a65726f",
															"id": 2494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12928:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_984c4c4b8842d5da27e0d4bd38d04c71d415ff13ebc33602156c2f6e28e0ad90",
																"typeString": "literal_string \"_totalStakeAmount can not be zero\""
															},
															"value": "_totalStakeAmount can not be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_984c4c4b8842d5da27e0d4bd38d04c71d415ff13ebc33602156c2f6e28e0ad90",
																"typeString": "literal_string \"_totalStakeAmount can not be zero\""
															}
														],
														"id": 2490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12897:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12897:67:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2496,
												"nodeType": "ExpressionStatement",
												"src": "12897:67:10"
											},
											{
												"assignments": [
													2498
												],
												"declarations": [
													{
														"constant": false,
														"id": 2498,
														"mutability": "mutable",
														"name": "serviceFee",
														"nameLocation": "12982:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2509,
														"src": "12974:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2497,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12974:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2506,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2499,
															"name": "_totalStakeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2476,
															"src": "12995:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"id": 2500,
																	"name": "percentageNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2478,
																	"src": "13016:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2501,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13015:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12995:38:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"hexValue": "3130303030",
																"id": 2503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13037:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															}
														],
														"id": 2504,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "13036:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														}
													},
													"src": "12995:48:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12974:69:10"
											},
											{
												"expression": {
													"id": 2507,
													"name": "serviceFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2498,
													"src": "13069:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2482,
												"id": 2508,
												"nodeType": "Return",
												"src": "13062:17:10"
											}
										]
									},
									"id": 2510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePercentage",
									"nameLocation": "12698:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "_totalStakeAmount",
												"nameLocation": "12726:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "12718:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12718:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "percentageNumber",
												"nameLocation": "12752:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "12744:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12744:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12717:52:10"
									},
									"returnParameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "12791:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12791:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12790:9:10"
									},
									"scope": 2832,
									"src": "12689:397:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2576,
										"nodeType": "Block",
										"src": "13169:509:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2517,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2512,
														"src": "13191:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13202:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13191:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2525,
												"nodeType": "IfStatement",
												"src": "13188:68:10",
												"trueBody": {
													"id": 2524,
													"nodeType": "Block",
													"src": "13204:52:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2521,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2512,
																		"src": "13237:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2520,
																	"name": "wrongAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "13225:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13225:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2523,
															"nodeType": "RevertStatement",
															"src": "13218:27:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2527,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2512,
																"src": "13273:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2528,
																		"name": "userRegistered",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1498,
																		"src": "13284:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																			"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																		}
																	},
																	"id": 2531,
																	"indexExpression": {
																		"expression": {
																			"id": 2529,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13299:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13303:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13299:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13284:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
																		"typeString": "struct PoolContrcat.UserRegistered storage ref"
																	}
																},
																"id": 2532,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13311:14:10",
																"memberName": "receivedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1470,
																"src": "13284:41:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13273:52:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964205f616d6f756e7421",
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13327:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_edf0ef2f15806b360b15962b170fb2777290898683710e6c2ca3b716acccdb55",
																"typeString": "literal_string \"invalid _amount!\""
															},
															"value": "invalid _amount!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_edf0ef2f15806b360b15962b170fb2777290898683710e6c2ca3b716acccdb55",
																"typeString": "literal_string \"invalid _amount!\""
															}
														],
														"id": 2526,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13265:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13265:81:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2536,
												"nodeType": "ExpressionStatement",
												"src": "13265:81:10"
											},
											{
												"expression": {
													"id": 2543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2537,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "13357:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 2540,
															"indexExpression": {
																"expression": {
																	"id": 2538,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "13372:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13376:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "13372:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13357:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 2541,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13384:14:10",
														"memberName": "receivedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1470,
														"src": "13357:41:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2542,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2512,
														"src": "13402:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13357:52:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2544,
												"nodeType": "ExpressionStatement",
												"src": "13357:52:10"
											},
											{
												"expression": {
													"id": 2551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2545,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "13419:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 2548,
															"indexExpression": {
																"expression": {
																	"id": 2546,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "13434:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13438:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "13434:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13419:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 2549,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13446:14:10",
														"memberName": "withdrawAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1472,
														"src": "13419:41:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2550,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2512,
														"src": "13464:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13419:52:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2552,
												"nodeType": "ExpressionStatement",
												"src": "13419:52:10"
											},
											{
												"assignments": [
													2554
												],
												"declarations": [
													{
														"constant": false,
														"id": 2554,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13494:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2576,
														"src": "13489:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2553,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13489:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2561,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2557,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13523:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13527:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13523:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2559,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2512,
															"src": "13534:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2555,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "13504:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1425",
																"typeString": "contract IBEP20"
															}
														},
														"id": 2556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13514:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1404,
														"src": "13504:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13504:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13489:53:10"
											},
											{
												"condition": {
													"id": 2563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13563:8:10",
													"subExpression": {
														"id": 2562,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2554,
														"src": "13564:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2569,
												"nodeType": "IfStatement",
												"src": "13560:67:10",
												"trueBody": {
													"id": 2568,
													"nodeType": "Block",
													"src": "13572:55:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2565,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2554,
																		"src": "13608:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2564,
																	"name": "transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1600,
																	"src": "13593:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 2566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13593:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2567,
															"nodeType": "RevertStatement",
															"src": "13586:30:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2571,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13651:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13655:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13651:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2573,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2512,
															"src": "13663:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2570,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1524,
														"src": "13642:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13642:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2575,
												"nodeType": "EmitStatement",
												"src": "13637:34:10"
											}
										]
									},
									"functionSelector": "67976974",
									"id": 2577,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2515,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2514,
												"name": "nonReentrant",
												"nameLocations": [
													"13156:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2822,
												"src": "13156:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "13156:12:10"
										}
									],
									"name": "userWithdrawAmoount",
									"nameLocation": "13110:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "13138:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "13130:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13130:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13129:17:10"
									},
									"returnParameters": {
										"id": 2516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13169:0:10"
									},
									"scope": 2832,
									"src": "13101:577:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2641,
										"nodeType": "Block",
										"src": "13756:482:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2586,
														"name": "_userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2579,
														"src": "13778:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13802:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13794:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13794:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13794:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13778:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2597,
												"nodeType": "IfStatement",
												"src": "13775:88:10",
												"trueBody": {
													"id": 2596,
													"nodeType": "Block",
													"src": "13805:58:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2593,
																		"name": "_userAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2579,
																		"src": "13839:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2592,
																	"name": "wrongAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1612,
																	"src": "13826:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13826:26:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2595,
															"nodeType": "RevertStatement",
															"src": "13819:33:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2598,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2581,
															"src": "13876:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "74727565",
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13885:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"src": "13876:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2601,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2581,
															"src": "13893:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "66616c7365",
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13902:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"src": "13893:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13876:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2610,
												"nodeType": "IfStatement",
												"src": "13873:84:10",
												"trueBody": {
													"id": 2609,
													"nodeType": "Block",
													"src": "13908:49:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2606,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2581,
																		"src": "13940:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2605,
																	"name": "wrongValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "13929:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 2607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13929:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2608,
															"nodeType": "RevertStatement",
															"src": "13922:24:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2611,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2581,
														"src": "13970:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 2612,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13979:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "13970:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2629,
													"nodeType": "Block",
													"src": "14057:77:10",
													"statements": [
														{
															"expression": {
																"id": 2627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 2622,
																			"name": "userRegistered",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "14079:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																				"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																			}
																		},
																		"id": 2624,
																		"indexExpression": {
																			"id": 2623,
																			"name": "_userAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2579,
																			"src": "14094:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14079:28:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
																			"typeString": "struct PoolContrcat.UserRegistered storage ref"
																		}
																	},
																	"id": 2625,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "14108:7:10",
																	"memberName": "blocked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1468,
																	"src": "14079:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 2626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14118:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "14079:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2628,
															"nodeType": "ExpressionStatement",
															"src": "14079:44:10"
														}
													]
												},
												"id": 2630,
												"nodeType": "IfStatement",
												"src": "13967:167:10",
												"trueBody": {
													"id": 2621,
													"nodeType": "Block",
													"src": "13984:69:10",
													"statements": [
														{
															"expression": {
																"id": 2619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 2614,
																			"name": "userRegistered",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "13999:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																				"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																			}
																		},
																		"id": 2616,
																		"indexExpression": {
																			"id": 2615,
																			"name": "_userAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2579,
																			"src": "14014:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13999:28:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
																			"typeString": "struct PoolContrcat.UserRegistered storage ref"
																		}
																	},
																	"id": 2617,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "14028:7:10",
																	"memberName": "blocked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1468,
																	"src": "13999:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14038:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "13999:43:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2620,
															"nodeType": "ExpressionStatement",
															"src": "13999:43:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2632,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14169:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14173:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14169:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2634,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2579,
															"src": "14180:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 2635,
																	"name": "userRegistered",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "14194:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1479_storage_$",
																		"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																	}
																},
																"id": 2637,
																"indexExpression": {
																	"id": 2636,
																	"name": "_userAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2579,
																	"src": "14209:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14194:28:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserRegistered_$1479_storage",
																	"typeString": "struct PoolContrcat.UserRegistered storage ref"
																}
															},
															"id": 2638,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14223:7:10",
															"memberName": "blocked",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1468,
															"src": "14194:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2631,
														"name": "UserBlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "14157:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14157:74:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2640,
												"nodeType": "EmitStatement",
												"src": "14152:79:10"
											}
										]
									},
									"functionSelector": "d9b998b4",
									"id": 2642,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2584,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2583,
												"name": "onlyOwner",
												"nameLocations": [
													"13746:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 108,
												"src": "13746:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "13746:9:10"
										}
									],
									"name": "blockUser",
									"nameLocation": "13693:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "13711:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2642,
												"src": "13703:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13703:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13730:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2642,
												"src": "13725:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2580,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13725:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13702:34:10"
									},
									"returnParameters": {
										"id": 2585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13756:0:10"
									},
									"scope": 2832,
									"src": "13684:554:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2674,
										"nodeType": "Block",
										"src": "14345:247:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2651,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2646,
														"src": "14367:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2652,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14386:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14367:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2659,
												"nodeType": "IfStatement",
												"src": "14364:88:10",
												"trueBody": {
													"id": 2658,
													"nodeType": "Block",
													"src": "14388:64:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2655,
																		"name": "_newPerccentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2646,
																		"src": "14425:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2654,
																	"name": "wrongPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "14409:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14409:32:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2657,
															"nodeType": "RevertStatement",
															"src": "14402:39:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2660,
															"name": "tPPercentages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "14470:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2662,
														"indexExpression": {
															"id": 2661,
															"name": "_projectId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2644,
															"src": "14484:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14470:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2663,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2646,
														"src": "14498:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14470:43:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2665,
												"nodeType": "ExpressionStatement",
												"src": "14470:43:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2667,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14547:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14551:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14547:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 2669,
																"name": "tPPercentages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "14559:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 2671,
															"indexExpression": {
																"id": 2670,
																"name": "_projectId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2644,
																"src": "14573:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14559:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2666,
														"name": "PercentageChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "14529:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14529:56:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2673,
												"nodeType": "EmitStatement",
												"src": "14524:61:10"
											}
										]
									},
									"functionSelector": "ed061067",
									"id": 2675,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2649,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2648,
												"name": "onlyOwner",
												"nameLocations": [
													"14335:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 108,
												"src": "14335:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "14335:9:10"
										}
									],
									"name": "setTeasueryPercentages",
									"nameLocation": "14259:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "_projectId",
												"nameLocation": "14290:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2675,
												"src": "14282:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14282:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "_newPerccentage",
												"nameLocation": "14309:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 2675,
												"src": "14301:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14301:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14281:44:10"
									},
									"returnParameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14345:0:10"
									},
									"scope": 2832,
									"src": "14250:342:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2701,
										"nodeType": "Block",
										"src": "14680:248:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2682,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2677,
														"src": "14702:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14721:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14702:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2690,
												"nodeType": "IfStatement",
												"src": "14699:88:10",
												"trueBody": {
													"id": 2689,
													"nodeType": "Block",
													"src": "14723:64:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2686,
																		"name": "_newPerccentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2677,
																		"src": "14760:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2685,
																	"name": "wrongPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "14744:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14744:32:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2688,
															"nodeType": "RevertStatement",
															"src": "14737:39:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2691,
														"name": "tdividentPayoutPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "14805:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2692,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2677,
														"src": "14833:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14805:43:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2694,
												"nodeType": "ExpressionStatement",
												"src": "14805:43:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2696,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14882:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14886:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14882:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2698,
															"name": "tdividentPayoutPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "14894:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2695,
														"name": "PercentageChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "14864:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14864:56:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2700,
												"nodeType": "EmitStatement",
												"src": "14859:61:10"
											}
										]
									},
									"functionSelector": "7f70c5e7",
									"id": 2702,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2679,
												"name": "onlyOwner",
												"nameLocations": [
													"14670:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 108,
												"src": "14670:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "14670:9:10"
										}
									],
									"name": "settdividentPayoutPercentage",
									"nameLocation": "14607:28:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "_newPerccentage",
												"nameLocation": "14644:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "14636:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14636:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14635:25:10"
									},
									"returnParameters": {
										"id": 2681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14680:0:10"
									},
									"scope": 2832,
									"src": "14598:330:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2728,
										"nodeType": "Block",
										"src": "15020:247:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2709,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2704,
														"src": "15042:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15061:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15042:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2717,
												"nodeType": "IfStatement",
												"src": "15039:88:10",
												"trueBody": {
													"id": 2716,
													"nodeType": "Block",
													"src": "15063:64:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2713,
																		"name": "_newPerccentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2704,
																		"src": "15100:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2712,
																	"name": "wrongPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "15084:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15084:32:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2715,
															"nodeType": "RevertStatement",
															"src": "15077:39:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2718,
														"name": "odividentPayoutPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "15145:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2719,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2704,
														"src": "15173:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15145:43:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2721,
												"nodeType": "ExpressionStatement",
												"src": "15145:43:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2723,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15222:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15226:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15222:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2725,
															"name": "odividentPayoutPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "15234:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2722,
														"name": "PercentageChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "15204:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15204:56:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2727,
												"nodeType": "EmitStatement",
												"src": "15199:61:10"
											}
										]
									},
									"functionSelector": "b9dac1eb",
									"id": 2729,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2707,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2706,
												"name": "onlyOwner",
												"nameLocations": [
													"15010:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 108,
												"src": "15010:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "15010:9:10"
										}
									],
									"name": "setodividentPayoutPercentage",
									"nameLocation": "14947:28:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2704,
												"mutability": "mutable",
												"name": "_newPerccentage",
												"nameLocation": "14984:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 2729,
												"src": "14976:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14976:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14975:25:10"
									},
									"returnParameters": {
										"id": 2708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15020:0:10"
									},
									"scope": 2832,
									"src": "14938:329:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2755,
										"nodeType": "Block",
										"src": "15359:244:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2736,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2731,
														"src": "15380:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15399:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15380:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2744,
												"nodeType": "IfStatement",
												"src": "15377:88:10",
												"trueBody": {
													"id": 2743,
													"nodeType": "Block",
													"src": "15401:64:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2740,
																		"name": "_newPerccentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2731,
																		"src": "15438:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2739,
																	"name": "wrongPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "15422:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15422:32:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2742,
															"nodeType": "RevertStatement",
															"src": "15415:39:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2745,
														"name": "flowToTreasuryPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "15483:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2746,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2731,
														"src": "15510:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15483:42:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2748,
												"nodeType": "ExpressionStatement",
												"src": "15483:42:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2750,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15559:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15563:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15559:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2752,
															"name": "flowToTreasuryPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "15571:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2749,
														"name": "PercentageChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "15541:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15541:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2754,
												"nodeType": "EmitStatement",
												"src": "15536:60:10"
											}
										]
									},
									"functionSelector": "ad8e5ec4",
									"id": 2756,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2734,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2733,
												"name": "onlyOwner",
												"nameLocations": [
													"15349:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 108,
												"src": "15349:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "15349:9:10"
										}
									],
									"name": "setflowToTreasuryPercentage",
									"nameLocation": "15287:27:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "_newPerccentage",
												"nameLocation": "15323:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 2756,
												"src": "15315:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15315:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15314:25:10"
									},
									"returnParameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15359:0:10"
									},
									"scope": 2832,
									"src": "15278:325:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2782,
										"nodeType": "Block",
										"src": "15689:243:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2763,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2758,
														"src": "15711:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15730:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15711:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2771,
												"nodeType": "IfStatement",
												"src": "15708:88:10",
												"trueBody": {
													"id": 2770,
													"nodeType": "Block",
													"src": "15732:64:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2767,
																		"name": "_newPerccentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2758,
																		"src": "15769:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2766,
																	"name": "wrongPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "15753:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15753:32:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2769,
															"nodeType": "RevertStatement",
															"src": "15746:39:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2772,
														"name": "maintainceFeePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "15814:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2773,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2758,
														"src": "15840:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15814:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2775,
												"nodeType": "ExpressionStatement",
												"src": "15814:41:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2777,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15889:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15893:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15889:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2779,
															"name": "maintainceFeePercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "15901:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2776,
														"name": "PercentageChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "15871:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15871:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2781,
												"nodeType": "EmitStatement",
												"src": "15866:59:10"
											}
										]
									},
									"functionSelector": "7f111e60",
									"id": 2783,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2761,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2760,
												"name": "onlyOwner",
												"nameLocations": [
													"15679:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 108,
												"src": "15679:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "15679:9:10"
										}
									],
									"name": "setmaintainceFeePercentage",
									"nameLocation": "15618:26:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2758,
												"mutability": "mutable",
												"name": "_newPerccentage",
												"nameLocation": "15653:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "15645:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15645:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15644:25:10"
									},
									"returnParameters": {
										"id": 2762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15689:0:10"
									},
									"scope": 2832,
									"src": "15609:323:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2803,
										"nodeType": "Block",
										"src": "15958:142:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2785,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15971:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15975:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15971:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2787,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "15985:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15985:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15971:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2790,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15996:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16000:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15996:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2792,
															"name": "s_forwarderAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "16010:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15996:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15971:57:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2801,
												"nodeType": "IfStatement",
												"src": "15968:115:10",
												"trueBody": {
													"id": 2800,
													"nodeType": "Block",
													"src": "16029:54:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2796,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "16061:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "16065:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "16061:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2795,
																	"name": "wrongOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "16050:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16050:22:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2799,
															"nodeType": "RevertStatement",
															"src": "16043:29:10"
														}
													]
												}
											},
											{
												"id": 2802,
												"nodeType": "PlaceholderStatement",
												"src": "16092:1:10"
											}
										]
									},
									"id": 2804,
									"name": "bothOwner",
									"nameLocation": "15947:9:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15956:2:10"
									},
									"src": "15938:162:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2821,
										"nodeType": "Block",
										"src": "16130:126:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "16148:7:10",
															"subExpression": {
																"id": 2807,
																"name": "locked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1458,
																"src": "16149:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 2809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16157:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 2806,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16140:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16140:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2811,
												"nodeType": "ExpressionStatement",
												"src": "16140:51:10"
											},
											{
												"expression": {
													"id": 2814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2812,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "16201:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16210:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "16201:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2815,
												"nodeType": "ExpressionStatement",
												"src": "16201:13:10"
											},
											{
												"id": 2816,
												"nodeType": "PlaceholderStatement",
												"src": "16224:1:10"
											},
											{
												"expression": {
													"id": 2819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2817,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "16235:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16244:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "16235:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2820,
												"nodeType": "ExpressionStatement",
												"src": "16235:14:10"
											}
										]
									},
									"id": 2822,
									"name": "nonReentrant",
									"nameLocation": "16115:12:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16127:2:10"
									},
									"src": "16106:150:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										603
									],
									"body": {
										"id": 2830,
										"nodeType": "Block",
										"src": "16372:2:10",
										"statements": []
									},
									"id": 2831,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2827,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2826,
												"name": "onlyOwner",
												"nameLocations": [
													"16341:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 108,
												"src": "16341:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "16341:9:10"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "16271:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2828,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16359:8:10"
									},
									"parameters": {
										"id": 2825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2824,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "16297:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 2831,
												"src": "16289:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16289:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16288:27:10"
									},
									"returnParameters": {
										"id": 2829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16372:0:10"
									},
									"scope": 2832,
									"src": "16262:112:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2833,
							"src": "896:15480:10",
							"usedErrors": [
								49,
								54,
								230,
								233,
								494,
								499,
								740,
								753,
								1031,
								1034,
								1580,
								1584,
								1588,
								1592,
								1596,
								1600,
								1604,
								1608,
								1612,
								1616,
								1620
							],
							"usedEvents": [
								60,
								238,
								719,
								1502,
								1506,
								1512,
								1518,
								1524,
								1530,
								1536,
								1544,
								1552,
								1560,
								1568,
								1576
							]
						}
					],
					"src": "81:16342:10"
				},
				"id": 10
			}
		}
	}
}