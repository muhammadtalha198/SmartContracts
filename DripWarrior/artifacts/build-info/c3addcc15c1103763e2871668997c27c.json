{
	"id": "c3addcc15c1103763e2871668997c27c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"DripWarrior/checckUpKep.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.26;\n\n/**\n * @dev Example contract which uses the Forwarder\n *\n * @notice important to implement {AutomationCompatibleInterface}\n */\n\n/**\n * THIS IS AN EXAMPLE CONTRACT THAT USES HARDCODED VALUES FOR CLARITY.\n * THIS IS AN EXAMPLE CONTRACT THAT USES UN-AUDITED CODE.\n * DO NOT USE THIS CODE IN PRODUCTION.\n */\n\nimport {AutomationCompatibleInterface} from \"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract CounterwForwarder is AutomationCompatibleInterface,Ownable {\n    \n    uint256 public counter; // counter counts the number of upkeeps performed\n    uint256 public interval; // interval specifies the time between upkeeps\n   \n    uint256 public realInterval; // interval specifies the time between upkeeps\n    uint256 public startingTime;\n    uint256 public lastTimeStamp; // lastTimeStamp tracks the last upkeep performed\n    \n    address public s_forwarderAddress;\n    \n    bool public checkOnce;\n    \n    \n    error wrongTime(uint256 time);\n     error wrongInterval(uint256 updateInterval);\n\n    constructor()Ownable(msg.sender) {\n        \n    }\n\n    function checkUpkeep(bytes calldata /*checkData*/) external override view  returns (bool, bytes memory) {\n\n        bool needsUpkeep = (block.timestamp - lastTimeStamp) > interval;\n        return (needsUpkeep, bytes(\"\"));\n    }\n\n      function performUpkeep(bytes calldata /*performData*/) external  {\n\n        require(\n            msg.sender == s_forwarderAddress,\n            \"This address does not have permission to call performUpkeep\"\n        );\n       \n        if (interval == 0){\n            revert wrongInterval(interval);\n        }\n        \n         if(block.timestamp >= startingTime){\n\n            /*\n              startExecutionTime =  1728482424 14:00\n              lastTimeStamp = 1728482484.      14:01\n              executionDuration = 1728482604 - 1728482424 =   14:03 - 14:00 = \n              interval = 60 - 3 = 57\n\n              current = 1728486024  15:00 \n            */\n            \n            uint256 startExecutionTime = lastTimeStamp = block.timestamp;  \n            weeklyTransfer();\n            uint256 executionDuration = block.timestamp - startExecutionTime; \n            interval = realInterval - executionDuration; // Reduce the interval by the duration taken\n\n        }\n        else{\n            revert wrongTime(startingTime);\n        }\n        \n    }\n\n\n\n\n\n    // function performUpkeep(bytes calldata /*performData*/) external override {\n         \n    //     require(\n    //         msg.sender == s_forwarderAddress,\n    //         \"This address does not have permission to call performUpkeep\"\n    //     );\n       \n    //     if (interval == 0){\n    //         revert wrongInterval(interval);\n    //     }\n        \n    //     if(!checkOnce){\n\n    //         if(block.timestamp >= startingTime){\n\n    //             lastTimeStamp = block.timestamp;\n    //             weeklyTransfer();\n    //             interval = realInterval;\n    //         }\n    //         else{\n    //             revert wrongTime(startingTime);\n    //         }\n    //     }\n    //     else{\n           \n    //         lastTimeStamp = block.timestamp;\n    //         weeklyTransfer();\n    //     }\n       \n    //     if(!checkOnce){\n    //         checkOnce = true;\n    //     }\n        \n    // }\n\n\n    function setInterval (uint256 _startingTime, uint256 updateInterval) external  onlyOwner{\n         \n        if(updateInterval <= 0){\n            revert wrongInterval(updateInterval);\n        }\n        \n        if(_startingTime < block.timestamp){\n            revert wrongTime(_startingTime);\n        }\n\n        interval = _startingTime - block.timestamp;\n        startingTime = _startingTime;\n        lastTimeStamp = block.timestamp;\n        realInterval = updateInterval;\n\n        // emit SetInterval(msg.sender, interval, lastTimeStamp);\n\n    }\n\n    function off () external  onlyOwner{\n       \n        interval = 0;\n        checkOnce = false;\n        \n    }\n\n    uint256 receiveFromTreasury ;\n    uint256 receiveFromOwneerShip ;            \n    bool blocked = false;\n    uint256 receivedAmount ;\n    uint256  totalStakedAmount = 20 ether;\n\n    function weeklyTransfer() public  {\n\n        \n        ( uint256 remainFiftyOPool,uint256 dividentPayoutOPoolAmount, uint256 perPersonFromTPool)  = perPoolCalculation();\n        \n       \n        uint256 maxlimit;\n\n        for(uint256 i = 0; i < noOfUsers; i++){\n\n            if(!blocked){\n\n                uint256 eachSharePercentage = (totalStakedAmount * (10000)) / (totalStakedAmount);\n                \n                uint256 eachSendAmount = calculatePercentage(dividentPayoutOPoolAmount, eachSharePercentage);\n                uint256 eachSendAmount1 = calculatePercentage(remainFiftyOPool, eachSharePercentage);\n                \n                ownerShipPoolAmount -= eachSendAmount;\n                        \n                maxlimit += eachSendAmount;\n                treasuryPoolAmount -= perPersonFromTPool;\n\n                receiveFromTreasury += perPersonFromTPool;\n               receiveFromOwneerShip += eachSendAmount;\n                \n                uint256 totalSendAmount = eachSendAmount + perPersonFromTPool;\n               receivedAmount += totalSendAmount;\n\n            }\n            \n        }\n\n       \n\n    }\n\n   uint256 noOfUsers = 100;\n\n    uint256  ownerShipPoolAmount = 999999999999999999999999 ether ;\n     uint256   treasuryPoolAmount = 999999999999999999999999 ether;\n\n     uint256  odividentPayoutPercentage = 200;\n       uint256 flowToTreasuryPercentage = 200;\n       uint256 maintainceFeePercentage = 200;\n        uint256 tdividentPayoutPercentage = 200;\n\n    function perPoolCalculation() private returns(uint256, uint256,uint256){\n        \n\n        uint256 remainFiftyOPool = calculatePercentage(ownerShipPoolAmount, 5000);\n\n        uint256 dividentPayoutOPoolAmount = calculatePercentage(remainFiftyOPool, odividentPayoutPercentage);\n        uint256 fifteenPercenntToTPoolAmount = calculatePercentage(remainFiftyOPool, flowToTreasuryPercentage);\n        uint256 tenPercenntToMaintenceAmount = calculatePercentage(remainFiftyOPool, maintainceFeePercentage);\n        uint256 remainFiftyTPoolAmount = calculatePercentage(treasuryPoolAmount, tdividentPayoutPercentage);\n        \n        uint256 perPersonFromTPool = remainFiftyTPoolAmount/noOfUsers;\n        \n        ownerShipPoolAmount -= (fifteenPercenntToTPoolAmount + tenPercenntToMaintenceAmount);\n        treasuryPoolAmount += fifteenPercenntToTPoolAmount;\n\n        \n\n        return (remainFiftyOPool,dividentPayoutOPoolAmount,perPersonFromTPool);\n    }\n\n    function calculatePercentage(uint256 _totalStakeAmount,uint256 percentageNumber) private pure returns(uint256) {\n       \n        uint256 serviceFee = _totalStakeAmount * (percentageNumber) / (10000);\n        \n        return serviceFee;\n    }\n\n    function setForwarderAddress(address forwarderAddress) external onlyOwner {\n        s_forwarderAddress = forwarderAddress;\n    }\n\n}\n\n\n\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"AutomationCompatibleInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "checkData",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkUpkeep(bytes)": {
								"details": "To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.",
								"params": {
									"checkData": "specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."
								},
								"returns": {
									"performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.",
									"upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
								}
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkUpkeep(bytes)": "6e04ff0d",
							"performUpkeep(bytes)": "4585e33b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkUpkeep(bytes)": {
								"notice": "method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."
							},
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DripWarrior/checckUpKep.sol": {
				"CounterwForwarder": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "updateInterval",
									"type": "uint256"
								}
							],
							"name": "wrongInterval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "wrongTime",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "checkOnce",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "counter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "interval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeStamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "off",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "realInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_forwarderAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "forwarderAddress",
									"type": "address"
								}
							],
							"name": "setForwarderAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_startingTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updateInterval",
									"type": "uint256"
								}
							],
							"name": "setInterval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weeklyTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DripWarrior/checckUpKep.sol\":549:7094  contract CounterwForwarder is AutomationCompatibleInterface,Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"DripWarrior/checckUpKep.sol\":4170:4190  bool blocked = false */\n  0x09\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"DripWarrior/checckUpKep.sol\":4254:4262  20 ether */\n  0x01158e460913d00000\n    /* \"DripWarrior/checckUpKep.sol\":4225:4262  uint256  totalStakedAmount = 20 ether */\n  0x0b\n  sstore\n    /* \"DripWarrior/checckUpKep.sol\":5425:5428  100 */\n  0x64\n    /* \"DripWarrior/checckUpKep.sol\":5405:5428  uint256 noOfUsers = 100 */\n  0x0c\n  sstore\n    /* \"DripWarrior/checckUpKep.sol\":5466:5496  999999999999999999999999 ether */\n  0x0b7abc627050305adf1495f92d4c589c0000\n    /* \"DripWarrior/checckUpKep.sol\":5435:5496  uint256  ownerShipPoolAmount = 999999999999999999999999 ether */\n  0x0d\n  dup2\n  swap1\n  sstore\n    /* \"DripWarrior/checckUpKep.sol\":5504:5565  uint256   treasuryPoolAmount = 999999999999999999999999 ether */\n  0x0e\n  sstore\n    /* \"DripWarrior/checckUpKep.sol\":5610:5613  200 */\n  0xc8\n    /* \"DripWarrior/checckUpKep.sol\":5573:5613  uint256  odividentPayoutPercentage = 200 */\n  0x0f\n  dup2\n  swap1\n  sstore\n    /* \"DripWarrior/checckUpKep.sol\":5622:5660  uint256 flowToTreasuryPercentage = 200 */\n  0x10\n  dup2\n  swap1\n  sstore\n    /* \"DripWarrior/checckUpKep.sol\":5669:5706  uint256 maintainceFeePercentage = 200 */\n  0x11\n  dup2\n  swap1\n  sstore\n    /* \"DripWarrior/checckUpKep.sol\":5716:5755  uint256 tdividentPayoutPercentage = 200 */\n  0x12\n  sstore\n    /* \"DripWarrior/checckUpKep.sol\":1155:1204  constructor()Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"DripWarrior/checckUpKep.sol\":1176:1186  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":160:211   */\n  mstore\n    /* \"#utility.yul\":133:151   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"DripWarrior/checckUpKep.sol\":549:7094  contract CounterwForwarder is AutomationCompatibleInterface,Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:217   */\ntag_13:\n    /* \"DripWarrior/checckUpKep.sol\":549:7094  contract CounterwForwarder is AutomationCompatibleInterface,Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DripWarrior/checckUpKep.sol\":549:7094  contract CounterwForwarder is AutomationCompatibleInterface,Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6626b26d\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x947a36fb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x947a36fb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd777cc6d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe9c68e2c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x6626b26d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6e04ff0d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x3f3b3b27\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x3f3b3b27\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4585e33b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5f17e616\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x61bc221a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x3070fbf8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x30cac972\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x30e3f8f8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x39518b5e\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"DripWarrior/checckUpKep.sol\":988:1021  address public s_forwarderAddress */\n    tag_3:\n      sload(0x06)\n      tag_22\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_22:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"DripWarrior/checckUpKep.sol\":988:1021  address public s_forwarderAddress */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DripWarrior/checckUpKep.sol\":786:813  uint256 public realInterval */\n    tag_4:\n      tag_26\n      sload(0x03)\n      dup2\n      jump\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":368:393   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":356:358   */\n      0x20\n        /* \"#utility.yul\":341:359   */\n      add\n        /* \"DripWarrior/checckUpKep.sol\":786:813  uint256 public realInterval */\n      tag_24\n        /* \"#utility.yul\":222:399   */\n      jump\n        /* \"DripWarrior/checckUpKep.sol\":1032:1053  bool public checkOnce */\n    tag_5:\n      sload(0x06)\n      tag_30\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":569:583   */\n      swap1\n      iszero\n        /* \"#utility.yul\":562:584   */\n      iszero\n        /* \"#utility.yul\":544:585   */\n      dup2\n      mstore\n        /* \"#utility.yul\":532:534   */\n      0x20\n        /* \"#utility.yul\":517:535   */\n      add\n        /* \"DripWarrior/checckUpKep.sol\":1032:1053  bool public checkOnce */\n      tag_24\n        /* \"#utility.yul\":404:591   */\n      jump\n        /* \"DripWarrior/checckUpKep.sol\":866:893  uint256 public startingTime */\n    tag_6:\n      tag_26\n      sload(0x04)\n      dup2\n      jump\n        /* \"DripWarrior/checckUpKep.sol\":899:927  uint256 public lastTimeStamp */\n    tag_7:\n      tag_26\n      sload(0x05)\n      dup2\n      jump\n        /* \"DripWarrior/checckUpKep.sol\":1444:2495  function performUpkeep(bytes calldata /*performData*/) external  {... */\n    tag_8:\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"DripWarrior/checckUpKep.sol\":3422:3968  function setInterval (uint256 _startingTime, uint256 updateInterval) external  onlyOwner{... */\n    tag_9:\n      tag_40\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"DripWarrior/checckUpKep.sol\":628:650  uint256 public counter */\n    tag_10:\n      tag_26\n      sload(0x01)\n      dup2\n      jump\n        /* \"DripWarrior/checckUpKep.sol\":3974:4082  function off () external  onlyOwner{... */\n    tag_11:\n      tag_40\n      tag_52\n      jump\t// in\n        /* \"DripWarrior/checckUpKep.sol\":1210:1436  function checkUpkeep(bytes calldata /*checkData*/) external override view  returns (bool, bytes memory) {... */\n    tag_12:\n      tag_53\n      tag_54\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_24\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_40\n      tag_59\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_22)\n        /* \"DripWarrior/checckUpKep.sol\":706:729  uint256 public interval */\n    tag_15:\n      tag_26\n      sload(0x02)\n      dup2\n      jump\n        /* \"DripWarrior/checckUpKep.sol\":6963:7091  function setForwarderAddress(address forwarderAddress) external onlyOwner {... */\n    tag_16:\n      tag_40\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"DripWarrior/checckUpKep.sol\":4269:5400  function weeklyTransfer() public  {... */\n    tag_17:\n      tag_40\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_40\n      tag_73\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"DripWarrior/checckUpKep.sol\":1444:2495  function performUpkeep(bytes calldata /*performData*/) external  {... */\n    tag_43:\n        /* \"DripWarrior/checckUpKep.sol\":1555:1573  s_forwarderAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"DripWarrior/checckUpKep.sol\":1541:1551  msg.sender */\n      caller\n        /* \"DripWarrior/checckUpKep.sol\":1541:1573  msg.sender == s_forwarderAddress */\n      eq\n        /* \"DripWarrior/checckUpKep.sol\":1520:1658  require(... */\n      tag_76\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2533:2535   */\n      0x20\n        /* \"DripWarrior/checckUpKep.sol\":1520:1658  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2515:2536   */\n      mstore\n        /* \"#utility.yul\":2572:2574   */\n      0x3b\n        /* \"#utility.yul\":2552:2570   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2545:2575   */\n      mstore\n        /* \"#utility.yul\":2611:2645   */\n      0x54686973206164647265737320646f6573206e6f742068617665207065726d69\n        /* \"#utility.yul\":2591:2609   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2584:2646   */\n      mstore\n        /* \"#utility.yul\":2682:2711   */\n      0x7373696f6e20746f2063616c6c20706572666f726d55706b6565700000000000\n        /* \"#utility.yul\":2662:2680   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2655:2712   */\n      mstore\n        /* \"#utility.yul\":2729:2748   */\n      0x84\n      add\n        /* \"DripWarrior/checckUpKep.sol\":1520:1658  require(... */\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"DripWarrior/checckUpKep.sol\":1680:1688  interval */\n      sload(0x02)\n        /* \"DripWarrior/checckUpKep.sol\":1692:1693  0 */\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":1680:1693  interval == 0 */\n      sub\n        /* \"DripWarrior/checckUpKep.sol\":1676:1749  if (interval == 0){... */\n      tag_79\n      jumpi\n        /* \"DripWarrior/checckUpKep.sol\":1729:1737  interval */\n      sload(0x02)\n        /* \"DripWarrior/checckUpKep.sol\":1715:1738  wrongInterval(interval) */\n      mload(0x40)\n      shl(0xe0, 0x71540007)\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap2\n        /* \"#utility.yul\":368:393   */\n      dup2\n      mstore\n        /* \"#utility.yul\":356:358   */\n      0x20\n        /* \"#utility.yul\":341:359   */\n      add\n      swap1\n        /* \"#utility.yul\":222:399   */\n      jump\n        /* \"DripWarrior/checckUpKep.sol\":1676:1749  if (interval == 0){... */\n    tag_79:\n        /* \"DripWarrior/checckUpKep.sol\":1790:1802  startingTime */\n      sload(0x04)\n        /* \"DripWarrior/checckUpKep.sol\":1771:1786  block.timestamp */\n      timestamp\n        /* \"DripWarrior/checckUpKep.sol\":1771:1802  block.timestamp >= startingTime */\n      lt\n        /* \"DripWarrior/checckUpKep.sol\":1768:2480  if(block.timestamp >= startingTime){... */\n      tag_81\n      jumpi\n        /* \"DripWarrior/checckUpKep.sol\":2172:2187  block.timestamp */\n      timestamp\n        /* \"DripWarrior/checckUpKep.sol\":2156:2169  lastTimeStamp */\n      0x05\n        /* \"DripWarrior/checckUpKep.sol\":2156:2187  lastTimeStamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/checckUpKep.sol\":2203:2219  weeklyTransfer() */\n      tag_82\n        /* \"DripWarrior/checckUpKep.sol\":2203:2217  weeklyTransfer */\n      tag_71\n        /* \"DripWarrior/checckUpKep.sol\":2203:2219  weeklyTransfer() */\n      jump\t// in\n    tag_82:\n        /* \"DripWarrior/checckUpKep.sol\":2233:2258  uint256 executionDuration */\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":2261:2297  block.timestamp - startExecutionTime */\n      tag_83\n        /* \"DripWarrior/checckUpKep.sol\":2279:2297  startExecutionTime */\n      dup3\n        /* \"DripWarrior/checckUpKep.sol\":2261:2276  block.timestamp */\n      timestamp\n        /* \"DripWarrior/checckUpKep.sol\":2261:2297  block.timestamp - startExecutionTime */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"DripWarrior/checckUpKep.sol\":2233:2297  uint256 executionDuration = block.timestamp - startExecutionTime */\n      swap1\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":2338:2355  executionDuration */\n      dup1\n        /* \"DripWarrior/checckUpKep.sol\":2323:2335  realInterval */\n      sload(0x03)\n        /* \"DripWarrior/checckUpKep.sol\":2323:2355  realInterval - executionDuration */\n      tag_85\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_85:\n        /* \"DripWarrior/checckUpKep.sol\":2312:2320  interval */\n      0x02\n        /* \"DripWarrior/checckUpKep.sol\":2312:2355  interval = realInterval - executionDuration */\n      sstore\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":1768:2480  if(block.timestamp >= startingTime){... */\n      tag_86\n      swap1\n      pop\n      jump\n    tag_81:\n        /* \"DripWarrior/checckUpKep.sol\":2456:2468  startingTime */\n      0x04\n      dup1\n      sload\n        /* \"DripWarrior/checckUpKep.sol\":2446:2469  wrongTime(startingTime) */\n      mload(0x40)\n      shl(0xe0, 0x54593e75)\n      dup2\n      mstore\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":368:393   */\n      mstore\n        /* \"#utility.yul\":341:359   */\n      0x24\n      add\n        /* \"DripWarrior/checckUpKep.sol\":2446:2469  wrongTime(startingTime) */\n      tag_77\n        /* \"#utility.yul\":222:399   */\n      jump\n        /* \"DripWarrior/checckUpKep.sol\":1768:2480  if(block.timestamp >= startingTime){... */\n    tag_86:\n        /* \"DripWarrior/checckUpKep.sol\":1444:2495  function performUpkeep(bytes calldata /*performData*/) external  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/checckUpKep.sol\":3422:3968  function setInterval (uint256 _startingTime, uint256 updateInterval) external  onlyOwner{... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_89:\n        /* \"DripWarrior/checckUpKep.sol\":3551:3552  0 */\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":3533:3547  updateInterval */\n      dup2\n        /* \"DripWarrior/checckUpKep.sol\":3533:3552  updateInterval <= 0 */\n      gt\n        /* \"DripWarrior/checckUpKep.sol\":3530:3614  if(updateInterval <= 0){... */\n      tag_92\n      jumpi\n        /* \"DripWarrior/checckUpKep.sol\":3574:3603  wrongInterval(updateInterval) */\n      mload(0x40)\n      shl(0xe0, 0x71540007)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":368:393   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":341:359   */\n      0x24\n      add\n        /* \"DripWarrior/checckUpKep.sol\":3574:3603  wrongInterval(updateInterval) */\n      tag_77\n        /* \"#utility.yul\":222:399   */\n      jump\n        /* \"DripWarrior/checckUpKep.sol\":3530:3614  if(updateInterval <= 0){... */\n    tag_92:\n        /* \"DripWarrior/checckUpKep.sol\":3651:3666  block.timestamp */\n      timestamp\n        /* \"DripWarrior/checckUpKep.sol\":3635:3648  _startingTime */\n      dup3\n        /* \"DripWarrior/checckUpKep.sol\":3635:3666  _startingTime < block.timestamp */\n      lt\n        /* \"DripWarrior/checckUpKep.sol\":3632:3723  if(_startingTime < block.timestamp){... */\n      iszero\n      tag_94\n      jumpi\n        /* \"DripWarrior/checckUpKep.sol\":3688:3712  wrongTime(_startingTime) */\n      mload(0x40)\n      shl(0xe0, 0x54593e75)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":368:393   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":341:359   */\n      0x24\n      add\n        /* \"DripWarrior/checckUpKep.sol\":3688:3712  wrongTime(_startingTime) */\n      tag_77\n        /* \"#utility.yul\":222:399   */\n      jump\n        /* \"DripWarrior/checckUpKep.sol\":3632:3723  if(_startingTime < block.timestamp){... */\n    tag_94:\n        /* \"DripWarrior/checckUpKep.sol\":3744:3775  _startingTime - block.timestamp */\n      tag_96\n        /* \"DripWarrior/checckUpKep.sol\":3760:3775  block.timestamp */\n      timestamp\n        /* \"DripWarrior/checckUpKep.sol\":3744:3757  _startingTime */\n      dup4\n        /* \"DripWarrior/checckUpKep.sol\":3744:3775  _startingTime - block.timestamp */\n      tag_84\n      jump\t// in\n    tag_96:\n        /* \"DripWarrior/checckUpKep.sol\":3733:3741  interval */\n      0x02\n        /* \"DripWarrior/checckUpKep.sol\":3733:3775  interval = _startingTime - block.timestamp */\n      sstore\n        /* \"DripWarrior/checckUpKep.sol\":3785:3797  startingTime */\n      0x04\n        /* \"DripWarrior/checckUpKep.sol\":3785:3813  startingTime = _startingTime */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"DripWarrior/checckUpKep.sol\":3839:3854  block.timestamp */\n      timestamp\n        /* \"DripWarrior/checckUpKep.sol\":3823:3836  lastTimeStamp */\n      0x05\n        /* \"DripWarrior/checckUpKep.sol\":3823:3854  lastTimeStamp = block.timestamp */\n      sstore\n        /* \"DripWarrior/checckUpKep.sol\":3864:3876  realInterval */\n      0x03\n        /* \"DripWarrior/checckUpKep.sol\":3864:3893  realInterval = updateInterval */\n      sstore\n        /* \"DripWarrior/checckUpKep.sol\":3422:3968  function setInterval (uint256 _startingTime, uint256 updateInterval) external  onlyOwner{... */\n      jump\t// out\n        /* \"DripWarrior/checckUpKep.sol\":3974:4082  function off () external  onlyOwner{... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_98:\n        /* \"DripWarrior/checckUpKep.sol\":4038:4039  0 */\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":4027:4035  interval */\n      0x02\n        /* \"DripWarrior/checckUpKep.sol\":4027:4039  interval = 0 */\n      sstore\n        /* \"DripWarrior/checckUpKep.sol\":4049:4058  checkOnce */\n      0x06\n        /* \"DripWarrior/checckUpKep.sol\":4049:4066  checkOnce = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"DripWarrior/checckUpKep.sol\":3974:4082  function off () external  onlyOwner{... */\n      jump\t// out\n        /* \"DripWarrior/checckUpKep.sol\":1210:1436  function checkUpkeep(bytes calldata /*checkData*/) external override view  returns (bool, bytes memory) {... */\n    tag_55:\n        /* \"DripWarrior/checckUpKep.sol\":1294:1298  bool */\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":1300:1312  bytes memory */\n      0x60\n        /* \"DripWarrior/checckUpKep.sol\":1325:1341  bool needsUpkeep */\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":1380:1388  interval */\n      sload(0x02)\n        /* \"DripWarrior/checckUpKep.sol\":1363:1376  lastTimeStamp */\n      sload(0x05)\n        /* \"DripWarrior/checckUpKep.sol\":1345:1360  block.timestamp */\n      timestamp\n        /* \"DripWarrior/checckUpKep.sol\":1345:1376  block.timestamp - lastTimeStamp */\n      tag_101\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_101:\n        /* \"DripWarrior/checckUpKep.sol\":1419:1428  bytes(\"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap2\n      lt\n      swap7\n      swap1\n      swap6\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":1210:1436  function checkUpkeep(bytes calldata /*checkData*/) external override view  returns (bool, bytes memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"DripWarrior/checckUpKep.sol\":6963:7091  function setForwarderAddress(address forwarderAddress) external onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_109:\n        /* \"DripWarrior/checckUpKep.sol\":7047:7065  s_forwarderAddress */\n      0x06\n        /* \"DripWarrior/checckUpKep.sol\":7047:7084  s_forwarderAddress = forwarderAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"DripWarrior/checckUpKep.sol\":6963:7091  function setForwarderAddress(address forwarderAddress) external onlyOwner {... */\n      jump\t// out\n        /* \"DripWarrior/checckUpKep.sol\":4269:5400  function weeklyTransfer() public  {... */\n    tag_71:\n        /* \"DripWarrior/checckUpKep.sol\":4325:4349  uint256 remainFiftyOPool */\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":4350:4383  uint256 dividentPayoutOPoolAmount */\n      dup1\n        /* \"DripWarrior/checckUpKep.sol\":4385:4411  uint256 perPersonFromTPool */\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":4416:4436  perPoolCalculation() */\n      tag_112\n        /* \"DripWarrior/checckUpKep.sol\":4416:4434  perPoolCalculation */\n      tag_113\n        /* \"DripWarrior/checckUpKep.sol\":4416:4436  perPoolCalculation() */\n      jump\t// in\n    tag_112:\n        /* \"DripWarrior/checckUpKep.sol\":4323:4436  ( uint256 remainFiftyOPool,uint256 dividentPayoutOPoolAmount, uint256 perPersonFromTPool)  = perPoolCalculation() */\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      swap1\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":4463:4479  uint256 maxlimit */\n      0x00\n      dup1\n        /* \"DripWarrior/checckUpKep.sol\":4490:5384  for(uint256 i = 0; i < noOfUsers; i++){... */\n    tag_114:\n        /* \"DripWarrior/checckUpKep.sol\":4513:4522  noOfUsers */\n      sload(0x0c)\n        /* \"DripWarrior/checckUpKep.sol\":4509:4510  i */\n      dup2\n        /* \"DripWarrior/checckUpKep.sol\":4509:4522  i < noOfUsers */\n      lt\n        /* \"DripWarrior/checckUpKep.sol\":4490:5384  for(uint256 i = 0; i < noOfUsers; i++){... */\n      iszero\n      tag_115\n      jumpi\n        /* \"DripWarrior/checckUpKep.sol\":4547:4554  blocked */\n      and(0xff, sload(0x09))\n        /* \"DripWarrior/checckUpKep.sol\":4543:5361  if(!blocked){... */\n      tag_117\n      jumpi\n        /* \"DripWarrior/checckUpKep.sol\":4637:4654  totalStakedAmount */\n      sload(0x0b)\n        /* \"DripWarrior/checckUpKep.sol\":4574:4601  uint256 eachSharePercentage */\n      0x00\n      swap1\n        /* \"DripWarrior/checckUpKep.sol\":4605:4632  totalStakedAmount * (10000) */\n      tag_118\n        /* \"DripWarrior/checckUpKep.sol\":4637:4654  totalStakedAmount */\n      dup2\n        /* \"DripWarrior/checckUpKep.sol\":4626:4631  10000 */\n      0x2710\n        /* \"DripWarrior/checckUpKep.sol\":4605:4632  totalStakedAmount * (10000) */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"DripWarrior/checckUpKep.sol\":4604:4655  (totalStakedAmount * (10000)) / (totalStakedAmount) */\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"DripWarrior/checckUpKep.sol\":4574:4655  uint256 eachSharePercentage = (totalStakedAmount * (10000)) / (totalStakedAmount) */\n      swap1\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":4690:4712  uint256 eachSendAmount */\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":4715:4782  calculatePercentage(dividentPayoutOPoolAmount, eachSharePercentage) */\n      tag_122\n        /* \"DripWarrior/checckUpKep.sol\":4735:4760  dividentPayoutOPoolAmount */\n      dup7\n        /* \"DripWarrior/checckUpKep.sol\":4762:4781  eachSharePercentage */\n      dup4\n        /* \"DripWarrior/checckUpKep.sol\":4715:4734  calculatePercentage */\n      tag_123\n        /* \"DripWarrior/checckUpKep.sol\":4715:4782  calculatePercentage(dividentPayoutOPoolAmount, eachSharePercentage) */\n      jump\t// in\n    tag_122:\n        /* \"DripWarrior/checckUpKep.sol\":4690:4782  uint256 eachSendAmount = calculatePercentage(dividentPayoutOPoolAmount, eachSharePercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":4800:4823  uint256 eachSendAmount1 */\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":4826:4884  calculatePercentage(remainFiftyOPool, eachSharePercentage) */\n      tag_124\n        /* \"DripWarrior/checckUpKep.sol\":4846:4862  remainFiftyOPool */\n      dup9\n        /* \"DripWarrior/checckUpKep.sol\":4864:4883  eachSharePercentage */\n      dup5\n        /* \"DripWarrior/checckUpKep.sol\":4826:4845  calculatePercentage */\n      tag_123\n        /* \"DripWarrior/checckUpKep.sol\":4826:4884  calculatePercentage(remainFiftyOPool, eachSharePercentage) */\n      jump\t// in\n    tag_124:\n        /* \"DripWarrior/checckUpKep.sol\":4800:4884  uint256 eachSendAmount1 = calculatePercentage(remainFiftyOPool, eachSharePercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":4942:4956  eachSendAmount */\n      dup2\n        /* \"DripWarrior/checckUpKep.sol\":4919:4938  ownerShipPoolAmount */\n      0x0d\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":4919:4956  ownerShipPoolAmount -= eachSendAmount */\n      dup3\n      dup3\n      sload\n      tag_125\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_125:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":4999:5025  maxlimit += eachSendAmount */\n      tag_126\n      swap1\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":5011:5025  eachSendAmount */\n      dup3\n        /* \"DripWarrior/checckUpKep.sol\":4999:5025  maxlimit += eachSendAmount */\n      dup7\n      tag_127\n      jump\t// in\n    tag_126:\n      swap5\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":5065:5083  perPersonFromTPool */\n      dup6\n        /* \"DripWarrior/checckUpKep.sol\":5043:5061  treasuryPoolAmount */\n      0x0e\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":5043:5083  treasuryPoolAmount -= perPersonFromTPool */\n      dup3\n      dup3\n      sload\n      tag_128\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_128:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":5125:5143  perPersonFromTPool */\n      dup6\n        /* \"DripWarrior/checckUpKep.sol\":5102:5121  receiveFromTreasury */\n      0x07\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":5102:5143  receiveFromTreasury += perPersonFromTPool */\n      dup3\n      dup3\n      sload\n      tag_129\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_129:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":5185:5199  eachSendAmount */\n      dup2\n        /* \"DripWarrior/checckUpKep.sol\":5160:5181  receiveFromOwneerShip */\n      0x08\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":5160:5199  receiveFromOwneerShip += eachSendAmount */\n      dup3\n      dup3\n      sload\n      tag_130\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_130:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":5234:5257  uint256 totalSendAmount */\n      0x00\n      swap1\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":5260:5295  eachSendAmount + perPersonFromTPool */\n      tag_131\n        /* \"DripWarrior/checckUpKep.sol\":5277:5295  perPersonFromTPool */\n      dup8\n        /* \"DripWarrior/checckUpKep.sol\":5260:5274  eachSendAmount */\n      dup5\n        /* \"DripWarrior/checckUpKep.sol\":5260:5295  eachSendAmount + perPersonFromTPool */\n      tag_127\n      jump\t// in\n    tag_131:\n        /* \"DripWarrior/checckUpKep.sol\":5234:5295  uint256 totalSendAmount = eachSendAmount + perPersonFromTPool */\n      swap1\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":5330:5345  totalSendAmount */\n      dup1\n        /* \"DripWarrior/checckUpKep.sol\":5312:5326  receivedAmount */\n      0x0a\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":5312:5345  receivedAmount += totalSendAmount */\n      dup3\n      dup3\n      sload\n      tag_132\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_132:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":4543:5361  if(!blocked){... */\n    tag_117:\n        /* \"DripWarrior/checckUpKep.sol\":4524:4527  i++ */\n      0x01\n      add\n        /* \"DripWarrior/checckUpKep.sol\":4490:5384  for(uint256 i = 0; i < noOfUsers; i++){... */\n      jump(tag_114)\n    tag_115:\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":4303:5400  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":4269:5400  function weeklyTransfer() public  {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_136\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_77\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_105\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_77\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"DripWarrior/checckUpKep.sol\":5762:6710  function perPoolCalculation() private returns(uint256, uint256,uint256){... */\n    tag_113:\n        /* \"DripWarrior/checckUpKep.sol\":5808:5815  uint256 */\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":5817:5824  uint256 */\n      dup1\n        /* \"DripWarrior/checckUpKep.sol\":5825:5832  uint256 */\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":5853:5877  uint256 remainFiftyOPool */\n      dup1\n        /* \"DripWarrior/checckUpKep.sol\":5880:5926  calculatePercentage(ownerShipPoolAmount, 5000) */\n      tag_148\n        /* \"DripWarrior/checckUpKep.sol\":5900:5919  ownerShipPoolAmount */\n      sload(0x0d)\n        /* \"DripWarrior/checckUpKep.sol\":5921:5925  5000 */\n      0x1388\n        /* \"DripWarrior/checckUpKep.sol\":5880:5899  calculatePercentage */\n      tag_123\n        /* \"DripWarrior/checckUpKep.sol\":5880:5926  calculatePercentage(ownerShipPoolAmount, 5000) */\n      jump\t// in\n    tag_148:\n        /* \"DripWarrior/checckUpKep.sol\":5853:5926  uint256 remainFiftyOPool = calculatePercentage(ownerShipPoolAmount, 5000) */\n      swap1\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":5937:5970  uint256 dividentPayoutOPoolAmount */\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":5973:6037  calculatePercentage(remainFiftyOPool, odividentPayoutPercentage) */\n      tag_149\n        /* \"DripWarrior/checckUpKep.sol\":5993:6009  remainFiftyOPool */\n      dup3\n        /* \"DripWarrior/checckUpKep.sol\":6011:6036  odividentPayoutPercentage */\n      sload(0x0f)\n        /* \"DripWarrior/checckUpKep.sol\":5973:5992  calculatePercentage */\n      tag_123\n        /* \"DripWarrior/checckUpKep.sol\":5973:6037  calculatePercentage(remainFiftyOPool, odividentPayoutPercentage) */\n      jump\t// in\n    tag_149:\n        /* \"DripWarrior/checckUpKep.sol\":5937:6037  uint256 dividentPayoutOPoolAmount = calculatePercentage(remainFiftyOPool, odividentPayoutPercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":6047:6083  uint256 fifteenPercenntToTPoolAmount */\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":6086:6149  calculatePercentage(remainFiftyOPool, flowToTreasuryPercentage) */\n      tag_150\n        /* \"DripWarrior/checckUpKep.sol\":6106:6122  remainFiftyOPool */\n      dup4\n        /* \"DripWarrior/checckUpKep.sol\":6124:6148  flowToTreasuryPercentage */\n      sload(0x10)\n        /* \"DripWarrior/checckUpKep.sol\":6086:6105  calculatePercentage */\n      tag_123\n        /* \"DripWarrior/checckUpKep.sol\":6086:6149  calculatePercentage(remainFiftyOPool, flowToTreasuryPercentage) */\n      jump\t// in\n    tag_150:\n        /* \"DripWarrior/checckUpKep.sol\":6047:6149  uint256 fifteenPercenntToTPoolAmount = calculatePercentage(remainFiftyOPool, flowToTreasuryPercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":6159:6195  uint256 tenPercenntToMaintenceAmount */\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":6198:6260  calculatePercentage(remainFiftyOPool, maintainceFeePercentage) */\n      tag_151\n        /* \"DripWarrior/checckUpKep.sol\":6218:6234  remainFiftyOPool */\n      dup5\n        /* \"DripWarrior/checckUpKep.sol\":6236:6259  maintainceFeePercentage */\n      sload(0x11)\n        /* \"DripWarrior/checckUpKep.sol\":6198:6217  calculatePercentage */\n      tag_123\n        /* \"DripWarrior/checckUpKep.sol\":6198:6260  calculatePercentage(remainFiftyOPool, maintainceFeePercentage) */\n      jump\t// in\n    tag_151:\n        /* \"DripWarrior/checckUpKep.sol\":6159:6260  uint256 tenPercenntToMaintenceAmount = calculatePercentage(remainFiftyOPool, maintainceFeePercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":6270:6300  uint256 remainFiftyTPoolAmount */\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":6303:6369  calculatePercentage(treasuryPoolAmount, tdividentPayoutPercentage) */\n      tag_152\n        /* \"DripWarrior/checckUpKep.sol\":6323:6341  treasuryPoolAmount */\n      sload(0x0e)\n        /* \"DripWarrior/checckUpKep.sol\":6343:6368  tdividentPayoutPercentage */\n      sload(0x12)\n        /* \"DripWarrior/checckUpKep.sol\":6303:6322  calculatePercentage */\n      tag_123\n        /* \"DripWarrior/checckUpKep.sol\":6303:6369  calculatePercentage(treasuryPoolAmount, tdividentPayoutPercentage) */\n      jump\t// in\n    tag_152:\n        /* \"DripWarrior/checckUpKep.sol\":6270:6369  uint256 remainFiftyTPoolAmount = calculatePercentage(treasuryPoolAmount, tdividentPayoutPercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":6388:6414  uint256 perPersonFromTPool */\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":6440:6449  noOfUsers */\n      sload(0x0c)\n        /* \"DripWarrior/checckUpKep.sol\":6417:6439  remainFiftyTPoolAmount */\n      dup3\n        /* \"DripWarrior/checckUpKep.sol\":6417:6449  remainFiftyTPoolAmount/noOfUsers */\n      tag_153\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_153:\n        /* \"DripWarrior/checckUpKep.sol\":6388:6449  uint256 perPersonFromTPool = remainFiftyTPoolAmount/noOfUsers */\n      swap1\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":6492:6551  fifteenPercenntToTPoolAmount + tenPercenntToMaintenceAmount */\n      tag_154\n        /* \"DripWarrior/checckUpKep.sol\":6523:6551  tenPercenntToMaintenceAmount */\n      dup4\n        /* \"DripWarrior/checckUpKep.sol\":6492:6520  fifteenPercenntToTPoolAmount */\n      dup6\n        /* \"DripWarrior/checckUpKep.sol\":6492:6551  fifteenPercenntToTPoolAmount + tenPercenntToMaintenceAmount */\n      tag_127\n      jump\t// in\n    tag_154:\n        /* \"DripWarrior/checckUpKep.sol\":6468:6487  ownerShipPoolAmount */\n      0x0d\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":6468:6552  ownerShipPoolAmount -= (fifteenPercenntToTPoolAmount + tenPercenntToMaintenceAmount) */\n      dup3\n      dup3\n      sload\n      tag_155\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_155:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":6584:6612  fifteenPercenntToTPoolAmount */\n      dup4\n        /* \"DripWarrior/checckUpKep.sol\":6562:6580  treasuryPoolAmount */\n      0x0e\n      0x00\n        /* \"DripWarrior/checckUpKep.sol\":6562:6612  treasuryPoolAmount += fifteenPercenntToTPoolAmount */\n      dup3\n      dup3\n      sload\n      tag_156\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_156:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":6641:6657  remainFiftyOPool */\n      swap6\n      swap10\n        /* \"DripWarrior/checckUpKep.sol\":6658:6683  dividentPayoutOPoolAmount */\n      swap5\n      swap9\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":6684:6702  perPersonFromTPool */\n      swap7\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":5762:6710  function perPoolCalculation() private returns(uint256, uint256,uint256){... */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/checckUpKep.sol\":6716:6957  function calculatePercentage(uint256 _totalStakeAmount,uint256 percentageNumber) private pure returns(uint256) {... */\n    tag_123:\n        /* \"DripWarrior/checckUpKep.sol\":6818:6825  uint256 */\n      0x00\n      dup1\n        /* \"DripWarrior/checckUpKep.sol\":6908:6913  10000 */\n      0x2710\n        /* \"DripWarrior/checckUpKep.sol\":6866:6904  _totalStakeAmount * (percentageNumber) */\n      tag_158\n        /* \"DripWarrior/checckUpKep.sol\":6887:6903  percentageNumber */\n      dup5\n        /* \"DripWarrior/checckUpKep.sol\":6866:6883  _totalStakeAmount */\n      dup7\n        /* \"DripWarrior/checckUpKep.sol\":6866:6904  _totalStakeAmount * (percentageNumber) */\n      tag_119\n      jump\t// in\n    tag_158:\n        /* \"DripWarrior/checckUpKep.sol\":6866:6914  _totalStakeAmount * (percentageNumber) / (10000) */\n      tag_159\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_159:\n        /* \"DripWarrior/checckUpKep.sol\":6845:6914  uint256 serviceFee = _totalStakeAmount * (percentageNumber) / (10000) */\n      swap2\n      pop\n      pop\n        /* \"DripWarrior/checckUpKep.sol\":6716:6957  function calculatePercentage(uint256 _totalStakeAmount,uint256 percentageNumber) private pure returns(uint256) {... */\n    tag_157:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":596:1182   */\n    tag_42:\n        /* \"#utility.yul\":666:672   */\n      0x00\n        /* \"#utility.yul\":674:680   */\n      dup1\n        /* \"#utility.yul\":727:729   */\n      0x20\n        /* \"#utility.yul\":715:724   */\n      dup4\n        /* \"#utility.yul\":706:713   */\n      dup6\n        /* \"#utility.yul\":702:725   */\n      sub\n        /* \"#utility.yul\":698:730   */\n      slt\n        /* \"#utility.yul\":695:747   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":743:744   */\n      0x00\n        /* \"#utility.yul\":740:741   */\n      dup1\n        /* \"#utility.yul\":733:745   */\n      revert\n        /* \"#utility.yul\":695:747   */\n    tag_167:\n        /* \"#utility.yul\":783:792   */\n      dup3\n        /* \"#utility.yul\":770:793   */\n      calldataload\n        /* \"#utility.yul\":816:834   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":808:814   */\n      dup2\n        /* \"#utility.yul\":805:835   */\n      gt\n        /* \"#utility.yul\":802:852   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":848:849   */\n      0x00\n        /* \"#utility.yul\":845:846   */\n      dup1\n        /* \"#utility.yul\":838:850   */\n      revert\n        /* \"#utility.yul\":802:852   */\n    tag_168:\n        /* \"#utility.yul\":871:893   */\n      dup4\n      add\n        /* \"#utility.yul\":924:928   */\n      0x1f\n        /* \"#utility.yul\":916:929   */\n      dup2\n      add\n        /* \"#utility.yul\":912:939   */\n      dup6\n      sgt\n        /* \"#utility.yul\":902:957   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":953:954   */\n      0x00\n        /* \"#utility.yul\":950:951   */\n      dup1\n        /* \"#utility.yul\":943:955   */\n      revert\n        /* \"#utility.yul\":902:957   */\n    tag_169:\n        /* \"#utility.yul\":993:995   */\n      dup1\n        /* \"#utility.yul\":980:996   */\n      calldataload\n        /* \"#utility.yul\":1019:1037   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1011:1017   */\n      dup2\n        /* \"#utility.yul\":1008:1038   */\n      gt\n        /* \"#utility.yul\":1005:1055   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":1051:1052   */\n      0x00\n        /* \"#utility.yul\":1048:1049   */\n      dup1\n        /* \"#utility.yul\":1041:1053   */\n      revert\n        /* \"#utility.yul\":1005:1055   */\n    tag_170:\n        /* \"#utility.yul\":1096:1103   */\n      dup6\n        /* \"#utility.yul\":1091:1093   */\n      0x20\n        /* \"#utility.yul\":1082:1088   */\n      dup3\n        /* \"#utility.yul\":1078:1080   */\n      dup5\n        /* \"#utility.yul\":1074:1089   */\n      add\n        /* \"#utility.yul\":1070:1094   */\n      add\n        /* \"#utility.yul\":1067:1104   */\n      gt\n        /* \"#utility.yul\":1064:1121   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":1117:1118   */\n      0x00\n        /* \"#utility.yul\":1114:1115   */\n      dup1\n        /* \"#utility.yul\":1107:1119   */\n      revert\n        /* \"#utility.yul\":1064:1121   */\n    tag_171:\n        /* \"#utility.yul\":1148:1150   */\n      0x20\n        /* \"#utility.yul\":1140:1151   */\n      swap2\n      swap1\n      swap2\n      add\n      swap6\n        /* \"#utility.yul\":1170:1176   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":596:1182   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1533   */\n    tag_46:\n        /* \"#utility.yul\":1255:1261   */\n      0x00\n        /* \"#utility.yul\":1263:1269   */\n      dup1\n        /* \"#utility.yul\":1316:1318   */\n      0x40\n        /* \"#utility.yul\":1304:1313   */\n      dup4\n        /* \"#utility.yul\":1295:1302   */\n      dup6\n        /* \"#utility.yul\":1291:1314   */\n      sub\n        /* \"#utility.yul\":1287:1319   */\n      slt\n        /* \"#utility.yul\":1284:1336   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":1332:1333   */\n      0x00\n        /* \"#utility.yul\":1329:1330   */\n      dup1\n        /* \"#utility.yul\":1322:1334   */\n      revert\n        /* \"#utility.yul\":1284:1336   */\n    tag_173:\n      pop\n      pop\n        /* \"#utility.yul\":1377:1400   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1497:1499   */\n      0x20\n        /* \"#utility.yul\":1482:1500   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1469:1501   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1187:1533   */\n      jump\t// out\n        /* \"#utility.yul\":1538:2035   */\n    tag_57:\n        /* \"#utility.yul\":1721:1727   */\n      dup3\n        /* \"#utility.yul\":1714:1728   */\n      iszero\n        /* \"#utility.yul\":1707:1729   */\n      iszero\n        /* \"#utility.yul\":1696:1705   */\n      dup2\n        /* \"#utility.yul\":1689:1730   */\n      mstore\n        /* \"#utility.yul\":1766:1768   */\n      0x40\n        /* \"#utility.yul\":1761:1763   */\n      0x20\n        /* \"#utility.yul\":1750:1759   */\n      dup3\n        /* \"#utility.yul\":1746:1764   */\n      add\n        /* \"#utility.yul\":1739:1769   */\n      mstore\n        /* \"#utility.yul\":1670:1674   */\n      0x00\n        /* \"#utility.yul\":1798:1804   */\n      dup3\n        /* \"#utility.yul\":1792:1805   */\n      mload\n        /* \"#utility.yul\":1841:1847   */\n      dup1\n        /* \"#utility.yul\":1836:1838   */\n      0x40\n        /* \"#utility.yul\":1825:1834   */\n      dup5\n        /* \"#utility.yul\":1821:1839   */\n      add\n        /* \"#utility.yul\":1814:1848   */\n      mstore\n        /* \"#utility.yul\":1900:1906   */\n      dup1\n        /* \"#utility.yul\":1895:1897   */\n      0x20\n        /* \"#utility.yul\":1887:1893   */\n      dup6\n        /* \"#utility.yul\":1883:1898   */\n      add\n        /* \"#utility.yul\":1878:1880   */\n      0x60\n        /* \"#utility.yul\":1867:1876   */\n      dup6\n        /* \"#utility.yul\":1863:1881   */\n      add\n        /* \"#utility.yul\":1857:1907   */\n      mcopy\n        /* \"#utility.yul\":1956:1957   */\n      0x00\n        /* \"#utility.yul\":1951:1953   */\n      0x60\n        /* \"#utility.yul\":1942:1948   */\n      dup3\n        /* \"#utility.yul\":1931:1940   */\n      dup6\n        /* \"#utility.yul\":1927:1949   */\n      add\n        /* \"#utility.yul\":1923:1954   */\n      add\n        /* \"#utility.yul\":1916:1958   */\n      mstore\n        /* \"#utility.yul\":2026:2028   */\n      0x60\n        /* \"#utility.yul\":2019:2021   */\n      0x1f\n        /* \"#utility.yul\":2015:2022   */\n      not\n        /* \"#utility.yul\":2010:2012   */\n      0x1f\n        /* \"#utility.yul\":2002:2008   */\n      dup4\n        /* \"#utility.yul\":1998:2013   */\n      add\n        /* \"#utility.yul\":1994:2023   */\n      and\n        /* \"#utility.yul\":1983:1992   */\n      dup5\n        /* \"#utility.yul\":1979:2024   */\n      add\n        /* \"#utility.yul\":1975:2029   */\n      add\n        /* \"#utility.yul\":1967:2029   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1538:2035   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2040:2326   */\n    tag_68:\n        /* \"#utility.yul\":2099:2105   */\n      0x00\n        /* \"#utility.yul\":2152:2154   */\n      0x20\n        /* \"#utility.yul\":2140:2149   */\n      dup3\n        /* \"#utility.yul\":2131:2138   */\n      dup5\n        /* \"#utility.yul\":2127:2150   */\n      sub\n        /* \"#utility.yul\":2123:2155   */\n      slt\n        /* \"#utility.yul\":2120:2172   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":2168:2169   */\n      0x00\n        /* \"#utility.yul\":2165:2166   */\n      dup1\n        /* \"#utility.yul\":2158:2170   */\n      revert\n        /* \"#utility.yul\":2120:2172   */\n    tag_176:\n        /* \"#utility.yul\":2194:2217   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2246:2277   */\n      dup2\n      and\n        /* \"#utility.yul\":2236:2278   */\n      dup2\n      eq\n        /* \"#utility.yul\":2226:2296   */\n      tag_177\n      jumpi\n        /* \"#utility.yul\":2292:2293   */\n      0x00\n        /* \"#utility.yul\":2289:2290   */\n      dup1\n        /* \"#utility.yul\":2282:2294   */\n      revert\n        /* \"#utility.yul\":2226:2296   */\n    tag_177:\n        /* \"#utility.yul\":2315:2320   */\n      swap4\n        /* \"#utility.yul\":2040:2326   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2759:2886   */\n    tag_161:\n        /* \"#utility.yul\":2820:2830   */\n      0x4e487b71\n        /* \"#utility.yul\":2815:2818   */\n      0xe0\n        /* \"#utility.yul\":2811:2831   */\n      shl\n        /* \"#utility.yul\":2808:2809   */\n      0x00\n        /* \"#utility.yul\":2801:2832   */\n      mstore\n        /* \"#utility.yul\":2851:2855   */\n      0x11\n        /* \"#utility.yul\":2848:2849   */\n      0x04\n        /* \"#utility.yul\":2841:2856   */\n      mstore\n        /* \"#utility.yul\":2875:2879   */\n      0x24\n        /* \"#utility.yul\":2872:2873   */\n      0x00\n        /* \"#utility.yul\":2865:2880   */\n      revert\n        /* \"#utility.yul\":2891:3019   */\n    tag_84:\n        /* \"#utility.yul\":2958:2967   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2979:2990   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2976:3013   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":2993:3011   */\n      tag_157\n      tag_161\n      jump\t// in\n        /* \"#utility.yul\":3024:3192   */\n    tag_119:\n        /* \"#utility.yul\":3097:3106   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3128:3137   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3145:3160   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3139:3161   */\n      dup5\n      eq\n        /* \"#utility.yul\":3125:3162   */\n      or\n        /* \"#utility.yul\":3115:3186   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":3166:3184   */\n      tag_157\n      tag_161\n      jump\t// in\n        /* \"#utility.yul\":3197:3414   */\n    tag_121:\n        /* \"#utility.yul\":3237:3238   */\n      0x00\n        /* \"#utility.yul\":3263:3264   */\n      dup3\n        /* \"#utility.yul\":3253:3385   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":3307:3317   */\n      0x4e487b71\n        /* \"#utility.yul\":3302:3305   */\n      0xe0\n        /* \"#utility.yul\":3298:3318   */\n      shl\n        /* \"#utility.yul\":3295:3296   */\n      0x00\n        /* \"#utility.yul\":3288:3319   */\n      mstore\n        /* \"#utility.yul\":3342:3346   */\n      0x12\n        /* \"#utility.yul\":3339:3340   */\n      0x04\n        /* \"#utility.yul\":3332:3347   */\n      mstore\n        /* \"#utility.yul\":3370:3374   */\n      0x24\n        /* \"#utility.yul\":3367:3368   */\n      0x00\n        /* \"#utility.yul\":3360:3375   */\n      revert\n        /* \"#utility.yul\":3253:3385   */\n    tag_187:\n      pop\n        /* \"#utility.yul\":3399:3408   */\n      div\n      swap1\n        /* \"#utility.yul\":3197:3414   */\n      jump\t// out\n        /* \"#utility.yul\":3419:3544   */\n    tag_127:\n        /* \"#utility.yul\":3484:3493   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3505:3515   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3502:3538   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":3518:3536   */\n      tag_157\n      tag_161\n      jump\t// in\n\n    auxdata: 0xa26469706673582212209120a310dae1205a957815b459e1251be6b70cc35bfc17a2d9ed5f829eccedb964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_235": {
									"entryPoint": null,
									"id": 235,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_69": {
									"entryPoint": null,
									"id": 69,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_165": {
									"entryPoint": 138,
									"id": 165,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:219:4",
										"nodeType": "YulBlock",
										"src": "0:219:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:4",
													"nodeType": "YulBlock",
													"src": "115:102:4",
													"statements": [
														{
															"nativeSrc": "125:26:4",
															"nodeType": "YulAssignment",
															"src": "125:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:4",
																		"nodeType": "YulLiteral",
																		"src": "148:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:4"
																},
																"nativeSrc": "133:18:4",
																"nodeType": "YulFunctionCall",
																"src": "133:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:4",
																								"nodeType": "YulLiteral",
																								"src": "198:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:4",
																								"nodeType": "YulLiteral",
																								"src": "203:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:4"
																						},
																						"nativeSrc": "194:11:4",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:4",
																						"nodeType": "YulLiteral",
																						"src": "207:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:4"
																				},
																				"nativeSrc": "190:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:4"
																		},
																		"nativeSrc": "178:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:4"
																},
																"nativeSrc": "160:51:4",
																"nodeType": "YulFunctionCall",
																"src": "160:51:4"
															},
															"nativeSrc": "160:51:4",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:4",
														"nodeType": "YulTypedName",
														"src": "84:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:4",
														"nodeType": "YulTypedName",
														"src": "95:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:4",
														"nodeType": "YulTypedName",
														"src": "106:4:4",
														"type": ""
													}
												],
												"src": "14:203:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526009805460ff191690556801158e460913d00000600b556064600c55710b7abc627050305adf1495f92d4c589c0000600d819055600e5560c8600f819055601081905560118190556012553480156059575f80fd5b503380607e57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b608581608a565b5060d9565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610847806100e65f395ff3fe608060405234801561000f575f80fd5b50600436106100fb575f3560e01c80636626b26d11610093578063947a36fb11610063578063947a36fb146101ee578063d777cc6d146101f7578063e9c68e2c1461020a578063f2fde38b14610212575f80fd5b80636626b26d146101ad5780636e04ff0d146101b5578063715018a6146101d65780638da5cb5b146101de575f80fd5b80633f3b3b27116100ce5780633f3b3b27146101735780634585e33b1461017c5780635f17e6161461019157806361bc221a146101a4575f80fd5b80633070fbf8146100ff57806330cac9721461012f57806330e3f8f81461014657806339518b5e1461016a575b5f80fd5b600654610112906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61013860035481565b604051908152602001610126565b60065461015a90600160a01b900460ff1681565b6040519015158152602001610126565b61013860045481565b61013860055481565b61018f61018a3660046106a8565b610225565b005b61018f61019f366004610716565b610330565b61013860015481565b61018f61039b565b6101c86101c33660046106a8565b6103b6565b604051610126929190610736565b61018f6103e6565b5f546001600160a01b0316610112565b61013860025481565b61018f610205366004610774565b6103f9565b61018f610423565b61018f610220366004610774565b610524565b6006546001600160a01b031633146102aa5760405162461bcd60e51b815260206004820152603b60248201527f54686973206164647265737320646f6573206e6f742068617665207065726d6960448201527f7373696f6e20746f2063616c6c20706572666f726d55706b656570000000000060648201526084015b60405180910390fd5b6002545f036102d257600254604051637154000760e01b81526004016102a191815260200190565b600454421061030f574260058190556102e9610423565b5f6102f482426107b5565b90508060035461030491906107b5565b6002555061032c9050565b600480546040516354593e7560e01b8152918201526024016102a1565b5050565b610338610561565b5f811161035b57604051637154000760e01b8152600481018290526024016102a1565b4282101561037f576040516354593e7560e01b8152600481018390526024016102a1565b61038942836107b5565b60025560049190915542600555600355565b6103a3610561565b5f6002556006805460ff60a01b19169055565b5f60605f600254600554426103cb91906107b5565b60408051602081019091525f81529110969095509350505050565b6103ee610561565b6103f75f61058d565b565b610401610561565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b5f805f61042e6105dc565b919450925090505f805b600c5481101561051d5760095460ff1661051557600b545f9061045d816127106107c8565b61046791906107df565b90505f6104748683610685565b90505f6104818884610685565b905081600d5f82825461049491906107b5565b909155506104a4905082866107fe565b945085600e5f8282546104b791906107b5565b925050819055508560075f8282546104cf91906107fe565b925050819055508160085f8282546104e791906107fe565b909155505f90506104f887846107fe565b905080600a5f82825461050b91906107fe565b9091555050505050505b600101610438565b5050505050565b61052c610561565b6001600160a01b03811661055557604051631e4fbdf760e01b81525f60048201526024016102a1565b61055e8161058d565b50565b5f546001600160a01b031633146103f75760405163118cdaa760e01b81523360048201526024016102a1565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f805f806105ee600d54611388610685565b90505f6105fd82600f54610685565b90505f61060c83601054610685565b90505f61061b84601154610685565b90505f61062c600e54601254610685565b90505f600c548261063d91906107df565b905061064983856107fe565b600d5f82825461065991906107b5565b9250508190555083600e5f82825461067191906107fe565b909155509599949850965092945050505050565b5f8061271061069484866107c8565b61069e91906107df565b9150505b92915050565b5f80602083850312156106b9575f80fd5b823567ffffffffffffffff8111156106cf575f80fd5b8301601f810185136106df575f80fd5b803567ffffffffffffffff8111156106f5575f80fd5b856020828401011115610706575f80fd5b6020919091019590945092505050565b5f8060408385031215610727575f80fd5b50508035926020909101359150565b8215158152604060208201525f82518060408401528060208501606085015e5f606082850101526060601f19601f8301168401019150509392505050565b5f60208284031215610784575f80fd5b81356001600160a01b038116811461079a575f80fd5b9392505050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156106a2576106a26107a1565b80820281158282048414176106a2576106a26107a1565b5f826107f957634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156106a2576106a26107a156fea26469706673582212209120a310dae1205a957815b459e1251be6b70cc35bfc17a2d9ed5f829eccedb964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH9 0x1158E460913D00000 PUSH1 0xB SSTORE PUSH1 0x64 PUSH1 0xC SSTORE PUSH18 0xB7ABC627050305ADF1495F92D4C589C0000 PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0xE SSTORE PUSH1 0xC8 PUSH1 0xF DUP2 SWAP1 SSTORE PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x11 DUP2 SWAP1 SSTORE PUSH1 0x12 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x59 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER DUP1 PUSH1 0x7E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x85 DUP2 PUSH1 0x8A JUMP JUMPDEST POP PUSH1 0xD9 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x847 DUP1 PUSH2 0xE6 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6626B26D GT PUSH2 0x93 JUMPI DUP1 PUSH4 0x947A36FB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x947A36FB EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xD777CC6D EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xE9C68E2C EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x212 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6626B26D EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F3B3B27 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x5F17E616 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x61BC221A EQ PUSH2 0x1A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3070FBF8 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x30CAC972 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x30E3F8F8 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x39518B5E EQ PUSH2 0x16A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x112 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x15A SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x126 JUMP JUMPDEST PUSH2 0x138 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x138 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18F PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x716 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH2 0x138 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x39B JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP3 SWAP2 SWAP1 PUSH2 0x736 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x3E6 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x112 JUMP JUMPDEST PUSH2 0x138 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x774 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x423 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0x774 JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320646F6573206E6F742068617665207065726D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373696F6E20746F2063616C6C20706572666F726D55706B6565700000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH0 SUB PUSH2 0x2D2 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x71540007 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x30F JUMPI TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH2 0x2E9 PUSH2 0x423 JUMP JUMPDEST PUSH0 PUSH2 0x2F4 DUP3 TIMESTAMP PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 SLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x2 SSTORE POP PUSH2 0x32C SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x54593E75 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2A1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x338 PUSH2 0x561 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD PUSH4 0x71540007 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x2A1 JUMP JUMPDEST TIMESTAMP DUP3 LT ISZERO PUSH2 0x37F JUMPI PUSH1 0x40 MLOAD PUSH4 0x54593E75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0x389 TIMESTAMP DUP4 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE TIMESTAMP PUSH1 0x5 SSTORE PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x3A3 PUSH2 0x561 JUMP JUMPDEST PUSH0 PUSH1 0x2 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH0 PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP2 LT SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x561 JUMP JUMPDEST PUSH2 0x3F7 PUSH0 PUSH2 0x58D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x401 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x42E PUSH2 0x5DC JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x51D JUMPI PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH2 0x515 JUMPI PUSH1 0xB SLOAD PUSH0 SWAP1 PUSH2 0x45D DUP2 PUSH2 0x2710 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x7DF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x474 DUP7 DUP4 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x481 DUP9 DUP5 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4A4 SWAP1 POP DUP3 DUP7 PUSH2 0x7FE JUMP JUMPDEST SWAP5 POP DUP6 PUSH1 0xE PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x7FE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x7FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0x4F8 DUP8 DUP5 PUSH2 0x7FE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x50B SWAP2 SWAP1 PUSH2 0x7FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x438 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x52C PUSH2 0x561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0x55E DUP2 PUSH2 0x58D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2A1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x5EE PUSH1 0xD SLOAD PUSH2 0x1388 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x5FD DUP3 PUSH1 0xF SLOAD PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x60C DUP4 PUSH1 0x10 SLOAD PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x61B DUP5 PUSH1 0x11 SLOAD PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x62C PUSH1 0xE SLOAD PUSH1 0x12 SLOAD PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC SLOAD DUP3 PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x7DF JUMP JUMPDEST SWAP1 POP PUSH2 0x649 DUP4 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x659 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0xE PUSH0 DUP3 DUP3 SLOAD PUSH2 0x671 SWAP2 SWAP1 PUSH2 0x7FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP6 SWAP10 SWAP5 SWAP9 POP SWAP7 POP SWAP3 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2710 PUSH2 0x694 DUP5 DUP7 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x69E SWAP2 SWAP1 PUSH2 0x7DF JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x6DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x706 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x727 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x60 DUP6 ADD MCOPY PUSH0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x784 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x79A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6A2 JUMPI PUSH2 0x6A2 PUSH2 0x7A1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x6A2 JUMPI PUSH2 0x6A2 PUSH2 0x7A1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x7F9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6A2 JUMPI PUSH2 0x6A2 PUSH2 0x7A1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 KECCAK256 LOG3 LT 0xDA 0xE1 KECCAK256 GAS SWAP6 PUSH25 0x15B459E1251BE6B70CC35BFC17A2D9ED5F829ECCEDB964736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "549:6545:3:-:0;;;4170:20;;;-1:-1:-1;;4170:20:3;;;4254:8;4225:37;;5425:3;5405:23;;5466:30;5435:61;;;;5504;;5610:3;5573:40;;;;5622:38;;;;5669:37;;;;5716:39;;1155:49;;;;;;;;;-1:-1:-1;1176:10:3;;1269:95:1;;1322:31;;-1:-1:-1;;;1322:31:1;;1350:1;1322:31;;;160:51:4;133:18;;1322:31:1;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;549:6545:3;;2912:187:1;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:1;;;-1:-1:-1;;;;;;3020:17:1;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:203:4:-;549:6545:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_103": {
									"entryPoint": 1377,
									"id": 103,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_178": {
									"entryPoint": null,
									"id": 178,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_165": {
									"entryPoint": 1421,
									"id": 165,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculatePercentage_592": {
									"entryPoint": 1669,
									"id": 592,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkOnce_219": {
									"entryPoint": null,
									"id": 219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkUpkeep_263": {
									"entryPoint": 950,
									"id": 263,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@counter_207": {
									"entryPoint": null,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@interval_209": {
									"entryPoint": null,
									"id": 209,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastTimeStamp_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@off_383": {
									"entryPoint": 923,
									"id": 383,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_86": {
									"entryPoint": null,
									"id": 86,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@perPoolCalculation_570": {
									"entryPoint": 1500,
									"id": 570,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@performUpkeep_320": {
									"entryPoint": 549,
									"id": 320,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@realInterval_211": {
									"entryPoint": null,
									"id": 211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_117": {
									"entryPoint": 998,
									"id": 117,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_forwarderAddress_217": {
									"entryPoint": null,
									"id": 217,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setForwarderAddress_604": {
									"entryPoint": 1017,
									"id": 604,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setInterval_369": {
									"entryPoint": 816,
									"id": 369,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@startingTime_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_145": {
									"entryPoint": 1316,
									"id": 145,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@weeklyTransfer_482": {
									"entryPoint": 1059,
									"id": 482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_calldata_ptr": {
									"entryPoint": 1704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 1814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1953,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3546:4",
										"nodeType": "YulBlock",
										"src": "0:3546:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:4",
													"nodeType": "YulBlock",
													"src": "115:102:4",
													"statements": [
														{
															"nativeSrc": "125:26:4",
															"nodeType": "YulAssignment",
															"src": "125:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:4",
																		"nodeType": "YulLiteral",
																		"src": "148:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:4"
																},
																"nativeSrc": "133:18:4",
																"nodeType": "YulFunctionCall",
																"src": "133:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:4",
																								"nodeType": "YulLiteral",
																								"src": "198:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:4",
																								"nodeType": "YulLiteral",
																								"src": "203:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:4"
																						},
																						"nativeSrc": "194:11:4",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:4",
																						"nodeType": "YulLiteral",
																						"src": "207:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:4"
																				},
																				"nativeSrc": "190:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:4"
																		},
																		"nativeSrc": "178:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:4"
																},
																"nativeSrc": "160:51:4",
																"nodeType": "YulFunctionCall",
																"src": "160:51:4"
															},
															"nativeSrc": "160:51:4",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:4",
														"nodeType": "YulTypedName",
														"src": "84:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:4",
														"nodeType": "YulTypedName",
														"src": "95:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:4",
														"nodeType": "YulTypedName",
														"src": "106:4:4",
														"type": ""
													}
												],
												"src": "14:203:4"
											},
											{
												"body": {
													"nativeSrc": "323:76:4",
													"nodeType": "YulBlock",
													"src": "323:76:4",
													"statements": [
														{
															"nativeSrc": "333:26:4",
															"nodeType": "YulAssignment",
															"src": "333:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "345:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "345:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "356:2:4",
																		"nodeType": "YulLiteral",
																		"src": "356:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "341:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:4"
																},
																"nativeSrc": "341:18:4",
																"nodeType": "YulFunctionCall",
																"src": "341:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "333:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "333:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "375:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "375:9:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "386:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "386:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "368:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "368:6:4"
																},
																"nativeSrc": "368:25:4",
																"nodeType": "YulFunctionCall",
																"src": "368:25:4"
															},
															"nativeSrc": "368:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "368:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "222:177:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "292:9:4",
														"nodeType": "YulTypedName",
														"src": "292:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "303:6:4",
														"nodeType": "YulTypedName",
														"src": "303:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "314:4:4",
														"nodeType": "YulTypedName",
														"src": "314:4:4",
														"type": ""
													}
												],
												"src": "222:177:4"
											},
											{
												"body": {
													"nativeSrc": "499:92:4",
													"nodeType": "YulBlock",
													"src": "499:92:4",
													"statements": [
														{
															"nativeSrc": "509:26:4",
															"nodeType": "YulAssignment",
															"src": "509:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "521:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "521:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "532:2:4",
																		"nodeType": "YulLiteral",
																		"src": "532:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "517:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "517:3:4"
																},
																"nativeSrc": "517:18:4",
																"nodeType": "YulFunctionCall",
																"src": "517:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "509:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "509:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "551:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "551:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "576:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "576:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "569:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "569:6:4"
																				},
																				"nativeSrc": "569:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "569:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "562:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "562:6:4"
																		},
																		"nativeSrc": "562:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "544:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:4"
																},
																"nativeSrc": "544:41:4",
																"nodeType": "YulFunctionCall",
																"src": "544:41:4"
															},
															"nativeSrc": "544:41:4",
															"nodeType": "YulExpressionStatement",
															"src": "544:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "404:187:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "468:9:4",
														"nodeType": "YulTypedName",
														"src": "468:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "479:6:4",
														"nodeType": "YulTypedName",
														"src": "479:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "490:4:4",
														"nodeType": "YulTypedName",
														"src": "490:4:4",
														"type": ""
													}
												],
												"src": "404:187:4"
											},
											{
												"body": {
													"nativeSrc": "685:497:4",
													"nodeType": "YulBlock",
													"src": "685:497:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "731:16:4",
																"nodeType": "YulBlock",
																"src": "731:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "740:1:4",
																					"nodeType": "YulLiteral",
																					"src": "740:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "743:1:4",
																					"nodeType": "YulLiteral",
																					"src": "743:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "733:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "733:6:4"
																			},
																			"nativeSrc": "733:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "733:12:4"
																		},
																		"nativeSrc": "733:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "733:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "706:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "706:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "715:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "715:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "702:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "702:3:4"
																		},
																		"nativeSrc": "702:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "702:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "727:2:4",
																		"nodeType": "YulLiteral",
																		"src": "727:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "698:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "698:3:4"
																},
																"nativeSrc": "698:32:4",
																"nodeType": "YulFunctionCall",
																"src": "698:32:4"
															},
															"nativeSrc": "695:52:4",
															"nodeType": "YulIf",
															"src": "695:52:4"
														},
														{
															"nativeSrc": "756:37:4",
															"nodeType": "YulVariableDeclaration",
															"src": "756:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "783:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "783:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "770:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "770:12:4"
																},
																"nativeSrc": "770:23:4",
																"nodeType": "YulFunctionCall",
																"src": "770:23:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "760:6:4",
																	"nodeType": "YulTypedName",
																	"src": "760:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "836:16:4",
																"nodeType": "YulBlock",
																"src": "836:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "845:1:4",
																					"nodeType": "YulLiteral",
																					"src": "845:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "848:1:4",
																					"nodeType": "YulLiteral",
																					"src": "848:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "838:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "838:6:4"
																			},
																			"nativeSrc": "838:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "838:12:4"
																		},
																		"nativeSrc": "838:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "838:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "808:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "808:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "816:18:4",
																		"nodeType": "YulLiteral",
																		"src": "816:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "805:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "805:2:4"
																},
																"nativeSrc": "805:30:4",
																"nodeType": "YulFunctionCall",
																"src": "805:30:4"
															},
															"nativeSrc": "802:50:4",
															"nodeType": "YulIf",
															"src": "802:50:4"
														},
														{
															"nativeSrc": "861:32:4",
															"nodeType": "YulVariableDeclaration",
															"src": "861:32:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "875:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "875:9:4"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "886:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "886:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "871:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "871:3:4"
																},
																"nativeSrc": "871:22:4",
																"nodeType": "YulFunctionCall",
																"src": "871:22:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "865:2:4",
																	"nodeType": "YulTypedName",
																	"src": "865:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "941:16:4",
																"nodeType": "YulBlock",
																"src": "941:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "950:1:4",
																					"nodeType": "YulLiteral",
																					"src": "950:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "953:1:4",
																					"nodeType": "YulLiteral",
																					"src": "953:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "943:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "943:6:4"
																			},
																			"nativeSrc": "943:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "943:12:4"
																		},
																		"nativeSrc": "943:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "943:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "920:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "920:2:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "924:4:4",
																						"nodeType": "YulLiteral",
																						"src": "924:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "916:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "916:3:4"
																				},
																				"nativeSrc": "916:13:4",
																				"nodeType": "YulFunctionCall",
																				"src": "916:13:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "931:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "931:7:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "912:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "912:3:4"
																		},
																		"nativeSrc": "912:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "912:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "905:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "905:6:4"
																},
																"nativeSrc": "905:35:4",
																"nodeType": "YulFunctionCall",
																"src": "905:35:4"
															},
															"nativeSrc": "902:55:4",
															"nodeType": "YulIf",
															"src": "902:55:4"
														},
														{
															"nativeSrc": "966:30:4",
															"nodeType": "YulVariableDeclaration",
															"src": "966:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "993:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "993:2:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "980:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "980:12:4"
																},
																"nativeSrc": "980:16:4",
																"nodeType": "YulFunctionCall",
																"src": "980:16:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "970:6:4",
																	"nodeType": "YulTypedName",
																	"src": "970:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1039:16:4",
																"nodeType": "YulBlock",
																"src": "1039:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1048:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1048:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1051:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1051:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1041:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1041:6:4"
																			},
																			"nativeSrc": "1041:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1041:12:4"
																		},
																		"nativeSrc": "1041:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1041:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1011:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1011:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1019:18:4",
																		"nodeType": "YulLiteral",
																		"src": "1019:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1008:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1008:2:4"
																},
																"nativeSrc": "1008:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1008:30:4"
															},
															"nativeSrc": "1005:50:4",
															"nodeType": "YulIf",
															"src": "1005:50:4"
														},
														{
															"body": {
																"nativeSrc": "1105:16:4",
																"nodeType": "YulBlock",
																"src": "1105:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1114:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1114:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1117:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1117:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1107:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1107:6:4"
																			},
																			"nativeSrc": "1107:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1107:12:4"
																		},
																		"nativeSrc": "1107:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1107:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1078:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "1078:2:4"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1082:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1082:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1074:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1074:3:4"
																				},
																				"nativeSrc": "1074:15:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1074:15:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1091:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1091:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1070:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1070:3:4"
																		},
																		"nativeSrc": "1070:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1070:24:4"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1096:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "1096:7:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1067:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1067:2:4"
																},
																"nativeSrc": "1067:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1067:37:4"
															},
															"nativeSrc": "1064:57:4",
															"nodeType": "YulIf",
															"src": "1064:57:4"
														},
														{
															"nativeSrc": "1130:21:4",
															"nodeType": "YulAssignment",
															"src": "1130:21:4",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1144:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "1144:2:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1148:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1148:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1140:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:4"
																},
																"nativeSrc": "1140:11:4",
																"nodeType": "YulFunctionCall",
																"src": "1140:11:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1130:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:4"
																}
															]
														},
														{
															"nativeSrc": "1160:16:4",
															"nodeType": "YulAssignment",
															"src": "1160:16:4",
															"value": {
																"name": "length",
																"nativeSrc": "1170:6:4",
																"nodeType": "YulIdentifier",
																"src": "1170:6:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1160:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1160:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptr",
												"nativeSrc": "596:586:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "643:9:4",
														"nodeType": "YulTypedName",
														"src": "643:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "654:7:4",
														"nodeType": "YulTypedName",
														"src": "654:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "666:6:4",
														"nodeType": "YulTypedName",
														"src": "666:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "674:6:4",
														"nodeType": "YulTypedName",
														"src": "674:6:4",
														"type": ""
													}
												],
												"src": "596:586:4"
											},
											{
												"body": {
													"nativeSrc": "1274:259:4",
													"nodeType": "YulBlock",
													"src": "1274:259:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1320:16:4",
																"nodeType": "YulBlock",
																"src": "1320:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1329:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1329:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1332:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1332:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1322:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1322:6:4"
																			},
																			"nativeSrc": "1322:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1322:12:4"
																		},
																		"nativeSrc": "1322:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1322:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1295:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1295:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1304:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1304:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1291:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1291:3:4"
																		},
																		"nativeSrc": "1291:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1291:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1316:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1316:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1287:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1287:3:4"
																},
																"nativeSrc": "1287:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1287:32:4"
															},
															"nativeSrc": "1284:52:4",
															"nodeType": "YulIf",
															"src": "1284:52:4"
														},
														{
															"nativeSrc": "1345:14:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1345:14:4",
															"value": {
																"kind": "number",
																"nativeSrc": "1358:1:4",
																"nodeType": "YulLiteral",
																"src": "1358:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1349:5:4",
																	"nodeType": "YulTypedName",
																	"src": "1349:5:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1368:32:4",
															"nodeType": "YulAssignment",
															"src": "1368:32:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1390:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1390:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1377:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1377:12:4"
																},
																"nativeSrc": "1377:23:4",
																"nodeType": "YulFunctionCall",
																"src": "1377:23:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1368:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1368:5:4"
																}
															]
														},
														{
															"nativeSrc": "1409:15:4",
															"nodeType": "YulAssignment",
															"src": "1409:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "1419:5:4",
																"nodeType": "YulIdentifier",
																"src": "1419:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1409:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1409:6:4"
																}
															]
														},
														{
															"nativeSrc": "1433:16:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1433:16:4",
															"value": {
																"kind": "number",
																"nativeSrc": "1448:1:4",
																"nodeType": "YulLiteral",
																"src": "1448:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1437:7:4",
																	"nodeType": "YulTypedName",
																	"src": "1437:7:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1458:43:4",
															"nodeType": "YulAssignment",
															"src": "1458:43:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1486:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1486:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1497:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1497:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1482:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1482:3:4"
																		},
																		"nativeSrc": "1482:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1482:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1469:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1469:12:4"
																},
																"nativeSrc": "1469:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1469:32:4"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1458:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1458:7:4"
																}
															]
														},
														{
															"nativeSrc": "1510:17:4",
															"nodeType": "YulAssignment",
															"src": "1510:17:4",
															"value": {
																"name": "value_1",
																"nativeSrc": "1520:7:4",
																"nodeType": "YulIdentifier",
																"src": "1520:7:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1510:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1510:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1187:346:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1232:9:4",
														"nodeType": "YulTypedName",
														"src": "1232:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1243:7:4",
														"nodeType": "YulTypedName",
														"src": "1243:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1255:6:4",
														"nodeType": "YulTypedName",
														"src": "1255:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1263:6:4",
														"nodeType": "YulTypedName",
														"src": "1263:6:4",
														"type": ""
													}
												],
												"src": "1187:346:4"
											},
											{
												"body": {
													"nativeSrc": "1679:356:4",
													"nodeType": "YulBlock",
													"src": "1679:356:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1696:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1696:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1721:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1721:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1714:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "1714:6:4"
																				},
																				"nativeSrc": "1714:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1714:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1707:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1707:6:4"
																		},
																		"nativeSrc": "1707:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1707:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1689:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1689:6:4"
																},
																"nativeSrc": "1689:41:4",
																"nodeType": "YulFunctionCall",
																"src": "1689:41:4"
															},
															"nativeSrc": "1689:41:4",
															"nodeType": "YulExpressionStatement",
															"src": "1689:41:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1750:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1750:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1761:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1761:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1746:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1746:3:4"
																		},
																		"nativeSrc": "1746:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1746:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1766:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1766:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1739:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1739:6:4"
																},
																"nativeSrc": "1739:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1739:30:4"
															},
															"nativeSrc": "1739:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "1739:30:4"
														},
														{
															"nativeSrc": "1778:27:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1778:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1798:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1798:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1792:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1792:5:4"
																},
																"nativeSrc": "1792:13:4",
																"nodeType": "YulFunctionCall",
																"src": "1792:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1782:6:4",
																	"nodeType": "YulTypedName",
																	"src": "1782:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1825:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1825:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1836:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1836:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1821:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1821:3:4"
																		},
																		"nativeSrc": "1821:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1821:18:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1841:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1841:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1814:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1814:6:4"
																},
																"nativeSrc": "1814:34:4",
																"nodeType": "YulFunctionCall",
																"src": "1814:34:4"
															},
															"nativeSrc": "1814:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "1814:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1867:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1867:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1878:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1878:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1863:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1863:3:4"
																		},
																		"nativeSrc": "1863:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1863:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "1887:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1887:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1895:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1895:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1883:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1883:3:4"
																		},
																		"nativeSrc": "1883:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1883:15:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1900:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1900:6:4"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1857:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1857:5:4"
																},
																"nativeSrc": "1857:50:4",
																"nodeType": "YulFunctionCall",
																"src": "1857:50:4"
															},
															"nativeSrc": "1857:50:4",
															"nodeType": "YulExpressionStatement",
															"src": "1857:50:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1931:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1931:9:4"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1942:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1942:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1927:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1927:3:4"
																				},
																				"nativeSrc": "1927:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1927:22:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1951:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1951:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1923:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1923:3:4"
																		},
																		"nativeSrc": "1923:31:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1923:31:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1956:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1956:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1916:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1916:6:4"
																},
																"nativeSrc": "1916:42:4",
																"nodeType": "YulFunctionCall",
																"src": "1916:42:4"
															},
															"nativeSrc": "1916:42:4",
															"nodeType": "YulExpressionStatement",
															"src": "1916:42:4"
														},
														{
															"nativeSrc": "1967:62:4",
															"nodeType": "YulAssignment",
															"src": "1967:62:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1983:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1983:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "2002:6:4",
																								"nodeType": "YulIdentifier",
																								"src": "2002:6:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2010:2:4",
																								"nodeType": "YulLiteral",
																								"src": "2010:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1998:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "1998:3:4"
																						},
																						"nativeSrc": "1998:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "1998:15:4"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2019:2:4",
																								"nodeType": "YulLiteral",
																								"src": "2019:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "2015:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "2015:3:4"
																						},
																						"nativeSrc": "2015:7:4",
																						"nodeType": "YulFunctionCall",
																						"src": "2015:7:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1994:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1994:3:4"
																				},
																				"nativeSrc": "1994:29:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1994:29:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1979:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1979:3:4"
																		},
																		"nativeSrc": "1979:45:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1979:45:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2026:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2026:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1975:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1975:3:4"
																},
																"nativeSrc": "1975:54:4",
																"nodeType": "YulFunctionCall",
																"src": "1975:54:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1967:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1967:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "1538:497:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1640:9:4",
														"nodeType": "YulTypedName",
														"src": "1640:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1651:6:4",
														"nodeType": "YulTypedName",
														"src": "1651:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1659:6:4",
														"nodeType": "YulTypedName",
														"src": "1659:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1670:4:4",
														"nodeType": "YulTypedName",
														"src": "1670:4:4",
														"type": ""
													}
												],
												"src": "1538:497:4"
											},
											{
												"body": {
													"nativeSrc": "2110:216:4",
													"nodeType": "YulBlock",
													"src": "2110:216:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2156:16:4",
																"nodeType": "YulBlock",
																"src": "2156:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2165:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2165:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2168:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2168:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2158:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:4"
																			},
																			"nativeSrc": "2158:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2158:12:4"
																		},
																		"nativeSrc": "2158:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2158:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2131:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2131:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2140:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2140:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2127:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2127:3:4"
																		},
																		"nativeSrc": "2127:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2127:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2152:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2152:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2123:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2123:3:4"
																},
																"nativeSrc": "2123:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2123:32:4"
															},
															"nativeSrc": "2120:52:4",
															"nodeType": "YulIf",
															"src": "2120:52:4"
														},
														{
															"nativeSrc": "2181:36:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2181:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2207:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2207:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2194:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2194:12:4"
																},
																"nativeSrc": "2194:23:4",
																"nodeType": "YulFunctionCall",
																"src": "2194:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2185:5:4",
																	"nodeType": "YulTypedName",
																	"src": "2185:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2280:16:4",
																"nodeType": "YulBlock",
																"src": "2280:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2289:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2289:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2292:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2292:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2282:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2282:6:4"
																			},
																			"nativeSrc": "2282:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2282:12:4"
																		},
																		"nativeSrc": "2282:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2282:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2239:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2239:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2265:3:4",
																										"nodeType": "YulLiteral",
																										"src": "2265:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2270:1:4",
																										"nodeType": "YulLiteral",
																										"src": "2270:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2261:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "2261:3:4"
																								},
																								"nativeSrc": "2261:11:4",
																								"nodeType": "YulFunctionCall",
																								"src": "2261:11:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2274:1:4",
																								"nodeType": "YulLiteral",
																								"src": "2274:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "2257:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "2257:3:4"
																						},
																						"nativeSrc": "2257:19:4",
																						"nodeType": "YulFunctionCall",
																						"src": "2257:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2246:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2246:3:4"
																				},
																				"nativeSrc": "2246:31:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2246:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2236:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2236:2:4"
																		},
																		"nativeSrc": "2236:42:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2236:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2229:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2229:6:4"
																},
																"nativeSrc": "2229:50:4",
																"nodeType": "YulFunctionCall",
																"src": "2229:50:4"
															},
															"nativeSrc": "2226:70:4",
															"nodeType": "YulIf",
															"src": "2226:70:4"
														},
														{
															"nativeSrc": "2305:15:4",
															"nodeType": "YulAssignment",
															"src": "2305:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "2315:5:4",
																"nodeType": "YulIdentifier",
																"src": "2315:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2305:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2305:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2040:286:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2076:9:4",
														"nodeType": "YulTypedName",
														"src": "2076:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2087:7:4",
														"nodeType": "YulTypedName",
														"src": "2087:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2099:6:4",
														"nodeType": "YulTypedName",
														"src": "2099:6:4",
														"type": ""
													}
												],
												"src": "2040:286:4"
											},
											{
												"body": {
													"nativeSrc": "2505:249:4",
													"nodeType": "YulBlock",
													"src": "2505:249:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2522:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2522:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2533:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2533:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2515:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2515:6:4"
																},
																"nativeSrc": "2515:21:4",
																"nodeType": "YulFunctionCall",
																"src": "2515:21:4"
															},
															"nativeSrc": "2515:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "2515:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2556:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2556:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2567:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2567:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2552:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2552:3:4"
																		},
																		"nativeSrc": "2552:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2552:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2572:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2572:2:4",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2545:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2545:6:4"
																},
																"nativeSrc": "2545:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2545:30:4"
															},
															"nativeSrc": "2545:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "2545:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2595:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2595:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2606:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2591:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2591:3:4"
																		},
																		"nativeSrc": "2591:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2591:18:4"
																	},
																	{
																		"hexValue": "54686973206164647265737320646f6573206e6f742068617665207065726d69",
																		"kind": "string",
																		"nativeSrc": "2611:34:4",
																		"nodeType": "YulLiteral",
																		"src": "2611:34:4",
																		"type": "",
																		"value": "This address does not have permi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2584:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2584:6:4"
																},
																"nativeSrc": "2584:62:4",
																"nodeType": "YulFunctionCall",
																"src": "2584:62:4"
															},
															"nativeSrc": "2584:62:4",
															"nodeType": "YulExpressionStatement",
															"src": "2584:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2666:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2666:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2677:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2677:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2662:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2662:3:4"
																		},
																		"nativeSrc": "2662:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2662:18:4"
																	},
																	{
																		"hexValue": "7373696f6e20746f2063616c6c20706572666f726d55706b656570",
																		"kind": "string",
																		"nativeSrc": "2682:29:4",
																		"nodeType": "YulLiteral",
																		"src": "2682:29:4",
																		"type": "",
																		"value": "ssion to call performUpkeep"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2655:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2655:6:4"
																},
																"nativeSrc": "2655:57:4",
																"nodeType": "YulFunctionCall",
																"src": "2655:57:4"
															},
															"nativeSrc": "2655:57:4",
															"nodeType": "YulExpressionStatement",
															"src": "2655:57:4"
														},
														{
															"nativeSrc": "2721:27:4",
															"nodeType": "YulAssignment",
															"src": "2721:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2733:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2733:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2744:3:4",
																		"nodeType": "YulLiteral",
																		"src": "2744:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2729:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2729:3:4"
																},
																"nativeSrc": "2729:19:4",
																"nodeType": "YulFunctionCall",
																"src": "2729:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2721:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2721:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2331:423:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2482:9:4",
														"nodeType": "YulTypedName",
														"src": "2482:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2496:4:4",
														"nodeType": "YulTypedName",
														"src": "2496:4:4",
														"type": ""
													}
												],
												"src": "2331:423:4"
											},
											{
												"body": {
													"nativeSrc": "2791:95:4",
													"nodeType": "YulBlock",
													"src": "2791:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2808:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2808:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2815:3:4",
																				"nodeType": "YulLiteral",
																				"src": "2815:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2820:10:4",
																				"nodeType": "YulLiteral",
																				"src": "2820:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2811:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2811:3:4"
																		},
																		"nativeSrc": "2811:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2811:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2801:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:4"
																},
																"nativeSrc": "2801:31:4",
																"nodeType": "YulFunctionCall",
																"src": "2801:31:4"
															},
															"nativeSrc": "2801:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "2801:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2848:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2848:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2851:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2851:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2841:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2841:6:4"
																},
																"nativeSrc": "2841:15:4",
																"nodeType": "YulFunctionCall",
																"src": "2841:15:4"
															},
															"nativeSrc": "2841:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "2841:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2872:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2872:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2875:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2875:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2865:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2865:6:4"
																},
																"nativeSrc": "2865:15:4",
																"nodeType": "YulFunctionCall",
																"src": "2865:15:4"
															},
															"nativeSrc": "2865:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "2865:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2759:127:4",
												"nodeType": "YulFunctionDefinition",
												"src": "2759:127:4"
											},
											{
												"body": {
													"nativeSrc": "2940:79:4",
													"nodeType": "YulBlock",
													"src": "2940:79:4",
													"statements": [
														{
															"nativeSrc": "2950:17:4",
															"nodeType": "YulAssignment",
															"src": "2950:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2962:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2962:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2965:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2965:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2958:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2958:3:4"
																},
																"nativeSrc": "2958:9:4",
																"nodeType": "YulFunctionCall",
																"src": "2958:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2950:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2950:4:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2991:22:4",
																"nodeType": "YulBlock",
																"src": "2991:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2993:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "2993:16:4"
																			},
																			"nativeSrc": "2993:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2993:18:4"
																		},
																		"nativeSrc": "2993:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2993:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2982:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "2982:4:4"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2988:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2988:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2979:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "2979:2:4"
																},
																"nativeSrc": "2979:11:4",
																"nodeType": "YulFunctionCall",
																"src": "2979:11:4"
															},
															"nativeSrc": "2976:37:4",
															"nodeType": "YulIf",
															"src": "2976:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2891:128:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2922:1:4",
														"nodeType": "YulTypedName",
														"src": "2922:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2925:1:4",
														"nodeType": "YulTypedName",
														"src": "2925:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2931:4:4",
														"nodeType": "YulTypedName",
														"src": "2931:4:4",
														"type": ""
													}
												],
												"src": "2891:128:4"
											},
											{
												"body": {
													"nativeSrc": "3076:116:4",
													"nodeType": "YulBlock",
													"src": "3076:116:4",
													"statements": [
														{
															"nativeSrc": "3086:20:4",
															"nodeType": "YulAssignment",
															"src": "3086:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3101:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3101:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3104:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3104:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3097:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3097:3:4"
																},
																"nativeSrc": "3097:9:4",
																"nodeType": "YulFunctionCall",
																"src": "3097:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3086:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "3086:7:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3164:22:4",
																"nodeType": "YulBlock",
																"src": "3164:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3166:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "3166:16:4"
																			},
																			"nativeSrc": "3166:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3166:18:4"
																		},
																		"nativeSrc": "3166:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3166:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3135:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "3135:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3128:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "3128:6:4"
																				},
																				"nativeSrc": "3128:9:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3128:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3142:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "3142:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3149:7:4",
																								"nodeType": "YulIdentifier",
																								"src": "3149:7:4"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3158:1:4",
																								"nodeType": "YulIdentifier",
																								"src": "3158:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3145:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "3145:3:4"
																						},
																						"nativeSrc": "3145:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "3145:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3139:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "3139:2:4"
																				},
																				"nativeSrc": "3139:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3139:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3125:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3125:2:4"
																		},
																		"nativeSrc": "3125:37:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3125:37:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3118:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3118:6:4"
																},
																"nativeSrc": "3118:45:4",
																"nodeType": "YulFunctionCall",
																"src": "3118:45:4"
															},
															"nativeSrc": "3115:71:4",
															"nodeType": "YulIf",
															"src": "3115:71:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3024:168:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3055:1:4",
														"nodeType": "YulTypedName",
														"src": "3055:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3058:1:4",
														"nodeType": "YulTypedName",
														"src": "3058:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3064:7:4",
														"nodeType": "YulTypedName",
														"src": "3064:7:4",
														"type": ""
													}
												],
												"src": "3024:168:4"
											},
											{
												"body": {
													"nativeSrc": "3243:171:4",
													"nodeType": "YulBlock",
													"src": "3243:171:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3274:111:4",
																"nodeType": "YulBlock",
																"src": "3274:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3295:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3295:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3302:3:4",
																							"nodeType": "YulLiteral",
																							"src": "3302:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3307:10:4",
																							"nodeType": "YulLiteral",
																							"src": "3307:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3298:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "3298:3:4"
																					},
																					"nativeSrc": "3298:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3298:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3288:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3288:6:4"
																			},
																			"nativeSrc": "3288:31:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3288:31:4"
																		},
																		"nativeSrc": "3288:31:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3288:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3339:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3339:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3342:4:4",
																					"nodeType": "YulLiteral",
																					"src": "3342:4:4",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3332:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3332:6:4"
																			},
																			"nativeSrc": "3332:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3332:15:4"
																		},
																		"nativeSrc": "3332:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3332:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3367:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3367:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3370:4:4",
																					"nodeType": "YulLiteral",
																					"src": "3370:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3360:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3360:6:4"
																			},
																			"nativeSrc": "3360:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3360:15:4"
																		},
																		"nativeSrc": "3360:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3360:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3263:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3263:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3256:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3256:6:4"
																},
																"nativeSrc": "3256:9:4",
																"nodeType": "YulFunctionCall",
																"src": "3256:9:4"
															},
															"nativeSrc": "3253:132:4",
															"nodeType": "YulIf",
															"src": "3253:132:4"
														},
														{
															"nativeSrc": "3394:14:4",
															"nodeType": "YulAssignment",
															"src": "3394:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3403:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3403:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3406:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3406:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3399:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3399:3:4"
																},
																"nativeSrc": "3399:9:4",
																"nodeType": "YulFunctionCall",
																"src": "3399:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3394:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "3394:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3197:217:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3228:1:4",
														"nodeType": "YulTypedName",
														"src": "3228:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3231:1:4",
														"nodeType": "YulTypedName",
														"src": "3231:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3237:1:4",
														"nodeType": "YulTypedName",
														"src": "3237:1:4",
														"type": ""
													}
												],
												"src": "3197:217:4"
											},
											{
												"body": {
													"nativeSrc": "3467:77:4",
													"nodeType": "YulBlock",
													"src": "3467:77:4",
													"statements": [
														{
															"nativeSrc": "3477:16:4",
															"nodeType": "YulAssignment",
															"src": "3477:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3488:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3488:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3491:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3491:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3484:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3484:3:4"
																},
																"nativeSrc": "3484:9:4",
																"nodeType": "YulFunctionCall",
																"src": "3484:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3477:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3477:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3516:22:4",
																"nodeType": "YulBlock",
																"src": "3516:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3518:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "3518:16:4"
																			},
																			"nativeSrc": "3518:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3518:18:4"
																		},
																		"nativeSrc": "3518:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3518:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3508:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3508:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3511:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3511:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3505:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "3505:2:4"
																},
																"nativeSrc": "3505:10:4",
																"nodeType": "YulFunctionCall",
																"src": "3505:10:4"
															},
															"nativeSrc": "3502:36:4",
															"nodeType": "YulIf",
															"src": "3502:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3419:125:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3450:1:4",
														"nodeType": "YulTypedName",
														"src": "3450:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3453:1:4",
														"nodeType": "YulTypedName",
														"src": "3453:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3459:3:4",
														"nodeType": "YulTypedName",
														"src": "3459:3:4",
														"type": ""
													}
												],
												"src": "3419:125:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), 64)\n        let length := mload(value1)\n        mstore(add(headStart, 64), length)\n        mcopy(add(headStart, 96), add(value1, 32), length)\n        mstore(add(add(headStart, length), 96), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"This address does not have permi\")\n        mstore(add(headStart, 96), \"ssion to call performUpkeep\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fb575f3560e01c80636626b26d11610093578063947a36fb11610063578063947a36fb146101ee578063d777cc6d146101f7578063e9c68e2c1461020a578063f2fde38b14610212575f80fd5b80636626b26d146101ad5780636e04ff0d146101b5578063715018a6146101d65780638da5cb5b146101de575f80fd5b80633f3b3b27116100ce5780633f3b3b27146101735780634585e33b1461017c5780635f17e6161461019157806361bc221a146101a4575f80fd5b80633070fbf8146100ff57806330cac9721461012f57806330e3f8f81461014657806339518b5e1461016a575b5f80fd5b600654610112906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61013860035481565b604051908152602001610126565b60065461015a90600160a01b900460ff1681565b6040519015158152602001610126565b61013860045481565b61013860055481565b61018f61018a3660046106a8565b610225565b005b61018f61019f366004610716565b610330565b61013860015481565b61018f61039b565b6101c86101c33660046106a8565b6103b6565b604051610126929190610736565b61018f6103e6565b5f546001600160a01b0316610112565b61013860025481565b61018f610205366004610774565b6103f9565b61018f610423565b61018f610220366004610774565b610524565b6006546001600160a01b031633146102aa5760405162461bcd60e51b815260206004820152603b60248201527f54686973206164647265737320646f6573206e6f742068617665207065726d6960448201527f7373696f6e20746f2063616c6c20706572666f726d55706b656570000000000060648201526084015b60405180910390fd5b6002545f036102d257600254604051637154000760e01b81526004016102a191815260200190565b600454421061030f574260058190556102e9610423565b5f6102f482426107b5565b90508060035461030491906107b5565b6002555061032c9050565b600480546040516354593e7560e01b8152918201526024016102a1565b5050565b610338610561565b5f811161035b57604051637154000760e01b8152600481018290526024016102a1565b4282101561037f576040516354593e7560e01b8152600481018390526024016102a1565b61038942836107b5565b60025560049190915542600555600355565b6103a3610561565b5f6002556006805460ff60a01b19169055565b5f60605f600254600554426103cb91906107b5565b60408051602081019091525f81529110969095509350505050565b6103ee610561565b6103f75f61058d565b565b610401610561565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b5f805f61042e6105dc565b919450925090505f805b600c5481101561051d5760095460ff1661051557600b545f9061045d816127106107c8565b61046791906107df565b90505f6104748683610685565b90505f6104818884610685565b905081600d5f82825461049491906107b5565b909155506104a4905082866107fe565b945085600e5f8282546104b791906107b5565b925050819055508560075f8282546104cf91906107fe565b925050819055508160085f8282546104e791906107fe565b909155505f90506104f887846107fe565b905080600a5f82825461050b91906107fe565b9091555050505050505b600101610438565b5050505050565b61052c610561565b6001600160a01b03811661055557604051631e4fbdf760e01b81525f60048201526024016102a1565b61055e8161058d565b50565b5f546001600160a01b031633146103f75760405163118cdaa760e01b81523360048201526024016102a1565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f805f806105ee600d54611388610685565b90505f6105fd82600f54610685565b90505f61060c83601054610685565b90505f61061b84601154610685565b90505f61062c600e54601254610685565b90505f600c548261063d91906107df565b905061064983856107fe565b600d5f82825461065991906107b5565b9250508190555083600e5f82825461067191906107fe565b909155509599949850965092945050505050565b5f8061271061069484866107c8565b61069e91906107df565b9150505b92915050565b5f80602083850312156106b9575f80fd5b823567ffffffffffffffff8111156106cf575f80fd5b8301601f810185136106df575f80fd5b803567ffffffffffffffff8111156106f5575f80fd5b856020828401011115610706575f80fd5b6020919091019590945092505050565b5f8060408385031215610727575f80fd5b50508035926020909101359150565b8215158152604060208201525f82518060408401528060208501606085015e5f606082850101526060601f19601f8301168401019150509392505050565b5f60208284031215610784575f80fd5b81356001600160a01b038116811461079a575f80fd5b9392505050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156106a2576106a26107a1565b80820281158282048414176106a2576106a26107a1565b5f826107f957634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156106a2576106a26107a156fea26469706673582212209120a310dae1205a957815b459e1251be6b70cc35bfc17a2d9ed5f829eccedb964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6626B26D GT PUSH2 0x93 JUMPI DUP1 PUSH4 0x947A36FB GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x947A36FB EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xD777CC6D EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xE9C68E2C EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x212 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6626B26D EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F3B3B27 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x5F17E616 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x61BC221A EQ PUSH2 0x1A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3070FBF8 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x30CAC972 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x30E3F8F8 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x39518B5E EQ PUSH2 0x16A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x112 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x126 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x15A SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x126 JUMP JUMPDEST PUSH2 0x138 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x138 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18F PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x716 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH2 0x138 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x39B JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP3 SWAP2 SWAP1 PUSH2 0x736 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x3E6 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x112 JUMP JUMPDEST PUSH2 0x138 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x774 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x423 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0x774 JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320646F6573206E6F742068617665207065726D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373696F6E20746F2063616C6C20706572666F726D55706B6565700000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH0 SUB PUSH2 0x2D2 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x71540007 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x30F JUMPI TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH2 0x2E9 PUSH2 0x423 JUMP JUMPDEST PUSH0 PUSH2 0x2F4 DUP3 TIMESTAMP PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 SLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x2 SSTORE POP PUSH2 0x32C SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x54593E75 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2A1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x338 PUSH2 0x561 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD PUSH4 0x71540007 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x2A1 JUMP JUMPDEST TIMESTAMP DUP3 LT ISZERO PUSH2 0x37F JUMPI PUSH1 0x40 MLOAD PUSH4 0x54593E75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0x389 TIMESTAMP DUP4 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE TIMESTAMP PUSH1 0x5 SSTORE PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x3A3 PUSH2 0x561 JUMP JUMPDEST PUSH0 PUSH1 0x2 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH0 PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP2 LT SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x561 JUMP JUMPDEST PUSH2 0x3F7 PUSH0 PUSH2 0x58D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x401 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x42E PUSH2 0x5DC JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x51D JUMPI PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH2 0x515 JUMPI PUSH1 0xB SLOAD PUSH0 SWAP1 PUSH2 0x45D DUP2 PUSH2 0x2710 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x7DF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x474 DUP7 DUP4 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x481 DUP9 DUP5 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4A4 SWAP1 POP DUP3 DUP7 PUSH2 0x7FE JUMP JUMPDEST SWAP5 POP DUP6 PUSH1 0xE PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x7FE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x7FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0x4F8 DUP8 DUP5 PUSH2 0x7FE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x50B SWAP2 SWAP1 PUSH2 0x7FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x438 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x52C PUSH2 0x561 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0x55E DUP2 PUSH2 0x58D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2A1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x5EE PUSH1 0xD SLOAD PUSH2 0x1388 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x5FD DUP3 PUSH1 0xF SLOAD PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x60C DUP4 PUSH1 0x10 SLOAD PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x61B DUP5 PUSH1 0x11 SLOAD PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x62C PUSH1 0xE SLOAD PUSH1 0x12 SLOAD PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC SLOAD DUP3 PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x7DF JUMP JUMPDEST SWAP1 POP PUSH2 0x649 DUP4 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x659 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0xE PUSH0 DUP3 DUP3 SLOAD PUSH2 0x671 SWAP2 SWAP1 PUSH2 0x7FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP6 SWAP10 SWAP5 SWAP9 POP SWAP7 POP SWAP3 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2710 PUSH2 0x694 DUP5 DUP7 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x69E SWAP2 SWAP1 PUSH2 0x7DF JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x6DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x706 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x727 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x60 DUP6 ADD MCOPY PUSH0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x784 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x79A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6A2 JUMPI PUSH2 0x6A2 PUSH2 0x7A1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x6A2 JUMPI PUSH2 0x6A2 PUSH2 0x7A1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x7F9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6A2 JUMPI PUSH2 0x6A2 PUSH2 0x7A1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 KECCAK256 LOG3 LT 0xDA 0xE1 KECCAK256 GAS SWAP6 PUSH25 0x15B459E1251BE6B70CC35BFC17A2D9ED5F829ECCEDB964736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "549:6545:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;988:33;;;;;-1:-1:-1;;;;;988:33:3;;;;;;-1:-1:-1;;;;;178:32:4;;;160:51;;148:2;133:18;988:33:3;;;;;;;;786:27;;;;;;;;;368:25:4;;;356:2;341:18;786:27:3;222:177:4;1032:21:3;;;;;-1:-1:-1;;;1032:21:3;;;;;;;;;569:14:4;;562:22;544:41;;532:2;517:18;1032:21:3;404:187:4;866:27:3;;;;;;899:28;;;;;;1444:1051;;;;;;:::i;:::-;;:::i;:::-;;3422:546;;;;;;:::i;:::-;;:::i;628:22::-;;;;;;3974:108;;;:::i;1210:226::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2293:101:1:-;;;:::i;1638:85::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:1;1638:85;;706:23:3;;;;;;6963:128;;;;;;:::i;:::-;;:::i;4269:1131::-;;;:::i;2543:215:1:-;;;;;;:::i;:::-;;:::i;1444:1051:3:-;1555:18;;-1:-1:-1;;;;;1555:18:3;1541:10;:32;1520:138;;;;-1:-1:-1;;;1520:138:3;;2533:2:4;1520:138:3;;;2515:21:4;2572:2;2552:18;;;2545:30;2611:34;2591:18;;;2584:62;2682:29;2662:18;;;2655:57;2729:19;;1520:138:3;;;;;;;;;1680:8;;1692:1;1680:13;1676:73;;1729:8;;1715:23;;-1:-1:-1;;;1715:23:3;;;;;;368:25:4;;356:2;341:18;;222:177;1676:73:3;1790:12;;1771:15;:31;1768:712;;2172:15;2156:13;:31;;;2203:16;:14;:16::i;:::-;2233:25;2261:36;2279:18;2261:15;:36;:::i;:::-;2233:64;;2338:17;2323:12;;:32;;;;:::i;:::-;2312:8;:43;-1:-1:-1;1768:712:3;;-1:-1:-1;1768:712:3;;2456:12;;;2446:23;;-1:-1:-1;;;2446:23:3;;;;;368:25:4;341:18;;2446:23:3;222:177:4;1768:712:3;1444:1051;;:::o;3422:546::-;1531:13:1;:11;:13::i;:::-;3551:1:3::1;3533:14;:19;3530:84;;3574:29;::::0;-1:-1:-1;;;3574:29:3;;::::1;::::0;::::1;368:25:4::0;;;341:18;;3574:29:3::1;222:177:4::0;3530:84:3::1;3651:15;3635:13;:31;3632:91;;;3688:24;::::0;-1:-1:-1;;;3688:24:3;;::::1;::::0;::::1;368:25:4::0;;;341:18;;3688:24:3::1;222:177:4::0;3632:91:3::1;3744:31;3760:15;3744:13:::0;:31:::1;:::i;:::-;3733:8;:42:::0;3785:12:::1;:28:::0;;;;3839:15:::1;3823:13;:31:::0;3864:12:::1;:29:::0;3422:546::o;3974:108::-;1531:13:1;:11;:13::i;:::-;4038:1:3::1;4027:8;:12:::0;4049:9:::1;:17:::0;;-1:-1:-1;;;;4049:17:3::1;::::0;;3974:108::o;1210:226::-;1294:4;1300:12;1325:16;1380:8;;1363:13;;1345:15;:31;;;;:::i;:::-;1419:9;;;;;;;;;-1:-1:-1;1419:9:3;;-1:-1:-1;;;1419:9:3;;-1:-1:-1;1210:226:3;-1:-1:-1;;;;1210:226:3:o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;6963:128:3:-;1531:13:1;:11;:13::i;:::-;7047:18:3::1;:37:::0;;-1:-1:-1;;;;;;7047:37:3::1;-1:-1:-1::0;;;;;7047:37:3;;;::::1;::::0;;;::::1;::::0;;6963:128::o;4269:1131::-;4325:24;4350:33;4385:26;4416:20;:18;:20::i;:::-;4323:113;;-1:-1:-1;4323:113:3;-1:-1:-1;4323:113:3;-1:-1:-1;4463:16:3;;4490:894;4513:9;;4509:1;:13;4490:894;;;4547:7;;;;4543:818;;4637:17;;4574:27;;4605;4637:17;4626:5;4605:27;:::i;:::-;4604:51;;;;:::i;:::-;4574:81;;4690:22;4715:67;4735:25;4762:19;4715;:67::i;:::-;4690:92;;4800:23;4826:58;4846:16;4864:19;4826;:58::i;:::-;4800:84;;4942:14;4919:19;;:37;;;;;;;:::i;:::-;;;;-1:-1:-1;4999:26:3;;-1:-1:-1;5011:14:3;4999:26;;:::i;:::-;;;5065:18;5043;;:40;;;;;;;:::i;:::-;;;;;;;;5125:18;5102:19;;:41;;;;;;;:::i;:::-;;;;;;;;5185:14;5160:21;;:39;;;;;;;:::i;:::-;;;;-1:-1:-1;5234:23:3;;-1:-1:-1;5260:35:3;5277:18;5260:14;:35;:::i;:::-;5234:61;;5330:15;5312:14;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;4543:818:3;4524:3;;4490:894;;;;4303:1097;;;;4269:1131::o;2543:215:1:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:1;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:1;;2700:1:::1;2672:31;::::0;::::1;160:51:4::0;133:18;;2672:31:1::1;14:203:4::0;2623:91:1::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:1;735:10:2;1855:23:1;1851:101;;1901:40;;-1:-1:-1;;;1901:40:1;;735:10:2;1901:40:1;;;160:51:4;133:18;;1901:40:1;14:203:4;2912:187:1;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:1;;;-1:-1:-1;;;;;;3020:17:1;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;5762:948:3:-;5808:7;5817;5825;5853:24;5880:46;5900:19;;5921:4;5880:19;:46::i;:::-;5853:73;;5937:33;5973:64;5993:16;6011:25;;5973:19;:64::i;:::-;5937:100;;6047:36;6086:63;6106:16;6124:24;;6086:19;:63::i;:::-;6047:102;;6159:36;6198:62;6218:16;6236:23;;6198:19;:62::i;:::-;6159:101;;6270:30;6303:66;6323:18;;6343:25;;6303:19;:66::i;:::-;6270:99;;6388:26;6440:9;;6417:22;:32;;;;:::i;:::-;6388:61;-1:-1:-1;6492:59:3;6523:28;6492;:59;:::i;:::-;6468:19;;:84;;;;;;;:::i;:::-;;;;;;;;6584:28;6562:18;;:50;;;;;;;:::i;:::-;;;;-1:-1:-1;6641:16:3;;6658:25;;-1:-1:-1;6684:18:3;-1:-1:-1;5762:948:3;;-1:-1:-1;;;;;5762:948:3:o;6716:241::-;6818:7;;6908:5;6866:38;6887:16;6866:17;:38;:::i;:::-;:48;;;;:::i;:::-;6845:69;-1:-1:-1;;6716:241:3;;;;;:::o;596:586:4:-;666:6;674;727:2;715:9;706:7;702:23;698:32;695:52;;;743:1;740;733:12;695:52;783:9;770:23;816:18;808:6;805:30;802:50;;;848:1;845;838:12;802:50;871:22;;924:4;916:13;;912:27;-1:-1:-1;902:55:4;;953:1;950;943:12;902:55;993:2;980:16;1019:18;1011:6;1008:30;1005:50;;;1051:1;1048;1041:12;1005:50;1096:7;1091:2;1082:6;1078:2;1074:15;1070:24;1067:37;1064:57;;;1117:1;1114;1107:12;1064:57;1148:2;1140:11;;;;;1170:6;;-1:-1:-1;596:586:4;-1:-1:-1;;;596:586:4:o;1187:346::-;1255:6;1263;1316:2;1304:9;1295:7;1291:23;1287:32;1284:52;;;1332:1;1329;1322:12;1284:52;-1:-1:-1;;1377:23:4;;;1497:2;1482:18;;;1469:32;;-1:-1:-1;1187:346:4:o;1538:497::-;1721:6;1714:14;1707:22;1696:9;1689:41;1766:2;1761;1750:9;1746:18;1739:30;1670:4;1798:6;1792:13;1841:6;1836:2;1825:9;1821:18;1814:34;1900:6;1895:2;1887:6;1883:15;1878:2;1867:9;1863:18;1857:50;1956:1;1951:2;1942:6;1931:9;1927:22;1923:31;1916:42;2026:2;2019;2015:7;2010:2;2002:6;1998:15;1994:29;1983:9;1979:45;1975:54;1967:62;;;1538:497;;;;;:::o;2040:286::-;2099:6;2152:2;2140:9;2131:7;2127:23;2123:32;2120:52;;;2168:1;2165;2158:12;2120:52;2194:23;;-1:-1:-1;;;;;2246:31:4;;2236:42;;2226:70;;2292:1;2289;2282:12;2226:70;2315:5;2040:286;-1:-1:-1;;;2040:286:4:o;2759:127::-;2820:10;2815:3;2811:20;2808:1;2801:31;2851:4;2848:1;2841:15;2875:4;2872:1;2865:15;2891:128;2958:9;;;2979:11;;;2976:37;;;2993:18;;:::i;3024:168::-;3097:9;;;3128;;3145:15;;;3139:22;;3125:37;3115:71;;3166:18;;:::i;3197:217::-;3237:1;3263;3253:132;;3307:10;3302:3;3298:20;3295:1;3288:31;3342:4;3339:1;3332:15;3370:4;3367:1;3360:15;3253:132;-1:-1:-1;3399:9:4;;3197:217::o;3419:125::-;3484:9;;;3505:10;;;3502:36;;;3518:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "423800",
								"executionCost": "227399",
								"totalCost": "651199"
							},
							"external": {
								"checkOnce()": "2394",
								"checkUpkeep(bytes)": "infinite",
								"counter()": "2383",
								"interval()": "2316",
								"lastTimeStamp()": "2317",
								"off()": "31558",
								"owner()": "2407",
								"performUpkeep(bytes)": "infinite",
								"realInterval()": "2340",
								"renounceOwnership()": "infinite",
								"s_forwarderAddress()": "2349",
								"setForwarderAddress(address)": "26741",
								"setInterval(uint256,uint256)": "91016",
								"startingTime()": "2384",
								"transferOwnership(address)": "28382",
								"weeklyTransfer()": "infinite"
							},
							"internal": {
								"calculatePercentage(uint256,uint256)": "infinite",
								"perPoolCalculation()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 549,
									"end": 7094,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 549,
									"end": 7094,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 549,
									"end": 7094,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4170,
									"end": 4190,
									"name": "PUSH",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 4170,
									"end": 4190,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4170,
									"end": 4190,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4170,
									"end": 4190,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4170,
									"end": 4190,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4170,
									"end": 4190,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 4254,
									"end": 4262,
									"name": "PUSH",
									"source": 3,
									"value": "1158E460913D00000"
								},
								{
									"begin": 4225,
									"end": 4262,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 4225,
									"end": 4262,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5425,
									"end": 5428,
									"name": "PUSH",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 5405,
									"end": 5428,
									"name": "PUSH",
									"source": 3,
									"value": "C"
								},
								{
									"begin": 5405,
									"end": 5428,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5466,
									"end": 5496,
									"name": "PUSH",
									"source": 3,
									"value": "B7ABC627050305ADF1495F92D4C589C0000"
								},
								{
									"begin": 5435,
									"end": 5496,
									"name": "PUSH",
									"source": 3,
									"value": "D"
								},
								{
									"begin": 5435,
									"end": 5496,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5435,
									"end": 5496,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5435,
									"end": 5496,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5504,
									"end": 5565,
									"name": "PUSH",
									"source": 3,
									"value": "E"
								},
								{
									"begin": 5504,
									"end": 5565,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5610,
									"end": 5613,
									"name": "PUSH",
									"source": 3,
									"value": "C8"
								},
								{
									"begin": 5573,
									"end": 5613,
									"name": "PUSH",
									"source": 3,
									"value": "F"
								},
								{
									"begin": 5573,
									"end": 5613,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5573,
									"end": 5613,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5573,
									"end": 5613,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5622,
									"end": 5660,
									"name": "PUSH",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 5622,
									"end": 5660,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5622,
									"end": 5660,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5622,
									"end": 5660,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5669,
									"end": 5706,
									"name": "PUSH",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 5669,
									"end": 5706,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5669,
									"end": 5706,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5669,
									"end": 5706,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5716,
									"end": 5755,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 5716,
									"end": 5755,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 1204,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 1204,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 1204,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 1204,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1155,
									"end": 1204,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 1204,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1155,
									"end": 1204,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 1204,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 1204,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1155,
									"end": 1204,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1176,
									"end": 1186,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1176,
									"end": 1186,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 160,
									"end": 211,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 133,
									"end": 151,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 133,
									"end": 151,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 549,
									"end": 7094,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 549,
									"end": 7094,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 217,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 14,
									"end": 217,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 549,
									"end": 7094,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 549,
									"end": 7094,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 549,
									"end": 7094,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 549,
									"end": 7094,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 7094,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 549,
									"end": 7094,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 7094,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209120a310dae1205a957815b459e1251be6b70cc35bfc17a2d9ed5f829eccedb964736f6c634300081a0033",
									".code": [
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "6626B26D"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "947A36FB"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "947A36FB"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "D777CC6D"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "E9C68E2C"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "6626B26D"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "6E04FF0D"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "3F3B3B27"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "3F3B3B27"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "4585E33B"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "5F17E616"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "61BC221A"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "3070FBF8"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "30CAC972"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "30E3F8F8"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "39518B5E"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 549,
											"end": 7094,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 786,
											"end": 813,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 786,
											"end": 813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 786,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 786,
											"end": 813,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 786,
											"end": 813,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 786,
											"end": 813,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 786,
											"end": 813,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 813,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 786,
											"end": 813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 786,
											"end": 813,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 813,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 368,
											"end": 393,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 368,
											"end": 393,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 368,
											"end": 393,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 356,
											"end": 358,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 341,
											"end": 359,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 786,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 222,
											"end": 399,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 569,
											"end": 583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 569,
											"end": 583,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 562,
											"end": 584,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 544,
											"end": 585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 544,
											"end": 585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 532,
											"end": 534,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 517,
											"end": 535,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 404,
											"end": 591,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 866,
											"end": 893,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 866,
											"end": 893,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 866,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 866,
											"end": 893,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 866,
											"end": 893,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 866,
											"end": 893,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 866,
											"end": 893,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 899,
											"end": 927,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 899,
											"end": 927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 899,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 899,
											"end": 927,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 899,
											"end": 927,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 899,
											"end": 927,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 899,
											"end": 927,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 2495,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1444,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1444,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1444,
											"end": 2495,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 2495,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1444,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1444,
											"end": 2495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 2495,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1444,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1444,
											"end": 2495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 2495,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1444,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 2495,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3422,
											"end": 3968,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3422,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3422,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3422,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3422,
											"end": 3968,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3422,
											"end": 3968,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3422,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3422,
											"end": 3968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3422,
											"end": 3968,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3422,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3422,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3422,
											"end": 3968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 628,
											"end": 650,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 628,
											"end": 650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 628,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 628,
											"end": 650,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 650,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 628,
											"end": 650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 628,
											"end": 650,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4082,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3974,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3974,
											"end": 4082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1210,
											"end": 1436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1210,
											"end": 1436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1210,
											"end": 1436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 706,
											"end": 729,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 706,
											"end": 729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 706,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 706,
											"end": 729,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 706,
											"end": 729,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 706,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 706,
											"end": 729,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6963,
											"end": 7091,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 6963,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6963,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6963,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 6963,
											"end": 7091,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6963,
											"end": 7091,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6963,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 6963,
											"end": 7091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6963,
											"end": 7091,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 6963,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6963,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 6963,
											"end": 7091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 5400,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 4269,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4269,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4269,
											"end": 5400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 2495,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1444,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1551,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1573,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2535,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2574,
											"name": "PUSH",
											"source": 4,
											"value": "3B"
										},
										{
											"begin": 2552,
											"end": 2570,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2552,
											"end": 2570,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2552,
											"end": 2570,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2575,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "54686973206164647265737320646F6573206E6F742068617665207065726D69"
										},
										{
											"begin": 2591,
											"end": 2609,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2591,
											"end": 2609,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2591,
											"end": 2609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2584,
											"end": 2646,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2711,
											"name": "PUSH",
											"source": 4,
											"value": "7373696F6E20746F2063616C6C20706572666F726D55706B6565700000000000"
										},
										{
											"begin": 2662,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2662,
											"end": 2680,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2712,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2729,
											"end": 2748,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2729,
											"end": 2748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1520,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1688,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1680,
											"end": 1688,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1692,
											"end": 1693,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1676,
											"end": 1749,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1737,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1729,
											"end": 1737,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1738,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71540007"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1715,
											"end": 1738,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1738,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1715,
											"end": 1738,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1715,
											"end": 1738,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 368,
											"end": 393,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 368,
											"end": 393,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 356,
											"end": 358,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 341,
											"end": 359,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 341,
											"end": 359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 222,
											"end": 399,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1676,
											"end": 1749,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1676,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1786,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1802,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1768,
											"end": 2480,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2169,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2156,
											"end": 2187,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2187,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2203,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2203,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2203,
											"end": 2219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2203,
											"end": 2219,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2203,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2258,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2279,
											"end": 2297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2276,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2261,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2297,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2261,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2355,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2335,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2323,
											"end": 2335,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2323,
											"end": 2355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2320,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2312,
											"end": 2355,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1768,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1768,
											"end": 2480,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1768,
											"end": 2480,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 2480,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1768,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 2468,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2456,
											"end": 2468,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 2468,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2469,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2469,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54593E75"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2446,
											"end": 2469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2469,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2469,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2469,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 368,
											"end": 393,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 359,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 341,
											"end": 359,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2446,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 222,
											"end": 399,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1768,
											"end": 2480,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1768,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 2495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 2495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 2495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3422,
											"end": 3968,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3422,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3533,
											"end": 3547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3552,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3530,
											"end": 3614,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3574,
											"end": 3603,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71540007"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3574,
											"end": 3603,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3603,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3574,
											"end": 3603,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3603,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 368,
											"end": 393,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 368,
											"end": 393,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 368,
											"end": 393,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 359,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 341,
											"end": 359,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3574,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 222,
											"end": 399,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3530,
											"end": 3614,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3530,
											"end": 3614,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3651,
											"end": 3666,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 3635,
											"end": 3648,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3635,
											"end": 3666,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3632,
											"end": 3723,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3632,
											"end": 3723,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3632,
											"end": 3723,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3688,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3688,
											"end": 3712,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54593E75"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3688,
											"end": 3712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3688,
											"end": 3712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3688,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3688,
											"end": 3712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3688,
											"end": 3712,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 368,
											"end": 393,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 368,
											"end": 393,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 368,
											"end": 393,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 359,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 341,
											"end": 359,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3688,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 222,
											"end": 399,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3632,
											"end": 3723,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3632,
											"end": 3723,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3760,
											"end": 3775,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3757,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3744,
											"end": 3775,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3733,
											"end": 3775,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3785,
											"end": 3797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3785,
											"end": 3813,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3839,
											"end": 3854,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 3823,
											"end": 3836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3823,
											"end": 3854,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3864,
											"end": 3876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3864,
											"end": 3893,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3422,
											"end": 3968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4082,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3974,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4027,
											"end": 4039,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4049,
											"end": 4066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4066,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4049,
											"end": 4066,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4066,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1294,
											"end": 1298,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1300,
											"end": 1312,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1325,
											"end": 1341,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1380,
											"end": 1388,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1380,
											"end": 1388,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1363,
											"end": 1376,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1363,
											"end": 1376,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1360,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1345,
											"end": 1376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1345,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1428,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1428,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1428,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1428,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1419,
											"end": 1428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1428,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1428,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1428,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 1419,
											"end": 1428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1428,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1210,
											"end": 1436,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1210,
											"end": 1436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 7091,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 6963,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 7047,
											"end": 7084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7084,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7047,
											"end": 7084,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7047,
											"end": 7084,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7084,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7084,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7084,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7084,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6963,
											"end": 7091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 5400,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4269,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4325,
											"end": 4349,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4383,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4385,
											"end": 4411,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4416,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4416,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 4416,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4416,
											"end": 4436,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4416,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4323,
											"end": 4436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4323,
											"end": 4436,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4323,
											"end": 4436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4323,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4463,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4490,
											"end": 5384,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4490,
											"end": 5384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4513,
											"end": 4522,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 4513,
											"end": 4522,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4509,
											"end": 4510,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4509,
											"end": 4522,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4490,
											"end": 5384,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4490,
											"end": 5384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4490,
											"end": 5384,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4554,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 4547,
											"end": 4554,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4554,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4547,
											"end": 4554,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4543,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 4543,
											"end": 5361,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4637,
											"end": 4654,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 4637,
											"end": 4654,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4601,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4605,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4637,
											"end": 4654,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4631,
											"name": "PUSH",
											"source": 3,
											"value": "2710"
										},
										{
											"begin": 4605,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4605,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4605,
											"end": 4632,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4605,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4604,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4604,
											"end": 4655,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4604,
											"end": 4655,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4604,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4604,
											"end": 4655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4604,
											"end": 4655,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4604,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4655,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4655,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4690,
											"end": 4712,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4715,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4735,
											"end": 4760,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4762,
											"end": 4781,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4715,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4715,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4715,
											"end": 4782,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4715,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4690,
											"end": 4782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4690,
											"end": 4782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4800,
											"end": 4823,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4846,
											"end": 4862,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4883,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4826,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4826,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4826,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4826,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4800,
											"end": 4884,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4800,
											"end": 4884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4942,
											"end": 4956,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4938,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 4919,
											"end": 4938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4999,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4999,
											"end": 5025,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5025,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4999,
											"end": 5025,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4999,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4999,
											"end": 5025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4999,
											"end": 5025,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4999,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4999,
											"end": 5025,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4999,
											"end": 5025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5065,
											"end": 5083,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5061,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 5043,
											"end": 5061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5083,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5083,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5083,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 5043,
											"end": 5083,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5083,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5043,
											"end": 5083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5083,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 5043,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5083,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5083,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5083,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5083,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5083,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5083,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5083,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5125,
											"end": 5143,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5121,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 5102,
											"end": 5121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5143,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5102,
											"end": 5143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5102,
											"end": 5143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5143,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5102,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5143,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5143,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5181,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5160,
											"end": 5181,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5199,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5199,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5199,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5160,
											"end": 5199,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5199,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5160,
											"end": 5199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5199,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5160,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5199,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5199,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5199,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5234,
											"end": 5257,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5234,
											"end": 5257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5260,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5260,
											"end": 5274,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5260,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5260,
											"end": 5295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5260,
											"end": 5295,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5260,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5234,
											"end": 5295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5234,
											"end": 5295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5345,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5326,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 5312,
											"end": 5326,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5345,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5345,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5345,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5312,
											"end": 5345,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5345,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5312,
											"end": 5345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5345,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5312,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5345,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5345,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5345,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4543,
											"end": 5361,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 4543,
											"end": 5361,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4524,
											"end": 4527,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4524,
											"end": 4527,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4490,
											"end": 5384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4490,
											"end": 5384,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4490,
											"end": 5384,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4490,
											"end": 5384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4490,
											"end": 5384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 5400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 5400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 5400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 5400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 5400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 6710,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5762,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5808,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5817,
											"end": 5824,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5825,
											"end": 5832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5853,
											"end": 5877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5880,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5900,
											"end": 5919,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 5900,
											"end": 5919,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5921,
											"end": 5925,
											"name": "PUSH",
											"source": 3,
											"value": "1388"
										},
										{
											"begin": 5880,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5880,
											"end": 5926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5880,
											"end": 5926,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5880,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5853,
											"end": 5926,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5853,
											"end": 5926,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5937,
											"end": 5970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5973,
											"end": 6037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 5993,
											"end": 6009,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6011,
											"end": 6036,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 6011,
											"end": 6036,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 5992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5973,
											"end": 6037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5973,
											"end": 6037,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 5973,
											"end": 6037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5937,
											"end": 6037,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5937,
											"end": 6037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6047,
											"end": 6083,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 6106,
											"end": 6122,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6124,
											"end": 6148,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 6124,
											"end": 6148,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6086,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 6086,
											"end": 6149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6086,
											"end": 6149,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 6086,
											"end": 6149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6047,
											"end": 6149,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6047,
											"end": 6149,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 6218,
											"end": 6234,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6236,
											"end": 6259,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 6236,
											"end": 6259,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 6198,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6260,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 6198,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6159,
											"end": 6260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6270,
											"end": 6300,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6303,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6368,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 6343,
											"end": 6368,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6303,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 6303,
											"end": 6369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6303,
											"end": 6369,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 6303,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6270,
											"end": 6369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6270,
											"end": 6369,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6388,
											"end": 6414,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6440,
											"end": 6449,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 6440,
											"end": 6449,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6439,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 6417,
											"end": 6449,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6449,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 6417,
											"end": 6449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6449,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 6417,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6388,
											"end": 6449,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6492,
											"end": 6551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 6523,
											"end": 6551,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6492,
											"end": 6520,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6492,
											"end": 6551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 6492,
											"end": 6551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6492,
											"end": 6551,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 6492,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6487,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 6468,
											"end": 6487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6468,
											"end": 6552,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6552,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6552,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 6468,
											"end": 6552,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6552,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6468,
											"end": 6552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6552,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 6468,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6552,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6552,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6552,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6552,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6468,
											"end": 6552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6584,
											"end": 6612,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6562,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 6562,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6612,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6562,
											"end": 6612,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6562,
											"end": 6612,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6562,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 6562,
											"end": 6612,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6562,
											"end": 6612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6562,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 6562,
											"end": 6612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6562,
											"end": 6612,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 6562,
											"end": 6612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6562,
											"end": 6612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6562,
											"end": 6612,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6562,
											"end": 6612,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6641,
											"end": 6657,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 6641,
											"end": 6657,
											"name": "SWAP10",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6683,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6658,
											"end": 6683,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5762,
											"end": 6710,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5762,
											"end": 6710,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5762,
											"end": 6710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6716,
											"end": 6957,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 6716,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6825,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6818,
											"end": 6825,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6908,
											"end": 6913,
											"name": "PUSH",
											"source": 3,
											"value": "2710"
										},
										{
											"begin": 6866,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6887,
											"end": 6903,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6883,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 6866,
											"end": 6904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6904,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6866,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 6866,
											"end": 6914,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6914,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 6866,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6914,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 6866,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6845,
											"end": 6914,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6716,
											"end": 6957,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 6716,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6716,
											"end": 6957,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6716,
											"end": 6957,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6716,
											"end": 6957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6716,
											"end": 6957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6716,
											"end": 6957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 596,
											"end": 1182,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 596,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 666,
											"end": 672,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 727,
											"end": 729,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 715,
											"end": 724,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 706,
											"end": 713,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 702,
											"end": 725,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 698,
											"end": 730,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 695,
											"end": 747,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 695,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 695,
											"end": 747,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 743,
											"end": 744,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 733,
											"end": 745,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 695,
											"end": 747,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 695,
											"end": 747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 783,
											"end": 792,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 770,
											"end": 793,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 816,
											"end": 834,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 808,
											"end": 814,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 805,
											"end": 835,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 802,
											"end": 852,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 802,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 802,
											"end": 852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 848,
											"end": 849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 846,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 838,
											"end": 850,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 802,
											"end": 852,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 802,
											"end": 852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 871,
											"end": 893,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 871,
											"end": 893,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 924,
											"end": 928,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 916,
											"end": 929,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 916,
											"end": 929,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 912,
											"end": 939,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 902,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 902,
											"end": 957,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 953,
											"end": 954,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 950,
											"end": 951,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 943,
											"end": 955,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 902,
											"end": 957,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 902,
											"end": 957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 993,
											"end": 995,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 980,
											"end": 996,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1038,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1055,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1005,
											"end": 1055,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1049,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1041,
											"end": 1053,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1055,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1005,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1103,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1082,
											"end": 1088,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1089,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1070,
											"end": 1094,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1067,
											"end": 1104,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1121,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1064,
											"end": 1121,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1115,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1119,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1121,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1064,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1151,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1140,
											"end": 1151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1140,
											"end": 1151,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1140,
											"end": 1151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1140,
											"end": 1151,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1176,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 596,
											"end": 1182,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 596,
											"end": 1182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1187,
											"end": 1533,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1187,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1255,
											"end": 1261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1318,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1304,
											"end": 1313,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1295,
											"end": 1302,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1314,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1319,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1336,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1284,
											"end": 1336,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1332,
											"end": 1333,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1336,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1284,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1377,
											"end": 1400,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1400,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1400,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1499,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1500,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1500,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1501,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1501,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1187,
											"end": 1533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 2035,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1538,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1727,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1714,
											"end": 1728,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1729,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1696,
											"end": 1705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1730,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1766,
											"end": 1768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1763,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1759,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1764,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1769,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1674,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1804,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1805,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1841,
											"end": 1847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1838,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 1834,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1848,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 1906,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1897,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1883,
											"end": 1898,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1881,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1907,
											"name": "MCOPY",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1953,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1942,
											"end": 1948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1940,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1927,
											"end": 1949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1954,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2019,
											"end": 2021,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2015,
											"end": 2022,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2012,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2013,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2023,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 1992,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2029,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 2029,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 2029,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 2029,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 2035,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 2035,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 2035,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 2035,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 2035,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 2035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2326,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2040,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2105,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2154,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2138,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2127,
											"end": 2150,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2155,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2120,
											"end": 2172,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2120,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2120,
											"end": 2172,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2166,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2170,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2120,
											"end": 2172,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2120,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2246,
											"end": 2277,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2278,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2278,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2226,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2226,
											"end": 2296,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2289,
											"end": 2290,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2226,
											"end": 2296,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2226,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2320,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2326,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2040,
											"end": 2326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2886,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2759,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 2815,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2811,
											"end": 2831,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2808,
											"end": 2809,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 2832,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2855,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2841,
											"end": 2856,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2879,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2872,
											"end": 2873,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2880,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 3019,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2891,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 2967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 2967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 2967,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 2990,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 2990,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 2990,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2976,
											"end": 3013,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2976,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2976,
											"end": 3013,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2993,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2993,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2993,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3192,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3024,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3097,
											"end": 3106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3097,
											"end": 3106,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3097,
											"end": 3106,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3128,
											"end": 3137,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3128,
											"end": 3137,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3160,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3160,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3160,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3161,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3162,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3115,
											"end": 3186,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3166,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3166,
											"end": 3184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3197,
											"end": 3414,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3197,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3237,
											"end": 3238,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3253,
											"end": 3385,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3317,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 3302,
											"end": 3305,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3298,
											"end": 3318,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3295,
											"end": 3296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3319,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3346,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3339,
											"end": 3340,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3332,
											"end": 3347,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3374,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3367,
											"end": 3368,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3360,
											"end": 3375,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3385,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3253,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3197,
											"end": 3414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3515,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3515,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3505,
											"end": 3515,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3538,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3502,
											"end": 3538,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3518,
											"end": 3536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"DripWarrior/checckUpKep.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"checkOnce()": "30e3f8f8",
							"checkUpkeep(bytes)": "6e04ff0d",
							"counter()": "61bc221a",
							"interval()": "947a36fb",
							"lastTimeStamp()": "3f3b3b27",
							"off()": "6626b26d",
							"owner()": "8da5cb5b",
							"performUpkeep(bytes)": "4585e33b",
							"realInterval()": "30cac972",
							"renounceOwnership()": "715018a6",
							"s_forwarderAddress()": "3070fbf8",
							"setForwarderAddress(address)": "d777cc6d",
							"setInterval(uint256,uint256)": "5f17e616",
							"startingTime()": "39518b5e",
							"transferOwnership(address)": "f2fde38b",
							"weeklyTransfer()": "e9c68e2c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"updateInterval\",\"type\":\"uint256\"}],\"name\":\"wrongInterval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"wrongTime\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"checkOnce\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"off\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"realInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_forwarderAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarderAddress\",\"type\":\"address\"}],\"name\":\"setForwarderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updateInterval\",\"type\":\"uint256\"}],\"name\":\"setInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weeklyTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/checckUpKep.sol\":\"CounterwForwarder\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"DripWarrior/checckUpKep.sol\":{\"keccak256\":\"0xdaee8fa5365861504f57526f1f737a2390e0c2f2397e325a103177650a73411f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9237ff4e3246bab30cd964b3c87d6a60f5f7047404f4a173bc2f81ba9e536d\",\"dweb:/ipfs/QmNk7eFFN7pACLDKpCC2MeJ8eozc5J9ASmZ7NMZarkCYA4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 207,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "counter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 209,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "interval",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 211,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "realInterval",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 213,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "startingTime",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 215,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "lastTimeStamp",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 217,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "s_forwarderAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 219,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "checkOnce",
								"offset": 20,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 385,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "receiveFromTreasury",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 387,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "receiveFromOwneerShip",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 390,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "blocked",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 392,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "receivedAmount",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 395,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "totalStakedAmount",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 485,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "noOfUsers",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 488,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "ownerShipPoolAmount",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 491,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "treasuryPoolAmount",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 494,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "odividentPayoutPercentage",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 497,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "flowToTreasuryPercentage",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 500,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "maintainceFeePercentage",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 503,
								"contract": "DripWarrior/checckUpKep.sol:CounterwForwarder",
								"label": "tdividentPayoutPercentage",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> DripWarrior/checckUpKep.sol:167:17:\n    |\n167 |                 uint256 eachSendAmount1 = calculatePercentage(remainFiftyOPool, eachSharePercentage);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4823,
					"file": "DripWarrior/checckUpKep.sol",
					"start": 4800
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
					"exportedSymbols": {
						"AutomationCompatibleInterface": [
							18
						]
					},
					"id": 19,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AutomationCompatibleInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 18,
							"linearizedBaseContracts": [
								18
							],
							"name": "AutomationCompatibleInterface",
							"nameLocation": "120:29:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "154:985:0",
										"text": " @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."
									},
									"functionSelector": "6e04ff0d",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "1151:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "checkData",
												"nameLocation": "1178:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "1163:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1163:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1162:26:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "upkeepNeeded",
												"nameLocation": "1212:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "1207:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1207:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "1239:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "1226:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1226:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1206:45:0"
									},
									"scope": 18,
									"src": "1142:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "1256:1003:0",
										"text": " @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."
									},
									"functionSelector": "4585e33b",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "2271:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "2300:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "2285:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2285:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:28:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:0:0"
									},
									"scope": 18,
									"src": "2262:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 19,
							"src": "110:2214:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2293:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							196
						],
						"Ownable": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 20,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 22,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 167,
							"sourceUnit": 197,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 21,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 196,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 24,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 196,
										"src": "692:7:1"
									},
									"id": 25,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166,
								196
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 32,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 37,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 43,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 50,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 63,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 62,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 58,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 57,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 56,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 59,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 55,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 61,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 65,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 64,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 69,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 166,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 72,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 75,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 77,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 83,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 82,
												"id": 84,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 166,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 90,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 92,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 101,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 100,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 96,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 178,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 97,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 95,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 99,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 166,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 110,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 109,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 107,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 106,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 77,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 166,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 125,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 126,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 139,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 138,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 132,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 131,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 137,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 141,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 123,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 122,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 77,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 166,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													152
												],
												"declarations": [
													{
														"constant": false,
														"id": 152,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 164,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 151,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 154,
												"initialValue": {
													"id": 153,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 155,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 156,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 160,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 161,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 163,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 166,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 167,
							"src": "663:2438:1",
							"usedErrors": [
								32,
								37
							],
							"usedEvents": [
								43
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							196
						]
					},
					"id": 197,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 196,
							"linearizedBaseContracts": [
								196
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 174,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 173,
												"id": 176,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 196,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 183,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 182,
												"id": 185,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 196,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 191,
												"id": 193,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 196,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 197,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"DripWarrior/checckUpKep.sol": {
				"ast": {
					"absolutePath": "DripWarrior/checckUpKep.sol",
					"exportedSymbols": {
						"AutomationCompatibleInterface": [
							18
						],
						"Context": [
							196
						],
						"CounterwForwarder": [
							605
						],
						"Ownable": [
							166
						]
					},
					"id": 606,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 198,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
							"file": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
							"id": 200,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 606,
							"sourceUnit": 19,
							"src": "362:132:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 199,
										"name": "AutomationCompatibleInterface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 18,
										"src": "370:29:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 201,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 606,
							"sourceUnit": 167,
							"src": "495:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 202,
										"name": "AutomationCompatibleInterface",
										"nameLocations": [
											"579:29:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 18,
										"src": "579:29:3"
									},
									"id": 203,
									"nodeType": "InheritanceSpecifier",
									"src": "579:29:3"
								},
								{
									"baseName": {
										"id": 204,
										"name": "Ownable",
										"nameLocations": [
											"609:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "609:7:3"
									},
									"id": 205,
									"nodeType": "InheritanceSpecifier",
									"src": "609:7:3"
								}
							],
							"canonicalName": "CounterwForwarder",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 605,
							"linearizedBaseContracts": [
								605,
								166,
								196,
								18
							],
							"name": "CounterwForwarder",
							"nameLocation": "558:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "61bc221a",
									"id": 207,
									"mutability": "mutable",
									"name": "counter",
									"nameLocation": "643:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "628:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 206,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "947a36fb",
									"id": 209,
									"mutability": "mutable",
									"name": "interval",
									"nameLocation": "721:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "706:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 208,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "30cac972",
									"id": 211,
									"mutability": "mutable",
									"name": "realInterval",
									"nameLocation": "801:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "786:27:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 210,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "786:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "39518b5e",
									"id": 213,
									"mutability": "mutable",
									"name": "startingTime",
									"nameLocation": "881:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "866:27:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 212,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "866:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3f3b3b27",
									"id": 215,
									"mutability": "mutable",
									"name": "lastTimeStamp",
									"nameLocation": "914:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "899:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 214,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "899:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3070fbf8",
									"id": 217,
									"mutability": "mutable",
									"name": "s_forwarderAddress",
									"nameLocation": "1003:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "988:33:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 216,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "988:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "30e3f8f8",
									"id": 219,
									"mutability": "mutable",
									"name": "checkOnce",
									"nameLocation": "1044:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "1032:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 218,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1032:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"errorSelector": "54593e75",
									"id": 223,
									"name": "wrongTime",
									"nameLocation": "1075:9:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "1093:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "1085:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1084:14:3"
									},
									"src": "1069:30:3"
								},
								{
									"errorSelector": "71540007",
									"id": 227,
									"name": "wrongInterval",
									"nameLocation": "1111:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "updateInterval",
												"nameLocation": "1133:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1125:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:24:3"
									},
									"src": "1105:44:3"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "1188:16:3",
										"statements": []
									},
									"id": 235,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 230,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1176:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1180:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1176:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 232,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 229,
												"name": "Ownable",
												"nameLocations": [
													"1168:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "1168:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1168:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:2:3"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1188:0:3"
									},
									"scope": 605,
									"src": "1155:49:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										11
									],
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "1314:122:3",
										"statements": [
											{
												"assignments": [
													246
												],
												"declarations": [
													{
														"constant": false,
														"id": 246,
														"mutability": "mutable",
														"name": "needsUpkeep",
														"nameLocation": "1330:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 262,
														"src": "1325:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 245,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 247,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1345:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1351:9:3",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1345:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 249,
																	"name": "lastTimeStamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "1363:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1345:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 251,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1344:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 252,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "1380:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1344:44:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1325:63:3"
											},
											{
												"expression": {
													"components": [
														{
															"id": 255,
															"name": "needsUpkeep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "1406:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "",
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1425:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1419:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 256,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1419:5:3",
																	"typeDescriptions": {}
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1419:9:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"id": 260,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1405:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"functionReturnParameters": 244,
												"id": 261,
												"nodeType": "Return",
												"src": "1398:31:3"
											}
										]
									},
									"functionSelector": "6e04ff0d",
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "1219:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 239,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1270:8:3"
									},
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "1231:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1231:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1230:30:3"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "1294:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1294:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "1300:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1300:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:20:3"
									},
									"scope": 605,
									"src": "1210:226:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										17
									],
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "1509:986:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 269,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1541:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1545:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1541:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 271,
																"name": "s_forwarderAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "1555:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1541:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973206164647265737320646f6573206e6f742068617665207065726d697373696f6e20746f2063616c6c20706572666f726d55706b656570",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1587:61:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f",
																"typeString": "literal_string \"This address does not have permission to call performUpkeep\""
															},
															"value": "This address does not have permission to call performUpkeep"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f",
																"typeString": "literal_string \"This address does not have permission to call performUpkeep\""
															}
														],
														"id": 268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1520:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1520:138:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1520:138:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 276,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "1680:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1692:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1680:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 284,
												"nodeType": "IfStatement",
												"src": "1676:73:3",
												"trueBody": {
													"id": 283,
													"nodeType": "Block",
													"src": "1694:55:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "interval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "1729:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 279,
																	"name": "wrongInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "1715:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:23:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 282,
															"nodeType": "RevertStatement",
															"src": "1708:30:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 285,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1771:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1777:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1771:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 287,
														"name": "startingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "1790:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1771:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 317,
													"nodeType": "Block",
													"src": "2425:55:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 314,
																		"name": "startingTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2456:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 313,
																	"name": "wrongTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "2446:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2446:23:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 316,
															"nodeType": "RevertStatement",
															"src": "2439:30:3"
														}
													]
												},
												"id": 318,
												"nodeType": "IfStatement",
												"src": "1768:712:3",
												"trueBody": {
													"id": 312,
													"nodeType": "Block",
													"src": "1803:609:3",
													"statements": [
														{
															"assignments": [
																290
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 290,
																	"mutability": "mutable",
																	"name": "startExecutionTime",
																	"nameLocation": "2135:18:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 312,
																	"src": "2127:26:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 289,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2127:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 295,
															"initialValue": {
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 291,
																	"name": "lastTimeStamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "2156:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 292,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2172:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2178:9:3",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2172:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2156:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2127:60:3"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 296,
																	"name": "weeklyTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "2203:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2203:16:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "ExpressionStatement",
															"src": "2203:16:3"
														},
														{
															"assignments": [
																300
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 300,
																	"mutability": "mutable",
																	"name": "executionDuration",
																	"nameLocation": "2241:17:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 312,
																	"src": "2233:25:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 299,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2233:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 305,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 301,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2261:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2267:9:3",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2261:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 303,
																	"name": "startExecutionTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "2279:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2261:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2233:64:3"
														},
														{
															"expression": {
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 306,
																	"name": "interval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "2312:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 307,
																		"name": "realInterval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 211,
																		"src": "2323:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 308,
																		"name": "executionDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 300,
																		"src": "2338:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2323:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2312:43:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 311,
															"nodeType": "ExpressionStatement",
															"src": "2312:43:3"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4585e33b",
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "1453:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "1467:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1467:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1466:32:3"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1509:0:3"
									},
									"scope": 605,
									"src": "1444:1051:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "3510:458:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 329,
														"name": "updateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "3533:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3533:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 337,
												"nodeType": "IfStatement",
												"src": "3530:84:3",
												"trueBody": {
													"id": 336,
													"nodeType": "Block",
													"src": "3553:61:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 333,
																		"name": "updateInterval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 324,
																		"src": "3588:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 332,
																	"name": "wrongInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "3574:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3574:29:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 335,
															"nodeType": "RevertStatement",
															"src": "3567:36:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 338,
														"name": "_startingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "3635:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 339,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3651:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3657:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3651:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3635:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 347,
												"nodeType": "IfStatement",
												"src": "3632:91:3",
												"trueBody": {
													"id": 346,
													"nodeType": "Block",
													"src": "3667:56:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 343,
																		"name": "_startingTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 322,
																		"src": "3698:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 342,
																	"name": "wrongTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "3688:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3688:24:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 345,
															"nodeType": "RevertStatement",
															"src": "3681:31:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 348,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "3733:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 349,
															"name": "_startingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "3744:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 350,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3760:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3766:9:3",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3760:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3744:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3733:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "3733:42:3"
											},
											{
												"expression": {
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 355,
														"name": "startingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "3785:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 356,
														"name": "_startingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "3800:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3785:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "3785:28:3"
											},
											{
												"expression": {
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 359,
														"name": "lastTimeStamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "3823:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 360,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3839:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3845:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3839:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3823:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "3823:31:3"
											},
											{
												"expression": {
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 364,
														"name": "realInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "3864:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 365,
														"name": "updateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "3879:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3864:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "3864:29:3"
											}
										]
									},
									"functionSelector": "5f17e616",
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 327,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 326,
												"name": "onlyOwner",
												"nameLocations": [
													"3501:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 77,
												"src": "3501:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3501:9:3"
										}
									],
									"name": "setInterval",
									"nameLocation": "3431:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "_startingTime",
												"nameLocation": "3452:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "3444:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3444:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "updateInterval",
												"nameLocation": "3475:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "3467:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3467:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3443:47:3"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3510:0:3"
									},
									"scope": 605,
									"src": "3422:546:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "4009:73:3",
										"statements": [
											{
												"expression": {
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 374,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "4027:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4038:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4027:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "4027:12:3"
											},
											{
												"expression": {
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 378,
														"name": "checkOnce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "4049:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4061:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4049:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "4049:17:3"
											}
										]
									},
									"functionSelector": "6626b26d",
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 372,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 371,
												"name": "onlyOwner",
												"nameLocations": [
													"4000:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 77,
												"src": "4000:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4000:9:3"
										}
									],
									"name": "off",
									"nameLocation": "3983:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3987:2:3"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4009:0:3"
									},
									"scope": 605,
									"src": "3974:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"constant": false,
									"id": 385,
									"mutability": "mutable",
									"name": "receiveFromTreasury",
									"nameLocation": "4096:19:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "4088:27:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 384,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4088:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 387,
									"mutability": "mutable",
									"name": "receiveFromOwneerShip",
									"nameLocation": "4130:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "4122:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 386,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4122:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 390,
									"mutability": "mutable",
									"name": "blocked",
									"nameLocation": "4175:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "4170:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 388,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "4170:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 389,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4185:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 392,
									"mutability": "mutable",
									"name": "receivedAmount",
									"nameLocation": "4204:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "4196:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 391,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4196:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 395,
									"mutability": "mutable",
									"name": "totalStakedAmount",
									"nameLocation": "4234:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "4225:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 393,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4225:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 394,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4254:8:3",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20000000000000000000_by_1",
											"typeString": "int_const 20000000000000000000"
										},
										"value": "20"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4303:1097:3",
										"statements": [
											{
												"assignments": [
													399,
													401,
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 399,
														"mutability": "mutable",
														"name": "remainFiftyOPool",
														"nameLocation": "4333:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4325:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4325:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "dividentPayoutOPoolAmount",
														"nameLocation": "4358:25:3",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4350:33:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 400,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "perPersonFromTPool",
														"nameLocation": "4393:18:3",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4385:26:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 402,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4385:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 404,
														"name": "perPoolCalculation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "4416:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function () returns (uint256,uint256,uint256)"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4416:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4323:113:3"
											},
											{
												"assignments": [
													408
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "maxlimit",
														"nameLocation": "4471:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4463:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 407,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4463:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 409,
												"nodeType": "VariableDeclarationStatement",
												"src": "4463:16:3"
											},
											{
												"body": {
													"id": 479,
													"nodeType": "Block",
													"src": "4528:856:3",
													"statements": [
														{
															"condition": {
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4546:8:3",
																"subExpression": {
																	"id": 420,
																	"name": "blocked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "4547:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 478,
															"nodeType": "IfStatement",
															"src": "4543:818:3",
															"trueBody": {
																"id": 477,
																"nodeType": "Block",
																"src": "4555:806:3",
																"statements": [
																	{
																		"assignments": [
																			423
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 423,
																				"mutability": "mutable",
																				"name": "eachSharePercentage",
																				"nameLocation": "4582:19:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 477,
																				"src": "4574:27:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 422,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4574:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 432,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 427,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 424,
																							"name": "totalStakedAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 395,
																							"src": "4605:17:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"components": [
																								{
																									"hexValue": "3130303030",
																									"id": 425,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "4626:5:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10000_by_1",
																										"typeString": "int_const 10000"
																									},
																									"value": "10000"
																								}
																							],
																							"id": 426,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "4625:7:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10000_by_1",
																								"typeString": "int_const 10000"
																							}
																						},
																						"src": "4605:27:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 428,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4604:29:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"components": [
																					{
																						"id": 429,
																						"name": "totalStakedAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 395,
																						"src": "4637:17:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 430,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4636:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4604:51:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4574:81:3"
																	},
																	{
																		"assignments": [
																			434
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 434,
																				"mutability": "mutable",
																				"name": "eachSendAmount",
																				"nameLocation": "4698:14:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 477,
																				"src": "4690:22:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 433,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4690:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 439,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 436,
																					"name": "dividentPayoutOPoolAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 401,
																					"src": "4735:25:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 437,
																					"name": "eachSharePercentage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 423,
																					"src": "4762:19:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 435,
																				"name": "calculatePercentage",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 592,
																				"src": "4715:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4715:67:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4690:92:3"
																	},
																	{
																		"assignments": [
																			441
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 441,
																				"mutability": "mutable",
																				"name": "eachSendAmount1",
																				"nameLocation": "4808:15:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 477,
																				"src": "4800:23:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 440,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4800:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 446,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 443,
																					"name": "remainFiftyOPool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 399,
																					"src": "4846:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 444,
																					"name": "eachSharePercentage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 423,
																					"src": "4864:19:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 442,
																				"name": "calculatePercentage",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 592,
																				"src": "4826:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4826:58:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4800:84:3"
																	},
																	{
																		"expression": {
																			"id": 449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 447,
																				"name": "ownerShipPoolAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 488,
																				"src": "4919:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 448,
																				"name": "eachSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 434,
																				"src": "4942:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4919:37:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 450,
																		"nodeType": "ExpressionStatement",
																		"src": "4919:37:3"
																	},
																	{
																		"expression": {
																			"id": 453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 451,
																				"name": "maxlimit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 408,
																				"src": "4999:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 452,
																				"name": "eachSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 434,
																				"src": "5011:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4999:26:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 454,
																		"nodeType": "ExpressionStatement",
																		"src": "4999:26:3"
																	},
																	{
																		"expression": {
																			"id": 457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 455,
																				"name": "treasuryPoolAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "5043:18:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 456,
																				"name": "perPersonFromTPool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "5065:18:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5043:40:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 458,
																		"nodeType": "ExpressionStatement",
																		"src": "5043:40:3"
																	},
																	{
																		"expression": {
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 459,
																				"name": "receiveFromTreasury",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 385,
																				"src": "5102:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 460,
																				"name": "perPersonFromTPool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "5125:18:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5102:41:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 462,
																		"nodeType": "ExpressionStatement",
																		"src": "5102:41:3"
																	},
																	{
																		"expression": {
																			"id": 465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 463,
																				"name": "receiveFromOwneerShip",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 387,
																				"src": "5160:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 464,
																				"name": "eachSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 434,
																				"src": "5185:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5160:39:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 466,
																		"nodeType": "ExpressionStatement",
																		"src": "5160:39:3"
																	},
																	{
																		"assignments": [
																			468
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 468,
																				"mutability": "mutable",
																				"name": "totalSendAmount",
																				"nameLocation": "5242:15:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 477,
																				"src": "5234:23:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 467,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5234:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 472,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 469,
																				"name": "eachSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 434,
																				"src": "5260:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 470,
																				"name": "perPersonFromTPool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "5277:18:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5260:35:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5234:61:3"
																	},
																	{
																		"expression": {
																			"id": 475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 473,
																				"name": "receivedAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 392,
																				"src": "5312:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 474,
																				"name": "totalSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 468,
																				"src": "5330:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5312:33:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 476,
																		"nodeType": "ExpressionStatement",
																		"src": "5312:33:3"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 414,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "4509:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 415,
														"name": "noOfUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "4513:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4509:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"initializationExpression": {
													"assignments": [
														411
													],
													"declarations": [
														{
															"constant": false,
															"id": 411,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4502:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 480,
															"src": "4494:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 410,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4494:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 413,
													"initialValue": {
														"hexValue": "30",
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4506:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4494:13:3"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4524:3:3",
														"subExpression": {
															"id": 417,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "4524:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 419,
													"nodeType": "ExpressionStatement",
													"src": "4524:3:3"
												},
												"nodeType": "ForStatement",
												"src": "4490:894:3"
											}
										]
									},
									"functionSelector": "e9c68e2c",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "weeklyTransfer",
									"nameLocation": "4278:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4292:2:3"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4303:0:3"
									},
									"scope": 605,
									"src": "4269:1131:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 485,
									"mutability": "mutable",
									"name": "noOfUsers",
									"nameLocation": "5413:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "5405:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 483,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5405:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 484,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5425:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 488,
									"mutability": "mutable",
									"name": "ownerShipPoolAmount",
									"nameLocation": "5444:19:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "5435:61:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 486,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5435:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "393939393939393939393939393939393939393939393939",
										"id": 487,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5466:30:3",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_999999999999999999999999000000000000000000_by_1",
											"typeString": "int_const 9999...(34 digits omitted)...0000"
										},
										"value": "999999999999999999999999"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 491,
									"mutability": "mutable",
									"name": "treasuryPoolAmount",
									"nameLocation": "5514:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "5504:61:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 489,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5504:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "393939393939393939393939393939393939393939393939",
										"id": 490,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5535:30:3",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_999999999999999999999999000000000000000000_by_1",
											"typeString": "int_const 9999...(34 digits omitted)...0000"
										},
										"value": "999999999999999999999999"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 494,
									"mutability": "mutable",
									"name": "odividentPayoutPercentage",
									"nameLocation": "5582:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "5573:40:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 492,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5573:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030",
										"id": 493,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5610:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 497,
									"mutability": "mutable",
									"name": "flowToTreasuryPercentage",
									"nameLocation": "5630:24:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "5622:38:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 495,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5622:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030",
										"id": 496,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5657:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 500,
									"mutability": "mutable",
									"name": "maintainceFeePercentage",
									"nameLocation": "5677:23:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "5669:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 498,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5669:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030",
										"id": 499,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5703:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 503,
									"mutability": "mutable",
									"name": "tdividentPayoutPercentage",
									"nameLocation": "5724:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 605,
									"src": "5716:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 501,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5716:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030",
										"id": 502,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5752:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "5833:877:3",
										"statements": [
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "remainFiftyOPool",
														"nameLocation": "5861:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 569,
														"src": "5853:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 512,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5853:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 518,
												"initialValue": {
													"arguments": [
														{
															"id": 515,
															"name": "ownerShipPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "5900:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "35303030",
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5921:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5000_by_1",
																"typeString": "int_const 5000"
															},
															"value": "5000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_5000_by_1",
																"typeString": "int_const 5000"
															}
														],
														"id": 514,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "5880:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5880:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5853:73:3"
											},
											{
												"assignments": [
													520
												],
												"declarations": [
													{
														"constant": false,
														"id": 520,
														"mutability": "mutable",
														"name": "dividentPayoutOPoolAmount",
														"nameLocation": "5945:25:3",
														"nodeType": "VariableDeclaration",
														"scope": 569,
														"src": "5937:33:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 519,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5937:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"arguments": [
														{
															"id": 522,
															"name": "remainFiftyOPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "5993:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 523,
															"name": "odividentPayoutPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "6011:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 521,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "5973:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5973:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5937:100:3"
											},
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "fifteenPercenntToTPoolAmount",
														"nameLocation": "6055:28:3",
														"nodeType": "VariableDeclaration",
														"scope": 569,
														"src": "6047:36:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 526,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6047:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 532,
												"initialValue": {
													"arguments": [
														{
															"id": 529,
															"name": "remainFiftyOPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "6106:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 530,
															"name": "flowToTreasuryPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "6124:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 528,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "6086:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6086:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6047:102:3"
											},
											{
												"assignments": [
													534
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "tenPercenntToMaintenceAmount",
														"nameLocation": "6167:28:3",
														"nodeType": "VariableDeclaration",
														"scope": 569,
														"src": "6159:36:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 533,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6159:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 539,
												"initialValue": {
													"arguments": [
														{
															"id": 536,
															"name": "remainFiftyOPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "6218:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 537,
															"name": "maintainceFeePercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "6236:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 535,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "6198:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6198:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6159:101:3"
											},
											{
												"assignments": [
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "remainFiftyTPoolAmount",
														"nameLocation": "6278:22:3",
														"nodeType": "VariableDeclaration",
														"scope": 569,
														"src": "6270:30:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 540,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6270:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 546,
												"initialValue": {
													"arguments": [
														{
															"id": 543,
															"name": "treasuryPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "6323:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 544,
															"name": "tdividentPayoutPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "6343:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 542,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "6303:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6303:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6270:99:3"
											},
											{
												"assignments": [
													548
												],
												"declarations": [
													{
														"constant": false,
														"id": 548,
														"mutability": "mutable",
														"name": "perPersonFromTPool",
														"nameLocation": "6396:18:3",
														"nodeType": "VariableDeclaration",
														"scope": 569,
														"src": "6388:26:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 547,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6388:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 552,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 549,
														"name": "remainFiftyTPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "6417:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 550,
														"name": "noOfUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "6440:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6417:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6388:61:3"
											},
											{
												"expression": {
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 553,
														"name": "ownerShipPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "6468:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 554,
																	"name": "fifteenPercenntToTPoolAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "6492:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 555,
																	"name": "tenPercenntToMaintenceAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "6523:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6492:59:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 557,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6491:61:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6468:84:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "6468:84:3"
											},
											{
												"expression": {
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 560,
														"name": "treasuryPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "6562:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 561,
														"name": "fifteenPercenntToTPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "6584:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6562:50:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "6562:50:3"
											},
											{
												"expression": {
													"components": [
														{
															"id": 564,
															"name": "remainFiftyOPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "6641:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 565,
															"name": "dividentPayoutOPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "6658:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 566,
															"name": "perPersonFromTPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "6684:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 567,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6640:63:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 511,
												"id": 568,
												"nodeType": "Return",
												"src": "6633:70:3"
											}
										]
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "perPoolCalculation",
									"nameLocation": "5771:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5789:2:3"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "5808:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5808:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "5817:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5817:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "5825:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5825:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5807:26:3"
									},
									"scope": 605,
									"src": "5762:948:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "6827:130:3",
										"statements": [
											{
												"assignments": [
													580
												],
												"declarations": [
													{
														"constant": false,
														"id": 580,
														"mutability": "mutable",
														"name": "serviceFee",
														"nameLocation": "6853:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 591,
														"src": "6845:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 579,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6845:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 581,
															"name": "_totalStakeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "6866:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"id": 582,
																	"name": "percentageNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "6887:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 583,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6886:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6866:38:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"hexValue": "3130303030",
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6908:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															}
														],
														"id": 586,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6907:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														}
													},
													"src": "6866:48:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6845:69:3"
											},
											{
												"expression": {
													"id": 589,
													"name": "serviceFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 580,
													"src": "6940:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 578,
												"id": 590,
												"nodeType": "Return",
												"src": "6933:17:3"
											}
										]
									},
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePercentage",
									"nameLocation": "6725:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "_totalStakeAmount",
												"nameLocation": "6753:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "6745:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6745:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "percentageNumber",
												"nameLocation": "6779:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "6771:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6771:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6744:52:3"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "6818:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6818:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6817:9:3"
									},
									"scope": 605,
									"src": "6716:241:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "7037:54:3",
										"statements": [
											{
												"expression": {
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 599,
														"name": "s_forwarderAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "7047:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 600,
														"name": "forwarderAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "7068:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7047:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "7047:37:3"
											}
										]
									},
									"functionSelector": "d777cc6d",
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 597,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 596,
												"name": "onlyOwner",
												"nameLocations": [
													"7027:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 77,
												"src": "7027:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "7027:9:3"
										}
									],
									"name": "setForwarderAddress",
									"nameLocation": "6972:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "forwarderAddress",
												"nameLocation": "7000:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "6992:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6992:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6991:26:3"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7037:0:3"
									},
									"scope": 605,
									"src": "6963:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 606,
							"src": "549:6545:3",
							"usedErrors": [
								32,
								37,
								223,
								227
							],
							"usedEvents": [
								43
							]
						}
					],
					"src": "32:7066:3"
				},
				"id": 3
			}
		}
	}
}