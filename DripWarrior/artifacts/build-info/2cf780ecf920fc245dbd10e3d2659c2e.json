{
	"id": "2cf780ecf920fc245dbd10e3d2659c2e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"DripWarrior/poolContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport {AutomationCompatibleInterface} from \"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\";\n\n\n// 0xcCc22A7fc54d184138dfD87B7aD24552cD4E0915\ninterface IBEP20 {        \n    \n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function transferFrom(address sender,address recipient,uint256 amount) external returns (bool);\n}\n\ncontract PoolContrcat is Initializable, OwnableUpgradeable, UUPSUpgradeable, AutomationCompatibleInterface {\n\n    IBEP20 public usdcToken;\n    \n    uint256 public treasuryPoolAmount;\n    uint256 public ownerShipPoolAmount;\n    uint256 public totalStakedAmount;\n\n    uint256 public tdividentPayoutPercentage;\n    uint256 public odividentPayoutPercentage;\n    uint256 public flowToTreasuryPercentage;\n    uint256 public maintainceFeePercentage;\n\n    uint256 public noOfUsers;\n    address public multisigAddress;\n\n    bool private locked;\n    uint256 public interval; // interval specifies the time between upkeeps\n    uint256 public realInterval; // interval specifies the time between upkeeps\n    uint256 public startingTime; \n    uint256 public lastTimeStamp; // lastTimeStamp tracks the last upkeep performed\n    address public s_forwarderAddress;\n\n    address public ownerOne;\n    address public ownerTwo;\n\n    struct UserRegistered{\n\n        bool blocked;\n        uint256 receivedAmount;\n        uint256 withdrawAmount;\n        uint256 receiveFromTreasury;\n        uint256 receiveFromOwneerShip;\n        uint256 totalStakedAmount;\n    }\n\n    uint256 public totalProjects;\n    mapping(address => bool) public alreadyAdded;\n    mapping(uint256 => address) public totalUsers;\n    mapping(uint256 => uint256) public tPPercentages;\n    mapping(address => UserRegistered) public userRegistered;\n\n    event AddTreasuery(uint256 _treasuryPoolAmount);\n    event AddOwnership(uint256 _ownerShipPoolAmount);\n    event AddFunds(uint256 _amount, uint256 _projectNo);\n    event offInterval(address _owner, uint256 _interval);\n    event Withdraw (address recipient, uint256 usdcAmount);\n    event PercentageChanged(address _owner, uint256 _newPercentage);\n    event SetForwarderAddress(address _owner, address _s_forwarderAddress);\n    event UserBlocked(address owner,address blockUserAddress, bool blocked);\n    event StakeTokens (address sender, address recepient,uint256 usdcAmount);\n    event singleUserAddeed(address owner,uint256 _amount, address userAddress);\n    event SetInterval(address _owner, uint256 _interval, uint256 _lastTimeStamp);\n    event AddProject(uint256 projectId, uint256 OpPercentage,uint256 tpPercentage);\n    event multipleUserAddeed(address owner,uint256 _amountLength, uint256 usersLength);\n    event WeeklyTransfered(address caller,uint256  ownerShipPoolAmount, uint256  treasuryPoolAmount);\n\n    error ArrayLengthMismatch();\n    error wrongValue(bool value);\n    error wrongTime(uint256 time);\n    error userBlocked(bool blocked);\n    error wrongOwner(address owner);\n    error wrongAmount(uint256 amount);\n    error zeroUsers(uint256 noOfUsers);\n    error transferFailed(bool transfered);\n    error notEnoughBalance(uint256 amount);\n    error emptyAmount(uint256 amountLength);\n    error wrongProjectNo(uint256 projectNO);\n    error wrongAddress(address wrongAddress);\n    error wrongPercentage(uint256 percentage);\n    error emptyAddresses(uint256 addressLength);\n    error wrongInterval(uint256 updateInterval);\n    error notEnoughAmount(uint256 balanceAmount);\n    error  wrongPerceentage(uint256 percentageNumber);\n    error wrongPercentageAmount(uint256 _totalStakeAmount);\n    error emptyPools(uint256 ownerShipPoolAmount, uint256 treasuryPoolAmount);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        address initialOwner,\n        address _usdcAddress,\n        address _ownerOne,\n        address _ownerTwo,\n        address _multisigAddress)\n        initializer public\n    {\n        \n        __Ownable_init(initialOwner);\n        __UUPSUpgradeable_init();\n\n        usdcToken = IBEP20(_usdcAddress);\n\n            // tPPercentages[0] = 5100; // 51 %\n            // tPPercentages[1] = 7500; // 75 % \n            // tPPercentages[2] = 3500; // 35 %\n            // tPPercentages[3] = 7700; // 77 %\n            tdividentPayoutPercentage = 5000; // 50 %\n            odividentPayoutPercentage = 7500; // 75 %\n            \n            flowToTreasuryPercentage = 1500; // l5%\n            maintainceFeePercentage = 1000; // 10 % \n\n            // totalProjects = 4;\n            multisigAddress = _multisigAddress;\n            ownerOne = _ownerOne;\n            ownerTwo = _ownerTwo;\n    }\n\n    \n\n     function addProjects(uint256 _tPPercentage) external bothOwner(){\n        \n        if(_tPPercentage <= 0){\n            revert wrongPercentage(_tPPercentage);\n        }\n\n        tPPercentages[totalProjects] = _tPPercentage;\n        totalProjects++;\n\n\n        emit AddProject((totalProjects), (10000 - _tPPercentage), _tPPercentage);\n    }\n\n    function addOwnership(uint256 _amount) external bothOwner(){\n        \n        if(_amount <= 0){\n            revert wrongAmount(_amount);\n        }\n\n        ownerShipPoolAmount += _amount;\n\n        bool success = usdcToken.transferFrom(msg.sender,address(this),_amount );\n        if(!success){\n            revert transferFailed(success);\n        }\n\n        emit AddOwnership(ownerShipPoolAmount);\n    }\n    \n    function addTreasuery(uint256 _amount) external bothOwner(){\n        \n        if(_amount <= 0){\n            revert wrongAmount(_amount);\n        }\n\n        treasuryPoolAmount += _amount;\n\n        bool success = usdcToken.transferFrom(msg.sender,address(this),_amount );\n        if(!success){\n            revert transferFailed(success);\n        }\n\n        emit AddTreasuery(treasuryPoolAmount);\n    }\n\n    function stakeTokens(uint256 _amount) external  {\n        \n        if(_amount <= 0){\n            revert wrongAmount(_amount);\n        }\n        \n        if(userRegistered[msg.sender].blocked){\n            revert userBlocked(userRegistered[msg.sender].blocked);\n        }\n\n        userRegistered[msg.sender].totalStakedAmount += _amount;\n       \n        if(!alreadyAdded[msg.sender]){\n            \n            totalUsers[noOfUsers] = msg.sender;\n            alreadyAdded[msg.sender] = true;\n            noOfUsers++;\n        }\n\n        totalStakedAmount += _amount;\n\n        bool success =usdcToken.transferFrom(msg.sender,multisigAddress,_amount);\n        \n        if(!success){\n            revert transferFailed(success);\n        }\n\n        emit StakeTokens(msg.sender,multisigAddress, _amount);\n\n    }\n\n\n   \n    function stakeTokensByOwner(uint256[] memory _amount, address[] memory users) external bothOwner() {\n        \n         if(_amount.length <= 0){\n\n            revert emptyAmount(_amount.length);\n        }\n        if(users.length <= 0){\n\n            revert emptyAddresses(users.length);\n        }\n\n        if (users.length != _amount.length) {\n            revert ArrayLengthMismatch();\n        }\n\n        for(uint i=0 ;i < _amount.length; i++){\n\n            userRegistered[users[i]].totalStakedAmount += _amount[i];\n            totalStakedAmount += _amount[i];\n        }\n\n        emit multipleUserAddeed(msg.sender,_amount.length,users.length);\n    }\n\n\n    function reStakeTokens(uint256 _amount) external  {\n        \n        if(_amount <= 0){\n            revert wrongAmount(_amount);\n        }\n       \n        if(userRegistered[msg.sender].blocked){\n            revert userBlocked(userRegistered[msg.sender].blocked);\n        }\n\n        if(userRegistered[msg.sender].receivedAmount <= _amount){\n            revert notEnoughBalance(_amount);\n        }\n\n        userRegistered[msg.sender].receivedAmount -= _amount;\n        userRegistered[msg.sender].totalStakedAmount += _amount;\n        \n        ownerShipPoolAmount += _amount;\n        totalStakedAmount += _amount;\n\n        emit StakeTokens(msg.sender,address(this), _amount);\n\n    }\n\n   \n    function addFunds(uint256 _amount, uint256 _projectNo)   external {\n\n        if(_amount <= 0){\n            revert wrongAmount(_amount);\n        }\n\n        if(_projectNo > totalProjects){\n            revert wrongProjectNo(_projectNo);\n        }\n            \n        calculateFees(_amount, tPPercentages[_projectNo]);\n        \n        bool success = usdcToken.transferFrom(msg.sender,address(this),_amount );\n        if(!success){\n            revert transferFailed(success);\n        }\n\n        emit AddFunds(_amount,_projectNo);\n        \n    }\n\n\n    function calculateFees(uint256 _amount, uint256 _tPPercentage) private {\n       \n        uint256 oPPercentage = 10000 - _tPPercentage;\n        uint256 ownerShipFee = calculatePercentage(_amount, oPPercentage);\n        uint256 treasuryFee = calculatePercentage(_amount, _tPPercentage);\n\n        ownerShipPoolAmount += ownerShipFee;\n        treasuryPoolAmount += treasuryFee;\n    }\n\n\n\n    function weeklyTransfer() public  {\n\n        if(msg.sender != s_forwarderAddress && msg.sender != ownerOne && msg.sender != ownerTwo){\n            revert wrongOwner(msg.sender);\n        }\n\n        if(ownerShipPoolAmount <= 0 && treasuryPoolAmount <= 0){\n            revert emptyPools(ownerShipPoolAmount,treasuryPoolAmount);\n        }\n        \n        ( uint256 remainFiftyOPool,uint256 dividentPayoutOPoolAmount, uint256 perPersonFromTPool)  = perPoolCalculation();\n        \n       \n        uint256 maxlimit;\n\n        for(uint256 i = 0; i < noOfUsers; i++){\n\n            if(!userRegistered[totalUsers[i]].blocked){\n\n                uint256 eachSharePercentage = (userRegistered[totalUsers[i]].totalStakedAmount * (10000)) / (totalStakedAmount);\n                \n                uint256 eachSendAmount = calculatePercentage(dividentPayoutOPoolAmount, eachSharePercentage);\n                ownerShipPoolAmount -= eachSendAmount;\n                        \n                maxlimit += eachSendAmount;\n                treasuryPoolAmount -= perPersonFromTPool;\n\n                userRegistered[totalUsers[i]].receiveFromTreasury += perPersonFromTPool;\n                userRegistered[totalUsers[i]].receiveFromOwneerShip += eachSendAmount;\n                \n                uint256 totalSendAmount = eachSendAmount + perPersonFromTPool;\n                userRegistered[totalUsers[i]].receivedAmount += totalSendAmount;\n\n                require(maxlimit <= remainFiftyOPool, \"Amount is greater then 50%\");\n            }\n            \n        }\n\n        emit WeeklyTransfered(msg.sender, ownerShipPoolAmount, treasuryPoolAmount);\n\n    }\n\n    \n\n    function perPoolCalculation() private returns(uint256, uint256,uint256){\n        \n\n        uint256 remainFiftyOPool = calculatePercentage(ownerShipPoolAmount, 5000);\n\n        uint256 dividentPayoutOPoolAmount = calculatePercentage(remainFiftyOPool, odividentPayoutPercentage);\n        uint256 fifteenPercenntToTPoolAmount = calculatePercentage(remainFiftyOPool, flowToTreasuryPercentage);\n        uint256 tenPercenntToMaintenceAmount = calculatePercentage(remainFiftyOPool, maintainceFeePercentage);\n        uint256 remainFiftyTPoolAmount = calculatePercentage(treasuryPoolAmount, tdividentPayoutPercentage);\n\n        if(noOfUsers <= 0){\n            revert zeroUsers(noOfUsers);\n        }\n        \n        uint256 perPersonFromTPool = remainFiftyTPoolAmount/noOfUsers;\n        \n        ownerShipPoolAmount -= (fifteenPercenntToTPoolAmount + tenPercenntToMaintenceAmount);\n        treasuryPoolAmount += fifteenPercenntToTPoolAmount;\n\n        bool success = usdcToken.transfer(multisigAddress, tenPercenntToMaintenceAmount);\n        if(!success){\n            revert transferFailed(success);\n        }\n\n        return (remainFiftyOPool,dividentPayoutOPoolAmount,perPersonFromTPool);\n    }\n\n    function checkUpkeep(bytes calldata /*checkData*/) external override view  returns (bool, bytes memory) {\n         \n        bool needsUpkeep = (block.timestamp - lastTimeStamp) > interval;\n        return (needsUpkeep, bytes(\"\"));\n    }\n    \n\n    function performUpkeep(bytes calldata /*performData*/) external  {\n        \n        require(\n            msg.sender == s_forwarderAddress,\n            \"This address does not have permission to call performUpkeep\"\n        );\n       \n        if (interval == 0){\n            revert wrongInterval(interval);\n        }\n        \n         if(block.timestamp >= startingTime){\n\n            interval = realInterval;\n            lastTimeStamp = block.timestamp;\n            startingTime = block.timestamp + realInterval;\n            weeklyTransfer();\n        }\n        else{\n            revert wrongTime(startingTime);\n        }\n        \n    }\n\n    \n    function setInterval (uint256 _startingTime, uint256 updateInterval) external  bothOwner{\n         \n       if(updateInterval <= 0){\n            revert wrongInterval(updateInterval);\n        }\n        \n        if(_startingTime < block.timestamp){\n            revert wrongTime(_startingTime);\n        }\n\n        interval = _startingTime - block.timestamp;\n        startingTime = _startingTime;\n        lastTimeStamp = block.timestamp;\n        realInterval = updateInterval;\n\n        emit SetInterval(msg.sender, interval, lastTimeStamp);\n\n    }\n\n    function off () external  bothOwner{\n       \n        interval = 0;\n        emit offInterval(msg.sender, interval);\n    }\n\n\n    function setForwarderAddress(address forwarderAddress) external bothOwner {\n        \n        if(forwarderAddress == address(0)){\n            revert wrongAddress(forwarderAddress);\n        }\n        \n        s_forwarderAddress = forwarderAddress;\n\n        emit SetForwarderAddress(msg.sender, s_forwarderAddress);\n    }\n\n    function calculatePercentage(uint256 _totalStakeAmount,uint256 percentageNumber) private pure returns(uint256) {\n        \n        if(_totalStakeAmount <= 0){\n            revert wrongPercentageAmount(_totalStakeAmount);\n        }\n        if(percentageNumber <= 0){\n            revert wrongPerceentage(percentageNumber);\n        }\n       \n        uint256 serviceFee = _totalStakeAmount * (percentageNumber) / (10000);\n        \n        return serviceFee;\n    }\n    \n\n    function userWithdrawAmoount(uint256 _amount) external nonReentrant {\n        \n        if(_amount <= 0){\n            revert wrongAmount(_amount);\n        }\n\n        if(_amount > userRegistered[msg.sender].receivedAmount){\n            revert notEnoughAmount(userRegistered[msg.sender].receivedAmount);\n        }\n\n        userRegistered[msg.sender].receivedAmount -= _amount;\n        userRegistered[msg.sender].withdrawAmount += _amount;\n       \n        bool success = usdcToken.transfer(msg.sender,_amount);\n       \n        if(!success){\n            revert transferFailed(success);\n        }\n\n        emit Withdraw(msg.sender, _amount);\n    }\n\n    function blockUser(address _userAddress, bool value) external bothOwner {\n        \n        if(_userAddress == address(0)){\n            revert wrongAddress(_userAddress);\n        }\n\n        if(value != true && value != false){\n            revert wrongValue(value);\n        }\n\n        if(value == true){\n\n            userRegistered[_userAddress].blocked = true;\n        }else{\n       \n            userRegistered[_userAddress].blocked = false;\n        }\n        \n        emit UserBlocked(msg.sender,_userAddress, userRegistered[_userAddress].blocked);\n    }\n\n\n    \n    function setTeasueryPercentages(uint256 _projectId,uint256 _newPerccentage) external bothOwner {\n        \n        if(_newPerccentage <= 0){\n            revert wrongPercentage(_newPerccentage);\n        }\n        \n        tPPercentages[_projectId] = _newPerccentage;\n\n        emit PercentageChanged(msg.sender, tPPercentages[_projectId]);\n    }\n\n    function settdividentPayoutPercentage(uint256 _newPerccentage) external bothOwner {\n        \n        if(_newPerccentage <= 0){\n            revert wrongPercentage(_newPerccentage);\n        }\n        \n        tdividentPayoutPercentage = _newPerccentage;\n\n        emit PercentageChanged(msg.sender, tdividentPayoutPercentage);\n\n    }\n    \n    function setodividentPayoutPercentage(uint256 _newPerccentage) external bothOwner {\n        \n        if(_newPerccentage <= 0){\n            revert wrongPercentage(_newPerccentage);\n        }\n        \n        odividentPayoutPercentage = _newPerccentage;\n\n        emit PercentageChanged(msg.sender, odividentPayoutPercentage);\n    }\n    \n\n    function setflowToTreasuryPercentage(uint256 _newPerccentage) external bothOwner {\n       \n        if(_newPerccentage <= 0){\n            revert wrongPercentage(_newPerccentage);\n        }\n        \n        flowToTreasuryPercentage = _newPerccentage;\n\n        emit PercentageChanged(msg.sender, flowToTreasuryPercentage);\n    }\n\n    function setmaintainceFeePercentage(uint256 _newPerccentage) external bothOwner {\n        \n        if(_newPerccentage <= 0){\n            revert wrongPercentage(_newPerccentage);\n        }\n        \n        maintainceFeePercentage = _newPerccentage;\n\n        emit PercentageChanged(msg.sender, maintainceFeePercentage);\n    }\n\n    modifier bothOwner(){\n        if(msg.sender != ownerOne && msg.sender != ownerTwo){\n            revert wrongOwner(msg.sender);\n        }\n        _;\n    }\n\n    modifier nonReentrant() {\n        require(!locked, \"ReentrancyGuard: reentrant call\");\n        locked = true;\n        _;\n        locked = false;\n    }\n\n    function _authorizeUpgrade(address newImplementation)\n        internal\n        onlyOwner\n        override\n    {}\n}\n\n// 0xcCc22A7fc54d184138dfD87B7aD24552cD4E0915"
			},
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"AutomationCompatibleInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "checkData",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkUpkeep(bytes)": {
								"details": "To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.",
								"params": {
									"checkData": "specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."
								},
								"returns": {
									"performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.",
									"upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
								}
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkUpkeep(bytes)": "6e04ff0d",
							"performUpkeep(bytes)": "4585e33b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkUpkeep(bytes)": {
								"notice": "method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."
							},
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT TIMESTAMP 0xCA 0x2F 0xCF DUP15 DUP15 BASEFEE SWAP2 SWAP5 PUSH32 0x8EBD0DC602D1B7523D29745780B132C0F393EECC8C64736F6C634300081A0033 ",
							"sourceMap": "449:6273:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:6273:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT TIMESTAMP 0xCA 0x2F 0xCF DUP15 DUP15 BASEFEE SWAP2 SWAP5 PUSH32 0x8EBD0DC602D1B7523D29745780B132C0F393EECC8C64736F6C634300081A0033 ",
							"sourceMap": "449:6273:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033",
									".code": [
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"DripWarrior/poolContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 EXTCODESIZE 0xC LOG4 PUSH16 0x65FEFCFD432545A0B8A9B234277D39A3 PUSH28 0xDF0425BF228A8136E72E64736F6C634300081A003300000000000000 ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 EXTCODESIZE 0xC LOG4 PUSH16 0x65FEFCFD432545A0B8A9B234277D39A3 PUSH28 0xDF0425BF228A8136E72E64736F6C634300081A003300000000000000 ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"DripWarrior/poolContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD SWAP8 EQ DUP8 0xBE 0x25 0x2F 0xE8 0xFB EXTCODEHASH SWAP4 0xE0 PUSH12 0xD7D41310DB95F162C4852FDA PUSH29 0x70255C9C50C864736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "1245:2685:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD SWAP8 EQ DUP8 0xBE 0x25 0x2F 0xE8 0xFB EXTCODEHASH SWAP4 0xE0 PUSH12 0xD7D41310DB95F162C4852FDA PUSH29 0x70255C9C50C864736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "1245:2685:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"DripWarrior/poolContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DripWarrior/poolContract.sol": {
				"IBEP20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/poolContract.sol\":\"IBEP20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"DripWarrior/poolContract.sol\":{\"keccak256\":\"0x6e49f0b119bcf4a4c484e6e60feb1786e50882007ec29a07f0b00e8181fdee65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90c8ed8d953209f291de1e75e258cb8849835414bf1dfc32a91a60b059b73928\",\"dweb:/ipfs/QmS95Gy5QCpzMoNXvWovzjTeouVva5wH56FSu52kWphMVA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PoolContrcat": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ArrayLengthMismatch",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "addressLength",
									"type": "uint256"
								}
							],
							"name": "emptyAddresses",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountLength",
									"type": "uint256"
								}
							],
							"name": "emptyAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ownerShipPoolAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "treasuryPoolAmount",
									"type": "uint256"
								}
							],
							"name": "emptyPools",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balanceAmount",
									"type": "uint256"
								}
							],
							"name": "notEnoughAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "notEnoughBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "transfered",
									"type": "bool"
								}
							],
							"name": "transferFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "blocked",
									"type": "bool"
								}
							],
							"name": "userBlocked",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "wrongAddress",
									"type": "address"
								}
							],
							"name": "wrongAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "wrongAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "updateInterval",
									"type": "uint256"
								}
							],
							"name": "wrongInterval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "wrongOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "percentageNumber",
									"type": "uint256"
								}
							],
							"name": "wrongPerceentage",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "percentage",
									"type": "uint256"
								}
							],
							"name": "wrongPercentage",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_totalStakeAmount",
									"type": "uint256"
								}
							],
							"name": "wrongPercentageAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "projectNO",
									"type": "uint256"
								}
							],
							"name": "wrongProjectNo",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "wrongTime",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "wrongValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "noOfUsers",
									"type": "uint256"
								}
							],
							"name": "zeroUsers",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_projectNo",
									"type": "uint256"
								}
							],
							"name": "AddFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_ownerShipPoolAmount",
									"type": "uint256"
								}
							],
							"name": "AddOwnership",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "projectId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "OpPercentage",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tpPercentage",
									"type": "uint256"
								}
							],
							"name": "AddProject",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_treasuryPoolAmount",
									"type": "uint256"
								}
							],
							"name": "AddTreasuery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newPercentage",
									"type": "uint256"
								}
							],
							"name": "PercentageChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_s_forwarderAddress",
									"type": "address"
								}
							],
							"name": "SetForwarderAddress",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_interval",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_lastTimeStamp",
									"type": "uint256"
								}
							],
							"name": "SetInterval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recepient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdcAmount",
									"type": "uint256"
								}
							],
							"name": "StakeTokens",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "blockUserAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "blocked",
									"type": "bool"
								}
							],
							"name": "UserBlocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ownerShipPoolAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "treasuryPoolAmount",
									"type": "uint256"
								}
							],
							"name": "WeeklyTransfered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdcAmount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amountLength",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usersLength",
									"type": "uint256"
								}
							],
							"name": "multipleUserAddeed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_interval",
									"type": "uint256"
								}
							],
							"name": "offInterval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "singleUserAddeed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_projectNo",
									"type": "uint256"
								}
							],
							"name": "addFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "addOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tPPercentage",
									"type": "uint256"
								}
							],
							"name": "addProjects",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "addTreasuery",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "alreadyAdded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "blockUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "flowToTreasuryPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdcAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_ownerOne",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_ownerTwo",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_multisigAddress",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "interval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeStamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maintainceFeePercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "multisigAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "noOfUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "odividentPayoutPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "off",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ownerOne",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ownerShipPoolAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ownerTwo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "reStakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "realInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_forwarderAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "forwarderAddress",
									"type": "address"
								}
							],
							"name": "setForwarderAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_startingTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updateInterval",
									"type": "uint256"
								}
							],
							"name": "setInterval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_projectId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_newPerccentage",
									"type": "uint256"
								}
							],
							"name": "setTeasueryPercentages",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPerccentage",
									"type": "uint256"
								}
							],
							"name": "setflowToTreasuryPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPerccentage",
									"type": "uint256"
								}
							],
							"name": "setmaintainceFeePercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPerccentage",
									"type": "uint256"
								}
							],
							"name": "setodividentPayoutPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPerccentage",
									"type": "uint256"
								}
							],
							"name": "settdividentPayoutPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_amount",
									"type": "uint256[]"
								},
								{
									"internalType": "address[]",
									"name": "users",
									"type": "address[]"
								}
							],
							"name": "stakeTokensByOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tPPercentages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tdividentPayoutPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalProjects",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "totalUsers",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryPoolAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdcToken",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRegistered",
							"outputs": [
								{
									"internalType": "bool",
									"name": "blocked",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "receivedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "withdrawAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "receiveFromTreasury",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "receiveFromOwneerShip",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStakedAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "userWithdrawAmoount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weeklyTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DripWarrior/poolContract.sol\":896:17969  contract PoolContrcat is Initializable, OwnableUpgradeable, UUPSUpgradeable, AutomationCompatibleInterface {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"DripWarrior/poolContract.sol\":4233:4286  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"DripWarrior/poolContract.sol\":4257:4279  _disableInitializers() */\n  tag_4\n    /* \"DripWarrior/poolContract.sol\":4257:4277  _disableInitializers */\n  tag_5\n    /* \"DripWarrior/poolContract.sol\":4257:4279  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"DripWarrior/poolContract.sol\":896:17969  contract PoolContrcat is Initializable, OwnableUpgradeable, UUPSUpgradeable, AutomationCompatibleInterface {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  dup1\n  sload\n  0x010000000000000000\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  shl(0xe0, 0xf92ee8a9)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  dup1\n  sload\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  dup1\n  sload\n  not(sub(shl(0x40, 0x01), 0x01))\n  and\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n    /* \"#utility.yul\":158:208   */\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n  swap1\n    /* \"#utility.yul\":146:148   */\n  0x20\n    /* \"#utility.yul\":131:149   */\n  add\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:214   */\ntag_15:\n    /* \"DripWarrior/poolContract.sol\":896:17969  contract PoolContrcat is Initializable, OwnableUpgradeable, UUPSUpgradeable, AutomationCompatibleInterface {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x6740f0f1ed974f4bbc4ea3ddf8917f81b1171208e4ec27e89df857ca2a56624a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"DripWarrior/poolContract.sol\":896:17969  contract PoolContrcat is Initializable, OwnableUpgradeable, UUPSUpgradeable, AutomationCompatibleInterface {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7547c7a3\n      gt\n      tag_51\n      jumpi\n      dup1\n      0xad8e5ec4\n      gt\n      tag_52\n      jumpi\n      dup1\n      0xd777cc6d\n      gt\n      tag_53\n      jumpi\n      dup1\n      0xed061067\n      gt\n      tag_54\n      jumpi\n      dup1\n      0xed061067\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xf0664a4f\n      eq\n      tag_48\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_49\n      jumpi\n      dup1\n      0xff3d65d9\n      eq\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup1\n      0xd777cc6d\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xd9b998b4\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xe9c68e2c\n      eq\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      dup1\n      0xad8e5ec4\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xb47ff951\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xb9dac1eb\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xbccbc36c\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xc7fd5bf0\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xce356a24\n      eq\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      dup1\n      0x85f45250\n      gt\n      tag_55\n      jumpi\n      dup1\n      0x85f45250\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x947a36fb\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x9c361e4e\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xa4f67b8b\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      dup1\n      0x7547c7a3\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x78fd078d\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x7f111e60\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x7f70c5e7\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x7ffe4d93\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x83aa9985\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup1\n      0x44490ff4\n      gt\n      tag_56\n      jumpi\n      dup1\n      0x567e98f9\n      gt\n      tag_57\n      jumpi\n      dup1\n      0x567e98f9\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x5f17e616\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x6626b26d\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x67976974\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x6e04ff0d\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      dup1\n      0x44490ff4\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4585e33b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5256dbbf\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5462870d\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      dup1\n      0x30cac972\n      gt\n      tag_58\n      jumpi\n      dup1\n      0x30cac972\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x33244c2c\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x34107c87\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x39518b5e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3a71a9e4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3f3b3b27\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      dup1\n      0x01934a83\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x11eac855\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1459457a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x188e07b9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2765df7a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3070fbf8\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"DripWarrior/poolContract.sol\":1344:1368  uint256 public noOfUsers */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      sload(0x08)\n      dup2\n      jump\n    tag_60:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"DripWarrior/poolContract.sol\":1344:1368  uint256 public noOfUsers */\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DripWarrior/poolContract.sol\":1010:1033  IBEP20 public usdcToken */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      sload(0x00)\n      tag_65\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_65:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":375:407   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":357:408   */\n      dup2\n      mstore\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"DripWarrior/poolContract.sol\":1010:1033  IBEP20 public usdcToken */\n      tag_62\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":4292:5194  function initialize(... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"DripWarrior/poolContract.sol\":1044:1077  uint256 public treasuryPoolAmount */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_60\n      sload(0x01)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract.sol\":5207:5544  function addProjects(uint256 _tPPercentage) external bothOwner(){... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_70\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":1710:1743  address public s_forwarderAddress */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      sload(0x0e)\n      tag_65\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"DripWarrior/poolContract.sol\":1512:1539  uint256 public realInterval */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_60\n      sload(0x0b)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract.sol\":1162:1202  uint256 public tdividentPayoutPercentage */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_60\n      sload(0x04)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract.sol\":7179:7826  function stakeTokensByOwner(uint256[] memory _amount, address[] memory users) external bothOwner() {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_70\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":1592:1619  uint256 public startingTime */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_60\n      sload(0x0c)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract.sol\":1299:1337  uint256 public maintainceFeePercentage */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_60\n      sload(0x07)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract.sol\":1626:1654  uint256 public lastTimeStamp */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_60\n      sload(0x0d)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract.sol\":1208:1248  uint256 public odividentPayoutPercentage */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_60\n      sload(0x05)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract.sol\":12528:13161  function performUpkeep(bytes calldata /*performData*/) external  {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_70\n      tag_119\n      calldatasize\n      0x04\n      tag_120\n      jump\t// in\n    tag_119:\n      tag_121\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_16:\n      tag_70\n      tag_123\n      calldatasize\n      0x04\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":5961:6360  function addTreasuery(uint256 _amount) external bothOwner(){... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_70\n      tag_128\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_60\n      tag_132\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":1374:1404  address public multisigAddress */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      sload(0x09)\n      tag_65\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"DripWarrior/poolContract.sol\":1123:1155  uint256 public totalStakedAmount */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_60\n      sload(0x03)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract.sol\":13172:13714  function setInterval (uint256 _startingTime, uint256 updateInterval) external  bothOwner{... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_70\n      tag_145\n      calldatasize\n      0x04\n      tag_146\n      jump\t// in\n    tag_145:\n      tag_147\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":13720:13840  function off () external  bothOwner{... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_70\n      tag_150\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":14639:15280  function userWithdrawAmoount(uint256 _amount) external nonReentrant {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_70\n      tag_153\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":12282:12517  function checkUpkeep(bytes calldata /*checkData*/) external override view  returns (bool, bytes memory) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_156\n      tag_157\n      calldatasize\n      0x04\n      tag_120\n      jump\t// in\n    tag_157:\n      tag_158\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      tag_62\n      swap3\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      tag_70\n      tag_163\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":6366:7168  function stakeTokens(uint256 _amount) external  {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      tag_70\n      tag_166\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_166:\n      tag_167\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":5550:5951  function addOwnership(uint256 _amount) external bothOwner(){... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_168\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_168:\n      pop\n      tag_70\n      tag_170\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_170:\n      tag_171\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":17211:17534  function setmaintainceFeePercentage(uint256 _newPerccentage) external bothOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      tag_70\n      tag_174\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_174:\n      tag_175\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":16200:16530  function settdividentPayoutPercentage(uint256 _newPerccentage) external bothOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_176\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_176:\n      pop\n      tag_70\n      tag_178\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_178:\n      tag_179\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":7833:8511  function reStakeTokens(uint256 _amount) external  {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      pop\n      tag_70\n      tag_182\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_182:\n      tag_183\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":1779:1802  address public ownerTwo */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      sload(0x10)\n      tag_65\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"DripWarrior/poolContract.sol\":8521:9062  function addFunds(uint256 _amount, uint256 _projectNo)   external {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_188\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_188:\n      pop\n      tag_70\n      tag_190\n      calldatasize\n      0x04\n      tag_146\n      jump\t// in\n    tag_190:\n      tag_191\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump(tag_65)\n        /* \"DripWarrior/poolContract.sol\":1436:1459  uint256 public interval */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      pop\n      tag_60\n      sload(0x0a)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract.sol\":2041:2069  uint256 public totalProjects */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n      pop\n      tag_60\n      sload(0x11)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract.sol\":2125:2170  mapping(uint256 => address) public totalUsers */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      pop\n      tag_65\n      tag_206\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_206:\n      mstore(0x20, 0x13)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_209\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_209:\n      pop\n      tag_210\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_210:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":16880:17205  function setflowToTreasuryPercentage(uint256 _newPerccentage) external bothOwner {... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_214\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_214:\n      pop\n      tag_70\n      tag_216\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_216:\n      tag_217\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":1083:1117  uint256 public ownerShipPoolAmount */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_218\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_218:\n      pop\n      tag_60\n      sload(0x02)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract.sol\":16540:16869  function setodividentPayoutPercentage(uint256 _newPerccentage) external bothOwner {... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_222\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_222:\n      pop\n      tag_70\n      tag_224\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_224:\n      tag_225\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":2230:2286  mapping(address => UserRegistered) public userRegistered */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_226\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_226:\n      pop\n      tag_227\n      tag_228\n      calldatasize\n      0x04\n      tag_229\n      jump\t// in\n    tag_228:\n      mstore(0x20, 0x15)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      swap1\n      swap6\n      add\n      sload\n      0xff\n      swap1\n      swap5\n      and\n      swap5\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      dup7\n      jump\n    tag_227:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7289:7303   */\n      swap7\n      iszero\n        /* \"#utility.yul\":7282:7304   */\n      iszero\n        /* \"#utility.yul\":7264:7305   */\n      dup8\n      mstore\n        /* \"#utility.yul\":7336:7338   */\n      0x20\n        /* \"#utility.yul\":7321:7339   */\n      dup8\n      add\n        /* \"#utility.yul\":7314:7348   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":7364:7382   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":7357:7391   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":7422:7424   */\n      0x60\n        /* \"#utility.yul\":7407:7425   */\n      dup5\n      add\n        /* \"#utility.yul\":7400:7434   */\n      mstore\n        /* \"#utility.yul\":7465:7468   */\n      0x80\n        /* \"#utility.yul\":7450:7469   */\n      dup4\n      add\n        /* \"#utility.yul\":7443:7478   */\n      mstore\n        /* \"#utility.yul\":7509:7512   */\n      0xa0\n        /* \"#utility.yul\":7494:7513   */\n      dup3\n      add\n        /* \"#utility.yul\":7487:7522   */\n      mstore\n        /* \"#utility.yul\":7251:7254   */\n      0xc0\n        /* \"#utility.yul\":7236:7255   */\n      add\n        /* \"DripWarrior/poolContract.sol\":2230:2286  mapping(address => UserRegistered) public userRegistered */\n      tag_62\n        /* \"#utility.yul\":6983:7528   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":2075:2119  mapping(address => bool) public alreadyAdded */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_233\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_233:\n      pop\n      tag_234\n      tag_235\n      calldatasize\n      0x04\n      tag_229\n      jump\t// in\n    tag_235:\n      mstore(0x20, 0x12)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_234:\n      mload(0x40)\n        /* \"#utility.yul\":7698:7712   */\n      swap1\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"#utility.yul\":7673:7714   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7661:7663   */\n      0x20\n        /* \"#utility.yul\":7646:7664   */\n      add\n        /* \"DripWarrior/poolContract.sol\":2075:2119  mapping(address => bool) public alreadyAdded */\n      tag_62\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":1254:1293  uint256 public flowToTreasuryPercentage */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_239\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_239:\n      pop\n      tag_60\n      sload(0x06)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract.sol\":13847:14165  function setForwarderAddress(address forwarderAddress) external bothOwner {... */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_243\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_243:\n      pop\n      tag_70\n      tag_245\n      calldatasize\n      0x04\n      tag_229\n      jump\t// in\n    tag_245:\n      tag_246\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":15286:15840  function blockUser(address _userAddress, bool value) external bothOwner {... */\n    tag_45:\n      callvalue\n      dup1\n      iszero\n      tag_247\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_247:\n      pop\n      tag_70\n      tag_249\n      calldatasize\n      0x04\n      tag_250\n      jump\t// in\n    tag_249:\n      tag_251\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":9456:11079  function weeklyTransfer() public  {... */\n    tag_46:\n      callvalue\n      dup1\n      iszero\n      tag_252\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_252:\n      pop\n      tag_70\n      tag_254\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":15852:16194  function setTeasueryPercentages(uint256 _projectId,uint256 _newPerccentage) external bothOwner {... */\n    tag_47:\n      callvalue\n      dup1\n      iszero\n      tag_255\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_255:\n      pop\n      tag_70\n      tag_257\n      calldatasize\n      0x04\n      tag_146\n      jump\t// in\n    tag_257:\n      tag_258\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":1750:1773  address public ownerOne */\n    tag_48:\n      callvalue\n      dup1\n      iszero\n      tag_259\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_259:\n      pop\n      sload(0x0f)\n      tag_65\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_49:\n      callvalue\n      dup1\n      iszero\n      tag_263\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_263:\n      pop\n      tag_70\n      tag_265\n      calldatasize\n      0x04\n      tag_229\n      jump\t// in\n    tag_265:\n      tag_266\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":2176:2224  mapping(uint256 => uint256) public tPPercentages */\n    tag_50:\n      callvalue\n      dup1\n      iszero\n      tag_267\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_267:\n      pop\n      tag_60\n      tag_269\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_269:\n      mstore(0x20, 0x14)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"DripWarrior/poolContract.sol\":4292:5194  function initialize(... */\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_275\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_275:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_276\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_276:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_277\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_277:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_279:\n        /* \"DripWarrior/poolContract.sol\":4511:4539  __Ownable_init(initialOwner) */\n      tag_281\n        /* \"DripWarrior/poolContract.sol\":4526:4538  initialOwner */\n      dup11\n        /* \"DripWarrior/poolContract.sol\":4511:4525  __Ownable_init */\n      tag_282\n        /* \"DripWarrior/poolContract.sol\":4511:4539  __Ownable_init(initialOwner) */\n      jump\t// in\n    tag_281:\n        /* \"DripWarrior/poolContract.sol\":4549:4573  __UUPSUpgradeable_init() */\n      tag_283\n        /* \"DripWarrior/poolContract.sol\":4549:4571  __UUPSUpgradeable_init */\n      tag_284\n        /* \"DripWarrior/poolContract.sol\":4549:4573  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_283:\n        /* \"DripWarrior/poolContract.sol\":4584:4593  usdcToken */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":4584:4616  usdcToken = IBEP20(_usdcAddress) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup13\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"DripWarrior/poolContract.sol\":4852:4856  5000 */\n      0x1388\n        /* \"DripWarrior/poolContract.sol\":4824:4849  tdividentPayoutPercentage */\n      0x04\n        /* \"DripWarrior/poolContract.sol\":4824:4856  tdividentPayoutPercentage = 5000 */\n      sstore\n        /* \"DripWarrior/poolContract.sol\":4906:4910  7500 */\n      0x1d4c\n        /* \"DripWarrior/poolContract.sol\":4878:4903  odividentPayoutPercentage */\n      0x05\n        /* \"DripWarrior/poolContract.sol\":4878:4910  odividentPayoutPercentage = 7500 */\n      sstore\n        /* \"DripWarrior/poolContract.sol\":4972:4976  1500 */\n      0x05dc\n        /* \"DripWarrior/poolContract.sol\":4945:4969  flowToTreasuryPercentage */\n      0x06\n        /* \"DripWarrior/poolContract.sol\":4945:4976  flowToTreasuryPercentage = 1500 */\n      sstore\n        /* \"DripWarrior/poolContract.sol\":5023:5027  1000 */\n      0x03e8\n        /* \"DripWarrior/poolContract.sol\":4997:5020  maintainceFeePercentage */\n      0x07\n        /* \"DripWarrior/poolContract.sol\":4997:5027  maintainceFeePercentage = 1000 */\n      sstore\n        /* \"DripWarrior/poolContract.sol\":5085:5100  multisigAddress */\n      0x09\n        /* \"DripWarrior/poolContract.sol\":5085:5119  multisigAddress = _multisigAddress */\n      dup1\n      sload\n      dup10\n      dup5\n      and\n      swap1\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":5133:5141  ownerOne */\n      0x0f\n        /* \"DripWarrior/poolContract.sol\":5133:5153  ownerOne = _ownerOne */\n      dup1\n      sload\n      dup12\n      dup5\n      and\n      swap1\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":5167:5175  ownerTwo */\n      0x10\n        /* \"DripWarrior/poolContract.sol\":5167:5187  ownerTwo = _ownerTwo */\n      dup1\n      sload\n      swap3\n      dup11\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":8321:8371   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":8309:8311   */\n      0x20\n        /* \"#utility.yul\":8294:8312   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":4292:5194  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract.sol\":5207:5544  function addProjects(uint256 _tPPercentage) external bothOwner(){... */\n    tag_82:\n        /* \"DripWarrior/poolContract.sol\":17587:17595  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract.sol\":17573:17583  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17573:17595  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_289\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract.sol\":17613:17621  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract.sol\":17599:17609  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17599:17621  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_289:\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_290\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":17654:17664  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_290:\n        /* \"DripWarrior/poolContract.sol\":5310:5311  0 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":5293:5306  _tPPercentage */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":5293:5311  _tPPercentage <= 0 */\n      gt\n        /* \"DripWarrior/poolContract.sol\":5290:5374  if(_tPPercentage <= 0){... */\n      tag_293\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":5333:5363  wrongPercentage(_tPPercentage) */\n      mload(0x40)\n      shl(0xe0, 0xcdbc6335)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":5333:5363  wrongPercentage(_tPPercentage) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":5290:5374  if(_tPPercentage <= 0){... */\n    tag_293:\n        /* \"DripWarrior/poolContract.sol\":5398:5411  totalProjects */\n      0x11\n      dup1\n      sload\n        /* \"DripWarrior/poolContract.sol\":5384:5412  tPPercentages[totalProjects] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":5384:5397  tPPercentages */\n      0x14\n        /* \"DripWarrior/poolContract.sol\":5384:5412  tPPercentages[totalProjects] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":5384:5428  tPPercentages[totalProjects] = _tPPercentage */\n      dup4\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":5438:5453  totalProjects++ */\n      dup2\n      sload\n      swap2\n        /* \"DripWarrior/poolContract.sol\":5398:5411  totalProjects */\n      swap1\n        /* \"DripWarrior/poolContract.sol\":5438:5453  totalProjects++ */\n      tag_295\n      dup4\n      tag_296\n      jump\t// in\n    tag_295:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":5482:5495  totalProjects */\n      sload(0x11)\n        /* \"DripWarrior/poolContract.sol\":5470:5537  AddProject((totalProjects), (10000 - _tPPercentage), _tPPercentage) */\n      0xe1976e16ed8ce8e740235978fbe69b27d5eea683b2e017bb0bd2fabb33294b3f\n      swap1\n        /* \"DripWarrior/poolContract.sol\":5499:5520  10000 - _tPPercentage */\n      tag_297\n        /* \"DripWarrior/poolContract.sol\":5507:5520  _tPPercentage */\n      dup4\n        /* \"DripWarrior/poolContract.sol\":5499:5504  10000 */\n      0x2710\n        /* \"DripWarrior/poolContract.sol\":5499:5520  10000 - _tPPercentage */\n      tag_298\n      jump\t// in\n    tag_297:\n        /* \"DripWarrior/poolContract.sol\":5470:5537  AddProject((totalProjects), (10000 - _tPPercentage), _tPPercentage) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8989:9014   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":9045:9047   */\n      0x20\n        /* \"#utility.yul\":9030:9048   */\n      dup4\n      add\n        /* \"#utility.yul\":9023:9057   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":9073:9091   */\n      dup2\n      add\n        /* \"#utility.yul\":9066:9100   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":8977:8979   */\n      0x60\n        /* \"#utility.yul\":8962:8980   */\n      add\n        /* \"DripWarrior/poolContract.sol\":5470:5537  AddProject((totalProjects), (10000 - _tPPercentage), _tPPercentage) */\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DripWarrior/poolContract.sol\":5207:5544  function addProjects(uint256 _tPPercentage) external bothOwner(){... */\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract.sol\":7179:7826  function stakeTokensByOwner(uint256[] memory _amount, address[] memory users) external bothOwner() {... */\n    tag_100:\n        /* \"DripWarrior/poolContract.sol\":17587:17595  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract.sol\":17573:17583  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17573:17595  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_302\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract.sol\":17613:17621  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract.sol\":17599:17609  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17599:17621  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_302:\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_303\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":17654:17664  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_303:\n        /* \"DripWarrior/poolContract.sol\":7319:7320  0 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":7301:7308  _amount */\n      dup3\n        /* \"DripWarrior/poolContract.sol\":7301:7315  _amount.length */\n      mload\n        /* \"DripWarrior/poolContract.sol\":7301:7320  _amount.length <= 0 */\n      gt\n        /* \"DripWarrior/poolContract.sol\":7298:7381  if(_amount.length <= 0){... */\n      tag_306\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":7355:7362  _amount */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":7355:7369  _amount.length */\n      mload\n        /* \"DripWarrior/poolContract.sol\":7343:7370  emptyAmount(_amount.length) */\n      mload(0x40)\n      shl(0xe2, 0x3ddd5557)\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":7298:7381  if(_amount.length <= 0){... */\n    tag_306:\n        /* \"DripWarrior/poolContract.sol\":7409:7410  0 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":7393:7398  users */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":7393:7405  users.length */\n      mload\n        /* \"DripWarrior/poolContract.sol\":7393:7410  users.length <= 0 */\n      gt\n        /* \"DripWarrior/poolContract.sol\":7390:7472  if(users.length <= 0){... */\n      tag_308\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":7448:7453  users */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":7448:7460  users.length */\n      mload\n        /* \"DripWarrior/poolContract.sol\":7433:7461  emptyAddresses(users.length) */\n      mload(0x40)\n      shl(0xe0, 0x3a46e2ab)\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":7390:7472  if(users.length <= 0){... */\n    tag_308:\n        /* \"DripWarrior/poolContract.sol\":7502:7509  _amount */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":7502:7516  _amount.length */\n      mload\n        /* \"DripWarrior/poolContract.sol\":7486:7491  users */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":7486:7498  users.length */\n      mload\n        /* \"DripWarrior/poolContract.sol\":7486:7516  users.length != _amount.length */\n      eq\n        /* \"DripWarrior/poolContract.sol\":7482:7571  if (users.length != _amount.length) {... */\n      tag_310\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":7539:7560  ArrayLengthMismatch() */\n      mload(0x40)\n      shl(0xe1, 0x512509d3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DripWarrior/poolContract.sol\":7482:7571  if (users.length != _amount.length) {... */\n    tag_310:\n        /* \"DripWarrior/poolContract.sol\":7585:7591  uint i */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":7581:7746  for(uint i=0 ;i < _amount.length; i++){... */\n    tag_311:\n        /* \"DripWarrior/poolContract.sol\":7599:7606  _amount */\n      dup3\n        /* \"DripWarrior/poolContract.sol\":7599:7613  _amount.length */\n      mload\n        /* \"DripWarrior/poolContract.sol\":7595:7596  i */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":7595:7613  i < _amount.length */\n      lt\n        /* \"DripWarrior/poolContract.sol\":7581:7746  for(uint i=0 ;i < _amount.length; i++){... */\n      iszero\n      tag_312\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":7680:7687  _amount */\n      dup3\n        /* \"DripWarrior/poolContract.sol\":7688:7689  i */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":7680:7690  _amount[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_315\n      jumpi\n      tag_315\n      tag_316\n      jump\t// in\n    tag_315:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DripWarrior/poolContract.sol\":7634:7648  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":7634:7658  userRegistered[users[i]] */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":7649:7654  users */\n      dup5\n        /* \"DripWarrior/poolContract.sol\":7655:7656  i */\n      dup5\n        /* \"DripWarrior/poolContract.sol\":7649:7657  users[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_318\n      jumpi\n      tag_318\n      tag_316\n      jump\t// in\n    tag_318:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract.sol\":7634:7658  userRegistered[users[i]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":7634:7676  userRegistered[users[i]].totalStakedAmount */\n      0x05\n      add\n      0x00\n        /* \"DripWarrior/poolContract.sol\":7634:7690  userRegistered[users[i]].totalStakedAmount += _amount[i] */\n      dup3\n      dup3\n      sload\n      tag_319\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_319:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DripWarrior/poolContract.sol\":7725:7732  _amount */\n      dup3\n        /* \"DripWarrior/poolContract.sol\":7733:7734  i */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":7725:7735  _amount[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_322\n      jumpi\n      tag_322\n      tag_316\n      jump\t// in\n    tag_322:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DripWarrior/poolContract.sol\":7704:7721  totalStakedAmount */\n      0x03\n      0x00\n        /* \"DripWarrior/poolContract.sol\":7704:7735  totalStakedAmount += _amount[i] */\n      dup3\n      dup3\n      sload\n      tag_323\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_323:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":7615:7618  i++ */\n      0x01\n      add\n        /* \"DripWarrior/poolContract.sol\":7581:7746  for(uint i=0 ;i < _amount.length; i++){... */\n      jump(tag_311)\n    tag_312:\n      pop\n        /* \"DripWarrior/poolContract.sol\":7791:7805  _amount.length */\n      dup2\n      mload\n        /* \"DripWarrior/poolContract.sol\":7806:7818  users.length */\n      dup2\n      mload\n        /* \"DripWarrior/poolContract.sol\":7761:7819  multipleUserAddeed(msg.sender,_amount.length,users.length) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract.sol\":7780:7790  msg.sender */\n      caller\n        /* \"#utility.yul\":9575:9626   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9657:9659   */\n      0x20\n        /* \"#utility.yul\":9642:9660   */\n      dup2\n      add\n        /* \"#utility.yul\":9635:9669   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":9685:9703   */\n      dup3\n      add\n        /* \"#utility.yul\":9678:9712   */\n      mstore\n        /* \"DripWarrior/poolContract.sol\":7761:7819  multipleUserAddeed(msg.sender,_amount.length,users.length) */\n      0x472714a70b748503a00efa85a1c3081b2a3477ce3be0227cb140455f82ccaeb6\n      swap1\n        /* \"#utility.yul\":9563:9565   */\n      0x60\n        /* \"#utility.yul\":9548:9566   */\n      add\n        /* \"DripWarrior/poolContract.sol\":7761:7819  multipleUserAddeed(msg.sender,_amount.length,users.length) */\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DripWarrior/poolContract.sol\":7179:7826  function stakeTokensByOwner(uint256[] memory _amount, address[] memory users) external bothOwner() {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract.sol\":12528:13161  function performUpkeep(bytes calldata /*performData*/) external  {... */\n    tag_121:\n        /* \"DripWarrior/poolContract.sol\":12647:12665  s_forwarderAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0e))\n        /* \"DripWarrior/poolContract.sol\":12633:12643  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":12633:12665  msg.sender == s_forwarderAddress */\n      eq\n        /* \"DripWarrior/poolContract.sol\":12612:12750  require(... */\n      tag_327\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9925:9927   */\n      0x20\n        /* \"DripWarrior/poolContract.sol\":12612:12750  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9907:9928   */\n      mstore\n        /* \"#utility.yul\":9964:9966   */\n      0x3b\n        /* \"#utility.yul\":9944:9962   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9937:9967   */\n      mstore\n        /* \"#utility.yul\":10003:10037   */\n      0x54686973206164647265737320646f6573206e6f742068617665207065726d69\n        /* \"#utility.yul\":9983:10001   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9976:10038   */\n      mstore\n        /* \"#utility.yul\":10074:10103   */\n      0x7373696f6e20746f2063616c6c20706572666f726d55706b6565700000000000\n        /* \"#utility.yul\":10054:10072   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10047:10104   */\n      mstore\n        /* \"#utility.yul\":10121:10140   */\n      0x84\n      add\n        /* \"DripWarrior/poolContract.sol\":12612:12750  require(... */\n      tag_291\n        /* \"#utility.yul\":9723:10146   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":12612:12750  require(... */\n    tag_327:\n        /* \"DripWarrior/poolContract.sol\":12772:12780  interval */\n      sload(0x0a)\n        /* \"DripWarrior/poolContract.sol\":12784:12785  0 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":12772:12785  interval == 0 */\n      sub\n        /* \"DripWarrior/poolContract.sol\":12768:12841  if (interval == 0){... */\n      tag_330\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":12821:12829  interval */\n      sload(0x0a)\n        /* \"DripWarrior/poolContract.sol\":12807:12830  wrongInterval(interval) */\n      mload(0x40)\n      shl(0xe0, 0x71540007)\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":12768:12841  if (interval == 0){... */\n    tag_330:\n        /* \"DripWarrior/poolContract.sol\":12882:12894  startingTime */\n      sload(0x0c)\n        /* \"DripWarrior/poolContract.sol\":12863:12878  block.timestamp */\n      timestamp\n        /* \"DripWarrior/poolContract.sol\":12863:12894  block.timestamp >= startingTime */\n      lt\n        /* \"DripWarrior/poolContract.sol\":12860:13146  if(block.timestamp >= startingTime){... */\n      tag_332\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":12921:12933  realInterval */\n      sload(0x0b)\n        /* \"DripWarrior/poolContract.sol\":12910:12918  interval */\n      0x0a\n        /* \"DripWarrior/poolContract.sol\":12910:12933  interval = realInterval */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":12963:12978  block.timestamp */\n      timestamp\n        /* \"DripWarrior/poolContract.sol\":12947:12960  lastTimeStamp */\n      0x0d\n        /* \"DripWarrior/poolContract.sol\":12947:12978  lastTimeStamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":13007:13037  block.timestamp + realInterval */\n      tag_333\n      swap2\n        /* \"DripWarrior/poolContract.sol\":12921:12933  realInterval */\n      swap1\n        /* \"DripWarrior/poolContract.sol\":13007:13037  block.timestamp + realInterval */\n      tag_320\n      jump\t// in\n    tag_333:\n        /* \"DripWarrior/poolContract.sol\":12992:13004  startingTime */\n      0x0c\n        /* \"DripWarrior/poolContract.sol\":12992:13037  startingTime = block.timestamp + realInterval */\n      sstore\n        /* \"DripWarrior/poolContract.sol\":13051:13067  weeklyTransfer() */\n      tag_334\n        /* \"DripWarrior/poolContract.sol\":13051:13065  weeklyTransfer */\n      tag_254\n        /* \"DripWarrior/poolContract.sol\":13051:13067  weeklyTransfer() */\n      jump\t// in\n    tag_334:\n        /* \"DripWarrior/poolContract.sol\":12528:13161  function performUpkeep(bytes calldata /*performData*/) external  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract.sol\":12860:13146  if(block.timestamp >= startingTime){... */\n    tag_332:\n        /* \"DripWarrior/poolContract.sol\":13122:13134  startingTime */\n      sload(0x0c)\n        /* \"DripWarrior/poolContract.sol\":13112:13135  wrongTime(startingTime) */\n      mload(0x40)\n      shl(0xe0, 0x54593e75)\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      tag_338\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2664  _checkProxy */\n      tag_339\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      tag_341\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4291:4308  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4290  _authorizeUpgrade */\n      tag_342\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_334\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4341:4358  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4360:4364  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4340  _upgradeToAndCallUUPS */\n      tag_344\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":5961:6360  function addTreasuery(uint256 _amount) external bothOwner(){... */\n    tag_129:\n        /* \"DripWarrior/poolContract.sol\":17587:17595  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract.sol\":17573:17583  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17573:17595  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_346\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract.sol\":17613:17621  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract.sol\":17599:17609  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17599:17621  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_346:\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_347\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":17654:17664  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_347:\n        /* \"DripWarrior/poolContract.sol\":6053:6054  0 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":6042:6049  _amount */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":6042:6054  _amount <= 0 */\n      gt\n        /* \"DripWarrior/poolContract.sol\":6039:6107  if(_amount <= 0){... */\n      tag_350\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":6076:6096  wrongAmount(_amount) */\n      mload(0x40)\n      shl(0xe4, 0x02ff4783)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":6076:6096  wrongAmount(_amount) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":6039:6107  if(_amount <= 0){... */\n    tag_350:\n        /* \"DripWarrior/poolContract.sol\":6139:6146  _amount */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":6117:6135  treasuryPoolAmount */\n      0x01\n      0x00\n        /* \"DripWarrior/poolContract.sol\":6117:6146  treasuryPoolAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_352\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_352:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":6157:6169  bool success */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":6172:6181  usdcToken */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract.sol\":6172:6229  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract.sol\":6172:6181  usdcToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DripWarrior/poolContract.sol\":6172:6194  usdcToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"DripWarrior/poolContract.sol\":6172:6229  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      tag_353\n      swap1\n        /* \"DripWarrior/poolContract.sol\":6195:6205  msg.sender */\n      caller\n      swap1\n        /* \"DripWarrior/poolContract.sol\":6214:6218  this */\n      address\n      swap1\n        /* \"DripWarrior/poolContract.sol\":6220:6227  _amount */\n      dup8\n      swap1\n        /* \"DripWarrior/poolContract.sol\":6172:6229  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      0x04\n      add\n      tag_354\n      jump\t// in\n    tag_353:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_356\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_356:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_357\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_357:\n        /* \"DripWarrior/poolContract.sol\":6157:6229  bool success = usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":6243:6250  success */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":6239:6306  if(!success){... */\n      tag_359\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":6272:6295  transferFailed(success) */\n      mload(0x40)\n      shl(0xe0, 0xd85d3cef)\n      dup2\n      mstore\n        /* \"#utility.yul\":7698:7712   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"DripWarrior/poolContract.sol\":6272:6295  transferFailed(success) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7673:7714   */\n      mstore\n        /* \"#utility.yul\":7646:7664   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":6272:6295  transferFailed(success) */\n      tag_291\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":6239:6306  if(!success){... */\n    tag_359:\n        /* \"DripWarrior/poolContract.sol\":6321:6353  AddTreasuery(treasuryPoolAmount) */\n      0xa9f166643ec132a11638e74e3c3a78d4ae278fcbf92998240e0e97676f54e404\n        /* \"DripWarrior/poolContract.sol\":6334:6352  treasuryPoolAmount */\n      sload(0x01)\n        /* \"DripWarrior/poolContract.sol\":6321:6353  AddTreasuery(treasuryPoolAmount) */\n      mload(0x40)\n      tag_324\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3774:3781  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      tag_363\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2942  _checkNotDelegated */\n      tag_364\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      jump\t// in\n    tag_363:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"DripWarrior/poolContract.sol\":13172:13714  function setInterval (uint256 _startingTime, uint256 updateInterval) external  bothOwner{... */\n    tag_147:\n        /* \"DripWarrior/poolContract.sol\":17587:17595  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract.sol\":17573:17583  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17573:17595  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_367\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract.sol\":17613:17621  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract.sol\":17599:17609  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17599:17621  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_367:\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_368\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":17654:17664  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_368:\n        /* \"DripWarrior/poolContract.sol\":13300:13301  0 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":13282:13296  updateInterval */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":13282:13301  updateInterval <= 0 */\n      gt\n        /* \"DripWarrior/poolContract.sol\":13279:13363  if(updateInterval <= 0){... */\n      tag_371\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":13323:13352  wrongInterval(updateInterval) */\n      mload(0x40)\n      shl(0xe0, 0x71540007)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":13323:13352  wrongInterval(updateInterval) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":13279:13363  if(updateInterval <= 0){... */\n    tag_371:\n        /* \"DripWarrior/poolContract.sol\":13400:13415  block.timestamp */\n      timestamp\n        /* \"DripWarrior/poolContract.sol\":13384:13397  _startingTime */\n      dup3\n        /* \"DripWarrior/poolContract.sol\":13384:13415  _startingTime < block.timestamp */\n      lt\n        /* \"DripWarrior/poolContract.sol\":13381:13472  if(_startingTime < block.timestamp){... */\n      iszero\n      tag_373\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":13437:13461  wrongTime(_startingTime) */\n      mload(0x40)\n      shl(0xe0, 0x54593e75)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":13437:13461  wrongTime(_startingTime) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":13381:13472  if(_startingTime < block.timestamp){... */\n    tag_373:\n        /* \"DripWarrior/poolContract.sol\":13493:13524  _startingTime - block.timestamp */\n      tag_375\n        /* \"DripWarrior/poolContract.sol\":13509:13524  block.timestamp */\n      timestamp\n        /* \"DripWarrior/poolContract.sol\":13493:13506  _startingTime */\n      dup4\n        /* \"DripWarrior/poolContract.sol\":13493:13524  _startingTime - block.timestamp */\n      tag_298\n      jump\t// in\n    tag_375:\n        /* \"DripWarrior/poolContract.sol\":13482:13490  interval */\n      0x0a\n        /* \"DripWarrior/poolContract.sol\":13482:13524  interval = _startingTime - block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":13534:13546  startingTime */\n      0x0c\n        /* \"DripWarrior/poolContract.sol\":13534:13562  startingTime = _startingTime */\n      dup4\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":13588:13603  block.timestamp */\n      timestamp\n        /* \"DripWarrior/poolContract.sol\":13572:13585  lastTimeStamp */\n      0x0d\n        /* \"DripWarrior/poolContract.sol\":13572:13603  lastTimeStamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":13613:13625  realInterval */\n      0x0b\n        /* \"DripWarrior/poolContract.sol\":13613:13642  realInterval = updateInterval */\n      dup4\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":13658:13706  SetInterval(msg.sender, interval, lastTimeStamp) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract.sol\":13670:13680  msg.sender */\n      caller\n        /* \"#utility.yul\":9575:9626   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9657:9659   */\n      0x20\n        /* \"#utility.yul\":9642:9660   */\n      dup2\n      add\n        /* \"#utility.yul\":9635:9669   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":9685:9703   */\n      dup3\n      add\n        /* \"#utility.yul\":9678:9712   */\n      mstore\n        /* \"DripWarrior/poolContract.sol\":13658:13706  SetInterval(msg.sender, interval, lastTimeStamp) */\n      0x2b5090e035d3026f5448298c9adc68db8bbc1b26a8af5c81b2b2a9fc07ca4a00\n      swap1\n        /* \"#utility.yul\":9563:9565   */\n      0x60\n        /* \"#utility.yul\":9548:9566   */\n      add\n        /* \"DripWarrior/poolContract.sol\":13658:13706  SetInterval(msg.sender, interval, lastTimeStamp) */\n      tag_324\n        /* \"#utility.yul\":9373:9718   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":13720:13840  function off () external  bothOwner{... */\n    tag_150:\n        /* \"DripWarrior/poolContract.sol\":17587:17595  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract.sol\":17573:17583  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17573:17595  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_378\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract.sol\":17613:17621  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract.sol\":17599:17609  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17599:17621  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_378:\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_379\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":17654:17664  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_379:\n        /* \"DripWarrior/poolContract.sol\":13784:13785  0 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":13773:13781  interval */\n      0x0a\n        /* \"DripWarrior/poolContract.sol\":13773:13785  interval = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":13800:13833  offInterval(msg.sender, interval) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract.sol\":13812:13822  msg.sender */\n      caller\n        /* \"#utility.yul\":10951:11002   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11033:11035   */\n      0x20\n        /* \"#utility.yul\":11018:11036   */\n      dup2\n      add\n        /* \"#utility.yul\":11011:11045   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"DripWarrior/poolContract.sol\":13800:13833  offInterval(msg.sender, interval) */\n      0x3b68dc4e210c46d3622293f2b941cdfde795bb6e17286bb289ba05a6a3b5541f\n      swap2\n        /* \"#utility.yul\":10924:10942   */\n      add\n        /* \"DripWarrior/poolContract.sol\":13800:13833  offInterval(msg.sender, interval) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DripWarrior/poolContract.sol\":13720:13840  function off () external  bothOwner{... */\n      jump\t// out\n        /* \"DripWarrior/poolContract.sol\":14639:15280  function userWithdrawAmoount(uint256 _amount) external nonReentrant {... */\n    tag_154:\n        /* \"DripWarrior/poolContract.sol\":17742:17748  locked */\n      sload(0x09)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"DripWarrior/poolContract.sol\":17741:17748  !locked */\n      iszero\n        /* \"DripWarrior/poolContract.sol\":17733:17784  require(!locked, \"ReentrancyGuard: reentrant call\") */\n      tag_385\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11258:11260   */\n      0x20\n        /* \"DripWarrior/poolContract.sol\":17733:17784  require(!locked, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11240:11261   */\n      mstore\n        /* \"#utility.yul\":11297:11299   */\n      0x1f\n        /* \"#utility.yul\":11277:11295   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11270:11300   */\n      mstore\n        /* \"#utility.yul\":11336:11369   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":11316:11334   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11309:11370   */\n      mstore\n        /* \"#utility.yul\":11387:11405   */\n      0x64\n      add\n        /* \"DripWarrior/poolContract.sol\":17733:17784  require(!locked, \"ReentrancyGuard: reentrant call\") */\n      tag_291\n        /* \"#utility.yul\":11056:11411   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":17733:17784  require(!locked, \"ReentrancyGuard: reentrant call\") */\n    tag_385:\n        /* \"DripWarrior/poolContract.sol\":17794:17800  locked */\n      0x09\n        /* \"DripWarrior/poolContract.sol\":17794:17807  locked = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":14729:14741  _amount <= 0 */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":14726:14794  if(_amount <= 0){... */\n      tag_389\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":14763:14783  wrongAmount(_amount) */\n      mload(0x40)\n      shl(0xe4, 0x02ff4783)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":14763:14783  wrongAmount(_amount) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":14726:14794  if(_amount <= 0){... */\n    tag_389:\n        /* \"DripWarrior/poolContract.sol\":14832:14842  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":14817:14843  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":14817:14831  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":14817:14843  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":14817:14858  userRegistered[msg.sender].receivedAmount */\n      0x01\n      add\n      sload\n        /* \"DripWarrior/poolContract.sol\":14807:14858  _amount > userRegistered[msg.sender].receivedAmount */\n      dup2\n      gt\n        /* \"DripWarrior/poolContract.sol\":14804:14949  if(_amount > userRegistered[msg.sender].receivedAmount){... */\n      iszero\n      tag_391\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":14911:14921  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":14896:14922  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":14896:14910  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":14896:14922  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":14896:14937  userRegistered[msg.sender].receivedAmount */\n      0x01\n      add\n      sload\n        /* \"DripWarrior/poolContract.sol\":14880:14938  notEnoughAmount(userRegistered[msg.sender].receivedAmount) */\n      swap1\n      mload\n      shl(0xe0, 0x98e712c3)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":14880:14938  notEnoughAmount(userRegistered[msg.sender].receivedAmount) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":14804:14949  if(_amount > userRegistered[msg.sender].receivedAmount){... */\n    tag_391:\n        /* \"DripWarrior/poolContract.sol\":14974:14984  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":14959:14985  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":14959:14973  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":14959:14985  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":14959:15000  userRegistered[msg.sender].receivedAmount */\n      0x01\n      add\n        /* \"DripWarrior/poolContract.sol\":14959:15011  userRegistered[msg.sender].receivedAmount -= _amount */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract.sol\":15004:15011  _amount */\n      dup4\n      swap3\n        /* \"DripWarrior/poolContract.sol\":14959:14985  userRegistered[msg.sender] */\n      swap1\n        /* \"DripWarrior/poolContract.sol\":14959:15011  userRegistered[msg.sender].receivedAmount -= _amount */\n      tag_393\n      swap1\n        /* \"DripWarrior/poolContract.sol\":15004:15011  _amount */\n      dup5\n      swap1\n        /* \"DripWarrior/poolContract.sol\":14959:15011  userRegistered[msg.sender].receivedAmount -= _amount */\n      tag_298\n      jump\t// in\n    tag_393:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":15036:15046  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":15021:15047  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":15021:15035  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":15021:15047  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":15021:15062  userRegistered[msg.sender].withdrawAmount */\n      0x02\n      add\n        /* \"DripWarrior/poolContract.sol\":15021:15073  userRegistered[msg.sender].withdrawAmount += _amount */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract.sol\":15066:15073  _amount */\n      dup4\n      swap3\n        /* \"DripWarrior/poolContract.sol\":15021:15047  userRegistered[msg.sender] */\n      swap1\n        /* \"DripWarrior/poolContract.sol\":15021:15073  userRegistered[msg.sender].withdrawAmount += _amount */\n      tag_394\n      swap1\n        /* \"DripWarrior/poolContract.sol\":15066:15073  _amount */\n      dup5\n      swap1\n        /* \"DripWarrior/poolContract.sol\":15021:15073  userRegistered[msg.sender].withdrawAmount += _amount */\n      tag_320\n      jump\t// in\n    tag_394:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":15091:15103  bool success */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":15106:15115  usdcToken */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract.sol\":15106:15144  usdcToken.transfer(msg.sender,_amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":15125:15135  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":15106:15144  usdcToken.transfer(msg.sender,_amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10951:11002   */\n      mstore\n        /* \"#utility.yul\":11018:11036   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":11011:11045   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract.sol\":15106:15115  usdcToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DripWarrior/poolContract.sol\":15106:15124  usdcToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":10924:10942   */\n      0x44\n      add\n        /* \"DripWarrior/poolContract.sol\":15106:15144  usdcToken.transfer(msg.sender,_amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_397\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_397:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_398\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_398:\n        /* \"DripWarrior/poolContract.sol\":15091:15144  bool success = usdcToken.transfer(msg.sender,_amount) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":15166:15173  success */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":15162:15229  if(!success){... */\n      tag_399\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":15195:15218  transferFailed(success) */\n      mload(0x40)\n      shl(0xe0, 0xd85d3cef)\n      dup2\n      mstore\n        /* \"#utility.yul\":7698:7712   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"DripWarrior/poolContract.sol\":15195:15218  transferFailed(success) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7673:7714   */\n      mstore\n        /* \"#utility.yul\":7646:7664   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":15195:15218  transferFailed(success) */\n      tag_291\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":15162:15229  if(!success){... */\n    tag_399:\n        /* \"DripWarrior/poolContract.sol\":15244:15273  Withdraw(msg.sender, _amount) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract.sol\":15253:15263  msg.sender */\n      caller\n        /* \"#utility.yul\":10951:11002   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11033:11035   */\n      0x20\n        /* \"#utility.yul\":11018:11036   */\n      dup2\n      add\n        /* \"#utility.yul\":11011:11045   */\n      dup5\n      swap1\n      mstore\n        /* \"DripWarrior/poolContract.sol\":15244:15273  Withdraw(msg.sender, _amount) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n      swap2\n        /* \"#utility.yul\":10924:10942   */\n      add\n        /* \"DripWarrior/poolContract.sol\":15244:15273  Withdraw(msg.sender, _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":17828:17834  locked */\n      0x09\n        /* \"DripWarrior/poolContract.sol\":17828:17842  locked = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":14639:15280  function userWithdrawAmoount(uint256 _amount) external nonReentrant {... */\n      jump\t// out\n        /* \"DripWarrior/poolContract.sol\":12282:12517  function checkUpkeep(bytes calldata /*checkData*/) external override view  returns (bool, bytes memory) {... */\n    tag_158:\n        /* \"DripWarrior/poolContract.sol\":12366:12370  bool */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":12372:12384  bytes memory */\n      0x60\n        /* \"DripWarrior/poolContract.sol\":12406:12422  bool needsUpkeep */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":12461:12469  interval */\n      sload(0x0a)\n        /* \"DripWarrior/poolContract.sol\":12444:12457  lastTimeStamp */\n      sload(0x0d)\n        /* \"DripWarrior/poolContract.sol\":12426:12441  block.timestamp */\n      timestamp\n        /* \"DripWarrior/poolContract.sol\":12426:12457  block.timestamp - lastTimeStamp */\n      tag_403\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_403:\n        /* \"DripWarrior/poolContract.sol\":12500:12509  bytes(\"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap2\n      lt\n      swap7\n      swap1\n      swap6\n      pop\n        /* \"DripWarrior/poolContract.sol\":12282:12517  function checkUpkeep(bytes calldata /*checkData*/) external override view  returns (bool, bytes memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_163:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_405\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_406\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_405:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_408\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_409\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_408:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"DripWarrior/poolContract.sol\":6366:7168  function stakeTokens(uint256 _amount) external  {... */\n    tag_167:\n        /* \"DripWarrior/poolContract.sol\":6447:6448  0 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":6436:6443  _amount */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":6436:6448  _amount <= 0 */\n      gt\n        /* \"DripWarrior/poolContract.sol\":6433:6501  if(_amount <= 0){... */\n      tag_411\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":6470:6490  wrongAmount(_amount) */\n      mload(0x40)\n      shl(0xe4, 0x02ff4783)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":6470:6490  wrongAmount(_amount) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":6433:6501  if(_amount <= 0){... */\n    tag_411:\n        /* \"DripWarrior/poolContract.sol\":6537:6547  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":6522:6548  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":6522:6536  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":6522:6548  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":6522:6556  userRegistered[msg.sender].blocked */\n      sload\n      0xff\n      and\n        /* \"DripWarrior/poolContract.sol\":6519:6636  if(userRegistered[msg.sender].blocked){... */\n      iszero\n      tag_413\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":6605:6615  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":6590:6616  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":6590:6604  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":6590:6616  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":6590:6624  userRegistered[msg.sender].blocked */\n      sload\n        /* \"DripWarrior/poolContract.sol\":6578:6625  userBlocked(userRegistered[msg.sender].blocked) */\n      swap1\n      mload\n      shl(0xe6, 0x01be970f)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":6590:6624  userRegistered[msg.sender].blocked */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7698:7712   */\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"DripWarrior/poolContract.sol\":6578:6625  userBlocked(userRegistered[msg.sender].blocked) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7673:7714   */\n      mstore\n        /* \"#utility.yul\":7646:7664   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":6578:6625  userBlocked(userRegistered[msg.sender].blocked) */\n      tag_291\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":6519:6636  if(userRegistered[msg.sender].blocked){... */\n    tag_413:\n        /* \"DripWarrior/poolContract.sol\":6661:6671  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":6646:6672  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":6646:6660  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":6646:6672  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":6646:6690  userRegistered[msg.sender].totalStakedAmount */\n      0x05\n      add\n        /* \"DripWarrior/poolContract.sol\":6646:6701  userRegistered[msg.sender].totalStakedAmount += _amount */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract.sol\":6694:6701  _amount */\n      dup4\n      swap3\n        /* \"DripWarrior/poolContract.sol\":6646:6672  userRegistered[msg.sender] */\n      swap1\n        /* \"DripWarrior/poolContract.sol\":6646:6701  userRegistered[msg.sender].totalStakedAmount += _amount */\n      tag_415\n      swap1\n        /* \"DripWarrior/poolContract.sol\":6694:6701  _amount */\n      dup5\n      swap1\n        /* \"DripWarrior/poolContract.sol\":6646:6701  userRegistered[msg.sender].totalStakedAmount += _amount */\n      tag_320\n      jump\t// in\n    tag_415:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":6736:6746  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":6723:6747  alreadyAdded[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":6723:6735  alreadyAdded */\n      0x12\n        /* \"DripWarrior/poolContract.sol\":6723:6747  alreadyAdded[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"DripWarrior/poolContract.sol\":6719:6890  if(!alreadyAdded[msg.sender]){... */\n      tag_416\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":6786:6795  noOfUsers */\n      0x08\n      dup1\n      sload\n        /* \"DripWarrior/poolContract.sol\":6775:6796  totalUsers[noOfUsers] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":6775:6785  totalUsers */\n      0x13\n        /* \"DripWarrior/poolContract.sol\":6775:6796  totalUsers[noOfUsers] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":6775:6809  totalUsers[noOfUsers] = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"DripWarrior/poolContract.sol\":6799:6809  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":6775:6809  totalUsers[noOfUsers] = msg.sender */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"DripWarrior/poolContract.sol\":6823:6847  alreadyAdded[msg.sender] */\n      dup4\n      mstore\n        /* \"DripWarrior/poolContract.sol\":6823:6835  alreadyAdded */\n      0x12\n        /* \"DripWarrior/poolContract.sol\":6823:6847  alreadyAdded[msg.sender] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":6823:6854  alreadyAdded[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"DripWarrior/poolContract.sol\":6775:6809  totalUsers[noOfUsers] = msg.sender */\n      0x01\n        /* \"DripWarrior/poolContract.sol\":6823:6854  alreadyAdded[msg.sender] = true */\n      or\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":6868:6879  noOfUsers++ */\n      dup2\n      sload\n      swap2\n        /* \"DripWarrior/poolContract.sol\":6786:6795  noOfUsers */\n      swap1\n        /* \"DripWarrior/poolContract.sol\":6868:6879  noOfUsers++ */\n      tag_417\n      dup4\n      tag_296\n      jump\t// in\n    tag_417:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"DripWarrior/poolContract.sol\":6719:6890  if(!alreadyAdded[msg.sender]){... */\n    tag_416:\n        /* \"DripWarrior/poolContract.sol\":6921:6928  _amount */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":6900:6917  totalStakedAmount */\n      0x03\n      0x00\n        /* \"DripWarrior/poolContract.sol\":6900:6928  totalStakedAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_418\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_418:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":6939:6951  bool success */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":6953:6962  usdcToken */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract.sol\":6987:7002  multisigAddress */\n      sload(0x09)\n        /* \"DripWarrior/poolContract.sol\":6953:7011  usdcToken.transferFrom(msg.sender,multisigAddress,_amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract.sol\":6953:6962  usdcToken */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"DripWarrior/poolContract.sol\":6953:6975  usdcToken.transferFrom */\n      0x23b872dd\n      swap3\n        /* \"DripWarrior/poolContract.sol\":6953:7011  usdcToken.transferFrom(msg.sender,multisigAddress,_amount) */\n      tag_419\n      swap3\n        /* \"DripWarrior/poolContract.sol\":6976:6986  msg.sender */\n      caller\n      swap3\n        /* \"DripWarrior/poolContract.sol\":6987:7002  multisigAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DripWarrior/poolContract.sol\":7003:7010  _amount */\n      dup8\n      swap1\n        /* \"DripWarrior/poolContract.sol\":6953:7011  usdcToken.transferFrom(msg.sender,multisigAddress,_amount) */\n      0x04\n      add\n      tag_354\n      jump\t// in\n    tag_419:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_421\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_421:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_422\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_422:\n        /* \"DripWarrior/poolContract.sol\":6939:7011  bool success =usdcToken.transferFrom(msg.sender,multisigAddress,_amount) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":7034:7041  success */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":7030:7097  if(!success){... */\n      tag_423\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":7063:7086  transferFailed(success) */\n      mload(0x40)\n      shl(0xe0, 0xd85d3cef)\n      dup2\n      mstore\n        /* \"#utility.yul\":7698:7712   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"DripWarrior/poolContract.sol\":7063:7086  transferFailed(success) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7673:7714   */\n      mstore\n        /* \"#utility.yul\":7646:7664   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":7063:7086  transferFailed(success) */\n      tag_291\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":7030:7097  if(!success){... */\n    tag_423:\n        /* \"DripWarrior/poolContract.sol\":7135:7150  multisigAddress */\n      sload(0x09)\n        /* \"DripWarrior/poolContract.sol\":7112:7160  StakeTokens(msg.sender,multisigAddress, _amount) */\n      mload(0x40)\n      0x14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab\n      swap2\n      tag_324\n      swap2\n        /* \"DripWarrior/poolContract.sol\":7124:7134  msg.sender */\n      caller\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract.sol\":7135:7150  multisigAddress */\n      and\n      swap1\n        /* \"DripWarrior/poolContract.sol\":7152:7159  _amount */\n      dup7\n      swap1\n        /* \"DripWarrior/poolContract.sol\":7112:7160  StakeTokens(msg.sender,multisigAddress, _amount) */\n      tag_354\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":5550:5951  function addOwnership(uint256 _amount) external bothOwner(){... */\n    tag_171:\n        /* \"DripWarrior/poolContract.sol\":17587:17595  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract.sol\":17573:17583  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17573:17595  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_427\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract.sol\":17613:17621  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract.sol\":17599:17609  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17599:17621  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_427:\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_428\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":17654:17664  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_428:\n        /* \"DripWarrior/poolContract.sol\":5642:5643  0 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":5631:5638  _amount */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":5631:5643  _amount <= 0 */\n      gt\n        /* \"DripWarrior/poolContract.sol\":5628:5696  if(_amount <= 0){... */\n      tag_431\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":5665:5685  wrongAmount(_amount) */\n      mload(0x40)\n      shl(0xe4, 0x02ff4783)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":5665:5685  wrongAmount(_amount) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":5628:5696  if(_amount <= 0){... */\n    tag_431:\n        /* \"DripWarrior/poolContract.sol\":5729:5736  _amount */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":5706:5725  ownerShipPoolAmount */\n      0x02\n      0x00\n        /* \"DripWarrior/poolContract.sol\":5706:5736  ownerShipPoolAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_433\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_433:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":5747:5759  bool success */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":5762:5771  usdcToken */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract.sol\":5762:5819  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract.sol\":5762:5771  usdcToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DripWarrior/poolContract.sol\":5762:5784  usdcToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"DripWarrior/poolContract.sol\":5762:5819  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      tag_434\n      swap1\n        /* \"DripWarrior/poolContract.sol\":5785:5795  msg.sender */\n      caller\n      swap1\n        /* \"DripWarrior/poolContract.sol\":5804:5808  this */\n      address\n      swap1\n        /* \"DripWarrior/poolContract.sol\":5810:5817  _amount */\n      dup8\n      swap1\n        /* \"DripWarrior/poolContract.sol\":5762:5819  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      0x04\n      add\n      tag_354\n      jump\t// in\n    tag_434:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_436\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_436:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_437\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_437:\n        /* \"DripWarrior/poolContract.sol\":5747:5819  bool success = usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":5833:5840  success */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":5829:5896  if(!success){... */\n      tag_438\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":5862:5885  transferFailed(success) */\n      mload(0x40)\n      shl(0xe0, 0xd85d3cef)\n      dup2\n      mstore\n        /* \"#utility.yul\":7698:7712   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"DripWarrior/poolContract.sol\":5862:5885  transferFailed(success) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7673:7714   */\n      mstore\n        /* \"#utility.yul\":7646:7664   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":5862:5885  transferFailed(success) */\n      tag_291\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":5829:5896  if(!success){... */\n    tag_438:\n        /* \"DripWarrior/poolContract.sol\":5911:5944  AddOwnership(ownerShipPoolAmount) */\n      0x73834e1d1ee73ba659470a3603b888903853d3a3c9fda34e71c093a0e35cab94\n        /* \"DripWarrior/poolContract.sol\":5924:5943  ownerShipPoolAmount */\n      sload(0x02)\n        /* \"DripWarrior/poolContract.sol\":5911:5944  AddOwnership(ownerShipPoolAmount) */\n      mload(0x40)\n      tag_324\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":17211:17534  function setmaintainceFeePercentage(uint256 _newPerccentage) external bothOwner {... */\n    tag_175:\n        /* \"DripWarrior/poolContract.sol\":17587:17595  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract.sol\":17573:17583  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17573:17595  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_442\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract.sol\":17613:17621  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract.sol\":17599:17609  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17599:17621  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_442:\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_443\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":17654:17664  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_443:\n        /* \"DripWarrior/poolContract.sol\":17332:17333  0 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":17313:17328  _newPerccentage */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":17313:17333  _newPerccentage <= 0 */\n      gt\n        /* \"DripWarrior/poolContract.sol\":17310:17398  if(_newPerccentage <= 0){... */\n      tag_446\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":17355:17387  wrongPercentage(_newPerccentage) */\n      mload(0x40)\n      shl(0xe0, 0xcdbc6335)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":17355:17387  wrongPercentage(_newPerccentage) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":17310:17398  if(_newPerccentage <= 0){... */\n    tag_446:\n        /* \"DripWarrior/poolContract.sol\":17416:17439  maintainceFeePercentage */\n      0x07\n        /* \"DripWarrior/poolContract.sol\":17416:17457  maintainceFeePercentage = _newPerccentage */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":17473:17527  PercentageChanged(msg.sender, maintainceFeePercentage) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract.sol\":17491:17501  msg.sender */\n      caller\n        /* \"#utility.yul\":10951:11002   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11033:11035   */\n      0x20\n        /* \"#utility.yul\":11018:11036   */\n      dup2\n      add\n        /* \"#utility.yul\":11011:11045   */\n      dup4\n      swap1\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_d85598d6ea860439b48fc265883a1cac638ff64dca5391fe12b46f27076e26fe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":17473:17527  PercentageChanged(msg.sender, maintainceFeePercentage) */\n      swap2\n        /* \"#utility.yul\":10924:10942   */\n      add\n        /* \"DripWarrior/poolContract.sol\":17473:17527  PercentageChanged(msg.sender, maintainceFeePercentage) */\n      tag_299\n        /* \"#utility.yul\":10777:11051   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":16200:16530  function settdividentPayoutPercentage(uint256 _newPerccentage) external bothOwner {... */\n    tag_179:\n        /* \"DripWarrior/poolContract.sol\":17587:17595  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract.sol\":17573:17583  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17573:17595  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_450\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract.sol\":17613:17621  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract.sol\":17599:17609  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17599:17621  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_450:\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_451\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":17654:17664  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_451:\n        /* \"DripWarrior/poolContract.sol\":16323:16324  0 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":16304:16319  _newPerccentage */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":16304:16324  _newPerccentage <= 0 */\n      gt\n        /* \"DripWarrior/poolContract.sol\":16301:16389  if(_newPerccentage <= 0){... */\n      tag_454\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":16346:16378  wrongPercentage(_newPerccentage) */\n      mload(0x40)\n      shl(0xe0, 0xcdbc6335)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":16346:16378  wrongPercentage(_newPerccentage) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":16301:16389  if(_newPerccentage <= 0){... */\n    tag_454:\n        /* \"DripWarrior/poolContract.sol\":16407:16432  tdividentPayoutPercentage */\n      0x04\n        /* \"DripWarrior/poolContract.sol\":16407:16450  tdividentPayoutPercentage = _newPerccentage */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":16466:16522  PercentageChanged(msg.sender, tdividentPayoutPercentage) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract.sol\":16484:16494  msg.sender */\n      caller\n        /* \"#utility.yul\":10951:11002   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11033:11035   */\n      0x20\n        /* \"#utility.yul\":11018:11036   */\n      dup2\n      add\n        /* \"#utility.yul\":11011:11045   */\n      dup4\n      swap1\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_d85598d6ea860439b48fc265883a1cac638ff64dca5391fe12b46f27076e26fe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":16466:16522  PercentageChanged(msg.sender, tdividentPayoutPercentage) */\n      swap2\n        /* \"#utility.yul\":10924:10942   */\n      add\n        /* \"DripWarrior/poolContract.sol\":16466:16522  PercentageChanged(msg.sender, tdividentPayoutPercentage) */\n      tag_299\n        /* \"#utility.yul\":10777:11051   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":7833:8511  function reStakeTokens(uint256 _amount) external  {... */\n    tag_183:\n        /* \"DripWarrior/poolContract.sol\":7916:7917  0 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":7905:7912  _amount */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":7905:7917  _amount <= 0 */\n      gt\n        /* \"DripWarrior/poolContract.sol\":7902:7970  if(_amount <= 0){... */\n      tag_458\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":7939:7959  wrongAmount(_amount) */\n      mload(0x40)\n      shl(0xe4, 0x02ff4783)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":7939:7959  wrongAmount(_amount) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":7902:7970  if(_amount <= 0){... */\n    tag_458:\n        /* \"DripWarrior/poolContract.sol\":8005:8015  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":7990:8016  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":7990:8004  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":7990:8016  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":7990:8024  userRegistered[msg.sender].blocked */\n      sload\n      0xff\n      and\n        /* \"DripWarrior/poolContract.sol\":7987:8104  if(userRegistered[msg.sender].blocked){... */\n      iszero\n      tag_460\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":8073:8083  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":8058:8084  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":8058:8072  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":8058:8084  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":8058:8092  userRegistered[msg.sender].blocked */\n      sload\n        /* \"DripWarrior/poolContract.sol\":8046:8093  userBlocked(userRegistered[msg.sender].blocked) */\n      swap1\n      mload\n      shl(0xe6, 0x01be970f)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":8058:8092  userRegistered[msg.sender].blocked */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7698:7712   */\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"DripWarrior/poolContract.sol\":8046:8093  userBlocked(userRegistered[msg.sender].blocked) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7673:7714   */\n      mstore\n        /* \"#utility.yul\":7646:7664   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":8046:8093  userBlocked(userRegistered[msg.sender].blocked) */\n      tag_291\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":7987:8104  if(userRegistered[msg.sender].blocked){... */\n    tag_460:\n        /* \"DripWarrior/poolContract.sol\":8132:8142  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":8117:8143  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":8117:8131  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":8117:8143  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":8117:8158  userRegistered[msg.sender].receivedAmount */\n      0x01\n      add\n      sload\n        /* \"DripWarrior/poolContract.sol\":8117:8169  userRegistered[msg.sender].receivedAmount <= _amount */\n      dup2\n      lt\n        /* \"DripWarrior/poolContract.sol\":8114:8227  if(userRegistered[msg.sender].receivedAmount <= _amount){... */\n      tag_462\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":8191:8216  notEnoughBalance(_amount) */\n      mload(0x40)\n      shl(0xe3, 0x0636dc6b)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":8191:8216  notEnoughBalance(_amount) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":8114:8227  if(userRegistered[msg.sender].receivedAmount <= _amount){... */\n    tag_462:\n        /* \"DripWarrior/poolContract.sol\":8252:8262  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":8237:8263  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":8237:8251  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":8237:8263  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":8237:8278  userRegistered[msg.sender].receivedAmount */\n      0x01\n      add\n        /* \"DripWarrior/poolContract.sol\":8237:8289  userRegistered[msg.sender].receivedAmount -= _amount */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract.sol\":8282:8289  _amount */\n      dup4\n      swap3\n        /* \"DripWarrior/poolContract.sol\":8237:8263  userRegistered[msg.sender] */\n      swap1\n        /* \"DripWarrior/poolContract.sol\":8237:8289  userRegistered[msg.sender].receivedAmount -= _amount */\n      tag_464\n      swap1\n        /* \"DripWarrior/poolContract.sol\":8282:8289  _amount */\n      dup5\n      swap1\n        /* \"DripWarrior/poolContract.sol\":8237:8289  userRegistered[msg.sender].receivedAmount -= _amount */\n      tag_298\n      jump\t// in\n    tag_464:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":8314:8324  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":8299:8325  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":8299:8313  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":8299:8325  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":8299:8343  userRegistered[msg.sender].totalStakedAmount */\n      0x05\n      add\n        /* \"DripWarrior/poolContract.sol\":8299:8354  userRegistered[msg.sender].totalStakedAmount += _amount */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract.sol\":8347:8354  _amount */\n      dup4\n      swap3\n        /* \"DripWarrior/poolContract.sol\":8299:8325  userRegistered[msg.sender] */\n      swap1\n        /* \"DripWarrior/poolContract.sol\":8299:8354  userRegistered[msg.sender].totalStakedAmount += _amount */\n      tag_465\n      swap1\n        /* \"DripWarrior/poolContract.sol\":8347:8354  _amount */\n      dup5\n      swap1\n        /* \"DripWarrior/poolContract.sol\":8299:8354  userRegistered[msg.sender].totalStakedAmount += _amount */\n      tag_320\n      jump\t// in\n    tag_465:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DripWarrior/poolContract.sol\":8396:8403  _amount */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":8373:8392  ownerShipPoolAmount */\n      0x02\n      0x00\n        /* \"DripWarrior/poolContract.sol\":8373:8403  ownerShipPoolAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_466\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_466:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DripWarrior/poolContract.sol\":8434:8441  _amount */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":8413:8430  totalStakedAmount */\n      0x03\n      0x00\n        /* \"DripWarrior/poolContract.sol\":8413:8441  totalStakedAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_467\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_467:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":8457:8503  StakeTokens(msg.sender,address(this), _amount) */\n      mload(0x40)\n      0x14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab\n      swap1\n      tag_299\n      swap1\n        /* \"DripWarrior/poolContract.sol\":8469:8479  msg.sender */\n      caller\n      swap1\n        /* \"DripWarrior/poolContract.sol\":8488:8492  this */\n      address\n      swap1\n        /* \"DripWarrior/poolContract.sol\":8495:8502  _amount */\n      dup6\n      swap1\n        /* \"DripWarrior/poolContract.sol\":8457:8503  StakeTokens(msg.sender,address(this), _amount) */\n      tag_354\n      jump\t// in\n        /* \"DripWarrior/poolContract.sol\":8521:9062  function addFunds(uint256 _amount, uint256 _projectNo)   external {... */\n    tag_191:\n        /* \"DripWarrior/poolContract.sol\":8612:8613  0 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":8601:8608  _amount */\n      dup3\n        /* \"DripWarrior/poolContract.sol\":8601:8613  _amount <= 0 */\n      gt\n        /* \"DripWarrior/poolContract.sol\":8598:8666  if(_amount <= 0){... */\n      tag_470\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":8635:8655  wrongAmount(_amount) */\n      mload(0x40)\n      shl(0xe4, 0x02ff4783)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":8635:8655  wrongAmount(_amount) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":8598:8666  if(_amount <= 0){... */\n    tag_470:\n        /* \"DripWarrior/poolContract.sol\":8692:8705  totalProjects */\n      sload(0x11)\n        /* \"DripWarrior/poolContract.sol\":8679:8689  _projectNo */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":8679:8705  _projectNo > totalProjects */\n      gt\n        /* \"DripWarrior/poolContract.sol\":8676:8764  if(_projectNo > totalProjects){... */\n      iszero\n      tag_472\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":8727:8753  wrongProjectNo(_projectNo) */\n      mload(0x40)\n      shl(0xe0, 0x222a50f3)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":8727:8753  wrongProjectNo(_projectNo) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":8676:8764  if(_projectNo > totalProjects){... */\n    tag_472:\n        /* \"DripWarrior/poolContract.sol\":8809:8834  tPPercentages[_projectNo] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":8809:8822  tPPercentages */\n      0x14\n        /* \"DripWarrior/poolContract.sol\":8809:8834  tPPercentages[_projectNo] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DripWarrior/poolContract.sol\":8786:8835  calculateFees(_amount, tPPercentages[_projectNo]) */\n      tag_474\n      swap1\n        /* \"DripWarrior/poolContract.sol\":8800:8807  _amount */\n      dup4\n      swap1\n        /* \"DripWarrior/poolContract.sol\":8786:8799  calculateFees */\n      tag_475\n        /* \"DripWarrior/poolContract.sol\":8786:8835  calculateFees(_amount, tPPercentages[_projectNo]) */\n      jump\t// in\n    tag_474:\n        /* \"DripWarrior/poolContract.sol\":8854:8866  bool success */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":8869:8878  usdcToken */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract.sol\":8869:8926  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract.sol\":8869:8878  usdcToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DripWarrior/poolContract.sol\":8869:8891  usdcToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"DripWarrior/poolContract.sol\":8869:8926  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      tag_476\n      swap1\n        /* \"DripWarrior/poolContract.sol\":8892:8902  msg.sender */\n      caller\n      swap1\n        /* \"DripWarrior/poolContract.sol\":8911:8915  this */\n      address\n      swap1\n        /* \"DripWarrior/poolContract.sol\":8917:8924  _amount */\n      dup9\n      swap1\n        /* \"DripWarrior/poolContract.sol\":8869:8926  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      0x04\n      add\n      tag_354\n      jump\t// in\n    tag_476:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_478\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_478:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_479\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_479:\n        /* \"DripWarrior/poolContract.sol\":8854:8926  bool success = usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":8940:8947  success */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":8936:9003  if(!success){... */\n      tag_480\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":8969:8992  transferFailed(success) */\n      mload(0x40)\n      shl(0xe0, 0xd85d3cef)\n      dup2\n      mstore\n        /* \"#utility.yul\":7698:7712   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"DripWarrior/poolContract.sol\":8969:8992  transferFailed(success) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7673:7714   */\n      mstore\n        /* \"#utility.yul\":7646:7664   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":8969:8992  transferFailed(success) */\n      tag_291\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":8936:9003  if(!success){... */\n    tag_480:\n        /* \"DripWarrior/poolContract.sol\":9018:9046  AddFunds(_amount,_projectNo) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":11590:11615   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":11646:11648   */\n      0x20\n        /* \"#utility.yul\":11631:11649   */\n      dup2\n      add\n        /* \"#utility.yul\":11624:11658   */\n      dup5\n      swap1\n      mstore\n        /* \"DripWarrior/poolContract.sol\":9018:9046  AddFunds(_amount,_projectNo) */\n      0xa89b69c5958ec1ccf0df0de746a8708f5b6a6b429430129f16f46f44b319c900\n      swap2\n        /* \"#utility.yul\":11563:11581   */\n      add\n        /* \"DripWarrior/poolContract.sol\":9018:9046  AddFunds(_amount,_projectNo) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DripWarrior/poolContract.sol\":8587:9062  {... */\n      pop\n        /* \"DripWarrior/poolContract.sol\":8521:9062  function addFunds(uint256 _amount, uint256 _projectNo)   external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract.sol\":16880:17205  function setflowToTreasuryPercentage(uint256 _newPerccentage) external bothOwner {... */\n    tag_217:\n        /* \"DripWarrior/poolContract.sol\":17587:17595  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract.sol\":17573:17583  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17573:17595  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_488\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract.sol\":17613:17621  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract.sol\":17599:17609  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17599:17621  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_488:\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_489\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":17654:17664  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_489:\n        /* \"DripWarrior/poolContract.sol\":17001:17002  0 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":16982:16997  _newPerccentage */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":16982:17002  _newPerccentage <= 0 */\n      gt\n        /* \"DripWarrior/poolContract.sol\":16979:17067  if(_newPerccentage <= 0){... */\n      tag_492\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":17024:17056  wrongPercentage(_newPerccentage) */\n      mload(0x40)\n      shl(0xe0, 0xcdbc6335)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":17024:17056  wrongPercentage(_newPerccentage) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":16979:17067  if(_newPerccentage <= 0){... */\n    tag_492:\n        /* \"DripWarrior/poolContract.sol\":17085:17109  flowToTreasuryPercentage */\n      0x06\n        /* \"DripWarrior/poolContract.sol\":17085:17127  flowToTreasuryPercentage = _newPerccentage */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":17143:17198  PercentageChanged(msg.sender, flowToTreasuryPercentage) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract.sol\":17161:17171  msg.sender */\n      caller\n        /* \"#utility.yul\":10951:11002   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11033:11035   */\n      0x20\n        /* \"#utility.yul\":11018:11036   */\n      dup2\n      add\n        /* \"#utility.yul\":11011:11045   */\n      dup4\n      swap1\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_d85598d6ea860439b48fc265883a1cac638ff64dca5391fe12b46f27076e26fe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":17143:17198  PercentageChanged(msg.sender, flowToTreasuryPercentage) */\n      swap2\n        /* \"#utility.yul\":10924:10942   */\n      add\n        /* \"DripWarrior/poolContract.sol\":17143:17198  PercentageChanged(msg.sender, flowToTreasuryPercentage) */\n      tag_299\n        /* \"#utility.yul\":10777:11051   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":16540:16869  function setodividentPayoutPercentage(uint256 _newPerccentage) external bothOwner {... */\n    tag_225:\n        /* \"DripWarrior/poolContract.sol\":17587:17595  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract.sol\":17573:17583  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17573:17595  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_496\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract.sol\":17613:17621  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract.sol\":17599:17609  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17599:17621  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_496:\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_497\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":17654:17664  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_497:\n        /* \"DripWarrior/poolContract.sol\":16663:16664  0 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":16644:16659  _newPerccentage */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":16644:16664  _newPerccentage <= 0 */\n      gt\n        /* \"DripWarrior/poolContract.sol\":16641:16729  if(_newPerccentage <= 0){... */\n      tag_500\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":16686:16718  wrongPercentage(_newPerccentage) */\n      mload(0x40)\n      shl(0xe0, 0xcdbc6335)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":16686:16718  wrongPercentage(_newPerccentage) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":16641:16729  if(_newPerccentage <= 0){... */\n    tag_500:\n        /* \"DripWarrior/poolContract.sol\":16747:16772  odividentPayoutPercentage */\n      0x05\n        /* \"DripWarrior/poolContract.sol\":16747:16790  odividentPayoutPercentage = _newPerccentage */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":16806:16862  PercentageChanged(msg.sender, odividentPayoutPercentage) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract.sol\":16824:16834  msg.sender */\n      caller\n        /* \"#utility.yul\":10951:11002   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11033:11035   */\n      0x20\n        /* \"#utility.yul\":11018:11036   */\n      dup2\n      add\n        /* \"#utility.yul\":11011:11045   */\n      dup4\n      swap1\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_d85598d6ea860439b48fc265883a1cac638ff64dca5391fe12b46f27076e26fe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":16806:16862  PercentageChanged(msg.sender, odividentPayoutPercentage) */\n      swap2\n        /* \"#utility.yul\":10924:10942   */\n      add\n        /* \"DripWarrior/poolContract.sol\":16806:16862  PercentageChanged(msg.sender, odividentPayoutPercentage) */\n      tag_299\n        /* \"#utility.yul\":10777:11051   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":13847:14165  function setForwarderAddress(address forwarderAddress) external bothOwner {... */\n    tag_246:\n        /* \"DripWarrior/poolContract.sol\":17587:17595  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract.sol\":17573:17583  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17573:17595  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_504\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract.sol\":17613:17621  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract.sol\":17599:17609  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17599:17621  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_504:\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_505\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":17654:17664  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_505:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract.sol\":13943:13973  forwarderAddress == address(0) */\n      dup2\n      and\n        /* \"DripWarrior/poolContract.sol\":13940:14036  if(forwarderAddress == address(0)){... */\n      tag_508\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":13995:14025  wrongAddress(forwarderAddress) */\n      mload(0x40)\n      shl(0xe0, 0xe4cfa94d)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":375:407   */\n      dup3\n      and\n        /* \"DripWarrior/poolContract.sol\":13995:14025  wrongAddress(forwarderAddress) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":13995:14025  wrongAddress(forwarderAddress) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":13940:14036  if(forwarderAddress == address(0)){... */\n    tag_508:\n        /* \"DripWarrior/poolContract.sol\":14054:14072  s_forwarderAddress */\n      0x0e\n        /* \"DripWarrior/poolContract.sol\":14054:14091  s_forwarderAddress = forwarderAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"DripWarrior/poolContract.sol\":14107:14158  SetForwarderAddress(msg.sender, s_forwarderAddress) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract.sol\":14127:14137  msg.sender */\n      caller\n        /* \"#utility.yul\":11843:11894   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11925:11927   */\n      0x20\n        /* \"#utility.yul\":11910:11928   */\n      dup2\n      add\n        /* \"#utility.yul\":11903:11963   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"DripWarrior/poolContract.sol\":14107:14158  SetForwarderAddress(msg.sender, s_forwarderAddress) */\n      0x75f91f3cecb8c46f20150f60f77a6e1f0de00776627692db82ef1960af84c33a\n      swap2\n        /* \"#utility.yul\":11816:11834   */\n      add\n        /* \"DripWarrior/poolContract.sol\":14107:14158  SetForwarderAddress(msg.sender, s_forwarderAddress) */\n      tag_299\n        /* \"#utility.yul\":11669:11969   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":15286:15840  function blockUser(address _userAddress, bool value) external bothOwner {... */\n    tag_251:\n        /* \"DripWarrior/poolContract.sol\":17587:17595  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract.sol\":17573:17583  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17573:17595  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_513\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract.sol\":17613:17621  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract.sol\":17599:17609  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17599:17621  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_513:\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_514\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":17654:17664  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_514:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract.sol\":15380:15406  _userAddress == address(0) */\n      dup3\n      and\n        /* \"DripWarrior/poolContract.sol\":15377:15465  if(_userAddress == address(0)){... */\n      tag_517\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":15428:15454  wrongAddress(_userAddress) */\n      mload(0x40)\n      shl(0xe0, 0xe4cfa94d)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":375:407   */\n      dup4\n      and\n        /* \"DripWarrior/poolContract.sol\":15428:15454  wrongAddress(_userAddress) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":15428:15454  wrongAddress(_userAddress) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":15377:15465  if(_userAddress == address(0)){... */\n    tag_517:\n        /* \"DripWarrior/poolContract.sol\":15487:15491  true */\n      0x01\n        /* \"DripWarrior/poolContract.sol\":15478:15491  value != true */\n      dup2\n      iszero\n      iszero\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract.sol\":15478:15509  value != true && value != false */\n      tag_519\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract.sol\":15495:15509  value != false */\n      dup1\n      iszero\n      iszero\n        /* \"DripWarrior/poolContract.sol\":15478:15509  value != true && value != false */\n    tag_519:\n        /* \"DripWarrior/poolContract.sol\":15475:15559  if(value != true && value != false){... */\n      iszero\n      tag_520\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":15531:15548  wrongValue(value) */\n      mload(0x40)\n      shl(0xe0, 0x81ed1ae3)\n      dup2\n      mstore\n        /* \"#utility.yul\":7698:7712   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"DripWarrior/poolContract.sol\":15531:15548  wrongValue(value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7673:7714   */\n      mstore\n        /* \"#utility.yul\":7646:7664   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":15531:15548  wrongValue(value) */\n      tag_291\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":15475:15559  if(value != true && value != false){... */\n    tag_520:\n        /* \"DripWarrior/poolContract.sol\":15572:15585  value == true */\n      dup1\n      iszero\n      iszero\n        /* \"DripWarrior/poolContract.sol\":15581:15585  true */\n      0x01\n        /* \"DripWarrior/poolContract.sol\":15572:15585  value == true */\n      sub\n        /* \"DripWarrior/poolContract.sol\":15569:15736  if(value == true){... */\n      tag_522\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract.sol\":15601:15629  userRegistered[_userAddress] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":15601:15615  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":15601:15629  userRegistered[_userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":15601:15644  userRegistered[_userAddress].blocked = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"DripWarrior/poolContract.sol\":15640:15644  true */\n      0x01\n        /* \"DripWarrior/poolContract.sol\":15601:15644  userRegistered[_userAddress].blocked = true */\n      or\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":15569:15736  if(value == true){... */\n      jump(tag_523)\n    tag_522:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract.sol\":15681:15709  userRegistered[_userAddress] */\n      dup3\n      and\n        /* \"DripWarrior/poolContract.sol\":15720:15725  false */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":15681:15709  userRegistered[_userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":15681:15695  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":15681:15709  userRegistered[_userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":15681:15725  userRegistered[_userAddress].blocked = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":15569:15736  if(value == true){... */\n    tag_523:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract.sol\":15796:15824  userRegistered[_userAddress] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":15796:15810  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":15796:15824  userRegistered[_userAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":15796:15832  userRegistered[_userAddress].blocked */\n      sload\n        /* \"DripWarrior/poolContract.sol\":15759:15833  UserBlocked(msg.sender,_userAddress, userRegistered[_userAddress].blocked) */\n      dup3\n      mload\n        /* \"DripWarrior/poolContract.sol\":15771:15781  msg.sender */\n      caller\n        /* \"#utility.yul\":12170:12221   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12237:12255   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":12230:12290   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"DripWarrior/poolContract.sol\":15796:15832  userRegistered[_userAddress].blocked */\n      0xff\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":12333:12347   */\n      iszero\n        /* \"#utility.yul\":12326:12348   */\n      iszero\n        /* \"#utility.yul\":12306:12324   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12299:12349   */\n      mstore\n        /* \"DripWarrior/poolContract.sol\":15759:15833  UserBlocked(msg.sender,_userAddress, userRegistered[_userAddress].blocked) */\n      0x7a1655bc3160d3413bf1d5235e55be12e01b7e8bc2436a9bff09c3b4fa2421f1\n      swap1\n        /* \"#utility.yul\":12158:12160   */\n      0x60\n        /* \"#utility.yul\":12143:12161   */\n      add\n        /* \"DripWarrior/poolContract.sol\":15759:15833  UserBlocked(msg.sender,_userAddress, userRegistered[_userAddress].blocked) */\n      tag_324\n        /* \"#utility.yul\":11974:12355   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":9456:11079  function weeklyTransfer() public  {... */\n    tag_254:\n        /* \"DripWarrior/poolContract.sol\":9518:9536  s_forwarderAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0e))\n        /* \"DripWarrior/poolContract.sol\":9504:9514  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":9504:9536  msg.sender != s_forwarderAddress */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract.sol\":9504:9562  msg.sender != s_forwarderAddress && msg.sender != ownerOne */\n      tag_527\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract.sol\":9554:9562  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract.sol\":9540:9550  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":9540:9562  msg.sender != ownerOne */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract.sol\":9504:9562  msg.sender != s_forwarderAddress && msg.sender != ownerOne */\n    tag_527:\n        /* \"DripWarrior/poolContract.sol\":9504:9588  msg.sender != s_forwarderAddress && msg.sender != ownerOne && msg.sender != ownerTwo */\n      dup1\n      iszero\n      tag_528\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract.sol\":9580:9588  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract.sol\":9566:9576  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":9566:9588  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract.sol\":9504:9588  msg.sender != s_forwarderAddress && msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_528:\n        /* \"DripWarrior/poolContract.sol\":9501:9643  if(msg.sender != s_forwarderAddress && msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_529\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":9610:9632  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":9621:9631  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":9610:9632  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":9610:9632  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":9501:9643  if(msg.sender != s_forwarderAddress && msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_529:\n        /* \"DripWarrior/poolContract.sol\":9656:9675  ownerShipPoolAmount */\n      sload(0x02)\n        /* \"DripWarrior/poolContract.sol\":9656:9680  ownerShipPoolAmount <= 0 */\n      iszero\n      dup1\n      iszero\n        /* \"DripWarrior/poolContract.sol\":9656:9707  ownerShipPoolAmount <= 0 && treasuryPoolAmount <= 0 */\n      tag_531\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract.sol\":9684:9702  treasuryPoolAmount */\n      sload(0x01)\n        /* \"DripWarrior/poolContract.sol\":9684:9707  treasuryPoolAmount <= 0 */\n      iszero\n        /* \"DripWarrior/poolContract.sol\":9656:9707  ownerShipPoolAmount <= 0 && treasuryPoolAmount <= 0 */\n    tag_531:\n        /* \"DripWarrior/poolContract.sol\":9653:9790  if(ownerShipPoolAmount <= 0 && treasuryPoolAmount <= 0){... */\n      iszero\n      tag_532\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":9740:9759  ownerShipPoolAmount */\n      sload(0x02)\n        /* \"DripWarrior/poolContract.sol\":9760:9778  treasuryPoolAmount */\n      sload(0x01)\n        /* \"DripWarrior/poolContract.sol\":9729:9779  emptyPools(ownerShipPoolAmount,treasuryPoolAmount) */\n      mload(0x40)\n      shl(0xe0, 0x2fd92d8d)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":11590:11615   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":11631:11649   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11624:11658   */\n      mstore\n        /* \"#utility.yul\":11563:11581   */\n      0x44\n      add\n        /* \"DripWarrior/poolContract.sol\":9729:9779  emptyPools(ownerShipPoolAmount,treasuryPoolAmount) */\n      tag_291\n        /* \"#utility.yul\":11416:11664   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":9653:9790  if(ownerShipPoolAmount <= 0 && treasuryPoolAmount <= 0){... */\n    tag_532:\n        /* \"DripWarrior/poolContract.sol\":9810:9834  uint256 remainFiftyOPool */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":9835:9868  uint256 dividentPayoutOPoolAmount */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":9870:9896  uint256 perPersonFromTPool */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":9901:9921  perPoolCalculation() */\n      tag_534\n        /* \"DripWarrior/poolContract.sol\":9901:9919  perPoolCalculation */\n      tag_535\n        /* \"DripWarrior/poolContract.sol\":9901:9921  perPoolCalculation() */\n      jump\t// in\n    tag_534:\n        /* \"DripWarrior/poolContract.sol\":9808:9921  ( uint256 remainFiftyOPool,uint256 dividentPayoutOPoolAmount, uint256 perPersonFromTPool)  = perPoolCalculation() */\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":9948:9964  uint256 maxlimit */\n      0x00\n      dup1\n        /* \"DripWarrior/poolContract.sol\":9975:10987  for(uint256 i = 0; i < noOfUsers; i++){... */\n    tag_536:\n        /* \"DripWarrior/poolContract.sol\":9998:10007  noOfUsers */\n      sload(0x08)\n        /* \"DripWarrior/poolContract.sol\":9994:9995  i */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":9994:10007  i < noOfUsers */\n      lt\n        /* \"DripWarrior/poolContract.sol\":9975:10987  for(uint256 i = 0; i < noOfUsers; i++){... */\n      iszero\n      tag_537\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":10032:10061  userRegistered[totalUsers[i]] */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":10047:10060  totalUsers[i] */\n      dup2\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":10047:10057  totalUsers */\n      0x13\n        /* \"DripWarrior/poolContract.sol\":10047:10060  totalUsers[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"DripWarrior/poolContract.sol\":10032:10061  userRegistered[totalUsers[i]] */\n      dup4\n      mstore\n        /* \"DripWarrior/poolContract.sol\":10032:10046  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":10032:10061  userRegistered[totalUsers[i]] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":10032:10069  userRegistered[totalUsers[i]].blocked */\n      sload\n      0xff\n      and\n        /* \"DripWarrior/poolContract.sol\":10028:10964  if(!userRegistered[totalUsers[i]].blocked){... */\n      tag_539\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":10182:10199  totalStakedAmount */\n      sload(0x03)\n        /* \"DripWarrior/poolContract.sol\":10089:10116  uint256 eachSharePercentage */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":10135:10148  totalUsers[i] */\n      dup3\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":10135:10145  totalUsers */\n      0x13\n        /* \"DripWarrior/poolContract.sol\":10135:10148  totalUsers[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"DripWarrior/poolContract.sol\":10120:10149  userRegistered[totalUsers[i]] */\n      dup4\n      mstore\n        /* \"DripWarrior/poolContract.sol\":10120:10134  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":10120:10149  userRegistered[totalUsers[i]] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":10120:10167  userRegistered[totalUsers[i]].totalStakedAmount */\n      0x05\n      add\n      sload\n        /* \"DripWarrior/poolContract.sol\":10089:10116  uint256 eachSharePercentage */\n      swap1\n      swap2\n        /* \"DripWarrior/poolContract.sol\":10182:10199  totalStakedAmount */\n      swap1\n        /* \"DripWarrior/poolContract.sol\":10120:10177  userRegistered[totalUsers[i]].totalStakedAmount * (10000) */\n      tag_540\n      swap1\n        /* \"DripWarrior/poolContract.sol\":10171:10176  10000 */\n      0x2710\n        /* \"DripWarrior/poolContract.sol\":10120:10177  userRegistered[totalUsers[i]].totalStakedAmount * (10000) */\n      tag_541\n      jump\t// in\n    tag_540:\n        /* \"DripWarrior/poolContract.sol\":10119:10200  (userRegistered[totalUsers[i]].totalStakedAmount * (10000)) / (totalStakedAmount) */\n      tag_542\n      swap2\n      swap1\n      tag_543\n      jump\t// in\n    tag_542:\n        /* \"DripWarrior/poolContract.sol\":10089:10200  uint256 eachSharePercentage = (userRegistered[totalUsers[i]].totalStakedAmount * (10000)) / (totalStakedAmount) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":10235:10257  uint256 eachSendAmount */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":10260:10327  calculatePercentage(dividentPayoutOPoolAmount, eachSharePercentage) */\n      tag_544\n        /* \"DripWarrior/poolContract.sol\":10280:10305  dividentPayoutOPoolAmount */\n      dup7\n        /* \"DripWarrior/poolContract.sol\":10307:10326  eachSharePercentage */\n      dup4\n        /* \"DripWarrior/poolContract.sol\":10260:10279  calculatePercentage */\n      tag_545\n        /* \"DripWarrior/poolContract.sol\":10260:10327  calculatePercentage(dividentPayoutOPoolAmount, eachSharePercentage) */\n      jump\t// in\n    tag_544:\n        /* \"DripWarrior/poolContract.sol\":10235:10327  uint256 eachSendAmount = calculatePercentage(dividentPayoutOPoolAmount, eachSharePercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":10368:10382  eachSendAmount */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":10345:10364  ownerShipPoolAmount */\n      0x02\n      0x00\n        /* \"DripWarrior/poolContract.sol\":10345:10382  ownerShipPoolAmount -= eachSendAmount */\n      dup3\n      dup3\n      sload\n      tag_546\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_546:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"DripWarrior/poolContract.sol\":10425:10451  maxlimit += eachSendAmount */\n      tag_547\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":10437:10451  eachSendAmount */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":10425:10451  maxlimit += eachSendAmount */\n      dup6\n      tag_320\n      jump\t// in\n    tag_547:\n      swap4\n      pop\n        /* \"DripWarrior/poolContract.sol\":10491:10509  perPersonFromTPool */\n      dup5\n        /* \"DripWarrior/poolContract.sol\":10469:10487  treasuryPoolAmount */\n      0x01\n      0x00\n        /* \"DripWarrior/poolContract.sol\":10469:10509  treasuryPoolAmount -= perPersonFromTPool */\n      dup3\n      dup3\n      sload\n      tag_548\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_548:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":10528:10557  userRegistered[totalUsers[i]] */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":10543:10556  totalUsers[i] */\n      dup4\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":10543:10553  totalUsers */\n      0x13\n        /* \"DripWarrior/poolContract.sol\":10543:10556  totalUsers[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"DripWarrior/poolContract.sol\":10528:10557  userRegistered[totalUsers[i]] */\n      dup4\n      mstore\n        /* \"DripWarrior/poolContract.sol\":10528:10542  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":10528:10557  userRegistered[totalUsers[i]] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":10528:10577  userRegistered[totalUsers[i]].receiveFromTreasury */\n      0x03\n      add\n        /* \"DripWarrior/poolContract.sol\":10528:10599  userRegistered[totalUsers[i]].receiveFromTreasury += perPersonFromTPool */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract.sol\":10581:10599  perPersonFromTPool */\n      dup8\n      swap3\n        /* \"DripWarrior/poolContract.sol\":10528:10557  userRegistered[totalUsers[i]] */\n      swap1\n        /* \"DripWarrior/poolContract.sol\":10528:10599  userRegistered[totalUsers[i]].receiveFromTreasury += perPersonFromTPool */\n      tag_549\n      swap1\n        /* \"DripWarrior/poolContract.sol\":10581:10599  perPersonFromTPool */\n      dup5\n      swap1\n        /* \"DripWarrior/poolContract.sol\":10528:10599  userRegistered[totalUsers[i]].receiveFromTreasury += perPersonFromTPool */\n      tag_320\n      jump\t// in\n    tag_549:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":10617:10646  userRegistered[totalUsers[i]] */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":10632:10645  totalUsers[i] */\n      dup4\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":10632:10642  totalUsers */\n      0x13\n        /* \"DripWarrior/poolContract.sol\":10632:10645  totalUsers[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"DripWarrior/poolContract.sol\":10617:10646  userRegistered[totalUsers[i]] */\n      dup4\n      mstore\n        /* \"DripWarrior/poolContract.sol\":10617:10631  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":10617:10646  userRegistered[totalUsers[i]] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":10617:10668  userRegistered[totalUsers[i]].receiveFromOwneerShip */\n      0x04\n      add\n        /* \"DripWarrior/poolContract.sol\":10617:10686  userRegistered[totalUsers[i]].receiveFromOwneerShip += eachSendAmount */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract.sol\":10672:10686  eachSendAmount */\n      dup4\n      swap3\n        /* \"DripWarrior/poolContract.sol\":10617:10646  userRegistered[totalUsers[i]] */\n      swap1\n        /* \"DripWarrior/poolContract.sol\":10617:10686  userRegistered[totalUsers[i]].receiveFromOwneerShip += eachSendAmount */\n      tag_550\n      swap1\n        /* \"DripWarrior/poolContract.sol\":10672:10686  eachSendAmount */\n      dup5\n      swap1\n        /* \"DripWarrior/poolContract.sol\":10617:10686  userRegistered[totalUsers[i]].receiveFromOwneerShip += eachSendAmount */\n      tag_320\n      jump\t// in\n    tag_550:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"DripWarrior/poolContract.sol\":10721:10744  uint256 totalSendAmount */\n      0x00\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":10747:10782  eachSendAmount + perPersonFromTPool */\n      tag_551\n        /* \"DripWarrior/poolContract.sol\":10764:10782  perPersonFromTPool */\n      dup7\n        /* \"DripWarrior/poolContract.sol\":10747:10761  eachSendAmount */\n      dup4\n        /* \"DripWarrior/poolContract.sol\":10747:10782  eachSendAmount + perPersonFromTPool */\n      tag_320\n      jump\t// in\n    tag_551:\n        /* \"DripWarrior/poolContract.sol\":10800:10829  userRegistered[totalUsers[i]] */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":10815:10828  totalUsers[i] */\n      dup6\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":10815:10825  totalUsers */\n      0x13\n        /* \"DripWarrior/poolContract.sol\":10815:10828  totalUsers[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"DripWarrior/poolContract.sol\":10800:10829  userRegistered[totalUsers[i]] */\n      dup4\n      mstore\n        /* \"DripWarrior/poolContract.sol\":10800:10814  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract.sol\":10800:10829  userRegistered[totalUsers[i]] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":10815:10828  totalUsers[i] */\n      0x01\n        /* \"DripWarrior/poolContract.sol\":10800:10844  userRegistered[totalUsers[i]].receivedAmount */\n      add\n        /* \"DripWarrior/poolContract.sol\":10800:10863  userRegistered[totalUsers[i]].receivedAmount += totalSendAmount */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract.sol\":10721:10782  uint256 totalSendAmount = eachSendAmount + perPersonFromTPool */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"DripWarrior/poolContract.sol\":10800:10844  userRegistered[totalUsers[i]].receivedAmount */\n      swap1\n      swap2\n        /* \"DripWarrior/poolContract.sol\":10800:10829  userRegistered[totalUsers[i]] */\n      swap1\n        /* \"DripWarrior/poolContract.sol\":10800:10863  userRegistered[totalUsers[i]].receivedAmount += totalSendAmount */\n      tag_552\n      swap1\n        /* \"DripWarrior/poolContract.sol\":10721:10782  uint256 totalSendAmount = eachSendAmount + perPersonFromTPool */\n      dup5\n      swap1\n        /* \"DripWarrior/poolContract.sol\":10800:10863  userRegistered[totalUsers[i]].receivedAmount += totalSendAmount */\n      tag_320\n      jump\t// in\n    tag_552:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":10890:10918  maxlimit <= remainFiftyOPool */\n      dup8\n      dup6\n      gt\n      iszero\n        /* \"DripWarrior/poolContract.sol\":10882:10949  require(maxlimit <= remainFiftyOPool, \"Amount is greater then 50%\") */\n      tag_553\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12957:12959   */\n      0x20\n        /* \"DripWarrior/poolContract.sol\":10882:10949  require(maxlimit <= remainFiftyOPool, \"Amount is greater then 50%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12939:12960   */\n      mstore\n        /* \"#utility.yul\":12996:12998   */\n      0x1a\n        /* \"#utility.yul\":12976:12994   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12969:12999   */\n      mstore\n        /* \"#utility.yul\":13035:13063   */\n      0x416d6f756e742069732067726561746572207468656e20353025000000000000\n        /* \"#utility.yul\":13015:13033   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13008:13064   */\n      mstore\n        /* \"#utility.yul\":13081:13099   */\n      0x64\n      add\n        /* \"DripWarrior/poolContract.sol\":10882:10949  require(maxlimit <= remainFiftyOPool, \"Amount is greater then 50%\") */\n      tag_291\n        /* \"#utility.yul\":12755:13105   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":10882:10949  require(maxlimit <= remainFiftyOPool, \"Amount is greater then 50%\") */\n    tag_553:\n        /* \"DripWarrior/poolContract.sol\":10070:10964  {... */\n      pop\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":10028:10964  if(!userRegistered[totalUsers[i]].blocked){... */\n    tag_539:\n        /* \"DripWarrior/poolContract.sol\":10009:10012  i++ */\n      0x01\n      add\n        /* \"DripWarrior/poolContract.sol\":9975:10987  for(uint256 i = 0; i < noOfUsers; i++){... */\n      jump(tag_536)\n    tag_537:\n      pop\n        /* \"DripWarrior/poolContract.sol\":11031:11050  ownerShipPoolAmount */\n      sload(0x02)\n        /* \"DripWarrior/poolContract.sol\":11052:11070  treasuryPoolAmount */\n      sload(0x01)\n        /* \"DripWarrior/poolContract.sol\":11002:11071  WeeklyTransfered(msg.sender, ownerShipPoolAmount, treasuryPoolAmount) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract.sol\":11019:11029  msg.sender */\n      caller\n        /* \"#utility.yul\":9575:9626   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9657:9659   */\n      0x20\n        /* \"#utility.yul\":9642:9660   */\n      dup2\n      add\n        /* \"#utility.yul\":9635:9669   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":9685:9703   */\n      dup3\n      add\n        /* \"#utility.yul\":9678:9712   */\n      mstore\n        /* \"DripWarrior/poolContract.sol\":11002:11071  WeeklyTransfered(msg.sender, ownerShipPoolAmount, treasuryPoolAmount) */\n      0xee826440768329b0c72f81331212ee31fcdac1ea79a248d24821e40c34e58020\n      swap1\n        /* \"#utility.yul\":9563:9565   */\n      0x60\n        /* \"#utility.yul\":9548:9566   */\n      add\n        /* \"DripWarrior/poolContract.sol\":11002:11071  WeeklyTransfered(msg.sender, ownerShipPoolAmount, treasuryPoolAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DripWarrior/poolContract.sol\":9490:11079  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":9456:11079  function weeklyTransfer() public  {... */\n      jump\t// out\n        /* \"DripWarrior/poolContract.sol\":15852:16194  function setTeasueryPercentages(uint256 _projectId,uint256 _newPerccentage) external bothOwner {... */\n    tag_258:\n        /* \"DripWarrior/poolContract.sol\":17587:17595  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract.sol\":17573:17583  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17573:17595  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_558\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract.sol\":17613:17621  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract.sol\":17599:17609  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17599:17621  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract.sol\":17573:17621  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_558:\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_559\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":17654:17664  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":17643:17665  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":17570:17676  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_559:\n        /* \"DripWarrior/poolContract.sol\":15988:15989  0 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":15969:15984  _newPerccentage */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":15969:15989  _newPerccentage <= 0 */\n      gt\n        /* \"DripWarrior/poolContract.sol\":15966:16054  if(_newPerccentage <= 0){... */\n      tag_562\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":16011:16043  wrongPercentage(_newPerccentage) */\n      mload(0x40)\n      shl(0xe0, 0xcdbc6335)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":16011:16043  wrongPercentage(_newPerccentage) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":15966:16054  if(_newPerccentage <= 0){... */\n    tag_562:\n        /* \"DripWarrior/poolContract.sol\":16072:16097  tPPercentages[_projectId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":16072:16085  tPPercentages */\n      0x14\n        /* \"DripWarrior/poolContract.sol\":16072:16097  tPPercentages[_projectId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract.sol\":16072:16115  tPPercentages[_projectId] = _newPerccentage */\n      dup4\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract.sol\":16131:16187  PercentageChanged(msg.sender, tPPercentages[_projectId]) */\n      dup2\n      mload\n        /* \"DripWarrior/poolContract.sol\":16149:16159  msg.sender */\n      caller\n        /* \"#utility.yul\":10951:11002   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11018:11036   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":11011:11045   */\n      dup4\n      swap1\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_d85598d6ea860439b48fc265883a1cac638ff64dca5391fe12b46f27076e26fe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolContract.sol\":16131:16187  PercentageChanged(msg.sender, tPPercentages[_projectId]) */\n      swap2\n        /* \"#utility.yul\":10924:10942   */\n      add\n        /* \"DripWarrior/poolContract.sol\":16131:16187  PercentageChanged(msg.sender, tPPercentages[_projectId]) */\n      tag_324\n        /* \"#utility.yul\":10777:11051   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_566\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_406\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_566:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_568\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_568:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_570\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_409\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_570:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_282:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_573\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_574\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_573:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_570\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_577\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2968:3035  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_284:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_408\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_574\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n    tag_339:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4679:4683  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4688:4694  __self */\n      immutable(\"0x6740f0f1ed974f4bbc4ea3ddf8917f81b1171208e4ec27e89df857ca2a56624a\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n      tag_582\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4785:4791  __self */\n      immutable(\"0x6740f0f1ed974f4bbc4ea3ddf8917f81b1171208e4ec27e89df857ca2a56624a\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      tag_583\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n    tag_583:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n    tag_582:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n      iszero\n      tag_408\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4865:4894  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DripWarrior/poolContract.sol\":17855:17967  function _authorizeUpgrade(address newImplementation)... */\n    tag_342:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_570\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_406\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_344:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6169:6186  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6201  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6203  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_590\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_591\n      swap2\n      dup2\n      add\n      swap1\n      tag_592\n      jump\t// in\n    tag_591:\n      0x01\n    tag_590:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_593\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":375:407   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_593:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6285  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_599\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_599:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_601\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6404:6421  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6423:6427  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6403  ERC1967Utils.upgradeToAndCall */\n      tag_602\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_601:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6204:6439  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n    tag_364:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5102:5106  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5111:5117  __self */\n      immutable(\"0x6740f0f1ed974f4bbc4ea3ddf8917f81b1171208e4ec27e89df857ca2a56624a\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n      tag_408\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5195:5224  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_406:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_608\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n    tag_608:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_408\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_409:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract.sol\":9069:9448  function calculateFees(uint256 _amount, uint256 _tPPercentage) private {... */\n    tag_475:\n        /* \"DripWarrior/poolContract.sol\":9158:9178  uint256 oPPercentage */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":9181:9202  10000 - _tPPercentage */\n      tag_615\n        /* \"DripWarrior/poolContract.sol\":9189:9202  _tPPercentage */\n      dup3\n        /* \"DripWarrior/poolContract.sol\":9181:9186  10000 */\n      0x2710\n        /* \"DripWarrior/poolContract.sol\":9181:9202  10000 - _tPPercentage */\n      tag_298\n      jump\t// in\n    tag_615:\n        /* \"DripWarrior/poolContract.sol\":9158:9202  uint256 oPPercentage = 10000 - _tPPercentage */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":9212:9232  uint256 ownerShipFee */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":9235:9277  calculatePercentage(_amount, oPPercentage) */\n      tag_616\n        /* \"DripWarrior/poolContract.sol\":9255:9262  _amount */\n      dup5\n        /* \"DripWarrior/poolContract.sol\":9264:9276  oPPercentage */\n      dup4\n        /* \"DripWarrior/poolContract.sol\":9235:9254  calculatePercentage */\n      tag_545\n        /* \"DripWarrior/poolContract.sol\":9235:9277  calculatePercentage(_amount, oPPercentage) */\n      jump\t// in\n    tag_616:\n        /* \"DripWarrior/poolContract.sol\":9212:9277  uint256 ownerShipFee = calculatePercentage(_amount, oPPercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":9287:9306  uint256 treasuryFee */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":9309:9352  calculatePercentage(_amount, _tPPercentage) */\n      tag_617\n        /* \"DripWarrior/poolContract.sol\":9329:9336  _amount */\n      dup6\n        /* \"DripWarrior/poolContract.sol\":9338:9351  _tPPercentage */\n      dup6\n        /* \"DripWarrior/poolContract.sol\":9309:9328  calculatePercentage */\n      tag_545\n        /* \"DripWarrior/poolContract.sol\":9309:9352  calculatePercentage(_amount, _tPPercentage) */\n      jump\t// in\n    tag_617:\n        /* \"DripWarrior/poolContract.sol\":9287:9352  uint256 treasuryFee = calculatePercentage(_amount, _tPPercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":9386:9398  ownerShipFee */\n      dup2\n        /* \"DripWarrior/poolContract.sol\":9363:9382  ownerShipPoolAmount */\n      0x02\n      0x00\n        /* \"DripWarrior/poolContract.sol\":9363:9398  ownerShipPoolAmount += ownerShipFee */\n      dup3\n      dup3\n      sload\n      tag_618\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_618:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DripWarrior/poolContract.sol\":9430:9441  treasuryFee */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":9408:9426  treasuryPoolAmount */\n      0x01\n      0x00\n        /* \"DripWarrior/poolContract.sol\":9408:9441  treasuryPoolAmount += treasuryFee */\n      dup3\n      dup3\n      sload\n      tag_619\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_619:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":9069:9448  function calculateFees(uint256 _amount, uint256 _tPPercentage) private {... */\n      jump\t// out\n        /* \"DripWarrior/poolContract.sol\":11091:12276  function perPoolCalculation() private returns(uint256, uint256,uint256){... */\n    tag_535:\n        /* \"DripWarrior/poolContract.sol\":11137:11144  uint256 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":11146:11153  uint256 */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":11154:11161  uint256 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":11182:11206  uint256 remainFiftyOPool */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":11209:11255  calculatePercentage(ownerShipPoolAmount, 5000) */\n      tag_622\n        /* \"DripWarrior/poolContract.sol\":11229:11248  ownerShipPoolAmount */\n      sload(0x02)\n        /* \"DripWarrior/poolContract.sol\":11250:11254  5000 */\n      0x1388\n        /* \"DripWarrior/poolContract.sol\":11209:11228  calculatePercentage */\n      tag_545\n        /* \"DripWarrior/poolContract.sol\":11209:11255  calculatePercentage(ownerShipPoolAmount, 5000) */\n      jump\t// in\n    tag_622:\n        /* \"DripWarrior/poolContract.sol\":11182:11255  uint256 remainFiftyOPool = calculatePercentage(ownerShipPoolAmount, 5000) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":11266:11299  uint256 dividentPayoutOPoolAmount */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":11302:11366  calculatePercentage(remainFiftyOPool, odividentPayoutPercentage) */\n      tag_623\n        /* \"DripWarrior/poolContract.sol\":11322:11338  remainFiftyOPool */\n      dup3\n        /* \"DripWarrior/poolContract.sol\":11340:11365  odividentPayoutPercentage */\n      sload(0x05)\n        /* \"DripWarrior/poolContract.sol\":11302:11321  calculatePercentage */\n      tag_545\n        /* \"DripWarrior/poolContract.sol\":11302:11366  calculatePercentage(remainFiftyOPool, odividentPayoutPercentage) */\n      jump\t// in\n    tag_623:\n        /* \"DripWarrior/poolContract.sol\":11266:11366  uint256 dividentPayoutOPoolAmount = calculatePercentage(remainFiftyOPool, odividentPayoutPercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":11376:11412  uint256 fifteenPercenntToTPoolAmount */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":11415:11478  calculatePercentage(remainFiftyOPool, flowToTreasuryPercentage) */\n      tag_624\n        /* \"DripWarrior/poolContract.sol\":11435:11451  remainFiftyOPool */\n      dup4\n        /* \"DripWarrior/poolContract.sol\":11453:11477  flowToTreasuryPercentage */\n      sload(0x06)\n        /* \"DripWarrior/poolContract.sol\":11415:11434  calculatePercentage */\n      tag_545\n        /* \"DripWarrior/poolContract.sol\":11415:11478  calculatePercentage(remainFiftyOPool, flowToTreasuryPercentage) */\n      jump\t// in\n    tag_624:\n        /* \"DripWarrior/poolContract.sol\":11376:11478  uint256 fifteenPercenntToTPoolAmount = calculatePercentage(remainFiftyOPool, flowToTreasuryPercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":11488:11524  uint256 tenPercenntToMaintenceAmount */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":11527:11589  calculatePercentage(remainFiftyOPool, maintainceFeePercentage) */\n      tag_625\n        /* \"DripWarrior/poolContract.sol\":11547:11563  remainFiftyOPool */\n      dup5\n        /* \"DripWarrior/poolContract.sol\":11565:11588  maintainceFeePercentage */\n      sload(0x07)\n        /* \"DripWarrior/poolContract.sol\":11527:11546  calculatePercentage */\n      tag_545\n        /* \"DripWarrior/poolContract.sol\":11527:11589  calculatePercentage(remainFiftyOPool, maintainceFeePercentage) */\n      jump\t// in\n    tag_625:\n        /* \"DripWarrior/poolContract.sol\":11488:11589  uint256 tenPercenntToMaintenceAmount = calculatePercentage(remainFiftyOPool, maintainceFeePercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":11599:11629  uint256 remainFiftyTPoolAmount */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":11632:11698  calculatePercentage(treasuryPoolAmount, tdividentPayoutPercentage) */\n      tag_626\n        /* \"DripWarrior/poolContract.sol\":11652:11670  treasuryPoolAmount */\n      sload(0x01)\n        /* \"DripWarrior/poolContract.sol\":11672:11697  tdividentPayoutPercentage */\n      sload(0x04)\n        /* \"DripWarrior/poolContract.sol\":11632:11651  calculatePercentage */\n      tag_545\n        /* \"DripWarrior/poolContract.sol\":11632:11698  calculatePercentage(treasuryPoolAmount, tdividentPayoutPercentage) */\n      jump\t// in\n    tag_626:\n        /* \"DripWarrior/poolContract.sol\":11599:11698  uint256 remainFiftyTPoolAmount = calculatePercentage(treasuryPoolAmount, tdividentPayoutPercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":11725:11726  0 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":11712:11721  noOfUsers */\n      sload(0x08)\n        /* \"DripWarrior/poolContract.sol\":11712:11726  noOfUsers <= 0 */\n      gt\n        /* \"DripWarrior/poolContract.sol\":11709:11779  if(noOfUsers <= 0){... */\n      tag_627\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":11758:11767  noOfUsers */\n      sload(0x08)\n        /* \"DripWarrior/poolContract.sol\":11748:11768  zeroUsers(noOfUsers) */\n      mload(0x40)\n      shl(0xe0, 0x7ca8d0db)\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":11709:11779  if(noOfUsers <= 0){... */\n    tag_627:\n        /* \"DripWarrior/poolContract.sol\":11797:11823  uint256 perPersonFromTPool */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":11849:11858  noOfUsers */\n      sload(0x08)\n        /* \"DripWarrior/poolContract.sol\":11826:11848  remainFiftyTPoolAmount */\n      dup3\n        /* \"DripWarrior/poolContract.sol\":11826:11858  remainFiftyTPoolAmount/noOfUsers */\n      tag_629\n      swap2\n      swap1\n      tag_543\n      jump\t// in\n    tag_629:\n        /* \"DripWarrior/poolContract.sol\":11797:11858  uint256 perPersonFromTPool = remainFiftyTPoolAmount/noOfUsers */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":11901:11960  fifteenPercenntToTPoolAmount + tenPercenntToMaintenceAmount */\n      tag_630\n        /* \"DripWarrior/poolContract.sol\":11932:11960  tenPercenntToMaintenceAmount */\n      dup4\n        /* \"DripWarrior/poolContract.sol\":11901:11929  fifteenPercenntToTPoolAmount */\n      dup6\n        /* \"DripWarrior/poolContract.sol\":11901:11960  fifteenPercenntToTPoolAmount + tenPercenntToMaintenceAmount */\n      tag_320\n      jump\t// in\n    tag_630:\n        /* \"DripWarrior/poolContract.sol\":11877:11896  ownerShipPoolAmount */\n      0x02\n      0x00\n        /* \"DripWarrior/poolContract.sol\":11877:11961  ownerShipPoolAmount -= (fifteenPercenntToTPoolAmount + tenPercenntToMaintenceAmount) */\n      dup3\n      dup3\n      sload\n      tag_631\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_631:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DripWarrior/poolContract.sol\":11993:12021  fifteenPercenntToTPoolAmount */\n      dup4\n        /* \"DripWarrior/poolContract.sol\":11971:11989  treasuryPoolAmount */\n      0x01\n      0x00\n        /* \"DripWarrior/poolContract.sol\":11971:12021  treasuryPoolAmount += fifteenPercenntToTPoolAmount */\n      dup3\n      dup3\n      sload\n      tag_632\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_632:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":12032:12044  bool success */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":12047:12056  usdcToken */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract.sol\":12066:12081  multisigAddress */\n      sload(0x09)\n        /* \"DripWarrior/poolContract.sol\":12047:12112  usdcToken.transfer(multisigAddress, tenPercenntToMaintenceAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract.sol\":12066:12081  multisigAddress */\n      swap2\n      dup3\n      and\n        /* \"DripWarrior/poolContract.sol\":12047:12112  usdcToken.transfer(multisigAddress, tenPercenntToMaintenceAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10951:11002   */\n      mstore\n        /* \"#utility.yul\":11018:11036   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":11011:11045   */\n      dup8\n      swap1\n      mstore\n        /* \"DripWarrior/poolContract.sol\":12047:12056  usdcToken */\n      swap2\n      and\n      swap1\n        /* \"DripWarrior/poolContract.sol\":12047:12065  usdcToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":10924:10942   */\n      0x44\n      add\n        /* \"DripWarrior/poolContract.sol\":12047:12112  usdcToken.transfer(multisigAddress, tenPercenntToMaintenceAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_635\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_635:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_636\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_636:\n        /* \"DripWarrior/poolContract.sol\":12032:12112  bool success = usdcToken.transfer(multisigAddress, tenPercenntToMaintenceAmount) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract.sol\":12126:12133  success */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":12122:12189  if(!success){... */\n      tag_637\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":12155:12178  transferFailed(success) */\n      mload(0x40)\n      shl(0xe0, 0xd85d3cef)\n      dup2\n      mstore\n        /* \"#utility.yul\":7698:7712   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"DripWarrior/poolContract.sol\":12155:12178  transferFailed(success) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7673:7714   */\n      mstore\n        /* \"#utility.yul\":7646:7664   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":12155:12178  transferFailed(success) */\n      tag_291\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":12122:12189  if(!success){... */\n    tag_637:\n      pop\n        /* \"DripWarrior/poolContract.sol\":12207:12223  remainFiftyOPool */\n      swap5\n      swap9\n        /* \"DripWarrior/poolContract.sol\":12224:12249  dividentPayoutOPoolAmount */\n      swap4\n      swap8\n      pop\n        /* \"DripWarrior/poolContract.sol\":12250:12268  perPersonFromTPool */\n      swap4\n      swap6\n      pop\n        /* \"DripWarrior/poolContract.sol\":11091:12276  function perPoolCalculation() private returns(uint256, uint256,uint256){... */\n      swap2\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract.sol\":14171:14628  function calculatePercentage(uint256 _totalStakeAmount,uint256 percentageNumber) private pure returns(uint256) {... */\n    tag_545:\n        /* \"DripWarrior/poolContract.sol\":14273:14280  uint256 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":14325:14326  0 */\n      dup1\n        /* \"DripWarrior/poolContract.sol\":14304:14321  _totalStakeAmount */\n      dup4\n        /* \"DripWarrior/poolContract.sol\":14304:14326  _totalStakeAmount <= 0 */\n      gt\n        /* \"DripWarrior/poolContract.sol\":14301:14399  if(_totalStakeAmount <= 0){... */\n      tag_640\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":14348:14388  wrongPercentageAmount(_totalStakeAmount) */\n      mload(0x40)\n      shl(0xe0, 0x9b7220af)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":14348:14388  wrongPercentageAmount(_totalStakeAmount) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":14301:14399  if(_totalStakeAmount <= 0){... */\n    tag_640:\n        /* \"DripWarrior/poolContract.sol\":14431:14432  0 */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":14411:14427  percentageNumber */\n      dup3\n        /* \"DripWarrior/poolContract.sol\":14411:14432  percentageNumber <= 0 */\n      gt\n        /* \"DripWarrior/poolContract.sol\":14408:14499  if(percentageNumber <= 0){... */\n      tag_642\n      jumpi\n        /* \"DripWarrior/poolContract.sol\":14454:14488  wrongPerceentage(percentageNumber) */\n      mload(0x40)\n      shl(0xe3, 0x0b015aa7)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract.sol\":14454:14488  wrongPerceentage(percentageNumber) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract.sol\":14408:14499  if(percentageNumber <= 0){... */\n    tag_642:\n        /* \"DripWarrior/poolContract.sol\":14516:14534  uint256 serviceFee */\n      0x00\n        /* \"DripWarrior/poolContract.sol\":14579:14584  10000 */\n      0x2710\n        /* \"DripWarrior/poolContract.sol\":14537:14575  _totalStakeAmount * (percentageNumber) */\n      tag_644\n        /* \"DripWarrior/poolContract.sol\":14558:14574  percentageNumber */\n      dup5\n        /* \"DripWarrior/poolContract.sol\":14537:14554  _totalStakeAmount */\n      dup7\n        /* \"DripWarrior/poolContract.sol\":14537:14575  _totalStakeAmount * (percentageNumber) */\n      tag_541\n      jump\t// in\n    tag_644:\n        /* \"DripWarrior/poolContract.sol\":14537:14585  _totalStakeAmount * (percentageNumber) / (10000) */\n      tag_645\n      swap2\n      swap1\n      tag_543\n      jump\t// in\n    tag_645:\n        /* \"DripWarrior/poolContract.sol\":14516:14585  uint256 serviceFee = _totalStakeAmount * (percentageNumber) / (10000) */\n      swap2\n      pop\n      pop\n        /* \"DripWarrior/poolContract.sol\":14171:14628  function calculatePercentage(uint256 _totalStakeAmount,uint256 percentageNumber) private pure returns(uint256) {... */\n    tag_639:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_574:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_408\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_577:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_566\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_574\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_602:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      tag_660\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n      tag_661\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_660:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      tag_662\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_601\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n      tag_664\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_662:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      tag_334\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n      tag_667\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n    tag_661:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_673\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":375:407   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_673:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_664:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      mload(0x40)\n      tag_677\n      swap2\n      swap1\n      tag_678\n      jump\t// in\n    tag_677:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_681\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_680)\n    tag_681:\n      0x60\n      swap2\n      pop\n    tag_680:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_682\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n      tag_683\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_682:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n    tag_667:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      tag_408\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_683:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_687\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_688\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_689\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_688:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_690)\n    tag_687:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_691\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_691:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_692\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":375:407   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_692:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_690:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_689:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_695\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_695:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":419:592   */\n    tag_697:\n        /* \"#utility.yul\":487:507   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":536:567   */\n      dup2\n      and\n        /* \"#utility.yul\":526:568   */\n      dup2\n      eq\n        /* \"#utility.yul\":516:586   */\n      tag_709\n      jumpi\n        /* \"#utility.yul\":582:583   */\n      0x00\n        /* \"#utility.yul\":579:580   */\n      dup1\n        /* \"#utility.yul\":572:584   */\n      revert\n        /* \"#utility.yul\":516:586   */\n    tag_709:\n        /* \"#utility.yul\":419:592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":597:1081   */\n    tag_72:\n        /* \"#utility.yul\":692:698   */\n      0x00\n        /* \"#utility.yul\":700:706   */\n      dup1\n        /* \"#utility.yul\":708:714   */\n      0x00\n        /* \"#utility.yul\":716:722   */\n      dup1\n        /* \"#utility.yul\":724:730   */\n      0x00\n        /* \"#utility.yul\":777:780   */\n      0xa0\n        /* \"#utility.yul\":765:774   */\n      dup7\n        /* \"#utility.yul\":756:763   */\n      dup9\n        /* \"#utility.yul\":752:775   */\n      sub\n        /* \"#utility.yul\":748:781   */\n      slt\n        /* \"#utility.yul\":745:798   */\n      iszero\n      tag_711\n      jumpi\n        /* \"#utility.yul\":794:795   */\n      0x00\n        /* \"#utility.yul\":791:792   */\n      dup1\n        /* \"#utility.yul\":784:796   */\n      revert\n        /* \"#utility.yul\":745:798   */\n    tag_711:\n        /* \"#utility.yul\":817:846   */\n      tag_712\n        /* \"#utility.yul\":836:845   */\n      dup7\n        /* \"#utility.yul\":817:846   */\n      tag_697\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":807:846   */\n      swap5\n      pop\n        /* \"#utility.yul\":865:903   */\n      tag_713\n        /* \"#utility.yul\":899:901   */\n      0x20\n        /* \"#utility.yul\":888:897   */\n      dup8\n        /* \"#utility.yul\":884:902   */\n      add\n        /* \"#utility.yul\":865:903   */\n      tag_697\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":855:903   */\n      swap4\n      pop\n        /* \"#utility.yul\":922:960   */\n      tag_714\n        /* \"#utility.yul\":956:958   */\n      0x40\n        /* \"#utility.yul\":945:954   */\n      dup8\n        /* \"#utility.yul\":941:959   */\n      add\n        /* \"#utility.yul\":922:960   */\n      tag_697\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":912:960   */\n      swap3\n      pop\n        /* \"#utility.yul\":979:1017   */\n      tag_715\n        /* \"#utility.yul\":1013:1015   */\n      0x60\n        /* \"#utility.yul\":1002:1011   */\n      dup8\n        /* \"#utility.yul\":998:1016   */\n      add\n        /* \"#utility.yul\":979:1017   */\n      tag_697\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":969:1017   */\n      swap2\n      pop\n        /* \"#utility.yul\":1036:1075   */\n      tag_716\n        /* \"#utility.yul\":1070:1073   */\n      0x80\n        /* \"#utility.yul\":1059:1068   */\n      dup8\n        /* \"#utility.yul\":1055:1074   */\n      add\n        /* \"#utility.yul\":1036:1075   */\n      tag_697\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":1026:1075   */\n      swap1\n      pop\n        /* \"#utility.yul\":597:1081   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1086:1312   */\n    tag_81:\n        /* \"#utility.yul\":1145:1151   */\n      0x00\n        /* \"#utility.yul\":1198:1200   */\n      0x20\n        /* \"#utility.yul\":1186:1195   */\n      dup3\n        /* \"#utility.yul\":1177:1184   */\n      dup5\n        /* \"#utility.yul\":1173:1196   */\n      sub\n        /* \"#utility.yul\":1169:1201   */\n      slt\n        /* \"#utility.yul\":1166:1218   */\n      iszero\n      tag_718\n      jumpi\n        /* \"#utility.yul\":1214:1215   */\n      0x00\n        /* \"#utility.yul\":1211:1212   */\n      dup1\n        /* \"#utility.yul\":1204:1216   */\n      revert\n        /* \"#utility.yul\":1166:1218   */\n    tag_718:\n      pop\n        /* \"#utility.yul\":1259:1282   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1086:1312   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1525:1652   */\n    tag_698:\n        /* \"#utility.yul\":1586:1596   */\n      0x4e487b71\n        /* \"#utility.yul\":1581:1584   */\n      0xe0\n        /* \"#utility.yul\":1577:1597   */\n      shl\n        /* \"#utility.yul\":1574:1575   */\n      0x00\n        /* \"#utility.yul\":1567:1598   */\n      mstore\n        /* \"#utility.yul\":1617:1621   */\n      0x41\n        /* \"#utility.yul\":1614:1615   */\n      0x04\n        /* \"#utility.yul\":1607:1622   */\n      mstore\n        /* \"#utility.yul\":1641:1645   */\n      0x24\n        /* \"#utility.yul\":1638:1639   */\n      0x00\n        /* \"#utility.yul\":1631:1646   */\n      revert\n        /* \"#utility.yul\":1657:1932   */\n    tag_699:\n        /* \"#utility.yul\":1728:1730   */\n      0x40\n        /* \"#utility.yul\":1722:1731   */\n      mload\n        /* \"#utility.yul\":1793:1795   */\n      0x1f\n        /* \"#utility.yul\":1774:1787   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1770:1797   */\n      and\n        /* \"#utility.yul\":1758:1798   */\n      dup2\n      add\n        /* \"#utility.yul\":1828:1846   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1813:1847   */\n      dup2\n      gt\n        /* \"#utility.yul\":1849:1871   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1810:1872   */\n      or\n        /* \"#utility.yul\":1807:1895   */\n      iszero\n      tag_723\n      jumpi\n        /* \"#utility.yul\":1875:1893   */\n      tag_723\n      tag_698\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":1911:1913   */\n      0x40\n        /* \"#utility.yul\":1904:1926   */\n      mstore\n        /* \"#utility.yul\":1657:1932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1937:2120   */\n    tag_700:\n        /* \"#utility.yul\":1997:2001   */\n      0x00\n        /* \"#utility.yul\":2030:2048   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2022:2028   */\n      dup3\n        /* \"#utility.yul\":2019:2049   */\n      gt\n        /* \"#utility.yul\":2016:2072   */\n      iszero\n      tag_726\n      jumpi\n        /* \"#utility.yul\":2052:2070   */\n      tag_726\n      tag_698\n      jump\t// in\n    tag_726:\n      pop\n        /* \"#utility.yul\":2097:2098   */\n      0x05\n        /* \"#utility.yul\":2093:2107   */\n      shl\n        /* \"#utility.yul\":2109:2113   */\n      0x20\n        /* \"#utility.yul\":2089:2114   */\n      add\n      swap1\n        /* \"#utility.yul\":1937:2120   */\n      jump\t// out\n        /* \"#utility.yul\":2125:2800   */\n    tag_701:\n        /* \"#utility.yul\":2179:2184   */\n      0x00\n        /* \"#utility.yul\":2232:2235   */\n      dup3\n        /* \"#utility.yul\":2225:2229   */\n      0x1f\n        /* \"#utility.yul\":2217:2223   */\n      dup4\n        /* \"#utility.yul\":2213:2230   */\n      add\n        /* \"#utility.yul\":2209:2236   */\n      slt\n        /* \"#utility.yul\":2199:2254   */\n      tag_728\n      jumpi\n        /* \"#utility.yul\":2250:2251   */\n      0x00\n        /* \"#utility.yul\":2247:2248   */\n      dup1\n        /* \"#utility.yul\":2240:2252   */\n      revert\n        /* \"#utility.yul\":2199:2254   */\n    tag_728:\n        /* \"#utility.yul\":2290:2296   */\n      dup2\n        /* \"#utility.yul\":2277:2297   */\n      calldataload\n        /* \"#utility.yul\":2317:2381   */\n      tag_729\n        /* \"#utility.yul\":2333:2380   */\n      tag_730\n        /* \"#utility.yul\":2373:2379   */\n      dup3\n        /* \"#utility.yul\":2333:2380   */\n      tag_700\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":2317:2381   */\n      tag_699\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":2405:2408   */\n      dup1\n        /* \"#utility.yul\":2429:2435   */\n      dup3\n        /* \"#utility.yul\":2424:2427   */\n      dup3\n        /* \"#utility.yul\":2417:2436   */\n      mstore\n        /* \"#utility.yul\":2461:2465   */\n      0x20\n        /* \"#utility.yul\":2456:2459   */\n      dup3\n        /* \"#utility.yul\":2452:2466   */\n      add\n        /* \"#utility.yul\":2445:2466   */\n      swap2\n      pop\n        /* \"#utility.yul\":2522:2526   */\n      0x20\n        /* \"#utility.yul\":2512:2518   */\n      dup4\n        /* \"#utility.yul\":2509:2510   */\n      0x05\n        /* \"#utility.yul\":2505:2519   */\n      shl\n        /* \"#utility.yul\":2497:2503   */\n      dup7\n        /* \"#utility.yul\":2493:2520   */\n      add\n        /* \"#utility.yul\":2489:2527   */\n      add\n        /* \"#utility.yul\":2475:2527   */\n      swap3\n      pop\n        /* \"#utility.yul\":2550:2553   */\n      dup6\n        /* \"#utility.yul\":2542:2548   */\n      dup4\n        /* \"#utility.yul\":2539:2554   */\n      gt\n        /* \"#utility.yul\":2536:2571   */\n      iszero\n      tag_731\n      jumpi\n        /* \"#utility.yul\":2567:2568   */\n      0x00\n        /* \"#utility.yul\":2564:2565   */\n      dup1\n        /* \"#utility.yul\":2557:2569   */\n      revert\n        /* \"#utility.yul\":2536:2571   */\n    tag_731:\n        /* \"#utility.yul\":2603:2607   */\n      0x20\n        /* \"#utility.yul\":2595:2601   */\n      dup6\n        /* \"#utility.yul\":2591:2608   */\n      add\n        /* \"#utility.yul\":2617:2769   */\n    tag_732:\n        /* \"#utility.yul\":2633:2639   */\n      dup4\n        /* \"#utility.yul\":2628:2631   */\n      dup2\n        /* \"#utility.yul\":2625:2640   */\n      lt\n        /* \"#utility.yul\":2617:2769   */\n      iszero\n      tag_734\n      jumpi\n        /* \"#utility.yul\":2701:2724   */\n      tag_735\n        /* \"#utility.yul\":2720:2723   */\n      dup2\n        /* \"#utility.yul\":2701:2724   */\n      tag_697\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":2689:2725   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2754:2758   */\n      0x20\n        /* \"#utility.yul\":2745:2759   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":2650:2664   */\n      add\n        /* \"#utility.yul\":2617:2769   */\n      jump(tag_732)\n    tag_734:\n      pop\n        /* \"#utility.yul\":2787:2794   */\n      swap6\n        /* \"#utility.yul\":2125:2800   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2805:3999   */\n    tag_99:\n        /* \"#utility.yul\":2923:2929   */\n      0x00\n        /* \"#utility.yul\":2931:2937   */\n      dup1\n        /* \"#utility.yul\":2984:2986   */\n      0x40\n        /* \"#utility.yul\":2972:2981   */\n      dup4\n        /* \"#utility.yul\":2963:2970   */\n      dup6\n        /* \"#utility.yul\":2959:2982   */\n      sub\n        /* \"#utility.yul\":2955:2987   */\n      slt\n        /* \"#utility.yul\":2952:3004   */\n      iszero\n      tag_737\n      jumpi\n        /* \"#utility.yul\":3000:3001   */\n      0x00\n        /* \"#utility.yul\":2997:2998   */\n      dup1\n        /* \"#utility.yul\":2990:3002   */\n      revert\n        /* \"#utility.yul\":2952:3004   */\n    tag_737:\n        /* \"#utility.yul\":3040:3049   */\n      dup3\n        /* \"#utility.yul\":3027:3050   */\n      calldataload\n        /* \"#utility.yul\":3073:3091   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3065:3071   */\n      dup2\n        /* \"#utility.yul\":3062:3092   */\n      gt\n        /* \"#utility.yul\":3059:3109   */\n      iszero\n      tag_738\n      jumpi\n        /* \"#utility.yul\":3105:3106   */\n      0x00\n        /* \"#utility.yul\":3102:3103   */\n      dup1\n        /* \"#utility.yul\":3095:3107   */\n      revert\n        /* \"#utility.yul\":3059:3109   */\n    tag_738:\n        /* \"#utility.yul\":3128:3150   */\n      dup4\n      add\n        /* \"#utility.yul\":3181:3185   */\n      0x1f\n        /* \"#utility.yul\":3173:3186   */\n      dup2\n      add\n        /* \"#utility.yul\":3169:3196   */\n      dup6\n      sgt\n        /* \"#utility.yul\":3159:3214   */\n      tag_739\n      jumpi\n        /* \"#utility.yul\":3210:3211   */\n      0x00\n        /* \"#utility.yul\":3207:3208   */\n      dup1\n        /* \"#utility.yul\":3200:3212   */\n      revert\n        /* \"#utility.yul\":3159:3214   */\n    tag_739:\n        /* \"#utility.yul\":3250:3252   */\n      dup1\n        /* \"#utility.yul\":3237:3253   */\n      calldataload\n        /* \"#utility.yul\":3273:3337   */\n      tag_740\n        /* \"#utility.yul\":3289:3336   */\n      tag_730\n        /* \"#utility.yul\":3329:3335   */\n      dup3\n        /* \"#utility.yul\":3289:3336   */\n      tag_700\n      jump\t// in\n        /* \"#utility.yul\":3273:3337   */\n    tag_740:\n        /* \"#utility.yul\":3359:3362   */\n      dup1\n        /* \"#utility.yul\":3383:3389   */\n      dup3\n        /* \"#utility.yul\":3378:3381   */\n      dup3\n        /* \"#utility.yul\":3371:3390   */\n      mstore\n        /* \"#utility.yul\":3415:3419   */\n      0x20\n        /* \"#utility.yul\":3410:3413   */\n      dup3\n        /* \"#utility.yul\":3406:3420   */\n      add\n        /* \"#utility.yul\":3399:3420   */\n      swap2\n      pop\n        /* \"#utility.yul\":3472:3476   */\n      0x20\n        /* \"#utility.yul\":3462:3468   */\n      dup4\n        /* \"#utility.yul\":3459:3460   */\n      0x05\n        /* \"#utility.yul\":3455:3469   */\n      shl\n        /* \"#utility.yul\":3451:3453   */\n      dup6\n        /* \"#utility.yul\":3447:3470   */\n      add\n        /* \"#utility.yul\":3443:3477   */\n      add\n        /* \"#utility.yul\":3429:3477   */\n      swap3\n      pop\n        /* \"#utility.yul\":3500:3507   */\n      dup8\n        /* \"#utility.yul\":3492:3498   */\n      dup4\n        /* \"#utility.yul\":3489:3508   */\n      gt\n        /* \"#utility.yul\":3486:3525   */\n      iszero\n      tag_742\n      jumpi\n        /* \"#utility.yul\":3521:3522   */\n      0x00\n        /* \"#utility.yul\":3518:3519   */\n      dup1\n        /* \"#utility.yul\":3511:3523   */\n      revert\n        /* \"#utility.yul\":3486:3525   */\n    tag_742:\n        /* \"#utility.yul\":3553:3557   */\n      0x20\n        /* \"#utility.yul\":3549:3551   */\n      dup5\n        /* \"#utility.yul\":3545:3558   */\n      add\n        /* \"#utility.yul\":3534:3558   */\n      swap4\n      pop\n        /* \"#utility.yul\":3567:3767   */\n    tag_743:\n        /* \"#utility.yul\":3583:3589   */\n      dup3\n        /* \"#utility.yul\":3578:3581   */\n      dup5\n        /* \"#utility.yul\":3575:3590   */\n      lt\n        /* \"#utility.yul\":3567:3767   */\n      iszero\n      tag_745\n      jumpi\n        /* \"#utility.yul\":3675:3692   */\n      dup4\n      calldataload\n        /* \"#utility.yul\":3705:3723   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3752:3756   */\n      0x20\n        /* \"#utility.yul\":3600:3614   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":3743:3757   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":3567:3767   */\n      jump(tag_743)\n    tag_745:\n        /* \"#utility.yul\":3786:3791   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3844:3848   */\n      0x20\n        /* \"#utility.yul\":3829:3849   */\n      dup4\n      add\n        /* \"#utility.yul\":3816:3850   */\n      calldataload\n        /* \"#utility.yul\":3875:3893   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3862:3894   */\n      dup2\n      gt\n        /* \"#utility.yul\":3859:3911   */\n      iszero\n      tag_746\n      jumpi\n        /* \"#utility.yul\":3907:3908   */\n      0x00\n        /* \"#utility.yul\":3904:3905   */\n      dup1\n        /* \"#utility.yul\":3897:3909   */\n      revert\n        /* \"#utility.yul\":3859:3911   */\n    tag_746:\n        /* \"#utility.yul\":3930:3993   */\n      tag_747\n        /* \"#utility.yul\":3985:3992   */\n      dup6\n        /* \"#utility.yul\":3974:3982   */\n      dup3\n        /* \"#utility.yul\":3963:3972   */\n      dup7\n        /* \"#utility.yul\":3959:3983   */\n      add\n        /* \"#utility.yul\":3930:3993   */\n      tag_701\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":3920:3993   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2805:3999   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4004:4590   */\n    tag_120:\n        /* \"#utility.yul\":4074:4080   */\n      0x00\n        /* \"#utility.yul\":4082:4088   */\n      dup1\n        /* \"#utility.yul\":4135:4137   */\n      0x20\n        /* \"#utility.yul\":4123:4132   */\n      dup4\n        /* \"#utility.yul\":4114:4121   */\n      dup6\n        /* \"#utility.yul\":4110:4133   */\n      sub\n        /* \"#utility.yul\":4106:4138   */\n      slt\n        /* \"#utility.yul\":4103:4155   */\n      iszero\n      tag_749\n      jumpi\n        /* \"#utility.yul\":4151:4152   */\n      0x00\n        /* \"#utility.yul\":4148:4149   */\n      dup1\n        /* \"#utility.yul\":4141:4153   */\n      revert\n        /* \"#utility.yul\":4103:4155   */\n    tag_749:\n        /* \"#utility.yul\":4191:4200   */\n      dup3\n        /* \"#utility.yul\":4178:4201   */\n      calldataload\n        /* \"#utility.yul\":4224:4242   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4216:4222   */\n      dup2\n        /* \"#utility.yul\":4213:4243   */\n      gt\n        /* \"#utility.yul\":4210:4260   */\n      iszero\n      tag_750\n      jumpi\n        /* \"#utility.yul\":4256:4257   */\n      0x00\n        /* \"#utility.yul\":4253:4254   */\n      dup1\n        /* \"#utility.yul\":4246:4258   */\n      revert\n        /* \"#utility.yul\":4210:4260   */\n    tag_750:\n        /* \"#utility.yul\":4279:4301   */\n      dup4\n      add\n        /* \"#utility.yul\":4332:4336   */\n      0x1f\n        /* \"#utility.yul\":4324:4337   */\n      dup2\n      add\n        /* \"#utility.yul\":4320:4347   */\n      dup6\n      sgt\n        /* \"#utility.yul\":4310:4365   */\n      tag_751\n      jumpi\n        /* \"#utility.yul\":4361:4362   */\n      0x00\n        /* \"#utility.yul\":4358:4359   */\n      dup1\n        /* \"#utility.yul\":4351:4363   */\n      revert\n        /* \"#utility.yul\":4310:4365   */\n    tag_751:\n        /* \"#utility.yul\":4401:4403   */\n      dup1\n        /* \"#utility.yul\":4388:4404   */\n      calldataload\n        /* \"#utility.yul\":4427:4445   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4419:4425   */\n      dup2\n        /* \"#utility.yul\":4416:4446   */\n      gt\n        /* \"#utility.yul\":4413:4463   */\n      iszero\n      tag_752\n      jumpi\n        /* \"#utility.yul\":4459:4460   */\n      0x00\n        /* \"#utility.yul\":4456:4457   */\n      dup1\n        /* \"#utility.yul\":4449:4461   */\n      revert\n        /* \"#utility.yul\":4413:4463   */\n    tag_752:\n        /* \"#utility.yul\":4504:4511   */\n      dup6\n        /* \"#utility.yul\":4499:4501   */\n      0x20\n        /* \"#utility.yul\":4490:4496   */\n      dup3\n        /* \"#utility.yul\":4486:4488   */\n      dup5\n        /* \"#utility.yul\":4482:4497   */\n      add\n        /* \"#utility.yul\":4478:4502   */\n      add\n        /* \"#utility.yul\":4475:4512   */\n      gt\n        /* \"#utility.yul\":4472:4529   */\n      iszero\n      tag_753\n      jumpi\n        /* \"#utility.yul\":4525:4526   */\n      0x00\n        /* \"#utility.yul\":4522:4523   */\n      dup1\n        /* \"#utility.yul\":4515:4527   */\n      revert\n        /* \"#utility.yul\":4472:4529   */\n    tag_753:\n        /* \"#utility.yul\":4556:4558   */\n      0x20\n        /* \"#utility.yul\":4548:4559   */\n      swap2\n      swap1\n      swap2\n      add\n      swap6\n        /* \"#utility.yul\":4578:4584   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":4004:4590   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4595:5434   */\n    tag_124:\n        /* \"#utility.yul\":4672:4678   */\n      0x00\n        /* \"#utility.yul\":4680:4686   */\n      dup1\n        /* \"#utility.yul\":4733:4735   */\n      0x40\n        /* \"#utility.yul\":4721:4730   */\n      dup4\n        /* \"#utility.yul\":4712:4719   */\n      dup6\n        /* \"#utility.yul\":4708:4731   */\n      sub\n        /* \"#utility.yul\":4704:4736   */\n      slt\n        /* \"#utility.yul\":4701:4753   */\n      iszero\n      tag_755\n      jumpi\n        /* \"#utility.yul\":4749:4750   */\n      0x00\n        /* \"#utility.yul\":4746:4747   */\n      dup1\n        /* \"#utility.yul\":4739:4751   */\n      revert\n        /* \"#utility.yul\":4701:4753   */\n    tag_755:\n        /* \"#utility.yul\":4772:4801   */\n      tag_756\n        /* \"#utility.yul\":4791:4800   */\n      dup4\n        /* \"#utility.yul\":4772:4801   */\n      tag_697\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":4762:4801   */\n      swap2\n      pop\n        /* \"#utility.yul\":4852:4854   */\n      0x20\n        /* \"#utility.yul\":4841:4850   */\n      dup4\n        /* \"#utility.yul\":4837:4855   */\n      add\n        /* \"#utility.yul\":4824:4856   */\n      calldataload\n        /* \"#utility.yul\":4879:4897   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4871:4877   */\n      dup2\n        /* \"#utility.yul\":4868:4898   */\n      gt\n        /* \"#utility.yul\":4865:4915   */\n      iszero\n      tag_757\n      jumpi\n        /* \"#utility.yul\":4911:4912   */\n      0x00\n        /* \"#utility.yul\":4908:4909   */\n      dup1\n        /* \"#utility.yul\":4901:4913   */\n      revert\n        /* \"#utility.yul\":4865:4915   */\n    tag_757:\n        /* \"#utility.yul\":4934:4956   */\n      dup4\n      add\n        /* \"#utility.yul\":4987:4991   */\n      0x1f\n        /* \"#utility.yul\":4979:4992   */\n      dup2\n      add\n        /* \"#utility.yul\":4975:5002   */\n      dup6\n      sgt\n        /* \"#utility.yul\":4965:5020   */\n      tag_758\n      jumpi\n        /* \"#utility.yul\":5016:5017   */\n      0x00\n        /* \"#utility.yul\":5013:5014   */\n      dup1\n        /* \"#utility.yul\":5006:5018   */\n      revert\n        /* \"#utility.yul\":4965:5020   */\n    tag_758:\n        /* \"#utility.yul\":5056:5058   */\n      dup1\n        /* \"#utility.yul\":5043:5059   */\n      calldataload\n        /* \"#utility.yul\":5082:5100   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5074:5080   */\n      dup2\n        /* \"#utility.yul\":5071:5101   */\n      gt\n        /* \"#utility.yul\":5068:5124   */\n      iszero\n      tag_760\n      jumpi\n        /* \"#utility.yul\":5104:5122   */\n      tag_760\n      tag_698\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":5146:5203   */\n      tag_761\n        /* \"#utility.yul\":5193:5195   */\n      0x1f\n        /* \"#utility.yul\":5170:5187   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5166:5197   */\n      and\n        /* \"#utility.yul\":5199:5201   */\n      0x20\n        /* \"#utility.yul\":5162:5202   */\n      add\n        /* \"#utility.yul\":5146:5203   */\n      tag_699\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":5226:5232   */\n      dup2\n        /* \"#utility.yul\":5219:5224   */\n      dup2\n        /* \"#utility.yul\":5212:5233   */\n      mstore\n        /* \"#utility.yul\":5274:5281   */\n      dup7\n        /* \"#utility.yul\":5269:5271   */\n      0x20\n        /* \"#utility.yul\":5260:5266   */\n      dup4\n        /* \"#utility.yul\":5256:5258   */\n      dup6\n        /* \"#utility.yul\":5252:5267   */\n      add\n        /* \"#utility.yul\":5248:5272   */\n      add\n        /* \"#utility.yul\":5245:5282   */\n      gt\n        /* \"#utility.yul\":5242:5299   */\n      iszero\n      tag_762\n      jumpi\n        /* \"#utility.yul\":5295:5296   */\n      0x00\n        /* \"#utility.yul\":5292:5293   */\n      dup1\n        /* \"#utility.yul\":5285:5297   */\n      revert\n        /* \"#utility.yul\":5242:5299   */\n    tag_762:\n        /* \"#utility.yul\":5350:5356   */\n      dup2\n        /* \"#utility.yul\":5345:5347   */\n      0x20\n        /* \"#utility.yul\":5341:5343   */\n      dup5\n        /* \"#utility.yul\":5337:5348   */\n      add\n        /* \"#utility.yul\":5332:5334   */\n      0x20\n        /* \"#utility.yul\":5325:5330   */\n      dup4\n        /* \"#utility.yul\":5321:5335   */\n      add\n        /* \"#utility.yul\":5308:5357   */\n      calldatacopy\n        /* \"#utility.yul\":5402:5403   */\n      0x00\n        /* \"#utility.yul\":5397:5399   */\n      0x20\n        /* \"#utility.yul\":5388:5394   */\n      dup4\n        /* \"#utility.yul\":5381:5386   */\n      dup4\n        /* \"#utility.yul\":5377:5395   */\n      add\n        /* \"#utility.yul\":5373:5400   */\n      add\n        /* \"#utility.yul\":5366:5404   */\n      mstore\n        /* \"#utility.yul\":5423:5428   */\n      dup1\n        /* \"#utility.yul\":5413:5428   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4595:5434   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5621:5967   */\n    tag_146:\n        /* \"#utility.yul\":5689:5695   */\n      0x00\n        /* \"#utility.yul\":5697:5703   */\n      dup1\n        /* \"#utility.yul\":5750:5752   */\n      0x40\n        /* \"#utility.yul\":5738:5747   */\n      dup4\n        /* \"#utility.yul\":5729:5736   */\n      dup6\n        /* \"#utility.yul\":5725:5748   */\n      sub\n        /* \"#utility.yul\":5721:5753   */\n      slt\n        /* \"#utility.yul\":5718:5770   */\n      iszero\n      tag_765\n      jumpi\n        /* \"#utility.yul\":5766:5767   */\n      0x00\n        /* \"#utility.yul\":5763:5764   */\n      dup1\n        /* \"#utility.yul\":5756:5768   */\n      revert\n        /* \"#utility.yul\":5718:5770   */\n    tag_765:\n      pop\n      pop\n        /* \"#utility.yul\":5811:5834   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":5931:5933   */\n      0x20\n        /* \"#utility.yul\":5916:5934   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5903:5935   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":5621:5967   */\n      jump\t// out\n        /* \"#utility.yul\":5972:6260   */\n    tag_702:\n        /* \"#utility.yul\":6013:6016   */\n      0x00\n        /* \"#utility.yul\":6051:6056   */\n      dup2\n        /* \"#utility.yul\":6045:6057   */\n      mload\n        /* \"#utility.yul\":6078:6084   */\n      dup1\n        /* \"#utility.yul\":6073:6076   */\n      dup5\n        /* \"#utility.yul\":6066:6085   */\n      mstore\n        /* \"#utility.yul\":6134:6140   */\n      dup1\n        /* \"#utility.yul\":6127:6131   */\n      0x20\n        /* \"#utility.yul\":6120:6125   */\n      dup5\n        /* \"#utility.yul\":6116:6132   */\n      add\n        /* \"#utility.yul\":6109:6113   */\n      0x20\n        /* \"#utility.yul\":6104:6107   */\n      dup7\n        /* \"#utility.yul\":6100:6114   */\n      add\n        /* \"#utility.yul\":6094:6141   */\n      mcopy\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6179:6183   */\n      0x20\n        /* \"#utility.yul\":6170:6176   */\n      dup3\n        /* \"#utility.yul\":6165:6168   */\n      dup7\n        /* \"#utility.yul\":6161:6177   */\n      add\n        /* \"#utility.yul\":6157:6184   */\n      add\n        /* \"#utility.yul\":6150:6188   */\n      mstore\n        /* \"#utility.yul\":6249:6253   */\n      0x20\n        /* \"#utility.yul\":6242:6244   */\n      0x1f\n        /* \"#utility.yul\":6238:6245   */\n      not\n        /* \"#utility.yul\":6233:6235   */\n      0x1f\n        /* \"#utility.yul\":6225:6231   */\n      dup4\n        /* \"#utility.yul\":6221:6236   */\n      add\n        /* \"#utility.yul\":6217:6246   */\n      and\n        /* \"#utility.yul\":6212:6215   */\n      dup6\n        /* \"#utility.yul\":6208:6247   */\n      add\n        /* \"#utility.yul\":6204:6254   */\n      add\n        /* \"#utility.yul\":6197:6254   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5972:6260   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6265:6563   */\n    tag_160:\n        /* \"#utility.yul\":6448:6454   */\n      dup3\n        /* \"#utility.yul\":6441:6455   */\n      iszero\n        /* \"#utility.yul\":6434:6456   */\n      iszero\n        /* \"#utility.yul\":6423:6432   */\n      dup2\n        /* \"#utility.yul\":6416:6457   */\n      mstore\n        /* \"#utility.yul\":6493:6495   */\n      0x40\n        /* \"#utility.yul\":6488:6490   */\n      0x20\n        /* \"#utility.yul\":6477:6486   */\n      dup3\n        /* \"#utility.yul\":6473:6491   */\n      add\n        /* \"#utility.yul\":6466:6496   */\n      mstore\n        /* \"#utility.yul\":6397:6401   */\n      0x00\n        /* \"#utility.yul\":6513:6557   */\n      tag_768\n        /* \"#utility.yul\":6553:6555   */\n      0x40\n        /* \"#utility.yul\":6542:6551   */\n      dup4\n        /* \"#utility.yul\":6538:6556   */\n      add\n        /* \"#utility.yul\":6530:6536   */\n      dup5\n        /* \"#utility.yul\":6513:6557   */\n      tag_702\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":6505:6557   */\n      swap5\n        /* \"#utility.yul\":6265:6563   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6568:6787   */\n    tag_213:\n        /* \"#utility.yul\":6717:6719   */\n      0x20\n        /* \"#utility.yul\":6706:6715   */\n      dup2\n        /* \"#utility.yul\":6699:6720   */\n      mstore\n        /* \"#utility.yul\":6680:6684   */\n      0x00\n        /* \"#utility.yul\":6737:6781   */\n      tag_690\n        /* \"#utility.yul\":6777:6779   */\n      0x20\n        /* \"#utility.yul\":6766:6775   */\n      dup4\n        /* \"#utility.yul\":6762:6780   */\n      add\n        /* \"#utility.yul\":6754:6760   */\n      dup5\n        /* \"#utility.yul\":6737:6781   */\n      tag_702\n      jump\t// in\n        /* \"#utility.yul\":6792:6978   */\n    tag_229:\n        /* \"#utility.yul\":6851:6857   */\n      0x00\n        /* \"#utility.yul\":6904:6906   */\n      0x20\n        /* \"#utility.yul\":6892:6901   */\n      dup3\n        /* \"#utility.yul\":6883:6890   */\n      dup5\n        /* \"#utility.yul\":6879:6902   */\n      sub\n        /* \"#utility.yul\":6875:6907   */\n      slt\n        /* \"#utility.yul\":6872:6924   */\n      iszero\n      tag_772\n      jumpi\n        /* \"#utility.yul\":6920:6921   */\n      0x00\n        /* \"#utility.yul\":6917:6918   */\n      dup1\n        /* \"#utility.yul\":6910:6922   */\n      revert\n        /* \"#utility.yul\":6872:6924   */\n    tag_772:\n        /* \"#utility.yul\":6943:6972   */\n      tag_690\n        /* \"#utility.yul\":6962:6971   */\n      dup3\n        /* \"#utility.yul\":6943:6972   */\n      tag_697\n      jump\t// in\n        /* \"#utility.yul\":7725:7843   */\n    tag_703:\n        /* \"#utility.yul\":7811:7816   */\n      dup1\n        /* \"#utility.yul\":7804:7817   */\n      iszero\n        /* \"#utility.yul\":7797:7818   */\n      iszero\n        /* \"#utility.yul\":7790:7795   */\n      dup2\n        /* \"#utility.yul\":7787:7819   */\n      eq\n        /* \"#utility.yul\":7777:7837   */\n      tag_570\n      jumpi\n        /* \"#utility.yul\":7833:7834   */\n      0x00\n        /* \"#utility.yul\":7830:7831   */\n      dup1\n        /* \"#utility.yul\":7823:7835   */\n      revert\n        /* \"#utility.yul\":7848:8163   */\n    tag_250:\n        /* \"#utility.yul\":7913:7919   */\n      0x00\n        /* \"#utility.yul\":7921:7927   */\n      dup1\n        /* \"#utility.yul\":7974:7976   */\n      0x40\n        /* \"#utility.yul\":7962:7971   */\n      dup4\n        /* \"#utility.yul\":7953:7960   */\n      dup6\n        /* \"#utility.yul\":7949:7972   */\n      sub\n        /* \"#utility.yul\":7945:7977   */\n      slt\n        /* \"#utility.yul\":7942:7994   */\n      iszero\n      tag_779\n      jumpi\n        /* \"#utility.yul\":7990:7991   */\n      0x00\n        /* \"#utility.yul\":7987:7988   */\n      dup1\n        /* \"#utility.yul\":7980:7992   */\n      revert\n        /* \"#utility.yul\":7942:7994   */\n    tag_779:\n        /* \"#utility.yul\":8013:8042   */\n      tag_780\n        /* \"#utility.yul\":8032:8041   */\n      dup4\n        /* \"#utility.yul\":8013:8042   */\n      tag_697\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":8003:8042   */\n      swap2\n      pop\n        /* \"#utility.yul\":8092:8094   */\n      0x20\n        /* \"#utility.yul\":8081:8090   */\n      dup4\n        /* \"#utility.yul\":8077:8095   */\n      add\n        /* \"#utility.yul\":8064:8096   */\n      calldataload\n        /* \"#utility.yul\":8105:8133   */\n      tag_781\n        /* \"#utility.yul\":8127:8132   */\n      dup2\n        /* \"#utility.yul\":8105:8133   */\n      tag_703\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":8152:8157   */\n      dup1\n        /* \"#utility.yul\":8142:8157   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7848:8163   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8382:8509   */\n    tag_704:\n        /* \"#utility.yul\":8443:8453   */\n      0x4e487b71\n        /* \"#utility.yul\":8438:8441   */\n      0xe0\n        /* \"#utility.yul\":8434:8454   */\n      shl\n        /* \"#utility.yul\":8431:8432   */\n      0x00\n        /* \"#utility.yul\":8424:8455   */\n      mstore\n        /* \"#utility.yul\":8474:8478   */\n      0x11\n        /* \"#utility.yul\":8471:8472   */\n      0x04\n        /* \"#utility.yul\":8464:8479   */\n      mstore\n        /* \"#utility.yul\":8498:8502   */\n      0x24\n        /* \"#utility.yul\":8495:8496   */\n      0x00\n        /* \"#utility.yul\":8488:8503   */\n      revert\n        /* \"#utility.yul\":8514:8649   */\n    tag_296:\n        /* \"#utility.yul\":8553:8556   */\n      0x00\n        /* \"#utility.yul\":8574:8591   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":8571:8614   */\n      tag_786\n      jumpi\n        /* \"#utility.yul\":8594:8612   */\n      tag_786\n      tag_704\n      jump\t// in\n    tag_786:\n      pop\n        /* \"#utility.yul\":8641:8642   */\n      0x01\n        /* \"#utility.yul\":8630:8643   */\n      add\n      swap1\n        /* \"#utility.yul\":8514:8649   */\n      jump\t// out\n        /* \"#utility.yul\":8654:8782   */\n    tag_298:\n        /* \"#utility.yul\":8721:8730   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":8742:8753   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":8739:8776   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":8756:8774   */\n      tag_639\n      tag_704\n      jump\t// in\n        /* \"#utility.yul\":9111:9238   */\n    tag_316:\n        /* \"#utility.yul\":9172:9182   */\n      0x4e487b71\n        /* \"#utility.yul\":9167:9170   */\n      0xe0\n        /* \"#utility.yul\":9163:9183   */\n      shl\n        /* \"#utility.yul\":9160:9161   */\n      0x00\n        /* \"#utility.yul\":9153:9184   */\n      mstore\n        /* \"#utility.yul\":9203:9207   */\n      0x32\n        /* \"#utility.yul\":9200:9201   */\n      0x04\n        /* \"#utility.yul\":9193:9208   */\n      mstore\n        /* \"#utility.yul\":9227:9231   */\n      0x24\n        /* \"#utility.yul\":9224:9225   */\n      0x00\n        /* \"#utility.yul\":9217:9232   */\n      revert\n        /* \"#utility.yul\":9243:9368   */\n    tag_320:\n        /* \"#utility.yul\":9308:9317   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9329:9339   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9326:9362   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":9342:9360   */\n      tag_639\n      tag_704\n      jump\t// in\n        /* \"#utility.yul\":10151:10522   */\n    tag_354:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10371:10403   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":10353:10404   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10440:10472   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":10435:10437   */\n      0x20\n        /* \"#utility.yul\":10420:10438   */\n      dup3\n      add\n        /* \"#utility.yul\":10413:10473   */\n      mstore\n        /* \"#utility.yul\":10504:10506   */\n      0x40\n        /* \"#utility.yul\":10489:10507   */\n      dup2\n      add\n        /* \"#utility.yul\":10482:10516   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":10341:10343   */\n      0x60\n        /* \"#utility.yul\":10326:10344   */\n      add\n      swap1\n        /* \"#utility.yul\":10151:10522   */\n      jump\t// out\n        /* \"#utility.yul\":10527:10772   */\n    tag_358:\n        /* \"#utility.yul\":10594:10600   */\n      0x00\n        /* \"#utility.yul\":10647:10649   */\n      0x20\n        /* \"#utility.yul\":10635:10644   */\n      dup3\n        /* \"#utility.yul\":10626:10633   */\n      dup5\n        /* \"#utility.yul\":10622:10645   */\n      sub\n        /* \"#utility.yul\":10618:10650   */\n      slt\n        /* \"#utility.yul\":10615:10667   */\n      iszero\n      tag_799\n      jumpi\n        /* \"#utility.yul\":10663:10664   */\n      0x00\n        /* \"#utility.yul\":10660:10661   */\n      dup1\n        /* \"#utility.yul\":10653:10665   */\n      revert\n        /* \"#utility.yul\":10615:10667   */\n    tag_799:\n        /* \"#utility.yul\":10695:10704   */\n      dup2\n        /* \"#utility.yul\":10689:10705   */\n      mload\n        /* \"#utility.yul\":10714:10742   */\n      tag_690\n        /* \"#utility.yul\":10736:10741   */\n      dup2\n        /* \"#utility.yul\":10714:10742   */\n      tag_703\n      jump\t// in\n        /* \"#utility.yul\":12360:12528   */\n    tag_541:\n        /* \"#utility.yul\":12433:12442   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":12464:12473   */\n      dup2\n      iszero\n        /* \"#utility.yul\":12481:12496   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":12475:12497   */\n      dup5\n      eq\n        /* \"#utility.yul\":12461:12498   */\n      or\n        /* \"#utility.yul\":12451:12522   */\n      tag_639\n      jumpi\n        /* \"#utility.yul\":12502:12520   */\n      tag_639\n      tag_704\n      jump\t// in\n        /* \"#utility.yul\":12533:12750   */\n    tag_543:\n        /* \"#utility.yul\":12573:12574   */\n      0x00\n        /* \"#utility.yul\":12599:12600   */\n      dup3\n        /* \"#utility.yul\":12589:12721   */\n      tag_810\n      jumpi\n        /* \"#utility.yul\":12643:12653   */\n      0x4e487b71\n        /* \"#utility.yul\":12638:12641   */\n      0xe0\n        /* \"#utility.yul\":12634:12654   */\n      shl\n        /* \"#utility.yul\":12631:12632   */\n      0x00\n        /* \"#utility.yul\":12624:12655   */\n      mstore\n        /* \"#utility.yul\":12678:12682   */\n      0x12\n        /* \"#utility.yul\":12675:12676   */\n      0x04\n        /* \"#utility.yul\":12668:12683   */\n      mstore\n        /* \"#utility.yul\":12706:12710   */\n      0x24\n        /* \"#utility.yul\":12703:12704   */\n      0x00\n        /* \"#utility.yul\":12696:12711   */\n      revert\n        /* \"#utility.yul\":12589:12721   */\n    tag_810:\n      pop\n        /* \"#utility.yul\":12735:12744   */\n      div\n      swap1\n        /* \"#utility.yul\":12533:12750   */\n      jump\t// out\n        /* \"#utility.yul\":13110:13294   */\n    tag_592:\n        /* \"#utility.yul\":13180:13186   */\n      0x00\n        /* \"#utility.yul\":13233:13235   */\n      0x20\n        /* \"#utility.yul\":13221:13230   */\n      dup3\n        /* \"#utility.yul\":13212:13219   */\n      dup5\n        /* \"#utility.yul\":13208:13231   */\n      sub\n        /* \"#utility.yul\":13204:13236   */\n      slt\n        /* \"#utility.yul\":13201:13253   */\n      iszero\n      tag_813\n      jumpi\n        /* \"#utility.yul\":13249:13250   */\n      0x00\n        /* \"#utility.yul\":13246:13247   */\n      dup1\n        /* \"#utility.yul\":13239:13251   */\n      revert\n        /* \"#utility.yul\":13201:13253   */\n    tag_813:\n      pop\n        /* \"#utility.yul\":13272:13288   */\n      mload\n      swap2\n        /* \"#utility.yul\":13110:13294   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13299:13600   */\n    tag_678:\n        /* \"#utility.yul\":13428:13431   */\n      0x00\n        /* \"#utility.yul\":13466:13472   */\n      dup3\n        /* \"#utility.yul\":13460:13473   */\n      mload\n        /* \"#utility.yul\":13512:13518   */\n      dup1\n        /* \"#utility.yul\":13505:13509   */\n      0x20\n        /* \"#utility.yul\":13497:13503   */\n      dup6\n        /* \"#utility.yul\":13493:13510   */\n      add\n        /* \"#utility.yul\":13488:13491   */\n      dup5\n        /* \"#utility.yul\":13482:13519   */\n      mcopy\n        /* \"#utility.yul\":13574:13575   */\n      0x00\n        /* \"#utility.yul\":13538:13554   */\n      swap3\n      add\n        /* \"#utility.yul\":13563:13576   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":13538:13554   */\n      swap2\n        /* \"#utility.yul\":13299:13600   */\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_d85598d6ea860439b48fc265883a1cac638ff64dca5391fe12b46f27076e26fe b5671393c7c6980552e50a31e778921eb17d764c2e98fbf4d44fff524712def9\n\n    auxdata: 0xa26469706673582212208faa61c493bc1e7ec40ac17c40f46b6e4f326660a1aff6215ed06ee7754902f664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1680": {
									"entryPoint": null,
									"id": 1680,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_435": {
									"entryPoint": 33,
									"id": 435,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_466": {
									"entryPoint": null,
									"id": 466,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:216:11",
										"nodeType": "YulBlock",
										"src": "0:216:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "113:101:11",
													"nodeType": "YulBlock",
													"src": "113:101:11",
													"statements": [
														{
															"nativeSrc": "123:26:11",
															"nodeType": "YulAssignment",
															"src": "123:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "135:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "146:2:11",
																		"nodeType": "YulLiteral",
																		"src": "146:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "131:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:11"
																},
																"nativeSrc": "131:18:11",
																"nodeType": "YulFunctionCall",
																"src": "131:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "123:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "165:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "180:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "196:2:11",
																								"nodeType": "YulLiteral",
																								"src": "196:2:11",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "200:1:11",
																								"nodeType": "YulLiteral",
																								"src": "200:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "192:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "192:3:11"
																						},
																						"nativeSrc": "192:10:11",
																						"nodeType": "YulFunctionCall",
																						"src": "192:10:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "204:1:11",
																						"nodeType": "YulLiteral",
																						"src": "204:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "188:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "188:3:11"
																				},
																				"nativeSrc": "188:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "188:18:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "176:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:11"
																		},
																		"nativeSrc": "176:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "176:31:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "158:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:11"
																},
																"nativeSrc": "158:50:11",
																"nodeType": "YulFunctionCall",
																"src": "158:50:11"
															},
															"nativeSrc": "158:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "158:50:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "14:200:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "82:9:11",
														"nodeType": "YulTypedName",
														"src": "82:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "93:6:11",
														"nodeType": "YulTypedName",
														"src": "93:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "104:4:11",
														"nodeType": "YulTypedName",
														"src": "104:4:11",
														"type": ""
													}
												],
												"src": "14:200:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405230608052348015610013575f80fd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051612d8e6100f95f395f818161212c0152818161215501526122990152612d8e5ff3fe6080604052600436106102a5575f3560e01c80637547c7a31161016f578063ad8e5ec4116100d8578063d777cc6d11610092578063ed0610671161006d578063ed0610671461086d578063f0664a4f1461088c578063f2fde38b146108ab578063ff3d65d9146108ca575f80fd5b8063d777cc6d1461081b578063d9b998b41461083a578063e9c68e2c14610859575f80fd5b8063ad8e5ec4146106f4578063b47ff95114610713578063b9dac1eb14610728578063bccbc36c14610747578063c7fd5bf0146107c8578063ce356a2414610806575f80fd5b806385f452501161012957806385f45250146105fe5780638da5cb5b1461061d578063947a36fb146106595780639c361e4e1461066e578063a4f67b8b14610683578063ad3cb1cc146106b7575f80fd5b80637547c7a31461054457806378fd078d146105635780637f111e60146105825780637f70c5e7146105a15780637ffe4d93146105c057806383aa9985146105df575f80fd5b806344490ff411610211578063567e98f9116101cb578063567e98f91461049c5780635f17e616146104b15780636626b26d146104d057806367976974146104e45780636e04ff0d14610503578063715018a614610530575f80fd5b806344490ff4146104035780634585e33b146104185780634f1ef286146104375780635256dbbf1461044a57806352d1902d146104695780635462870d1461047d575f80fd5b806330cac9721161026257806330cac9721461037b57806333244c2c1461039057806334107c87146103a557806339518b5e146103c45780633a71a9e4146103d95780633f3b3b27146103ee575f80fd5b806301934a83146102a957806311eac855146102d15780631459457a14610307578063188e07b9146103285780632765df7a1461033d5780633070fbf81461035c575b5f80fd5b3480156102b4575f80fd5b506102be60085481565b6040519081526020015b60405180910390f35b3480156102dc575f80fd5b505f546102ef906001600160a01b031681565b6040516001600160a01b0390911681526020016102c8565b348015610312575f80fd5b50610326610321366004612813565b6108f5565b005b348015610333575f80fd5b506102be60015481565b348015610348575f80fd5b50610326610357366004612874565b610a70565b348015610367575f80fd5b50600e546102ef906001600160a01b031681565b348015610386575f80fd5b506102be600b5481565b34801561039b575f80fd5b506102be60045481565b3480156103b0575f80fd5b506103266103bf366004612964565b610b58565b3480156103cf575f80fd5b506102be600c5481565b3480156103e4575f80fd5b506102be60075481565b3480156103f9575f80fd5b506102be600d5481565b34801561040e575f80fd5b506102be60055481565b348015610423575f80fd5b50610326610432366004612a20565b610d05565b610326610445366004612a8e565b610dfc565b348015610455575f80fd5b50610326610464366004612874565b610e17565b348015610474575f80fd5b506102be610f61565b348015610488575f80fd5b506009546102ef906001600160a01b031681565b3480156104a7575f80fd5b506102be60035481565b3480156104bc575f80fd5b506103266104cb366004612b33565b610f7c565b3480156104db575f80fd5b50610326611064565b3480156104ef575f80fd5b506103266104fe366004612874565b6110ec565b34801561050e575f80fd5b5061052261051d366004612a20565b6112ef565b6040516102c8929190612b81565b34801561053b575f80fd5b5061032661131f565b34801561054f575f80fd5b5061032661055e366004612874565b611332565b34801561056e575f80fd5b5061032661057d366004612874565b611519565b34801561058d575f80fd5b5061032661059c366004612874565b611663565b3480156105ac575f80fd5b506103266105bb366004612874565b6116f4565b3480156105cb575f80fd5b506103266105da366004612874565b611785565b3480156105ea575f80fd5b506010546102ef906001600160a01b031681565b348015610609575f80fd5b50610326610618366004612b33565b6118d4565b348015610628575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166102ef565b348015610664575f80fd5b506102be600a5481565b348015610679575f80fd5b506102be60115481565b34801561068e575f80fd5b506102ef61069d366004612874565b60136020525f90815260409020546001600160a01b031681565b3480156106c2575f80fd5b506106e7604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516102c89190612ba3565b3480156106ff575f80fd5b5061032661070e366004612874565b611a0c565b34801561071e575f80fd5b506102be60025481565b348015610733575f80fd5b50610326610742366004612874565b611a9d565b348015610752575f80fd5b50610799610761366004612bb5565b60156020525f908152604090208054600182015460028301546003840154600485015460059095015460ff9094169492939192909186565b6040805196151587526020870195909552938501929092526060840152608083015260a082015260c0016102c8565b3480156107d3575f80fd5b506107f66107e2366004612bb5565b60126020525f908152604090205460ff1681565b60405190151581526020016102c8565b348015610811575f80fd5b506102be60065481565b348015610826575f80fd5b50610326610835366004612bb5565b611b2e565b348015610845575f80fd5b50610326610854366004612bdb565b611bfb565b348015610864575f80fd5b50610326611d55565b348015610878575f80fd5b50610326610887366004612b33565b61202e565b348015610897575f80fd5b50600f546102ef906001600160a01b031681565b3480156108b6575f80fd5b506103266108c5366004612bb5565b6120cb565b3480156108d5575f80fd5b506102be6108e4366004612874565b60146020525f908152604090205481565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f8115801561093a5750825b90505f8267ffffffffffffffff1660011480156109565750303b155b905081158015610964575080155b156109825760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156109ac57845460ff60401b1916600160401b1785555b6109b58a612108565b6109bd612119565b5f80546001600160a01b03808c166001600160a01b031992831617909255611388600455611d4c6005556105dc6006556103e860075560098054898416908316179055600f80548b841690831617905560108054928a16929091169190911790558315610a6457845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b600f546001600160a01b03163314801590610a9657506010546001600160a01b03163314155b15610abb57604051631ed6f38b60e31b81523360048201526024015b60405180910390fd5b5f8111610ade5760405163cdbc633560e01b815260048101829052602401610ab2565b601180545f90815260146020526040812083905581549190610aff83612c24565b90915550506011547fe1976e16ed8ce8e740235978fbe69b27d5eea683b2e017bb0bd2fabb33294b3f90610b3583612710612c3c565b60408051928352602083019190915281018390526060015b60405180910390a150565b600f546001600160a01b03163314801590610b7e57506010546001600160a01b03163314155b15610b9e57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f825111610bc4578151604051633ddd555760e21b8152600401610ab291815260200190565b5f815111610bea578051604051633a46e2ab60e01b8152600401610ab291815260200190565b8151815114610c0c5760405163512509d360e11b815260040160405180910390fd5b5f5b8251811015610cbc57828181518110610c2957610c29612c4f565b602002602001015160155f848481518110610c4657610c46612c4f565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f206005015f828254610c7e9190612c63565b92505081905550828181518110610c9757610c97612c4f565b602002602001015160035f828254610caf9190612c63565b9091555050600101610c0e565b50815181516040805133815260208101939093528201527f472714a70b748503a00efa85a1c3081b2a3477ce3be0227cb140455f82ccaeb6906060015b60405180910390a15050565b600e546001600160a01b03163314610d855760405162461bcd60e51b815260206004820152603b60248201527f54686973206164647265737320646f6573206e6f742068617665207065726d6960448201527f7373696f6e20746f2063616c6c20706572666f726d55706b65657000000000006064820152608401610ab2565b600a545f03610dad57600a54604051637154000760e01b8152600401610ab291815260200190565b600c544210610ddd57600b54600a81905542600d819055610dce9190612c63565b600c55610dd9611d55565b5050565b600c546040516354593e7560e01b8152600401610ab291815260200190565b610e04612121565b610e0d826121c5565b610dd982826121cd565b600f546001600160a01b03163314801590610e3d57506010546001600160a01b03163314155b15610e5d57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111610e80576040516302ff478360e41b815260048101829052602401610ab2565b8060015f828254610e919190612c63565b90915550505f80546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610eca90339030908790600401612c76565b6020604051808303815f875af1158015610ee6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f0a9190612c9a565b905080610f2e5760405163d85d3cef60e01b81528115156004820152602401610ab2565b7fa9f166643ec132a11638e74e3c3a78d4ae278fcbf92998240e0e97676f54e404600154604051610cf991815260200190565b5f610f6a61228e565b505f80516020612d1983398151915290565b600f546001600160a01b03163314801590610fa257506010546001600160a01b03163314155b15610fc257604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111610fe557604051637154000760e01b815260048101829052602401610ab2565b42821015611009576040516354593e7560e01b815260048101839052602401610ab2565b6110134283612c3c565b600a819055600c83905542600d819055600b8390556040805133815260208101939093528201527f2b5090e035d3026f5448298c9adc68db8bbc1b26a8af5c81b2b2a9fc07ca4a0090606001610cf9565b600f546001600160a01b0316331480159061108a57506010546001600160a01b03163314155b156110aa57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f600a8190556040805133815260208101929092527f3b68dc4e210c46d3622293f2b941cdfde795bb6e17286bb289ba05a6a3b5541f910160405180910390a1565b600954600160a01b900460ff16156111465760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610ab2565b6009805460ff60a01b1916600160a01b1790558061117a576040516302ff478360e41b815260048101829052602401610ab2565b335f908152601560205260409020600101548111156111c357335f90815260156020526040908190206001015490516398e712c360e01b81526004810191909152602401610ab2565b335f90815260156020526040812060010180548392906111e4908490612c3c565b9091555050335f908152601560205260408120600201805483929061120a908490612c63565b90915550505f805460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303815f875af115801561125d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112819190612c9a565b9050806112a55760405163d85d3cef60e01b81528115156004820152602401610ab2565b60408051338152602081018490527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a150506009805460ff60a01b19169055565b5f60605f600a54600d54426113049190612c3c565b60408051602081019091525f81529110969095509350505050565b6113276122d7565b6113305f612332565b565b5f8111611355576040516302ff478360e41b815260048101829052602401610ab2565b335f9081526015602052604090205460ff161561139d57335f90815260156020526040908190205490516301be970f60e61b815260ff90911615156004820152602401610ab2565b335f90815260156020526040812060050180548392906113be908490612c63565b9091555050335f9081526012602052604090205460ff1661142757600880545f90815260136020908152604080832080546001600160a01b03191633908117909155835260129091528120805460ff191660011790558154919061142183612c24565b91905055505b8060035f8282546114389190612c63565b90915550505f80546009546040516323b872dd60e01b81526001600160a01b03928316926323b872dd92611476923392909116908790600401612c76565b6020604051808303815f875af1158015611492573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114b69190612c9a565b9050806114da5760405163d85d3cef60e01b81528115156004820152602401610ab2565b6009546040517f14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab91610cf99133916001600160a01b0316908690612c76565b600f546001600160a01b0316331480159061153f57506010546001600160a01b03163314155b1561155f57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111611582576040516302ff478360e41b815260048101829052602401610ab2565b8060025f8282546115939190612c63565b90915550505f80546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906115cc90339030908790600401612c76565b6020604051808303815f875af11580156115e8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061160c9190612c9a565b9050806116305760405163d85d3cef60e01b81528115156004820152602401610ab2565b7f73834e1d1ee73ba659470a3603b888903853d3a3c9fda34e71c093a0e35cab94600254604051610cf991815260200190565b600f546001600160a01b0316331480159061168957506010546001600160a01b03163314155b156116a957604051631ed6f38b60e31b8152336004820152602401610ab2565b5f81116116cc5760405163cdbc633560e01b815260048101829052602401610ab2565b600781905560408051338152602081018390525f80516020612d398339815191529101610b4d565b600f546001600160a01b0316331480159061171a57506010546001600160a01b03163314155b1561173a57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f811161175d5760405163cdbc633560e01b815260048101829052602401610ab2565b600481905560408051338152602081018390525f80516020612d398339815191529101610b4d565b5f81116117a8576040516302ff478360e41b815260048101829052602401610ab2565b335f9081526015602052604090205460ff16156117f057335f90815260156020526040908190205490516301be970f60e61b815260ff90911615156004820152602401610ab2565b335f90815260156020526040902060010154811061182457604051630636dc6b60e31b815260048101829052602401610ab2565b335f9081526015602052604081206001018054839290611845908490612c3c565b9091555050335f908152601560205260408120600501805483929061186b908490612c63565b925050819055508060025f8282546118839190612c63565b925050819055508060035f82825461189b9190612c63565b90915550506040517f14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab90610b4d90339030908590612c76565b5f82116118f7576040516302ff478360e41b815260048101839052602401610ab2565b60115481111561191d5760405163222a50f360e01b815260048101829052602401610ab2565b5f818152601460205260409020546119369083906123a2565b5f80546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061196a90339030908890600401612c76565b6020604051808303815f875af1158015611986573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119aa9190612c9a565b9050806119ce5760405163d85d3cef60e01b81528115156004820152602401610ab2565b60408051848152602081018490527fa89b69c5958ec1ccf0df0de746a8708f5b6a6b429430129f16f46f44b319c900910160405180910390a1505050565b600f546001600160a01b03163314801590611a3257506010546001600160a01b03163314155b15611a5257604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111611a755760405163cdbc633560e01b815260048101829052602401610ab2565b600681905560408051338152602081018390525f80516020612d398339815191529101610b4d565b600f546001600160a01b03163314801590611ac357506010546001600160a01b03163314155b15611ae357604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111611b065760405163cdbc633560e01b815260048101829052602401610ab2565b600581905560408051338152602081018390525f80516020612d398339815191529101610b4d565b600f546001600160a01b03163314801590611b5457506010546001600160a01b03163314155b15611b7457604051631ed6f38b60e31b8152336004820152602401610ab2565b6001600160a01b038116611ba65760405163e4cfa94d60e01b81526001600160a01b0382166004820152602401610ab2565b600e80546001600160a01b0319166001600160a01b0383169081179091556040805133815260208101929092527f75f91f3cecb8c46f20150f60f77a6e1f0de00776627692db82ef1960af84c33a9101610b4d565b600f546001600160a01b03163314801590611c2157506010546001600160a01b03163314155b15611c4157604051631ed6f38b60e31b8152336004820152602401610ab2565b6001600160a01b038216611c735760405163e4cfa94d60e01b81526001600160a01b0383166004820152602401610ab2565b600181151514801590611c8557508015155b15611ca7576040516381ed1ae360e01b81528115156004820152602401610ab2565b801515600103611cd8576001600160a01b0382165f908152601560205260409020805460ff19166001179055611cf8565b6001600160a01b0382165f908152601560205260409020805460ff191690555b6001600160a01b0382165f818152601560209081526040918290205482513381529182019390935260ff9092161515908201527f7a1655bc3160d3413bf1d5235e55be12e01b7e8bc2436a9bff09c3b4fa2421f190606001610cf9565b600e546001600160a01b03163314801590611d7b5750600f546001600160a01b03163314155b8015611d9257506010546001600160a01b03163314155b15611db257604051631ed6f38b60e31b8152336004820152602401610ab2565b600254158015611dc25750600154155b15611def57600254600154604051632fd92d8d60e01b815260048101929092526024820152604401610ab2565b5f805f611dfa612400565b919450925090505f805b600854811015611fe2575f818152601360209081526040808320546001600160a01b03168352601590915290205460ff16611fda576003545f828152601360209081526040808320546001600160a01b031683526015909152812060050154909190611e7290612710612cb5565b611e7c9190612ccc565b90505f611e89868361256d565b90508060025f828254611e9c9190612c3c565b90915550611eac90508185612c63565b93508460015f828254611ebf9190612c3c565b90915550505f838152601360209081526040808320546001600160a01b03168352601590915281206003018054879290611efa908490612c63565b90915550505f838152601360209081526040808320546001600160a01b03168352601590915281206004018054839290611f35908490612c63565b909155505f9050611f468683612c63565b5f858152601360209081526040808320546001600160a01b031683526015909152812060010180549293508392909190611f81908490612c63565b909155505087851115611fd65760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e742069732067726561746572207468656e203530250000000000006044820152606401610ab2565b5050505b600101611e04565b506002546001546040805133815260208101939093528201527fee826440768329b0c72f81331212ee31fcdac1ea79a248d24821e40c34e580209060600160405180910390a150505050565b600f546001600160a01b0316331480159061205457506010546001600160a01b03163314155b1561207457604051631ed6f38b60e31b8152336004820152602401610ab2565b5f81116120975760405163cdbc633560e01b815260048101829052602401610ab2565b5f8281526014602090815260409182902083905581513381529081018390525f80516020612d398339815191529101610cf9565b6120d36122d7565b6001600160a01b0381166120fc57604051631e4fbdf760e01b81525f6004820152602401610ab2565b61210581612332565b50565b6121106125d6565b6121058161261f565b6113306125d6565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806121a757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661219b5f80516020612d19833981519152546001600160a01b031690565b6001600160a01b031614155b156113305760405163703e46dd60e11b815260040160405180910390fd5b6121056122d7565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612227575060408051601f3d908101601f1916820190925261222491810190612ceb565b60015b61224f57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610ab2565b5f80516020612d19833981519152811461227f57604051632a87526960e21b815260048101829052602401610ab2565b6122898383612627565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146113305760405163703e46dd60e11b815260040160405180910390fd5b336123097f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146113305760405163118cdaa760e01b8152336004820152602401610ab2565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f6123af82612710612c3c565b90505f6123bc848361256d565b90505f6123c9858561256d565b90508160025f8282546123dc9190612c63565b925050819055508060015f8282546123f49190612c63565b90915550505050505050565b5f805f8061241260025461138861256d565b90505f6124218260055461256d565b90505f6124308360065461256d565b90505f61243f8460075461256d565b90505f61245060015460045461256d565b90505f6008541161247a57600854604051637ca8d0db60e01b8152600401610ab291815260200190565b5f600854826124899190612ccc565b90506124958385612c63565b60025f8282546124a59190612c3c565b925050819055508360015f8282546124bd9190612c63565b90915550505f805460095460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810187905291169063a9059cbb906044016020604051808303815f875af1158015612514573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906125389190612c9a565b90508061255c5760405163d85d3cef60e01b81528115156004820152602401610ab2565b509498939750939550919350505050565b5f80831161259157604051639b7220af60e01b815260048101849052602401610ab2565b5f82116125b457604051630b015aa760e31b815260048101839052602401610ab2565b5f6127106125c28486612cb5565b6125cc9190612ccc565b9150505b92915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661133057604051631afcd79f60e31b815260040160405180910390fd5b6120d36125d6565b6126308261267c565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156126745761228982826126df565b610dd9612751565b806001600160a01b03163b5f036126b157604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610ab2565b5f80516020612d1983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516126fb9190612d02565b5f60405180830381855af49150503d805f8114612733576040519150601f19603f3d011682016040523d82523d5f602084013e612738565b606091505b5091509150612748858383612770565b95945050505050565b34156113305760405163b398979f60e01b815260040160405180910390fd5b60608261278557612780826127cf565b6127c8565b815115801561279c57506001600160a01b0384163b155b156127c557604051639996b31560e01b81526001600160a01b0385166004820152602401610ab2565b50805b9392505050565b8051156127df5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b038116811461280e575f80fd5b919050565b5f805f805f60a08688031215612827575f80fd5b612830866127f8565b945061283e602087016127f8565b935061284c604087016127f8565b925061285a606087016127f8565b9150612868608087016127f8565b90509295509295909350565b5f60208284031215612884575f80fd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff811182821017156128c8576128c861288b565b604052919050565b5f67ffffffffffffffff8211156128e9576128e961288b565b5060051b60200190565b5f82601f830112612902575f80fd5b8135612915612910826128d0565b61289f565b8082825260208201915060208360051b860101925085831115612936575f80fd5b602085015b8381101561295a5761294c816127f8565b83526020928301920161293b565b5095945050505050565b5f8060408385031215612975575f80fd5b823567ffffffffffffffff81111561298b575f80fd5b8301601f8101851361299b575f80fd5b80356129a9612910826128d0565b8082825260208201915060208360051b8501019250878311156129ca575f80fd5b6020840193505b828410156129ec5783358252602093840193909101906129d1565b9450505050602083013567ffffffffffffffff811115612a0a575f80fd5b612a16858286016128f3565b9150509250929050565b5f8060208385031215612a31575f80fd5b823567ffffffffffffffff811115612a47575f80fd5b8301601f81018513612a57575f80fd5b803567ffffffffffffffff811115612a6d575f80fd5b856020828401011115612a7e575f80fd5b6020919091019590945092505050565b5f8060408385031215612a9f575f80fd5b612aa8836127f8565b9150602083013567ffffffffffffffff811115612ac3575f80fd5b8301601f81018513612ad3575f80fd5b803567ffffffffffffffff811115612aed57612aed61288b565b612b00601f8201601f191660200161289f565b818152866020838501011115612b14575f80fd5b816020840160208301375f602083830101528093505050509250929050565b5f8060408385031215612b44575f80fd5b50508035926020909101359150565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b8215158152604060208201525f612b9b6040830184612b53565b949350505050565b602081525f6127c86020830184612b53565b5f60208284031215612bc5575f80fd5b6127c8826127f8565b8015158114612105575f80fd5b5f8060408385031215612bec575f80fd5b612bf5836127f8565b91506020830135612c0581612bce565b809150509250929050565b634e487b7160e01b5f52601160045260245ffd5b5f60018201612c3557612c35612c10565b5060010190565b818103818111156125d0576125d0612c10565b634e487b7160e01b5f52603260045260245ffd5b808201808211156125d0576125d0612c10565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f60208284031215612caa575f80fd5b81516127c881612bce565b80820281158282048414176125d0576125d0612c10565b5f82612ce657634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215612cfb575f80fd5b5051919050565b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcb5671393c7c6980552e50a31e778921eb17d764c2e98fbf4d44fff524712def9a26469706673582212208faa61c493bc1e7ec40ac17c40f46b6e4f326660a1aff6215ed06ee7754902f664736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C PUSH2 0x21 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x71 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH2 0xD0 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2D8E PUSH2 0xF9 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x212C ADD MSTORE DUP2 DUP2 PUSH2 0x2155 ADD MSTORE PUSH2 0x2299 ADD MSTORE PUSH2 0x2D8E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2A5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7547C7A3 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0xAD8E5EC4 GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0xD777CC6D GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xED061067 GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xED061067 EQ PUSH2 0x86D JUMPI DUP1 PUSH4 0xF0664A4F EQ PUSH2 0x88C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8AB JUMPI DUP1 PUSH4 0xFF3D65D9 EQ PUSH2 0x8CA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD777CC6D EQ PUSH2 0x81B JUMPI DUP1 PUSH4 0xD9B998B4 EQ PUSH2 0x83A JUMPI DUP1 PUSH4 0xE9C68E2C EQ PUSH2 0x859 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD8E5EC4 EQ PUSH2 0x6F4 JUMPI DUP1 PUSH4 0xB47FF951 EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0xB9DAC1EB EQ PUSH2 0x728 JUMPI DUP1 PUSH4 0xBCCBC36C EQ PUSH2 0x747 JUMPI DUP1 PUSH4 0xC7FD5BF0 EQ PUSH2 0x7C8 JUMPI DUP1 PUSH4 0xCE356A24 EQ PUSH2 0x806 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x85F45250 GT PUSH2 0x129 JUMPI DUP1 PUSH4 0x85F45250 EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x947A36FB EQ PUSH2 0x659 JUMPI DUP1 PUSH4 0x9C361E4E EQ PUSH2 0x66E JUMPI DUP1 PUSH4 0xA4F67B8B EQ PUSH2 0x683 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x6B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x78FD078D EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0x7F111E60 EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0x7F70C5E7 EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x7FFE4D93 EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0x83AA9985 EQ PUSH2 0x5DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x44490FF4 GT PUSH2 0x211 JUMPI DUP1 PUSH4 0x567E98F9 GT PUSH2 0x1CB JUMPI DUP1 PUSH4 0x567E98F9 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x5F17E616 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x6626B26D EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0x67976974 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x530 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x44490FF4 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x5256DBBF EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0x5462870D EQ PUSH2 0x47D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30CAC972 GT PUSH2 0x262 JUMPI DUP1 PUSH4 0x30CAC972 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x33244C2C EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x34107C87 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x39518B5E EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x3A71A9E4 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0x3EE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1934A83 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x11EAC855 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x1459457A EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x188E07B9 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x2765DF7A EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x3070FBF8 EQ PUSH2 0x35C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x2813 JUMP JUMPDEST PUSH2 0x8F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x3BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2964 JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x445 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A8E JUMP JUMPDEST PUSH2 0xDFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x455 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x464 CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0xE17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x474 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0xF61 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x4CB CALLDATASIZE PUSH1 0x4 PUSH2 0x2B33 JUMP JUMPDEST PUSH2 0xF7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x1064 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x4FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x10EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x522 PUSH2 0x51D CALLDATASIZE PUSH1 0x4 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0x12EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP3 SWAP2 SWAP1 PUSH2 0x2B81 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x131F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1332 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x57D CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1519 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1663 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x5BB CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x16F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x5DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1785 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x618 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B33 JUMP JUMPDEST PUSH2 0x18D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x628 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x664 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x679 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x69D CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x70E CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1A0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x733 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x742 CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1A9D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x752 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x799 PUSH2 0x761 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0xFF SWAP1 SWAP5 AND SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 ISZERO ISZERO DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F6 PUSH2 0x7E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x811 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x826 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x835 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x1B2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x845 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x854 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BDB JUMP JUMPDEST PUSH2 0x1BFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x864 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x1D55 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x878 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x887 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B33 JUMP JUMPDEST PUSH2 0x202E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x897 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x8C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x20CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0x8E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x93A JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x956 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x964 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x9AC JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x9B5 DUP11 PUSH2 0x2108 JUMP JUMPDEST PUSH2 0x9BD PUSH2 0x2119 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH2 0x1388 PUSH1 0x4 SSTORE PUSH2 0x1D4C PUSH1 0x5 SSTORE PUSH2 0x5DC PUSH1 0x6 SSTORE PUSH2 0x3E8 PUSH1 0x7 SSTORE PUSH1 0x9 DUP1 SLOAD DUP10 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0xF DUP1 SLOAD DUP12 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0xA64 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xA96 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xABB JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP1 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0xAFF DUP4 PUSH2 0x2C24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x11 SLOAD PUSH32 0xE1976E16ED8CE8E740235978FBE69B27D5EEA683B2E017BB0BD2FABB33294B3F SWAP1 PUSH2 0xB35 DUP4 PUSH2 0x2710 PUSH2 0x2C3C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xB7E JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT PUSH2 0xBC4 JUMPI DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x3DDD5557 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD GT PUSH2 0xBEA JUMPI DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0x3A46E2AB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD EQ PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH4 0x512509D3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xCBC JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC29 JUMPI PUSH2 0xC29 PUSH2 0x2C4F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x15 PUSH0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC46 JUMPI PUSH2 0xC46 PUSH2 0x2C4F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC7E SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC97 JUMPI PUSH2 0xC97 PUSH2 0x2C4F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCAF SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 ADD PUSH2 0xC0E JUMP JUMPDEST POP DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0x472714A70B748503A00EFA85A1C3081B2A3477CE3BE0227CB140455F82CCAEB6 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320646F6573206E6F742068617665207065726D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373696F6E20746F2063616C6C20706572666F726D55706B6565700000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH0 SUB PUSH2 0xDAD JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x71540007 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD TIMESTAMP LT PUSH2 0xDDD JUMPI PUSH1 0xB SLOAD PUSH1 0xA DUP2 SWAP1 SSTORE TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE PUSH2 0xDCE SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0xDD9 PUSH2 0x1D55 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x54593E75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0xE04 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0xE0D DUP3 PUSH2 0x21C5 JUMP JUMPDEST PUSH2 0xDD9 DUP3 DUP3 PUSH2 0x21CD JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xE3D JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xE5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xE80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE91 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xECA SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF0A SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xF2E JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH32 0xA9F166643EC132A11638E74E3C3A78D4AE278FCBF92998240E0E97676F54E404 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0xCF9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xF6A PUSH2 0x228E JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D19 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xFA2 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x71540007 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST TIMESTAMP DUP3 LT ISZERO PUSH2 0x1009 JUMPI PUSH1 0x40 MLOAD PUSH4 0x54593E75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x1013 TIMESTAMP DUP4 PUSH2 0x2C3C JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xC DUP4 SWAP1 SSTORE TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0xB DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0x2B5090E035D3026F5448298C9ADC68DB8BBC1B26A8AF5C81B2B2A9FC07CA4A00 SWAP1 PUSH1 0x60 ADD PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x108A JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x10AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x3B68DC4E210C46D3622293F2B941CDFDE795BB6E17286BB289BA05A6A3B5541F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1146 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE DUP1 PUSH2 0x117A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0x11C3 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH4 0x98E712C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x11E4 SWAP1 DUP5 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x120A SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x125D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1281 SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x12A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH0 PUSH1 0xA SLOAD PUSH1 0xD SLOAD TIMESTAMP PUSH2 0x1304 SWAP2 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP2 LT SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1327 PUSH2 0x22D7 JUMP JUMPDEST PUSH2 0x1330 PUSH0 PUSH2 0x2332 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1355 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x139D JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x1BE970F PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x13BE SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1427 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x12 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0x1421 DUP4 PUSH2 0x2C24 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1438 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x1476 SWAP3 CALLER SWAP3 SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1492 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14B6 SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x14DA JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH32 0x14EE34C24635186D212F515353DADAE9C226529EDEF2D1FCF5504CB33B5C25AB SWAP2 PUSH2 0xCF9 SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 SWAP1 PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x153F JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x155F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1582 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1593 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x15CC SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15E8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x160C SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1630 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH32 0x73834E1D1EE73BA659470A3603B888903853D3A3C9FDA34E71C093A0E35CAB94 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH2 0xCF9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1689 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x16CC JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x171A JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x173A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x175D JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x17A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x17F0 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x1BE970F PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 LT PUSH2 0x1824 JUMPI PUSH1 0x40 MLOAD PUSH4 0x636DC6B PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1845 SWAP1 DUP5 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x186B SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1883 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x189B SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x14EE34C24635186D212F515353DADAE9C226529EDEF2D1FCF5504CB33B5C25AB SWAP1 PUSH2 0xB4D SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP6 SWAP1 PUSH2 0x2C76 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x18F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 GT ISZERO PUSH2 0x191D JUMPI PUSH1 0x40 MLOAD PUSH4 0x222A50F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1936 SWAP1 DUP4 SWAP1 PUSH2 0x23A2 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x196A SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1986 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19AA SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x19CE JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xA89B69C5958EC1CCF0DF0DE746A8708F5B6A6B429430129F16F46F44B319C900 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1A32 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1A52 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1A75 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1AC3 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1AE3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1B06 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1B54 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1B74 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1BA6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE4CFA94D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x75F91F3CECB8C46F20150F60F77A6E1F0DE00776627692DB82EF1960AF84C33A SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1C21 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1C41 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C73 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE4CFA94D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x1 DUP2 ISZERO ISZERO EQ DUP1 ISZERO SWAP1 PUSH2 0x1C85 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1CA7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x81ED1AE3 PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x1CD8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD CALLER DUP2 MSTORE SWAP2 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF SWAP1 SWAP3 AND ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH32 0x7A1655BC3160D3413BF1D5235E55BE12E01B7E8BC2436A9BFF09C3B4FA2421F1 SWAP1 PUSH1 0x60 ADD PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1D7B JUMPI POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1D92 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x2 SLOAD ISZERO DUP1 ISZERO PUSH2 0x1DC2 JUMPI POP PUSH1 0x1 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1DEF JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2FD92D8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x1DFA PUSH2 0x2400 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1FE2 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1FDA JUMPI PUSH1 0x3 SLOAD PUSH0 DUP3 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1E72 SWAP1 PUSH2 0x2710 PUSH2 0x2CB5 JUMP JUMPDEST PUSH2 0x1E7C SWAP2 SWAP1 PUSH2 0x2CCC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1E89 DUP7 DUP4 PUSH2 0x256D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E9C SWAP2 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1EAC SWAP1 POP DUP2 DUP6 PUSH2 0x2C63 JUMP JUMPDEST SWAP4 POP DUP5 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1EBF SWAP2 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1EFA SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1F35 SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0x1F46 DUP7 DUP4 PUSH2 0x2C63 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1F81 SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP8 DUP6 GT ISZERO PUSH2 0x1FD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742069732067726561746572207468656E20353025000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAB2 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1E04 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0xEE826440768329B0C72F81331212EE31FCDAC1EA79A248D24821E40C34E58020 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x2054 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x2074 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x2097 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE DUP2 MLOAD CALLER DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x20D3 PUSH2 0x22D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x2105 DUP2 PUSH2 0x2332 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2110 PUSH2 0x25D6 JUMP JUMPDEST PUSH2 0x2105 DUP2 PUSH2 0x261F JUMP JUMPDEST PUSH2 0x1330 PUSH2 0x25D6 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x21A7 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x219B PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D19 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2105 PUSH2 0x22D7 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2227 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2224 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x224F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D19 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x227F JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x2289 DUP4 DUP4 PUSH2 0x2627 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x2309 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23AF DUP3 PUSH2 0x2710 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x23BC DUP5 DUP4 PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x23C9 DUP6 DUP6 PUSH2 0x256D JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x23DC SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x23F4 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x2412 PUSH1 0x2 SLOAD PUSH2 0x1388 PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2421 DUP3 PUSH1 0x5 SLOAD PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2430 DUP4 PUSH1 0x6 SLOAD PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x243F DUP5 PUSH1 0x7 SLOAD PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2450 PUSH1 0x1 SLOAD PUSH1 0x4 SLOAD PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD GT PUSH2 0x247A JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7CA8D0DB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x2489 SWAP2 SWAP1 PUSH2 0x2CCC JUMP JUMPDEST SWAP1 POP PUSH2 0x2495 DUP4 DUP6 PUSH2 0x2C63 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x24A5 SWAP2 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x24BD SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2514 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2538 SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x255C JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST POP SWAP5 SWAP9 SWAP4 SWAP8 POP SWAP4 SWAP6 POP SWAP2 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 GT PUSH2 0x2591 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9B7220AF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x25B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB015AA7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0x25C2 DUP5 DUP7 PUSH2 0x2CB5 JUMP JUMPDEST PUSH2 0x25CC SWAP2 SWAP1 PUSH2 0x2CCC JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20D3 PUSH2 0x25D6 JUMP JUMPDEST PUSH2 0x2630 DUP3 PUSH2 0x267C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x2674 JUMPI PUSH2 0x2289 DUP3 DUP3 PUSH2 0x26DF JUMP JUMPDEST PUSH2 0xDD9 PUSH2 0x2751 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x26B1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D19 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x26FB SWAP2 SWAP1 PUSH2 0x2D02 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2733 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2738 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2748 DUP6 DUP4 DUP4 PUSH2 0x2770 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2785 JUMPI PUSH2 0x2780 DUP3 PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x27C8 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x279C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x27C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x27DF JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x280E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2827 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2830 DUP7 PUSH2 0x27F8 JUMP JUMPDEST SWAP5 POP PUSH2 0x283E PUSH1 0x20 DUP8 ADD PUSH2 0x27F8 JUMP JUMPDEST SWAP4 POP PUSH2 0x284C PUSH1 0x40 DUP8 ADD PUSH2 0x27F8 JUMP JUMPDEST SWAP3 POP PUSH2 0x285A PUSH1 0x60 DUP8 ADD PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2868 PUSH1 0x80 DUP8 ADD PUSH2 0x27F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2884 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x28C8 JUMPI PUSH2 0x28C8 PUSH2 0x288B JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x28E9 JUMPI PUSH2 0x28E9 PUSH2 0x288B JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2902 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2915 PUSH2 0x2910 DUP3 PUSH2 0x28D0 JUMP JUMPDEST PUSH2 0x289F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP DUP6 DUP4 GT ISZERO PUSH2 0x2936 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x295A JUMPI PUSH2 0x294C DUP2 PUSH2 0x27F8 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x293B JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2975 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x298B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x299B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x29A9 PUSH2 0x2910 DUP3 PUSH2 0x28D0 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP8 DUP4 GT ISZERO PUSH2 0x29CA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x29EC JUMPI DUP4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x29D1 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A0A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2A16 DUP6 DUP3 DUP7 ADD PUSH2 0x28F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A31 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A47 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2A57 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A6D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x2A7E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A9F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2AA8 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2AD3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AED JUMPI PUSH2 0x2AED PUSH2 0x288B JUMP JUMPDEST PUSH2 0x2B00 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x289F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP7 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x2B14 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B44 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x2B9B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2B53 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x27C8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B53 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x27C8 DUP3 PUSH2 0x27F8 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2105 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BEC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2BF5 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2C05 DUP2 PUSH2 0x2BCE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x2C35 JUMPI PUSH2 0x2C35 PUSH2 0x2C10 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x25D0 JUMPI PUSH2 0x25D0 PUSH2 0x2C10 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x25D0 JUMPI PUSH2 0x25D0 PUSH2 0x2C10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CAA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x27C8 DUP2 PUSH2 0x2BCE JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x25D0 JUMPI PUSH2 0x25D0 PUSH2 0x2C10 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2CE6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CFB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCB5671393C7C6980552E50A BALANCE 0xE7 PUSH25 0x921EB17D764C2E98FBF4D44FFF524712DEF9A2646970667358 0x22 SLT KECCAK256 DUP16 0xAA PUSH2 0xC493 0xBC 0x1E PUSH31 0xC40AC17C40F46B6E4F326660A1AFF6215ED06EE7754902F664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "896:17073:10:-:0;;;1171:4:3;1128:48;;4233:53:10;;;;;;;;;-1:-1:-1;4257:22:10;:20;:22::i;:::-;896:17073;;7711:422:2;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:2;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:2;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:2;-1:-1:-1;;;;;8035:33:2;;;;;8087:29;;158:50:11;;;8087:29:2;;146:2:11;131:18;8087:29:2;;;;;;;7981:146;7760:373;7711:422::o;14:200:11:-;896:17073:10;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_491": {
									"entryPoint": null,
									"id": 491,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_73": {
									"entryPoint": 8456,
									"id": 73,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_100": {
									"entryPoint": 9759,
									"id": 100,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_521": {
									"entryPoint": 8473,
									"id": 521,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_3006": {
									"entryPoint": 8645,
									"id": 3006,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_389": {
									"entryPoint": 9686,
									"id": 389,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1007": {
									"entryPoint": 10065,
									"id": 1007,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_597": {
									"entryPoint": 8846,
									"id": 597,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_141": {
									"entryPoint": 8919,
									"id": 141,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_581": {
									"entryPoint": 8481,
									"id": 581,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_466": {
									"entryPoint": null,
									"id": 466,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_457": {
									"entryPoint": null,
									"id": 457,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_677": {
									"entryPoint": null,
									"id": 677,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1270": {
									"entryPoint": 10191,
									"id": 1270,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_793": {
									"entryPoint": 9852,
									"id": 793,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_212": {
									"entryPoint": 9010,
									"id": 212,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_648": {
									"entryPoint": 8653,
									"id": 648,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addFunds_2175": {
									"entryPoint": 6356,
									"id": 2175,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addOwnership_1819": {
									"entryPoint": 5401,
									"id": 1819,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addProjects_1773": {
									"entryPoint": 2672,
									"id": 1773,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addTreasuery_1865": {
									"entryPoint": 3607,
									"id": 1865,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@alreadyAdded_1489": {
									"entryPoint": null,
									"id": 1489,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@blockUser_2818": {
									"entryPoint": 7163,
									"id": 2818,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@calculateFees_2211": {
									"entryPoint": 9122,
									"id": 2211,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@calculatePercentage_2680": {
									"entryPoint": 9581,
									"id": 2680,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkUpkeep_2485": {
									"entryPoint": 4847,
									"id": 2485,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@flowToTreasuryPercentage_1448": {
									"entryPoint": null,
									"id": 1448,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_1190": {
									"entryPoint": 9951,
									"id": 1190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1303": {
									"entryPoint": null,
									"id": 1303,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_766": {
									"entryPoint": null,
									"id": 766,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_1737": {
									"entryPoint": 2293,
									"id": 1737,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@interval_1458": {
									"entryPoint": null,
									"id": 1458,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastTimeStamp_1464": {
									"entryPoint": null,
									"id": 1464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maintainceFeePercentage_1450": {
									"entryPoint": null,
									"id": 1450,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@multisigAddress_1454": {
									"entryPoint": null,
									"id": 1454,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@noOfUsers_1452": {
									"entryPoint": null,
									"id": 1452,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@odividentPayoutPercentage_1446": {
									"entryPoint": null,
									"id": 1446,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@off_2610": {
									"entryPoint": 4196,
									"id": 2610,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOne_1468": {
									"entryPoint": null,
									"id": 1468,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerShipPoolAmount_1440": {
									"entryPoint": null,
									"id": 1440,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerTwo_1470": {
									"entryPoint": null,
									"id": 1470,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@perPoolCalculation_2457": {
									"entryPoint": 9216,
									"id": 2457,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@performUpkeep_2538": {
									"entryPoint": 3333,
									"id": 2538,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@proxiableUUID_539": {
									"entryPoint": 3937,
									"id": 539,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@reStakeTokens_2116": {
									"entryPoint": 6021,
									"id": 2116,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@realInterval_1460": {
									"entryPoint": null,
									"id": 1460,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_155": {
									"entryPoint": 4895,
									"id": 155,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_forwarderAddress_1466": {
									"entryPoint": null,
									"id": 1466,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setForwarderAddress_2640": {
									"entryPoint": 6958,
									"id": 2640,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setInterval_2594": {
									"entryPoint": 3964,
									"id": 2594,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTeasueryPercentages_2851": {
									"entryPoint": 8238,
									"id": 2851,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setflowToTreasuryPercentage_2932": {
									"entryPoint": 6668,
									"id": 2932,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setmaintainceFeePercentage_2959": {
									"entryPoint": 5731,
									"id": 2959,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setodividentPayoutPercentage_2905": {
									"entryPoint": 6813,
									"id": 2905,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@settdividentPayoutPercentage_2878": {
									"entryPoint": 5876,
									"id": 2878,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeTokensByOwner_2039": {
									"entryPoint": 2904,
									"id": 2039,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakeTokens_1956": {
									"entryPoint": 4914,
									"id": 1956,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@startingTime_1462": {
									"entryPoint": null,
									"id": 1462,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tPPercentages_1497": {
									"entryPoint": null,
									"id": 1497,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tdividentPayoutPercentage_1444": {
									"entryPoint": null,
									"id": 1444,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalProjects_1485": {
									"entryPoint": null,
									"id": 1485,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStakedAmount_1442": {
									"entryPoint": null,
									"id": 1442,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalUsers_1493": {
									"entryPoint": null,
									"id": 1493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_183": {
									"entryPoint": 8395,
									"id": 183,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@treasuryPoolAmount_1438": {
									"entryPoint": null,
									"id": 1438,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_559": {
									"entryPoint": 3580,
									"id": 559,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_827": {
									"entryPoint": 9767,
									"id": 827,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@usdcToken_1436": {
									"entryPoint": null,
									"id": 1436,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userRegistered_1502": {
									"entryPoint": null,
									"id": 1502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userWithdrawAmoount_2753": {
									"entryPoint": 4332,
									"id": 2753,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1230": {
									"entryPoint": 10096,
									"id": 1230,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@weeklyTransfer_2365": {
									"entryPoint": 7509,
									"id": 2365,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 10232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn": {
									"entryPoint": 10483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 11189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_address": {
									"entryPoint": 10259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 11227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 10894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 10596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 11418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 11499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_calldata_ptr": {
									"entryPoint": 10784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 10356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 11059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_bytes": {
									"entryPoint": 11091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 11522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11382,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 11137,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$1425__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_daaf22ee48ba14ce5532421d554d114832ad11cacc0a90889b6df539cd8418d7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 10399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 10448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 11324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 11300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11343,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 10379,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 11214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13602:11",
										"nodeType": "YulBlock",
										"src": "0:13602:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:11",
													"nodeType": "YulBlock",
													"src": "115:76:11",
													"statements": [
														{
															"nativeSrc": "125:26:11",
															"nodeType": "YulAssignment",
															"src": "125:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:11",
																		"nodeType": "YulLiteral",
																		"src": "148:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:11"
																},
																"nativeSrc": "133:18:11",
																"nodeType": "YulFunctionCall",
																"src": "133:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:11"
																},
																"nativeSrc": "160:25:11",
																"nodeType": "YulFunctionCall",
																"src": "160:25:11"
															},
															"nativeSrc": "160:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:11",
														"nodeType": "YulTypedName",
														"src": "84:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:11",
														"nodeType": "YulTypedName",
														"src": "95:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:11",
														"nodeType": "YulTypedName",
														"src": "106:4:11",
														"type": ""
													}
												],
												"src": "14:177:11"
											},
											{
												"body": {
													"nativeSrc": "312:102:11",
													"nodeType": "YulBlock",
													"src": "312:102:11",
													"statements": [
														{
															"nativeSrc": "322:26:11",
															"nodeType": "YulAssignment",
															"src": "322:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:11",
																		"nodeType": "YulLiteral",
																		"src": "345:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:11"
																},
																"nativeSrc": "330:18:11",
																"nodeType": "YulFunctionCall",
																"src": "330:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "364:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "364:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "379:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "379:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "395:3:11",
																								"nodeType": "YulLiteral",
																								"src": "395:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "400:1:11",
																								"nodeType": "YulLiteral",
																								"src": "400:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "391:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "391:3:11"
																						},
																						"nativeSrc": "391:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "391:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "404:1:11",
																						"nodeType": "YulLiteral",
																						"src": "404:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "387:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "387:3:11"
																				},
																				"nativeSrc": "387:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "387:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "375:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "375:3:11"
																		},
																		"nativeSrc": "375:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "375:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "357:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "357:6:11"
																},
																"nativeSrc": "357:51:11",
																"nodeType": "YulFunctionCall",
																"src": "357:51:11"
															},
															"nativeSrc": "357:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "357:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$1425__to_t_address__fromStack_reversed",
												"nativeSrc": "196:218:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "281:9:11",
														"nodeType": "YulTypedName",
														"src": "281:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "292:6:11",
														"nodeType": "YulTypedName",
														"src": "292:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "303:4:11",
														"nodeType": "YulTypedName",
														"src": "303:4:11",
														"type": ""
													}
												],
												"src": "196:218:11"
											},
											{
												"body": {
													"nativeSrc": "468:124:11",
													"nodeType": "YulBlock",
													"src": "468:124:11",
													"statements": [
														{
															"nativeSrc": "478:29:11",
															"nodeType": "YulAssignment",
															"src": "478:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "500:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "500:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "487:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "487:12:11"
																},
																"nativeSrc": "487:20:11",
																"nodeType": "YulFunctionCall",
																"src": "487:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "478:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "478:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "570:16:11",
																"nodeType": "YulBlock",
																"src": "570:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "579:1:11",
																					"nodeType": "YulLiteral",
																					"src": "579:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "582:1:11",
																					"nodeType": "YulLiteral",
																					"src": "582:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "572:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "572:6:11"
																			},
																			"nativeSrc": "572:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "572:12:11"
																		},
																		"nativeSrc": "572:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "572:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "529:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "529:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "540:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "540:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "555:3:11",
																										"nodeType": "YulLiteral",
																										"src": "555:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "560:1:11",
																										"nodeType": "YulLiteral",
																										"src": "560:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "551:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "551:3:11"
																								},
																								"nativeSrc": "551:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "551:11:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "564:1:11",
																								"nodeType": "YulLiteral",
																								"src": "564:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "547:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "547:3:11"
																						},
																						"nativeSrc": "547:19:11",
																						"nodeType": "YulFunctionCall",
																						"src": "547:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "536:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "536:3:11"
																				},
																				"nativeSrc": "536:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "536:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "526:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "526:2:11"
																		},
																		"nativeSrc": "526:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "526:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "519:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "519:6:11"
																},
																"nativeSrc": "519:50:11",
																"nodeType": "YulFunctionCall",
																"src": "519:50:11"
															},
															"nativeSrc": "516:70:11",
															"nodeType": "YulIf",
															"src": "516:70:11"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "419:173:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "447:6:11",
														"nodeType": "YulTypedName",
														"src": "447:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "458:5:11",
														"nodeType": "YulTypedName",
														"src": "458:5:11",
														"type": ""
													}
												],
												"src": "419:173:11"
											},
											{
												"body": {
													"nativeSrc": "735:346:11",
													"nodeType": "YulBlock",
													"src": "735:346:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "782:16:11",
																"nodeType": "YulBlock",
																"src": "782:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "791:1:11",
																					"nodeType": "YulLiteral",
																					"src": "791:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "794:1:11",
																					"nodeType": "YulLiteral",
																					"src": "794:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "784:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "784:6:11"
																			},
																			"nativeSrc": "784:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "784:12:11"
																		},
																		"nativeSrc": "784:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "784:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "756:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "756:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "765:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "765:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "752:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "752:3:11"
																		},
																		"nativeSrc": "752:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "752:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "777:3:11",
																		"nodeType": "YulLiteral",
																		"src": "777:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "748:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "748:3:11"
																},
																"nativeSrc": "748:33:11",
																"nodeType": "YulFunctionCall",
																"src": "748:33:11"
															},
															"nativeSrc": "745:53:11",
															"nodeType": "YulIf",
															"src": "745:53:11"
														},
														{
															"nativeSrc": "807:39:11",
															"nodeType": "YulAssignment",
															"src": "807:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "836:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "836:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "817:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "817:18:11"
																},
																"nativeSrc": "817:29:11",
																"nodeType": "YulFunctionCall",
																"src": "817:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "807:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "807:6:11"
																}
															]
														},
														{
															"nativeSrc": "855:48:11",
															"nodeType": "YulAssignment",
															"src": "855:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "888:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "888:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "899:2:11",
																				"nodeType": "YulLiteral",
																				"src": "899:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "884:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "884:3:11"
																		},
																		"nativeSrc": "884:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "884:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "865:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "865:18:11"
																},
																"nativeSrc": "865:38:11",
																"nodeType": "YulFunctionCall",
																"src": "865:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "855:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "855:6:11"
																}
															]
														},
														{
															"nativeSrc": "912:48:11",
															"nodeType": "YulAssignment",
															"src": "912:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "945:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "945:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "956:2:11",
																				"nodeType": "YulLiteral",
																				"src": "956:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "941:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "941:3:11"
																		},
																		"nativeSrc": "941:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "941:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "922:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "922:18:11"
																},
																"nativeSrc": "922:38:11",
																"nodeType": "YulFunctionCall",
																"src": "922:38:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "912:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "912:6:11"
																}
															]
														},
														{
															"nativeSrc": "969:48:11",
															"nodeType": "YulAssignment",
															"src": "969:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1002:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1002:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1013:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1013:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "998:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "998:3:11"
																		},
																		"nativeSrc": "998:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "998:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "979:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "979:18:11"
																},
																"nativeSrc": "979:38:11",
																"nodeType": "YulFunctionCall",
																"src": "979:38:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "969:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "969:6:11"
																}
															]
														},
														{
															"nativeSrc": "1026:49:11",
															"nodeType": "YulAssignment",
															"src": "1026:49:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1059:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1059:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1070:3:11",
																				"nodeType": "YulLiteral",
																				"src": "1070:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1055:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1055:3:11"
																		},
																		"nativeSrc": "1055:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1055:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1036:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1036:18:11"
																},
																"nativeSrc": "1036:39:11",
																"nodeType": "YulFunctionCall",
																"src": "1036:39:11"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "1026:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1026:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_address",
												"nativeSrc": "597:484:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "669:9:11",
														"nodeType": "YulTypedName",
														"src": "669:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "680:7:11",
														"nodeType": "YulTypedName",
														"src": "680:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "692:6:11",
														"nodeType": "YulTypedName",
														"src": "692:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "700:6:11",
														"nodeType": "YulTypedName",
														"src": "700:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "708:6:11",
														"nodeType": "YulTypedName",
														"src": "708:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "716:6:11",
														"nodeType": "YulTypedName",
														"src": "716:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "724:6:11",
														"nodeType": "YulTypedName",
														"src": "724:6:11",
														"type": ""
													}
												],
												"src": "597:484:11"
											},
											{
												"body": {
													"nativeSrc": "1156:156:11",
													"nodeType": "YulBlock",
													"src": "1156:156:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1202:16:11",
																"nodeType": "YulBlock",
																"src": "1202:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1211:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1211:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1214:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1214:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1204:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1204:6:11"
																			},
																			"nativeSrc": "1204:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1204:12:11"
																		},
																		"nativeSrc": "1204:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1204:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1177:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1177:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1186:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1186:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1173:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1173:3:11"
																		},
																		"nativeSrc": "1173:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1173:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1198:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1198:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1169:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1169:3:11"
																},
																"nativeSrc": "1169:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1169:32:11"
															},
															"nativeSrc": "1166:52:11",
															"nodeType": "YulIf",
															"src": "1166:52:11"
														},
														{
															"nativeSrc": "1227:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1227:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "1240:1:11",
																"nodeType": "YulLiteral",
																"src": "1240:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1231:5:11",
																	"nodeType": "YulTypedName",
																	"src": "1231:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1250:32:11",
															"nodeType": "YulAssignment",
															"src": "1250:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1272:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1272:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1259:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1259:12:11"
																},
																"nativeSrc": "1259:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1259:23:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1250:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1250:5:11"
																}
															]
														},
														{
															"nativeSrc": "1291:15:11",
															"nodeType": "YulAssignment",
															"src": "1291:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "1301:5:11",
																"nodeType": "YulIdentifier",
																"src": "1301:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1291:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1086:226:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1122:9:11",
														"nodeType": "YulTypedName",
														"src": "1122:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1133:7:11",
														"nodeType": "YulTypedName",
														"src": "1133:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1145:6:11",
														"nodeType": "YulTypedName",
														"src": "1145:6:11",
														"type": ""
													}
												],
												"src": "1086:226:11"
											},
											{
												"body": {
													"nativeSrc": "1418:102:11",
													"nodeType": "YulBlock",
													"src": "1418:102:11",
													"statements": [
														{
															"nativeSrc": "1428:26:11",
															"nodeType": "YulAssignment",
															"src": "1428:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1440:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1440:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1451:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1451:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1436:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1436:3:11"
																},
																"nativeSrc": "1436:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1436:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1428:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1428:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1470:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1470:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1485:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1485:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1501:3:11",
																								"nodeType": "YulLiteral",
																								"src": "1501:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1506:1:11",
																								"nodeType": "YulLiteral",
																								"src": "1506:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1497:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1497:3:11"
																						},
																						"nativeSrc": "1497:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1497:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1510:1:11",
																						"nodeType": "YulLiteral",
																						"src": "1510:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1493:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1493:3:11"
																				},
																				"nativeSrc": "1493:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1493:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1481:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1481:3:11"
																		},
																		"nativeSrc": "1481:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1481:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1463:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1463:6:11"
																},
																"nativeSrc": "1463:51:11",
																"nodeType": "YulFunctionCall",
																"src": "1463:51:11"
															},
															"nativeSrc": "1463:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "1463:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1317:203:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1387:9:11",
														"nodeType": "YulTypedName",
														"src": "1387:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1398:6:11",
														"nodeType": "YulTypedName",
														"src": "1398:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1409:4:11",
														"nodeType": "YulTypedName",
														"src": "1409:4:11",
														"type": ""
													}
												],
												"src": "1317:203:11"
											},
											{
												"body": {
													"nativeSrc": "1557:95:11",
													"nodeType": "YulBlock",
													"src": "1557:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1574:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1574:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1581:3:11",
																				"nodeType": "YulLiteral",
																				"src": "1581:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1586:10:11",
																				"nodeType": "YulLiteral",
																				"src": "1586:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1577:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1577:3:11"
																		},
																		"nativeSrc": "1577:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1567:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1567:6:11"
																},
																"nativeSrc": "1567:31:11",
																"nodeType": "YulFunctionCall",
																"src": "1567:31:11"
															},
															"nativeSrc": "1567:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "1567:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1614:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1614:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1617:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1617:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1607:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1607:6:11"
																},
																"nativeSrc": "1607:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1607:15:11"
															},
															"nativeSrc": "1607:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1607:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1638:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1638:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1641:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1641:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1631:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1631:6:11"
																},
																"nativeSrc": "1631:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1631:15:11"
															},
															"nativeSrc": "1631:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1631:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1525:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1525:127:11"
											},
											{
												"body": {
													"nativeSrc": "1702:230:11",
													"nodeType": "YulBlock",
													"src": "1702:230:11",
													"statements": [
														{
															"nativeSrc": "1712:19:11",
															"nodeType": "YulAssignment",
															"src": "1712:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1728:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1728:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1722:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1722:5:11"
																},
																"nativeSrc": "1722:9:11",
																"nodeType": "YulFunctionCall",
																"src": "1722:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1712:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1712:6:11"
																}
															]
														},
														{
															"nativeSrc": "1740:58:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1740:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1762:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1762:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "1778:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "1778:4:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1784:2:11",
																						"nodeType": "YulLiteral",
																						"src": "1784:2:11",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1774:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1774:3:11"
																				},
																				"nativeSrc": "1774:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1774:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1793:2:11",
																						"nodeType": "YulLiteral",
																						"src": "1793:2:11",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1789:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1789:3:11"
																				},
																				"nativeSrc": "1789:7:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1789:7:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1770:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1770:3:11"
																		},
																		"nativeSrc": "1770:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1770:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1758:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1758:3:11"
																},
																"nativeSrc": "1758:40:11",
																"nodeType": "YulFunctionCall",
																"src": "1758:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1744:10:11",
																	"nodeType": "YulTypedName",
																	"src": "1744:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1873:22:11",
																"nodeType": "YulBlock",
																"src": "1873:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1875:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1875:16:11"
																			},
																			"nativeSrc": "1875:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1875:18:11"
																		},
																		"nativeSrc": "1875:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1875:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1816:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "1816:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1828:18:11",
																				"nodeType": "YulLiteral",
																				"src": "1828:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1813:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1813:2:11"
																		},
																		"nativeSrc": "1813:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1813:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1852:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "1852:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1864:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1864:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1849:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1849:2:11"
																		},
																		"nativeSrc": "1849:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1849:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1810:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1810:2:11"
																},
																"nativeSrc": "1810:62:11",
																"nodeType": "YulFunctionCall",
																"src": "1810:62:11"
															},
															"nativeSrc": "1807:88:11",
															"nodeType": "YulIf",
															"src": "1807:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1911:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1911:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1915:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "1915:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1904:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1904:6:11"
																},
																"nativeSrc": "1904:22:11",
																"nodeType": "YulFunctionCall",
																"src": "1904:22:11"
															},
															"nativeSrc": "1904:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "1904:22:11"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1657:275:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1682:4:11",
														"nodeType": "YulTypedName",
														"src": "1682:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1691:6:11",
														"nodeType": "YulTypedName",
														"src": "1691:6:11",
														"type": ""
													}
												],
												"src": "1657:275:11"
											},
											{
												"body": {
													"nativeSrc": "2006:114:11",
													"nodeType": "YulBlock",
													"src": "2006:114:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2050:22:11",
																"nodeType": "YulBlock",
																"src": "2050:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2052:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "2052:16:11"
																			},
																			"nativeSrc": "2052:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2052:18:11"
																		},
																		"nativeSrc": "2052:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2052:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2022:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2022:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2030:18:11",
																		"nodeType": "YulLiteral",
																		"src": "2030:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2019:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2019:2:11"
																},
																"nativeSrc": "2019:30:11",
																"nodeType": "YulFunctionCall",
																"src": "2019:30:11"
															},
															"nativeSrc": "2016:56:11",
															"nodeType": "YulIf",
															"src": "2016:56:11"
														},
														{
															"nativeSrc": "2081:33:11",
															"nodeType": "YulAssignment",
															"src": "2081:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2097:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2097:1:11",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2100:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2100:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2093:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2093:3:11"
																		},
																		"nativeSrc": "2093:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2093:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2109:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2109:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2089:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2089:3:11"
																},
																"nativeSrc": "2089:25:11",
																"nodeType": "YulFunctionCall",
																"src": "2089:25:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2081:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2081:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nativeSrc": "1937:183:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1986:6:11",
														"nodeType": "YulTypedName",
														"src": "1986:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1997:4:11",
														"nodeType": "YulTypedName",
														"src": "1997:4:11",
														"type": ""
													}
												],
												"src": "1937:183:11"
											},
											{
												"body": {
													"nativeSrc": "2189:611:11",
													"nodeType": "YulBlock",
													"src": "2189:611:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2238:16:11",
																"nodeType": "YulBlock",
																"src": "2238:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2247:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2247:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2250:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2250:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2240:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2240:6:11"
																			},
																			"nativeSrc": "2240:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2240:12:11"
																		},
																		"nativeSrc": "2240:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2240:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2217:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2217:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2225:4:11",
																						"nodeType": "YulLiteral",
																						"src": "2225:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2213:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2213:3:11"
																				},
																				"nativeSrc": "2213:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2213:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2232:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2232:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2209:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2209:3:11"
																		},
																		"nativeSrc": "2209:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2209:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2202:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2202:6:11"
																},
																"nativeSrc": "2202:35:11",
																"nodeType": "YulFunctionCall",
																"src": "2202:35:11"
															},
															"nativeSrc": "2199:55:11",
															"nodeType": "YulIf",
															"src": "2199:55:11"
														},
														{
															"nativeSrc": "2263:34:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2263:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2290:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2277:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2277:12:11"
																},
																"nativeSrc": "2277:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2277:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2267:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2267:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2306:75:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2306:75:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2373:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2373:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nativeSrc": "2333:39:11",
																			"nodeType": "YulIdentifier",
																			"src": "2333:39:11"
																		},
																		"nativeSrc": "2333:47:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2333:47:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2317:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "2317:15:11"
																},
																"nativeSrc": "2317:64:11",
																"nodeType": "YulFunctionCall",
																"src": "2317:64:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2310:3:11",
																	"nodeType": "YulTypedName",
																	"src": "2310:3:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2390:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2390:18:11",
															"value": {
																"name": "dst",
																"nativeSrc": "2405:3:11",
																"nodeType": "YulIdentifier",
																"src": "2405:3:11"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nativeSrc": "2394:7:11",
																	"nodeType": "YulTypedName",
																	"src": "2394:7:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2424:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2424:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2429:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2429:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2417:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2417:6:11"
																},
																"nativeSrc": "2417:19:11",
																"nodeType": "YulFunctionCall",
																"src": "2417:19:11"
															},
															"nativeSrc": "2417:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "2417:19:11"
														},
														{
															"nativeSrc": "2445:21:11",
															"nodeType": "YulAssignment",
															"src": "2445:21:11",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2456:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2456:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2461:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2461:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2452:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2452:3:11"
																},
																"nativeSrc": "2452:14:11",
																"nodeType": "YulFunctionCall",
																"src": "2452:14:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "2445:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2445:3:11"
																}
															]
														},
														{
															"nativeSrc": "2475:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2475:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2497:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2497:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2509:1:11",
																						"nodeType": "YulLiteral",
																						"src": "2509:1:11",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2512:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2512:6:11"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2505:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2505:3:11"
																				},
																				"nativeSrc": "2505:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2505:14:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2493:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2493:3:11"
																		},
																		"nativeSrc": "2493:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2493:27:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2522:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2522:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2489:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2489:3:11"
																},
																"nativeSrc": "2489:38:11",
																"nodeType": "YulFunctionCall",
																"src": "2489:38:11"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2479:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2479:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2555:16:11",
																"nodeType": "YulBlock",
																"src": "2555:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2564:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2564:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2567:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2567:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2557:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2557:6:11"
																			},
																			"nativeSrc": "2557:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2557:12:11"
																		},
																		"nativeSrc": "2557:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2557:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2542:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2542:6:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2550:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2550:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2539:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2539:2:11"
																},
																"nativeSrc": "2539:15:11",
																"nodeType": "YulFunctionCall",
																"src": "2539:15:11"
															},
															"nativeSrc": "2536:35:11",
															"nodeType": "YulIf",
															"src": "2536:35:11"
														},
														{
															"nativeSrc": "2580:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2580:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2595:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2595:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2603:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2603:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2591:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2591:3:11"
																},
																"nativeSrc": "2591:17:11",
																"nodeType": "YulFunctionCall",
																"src": "2591:17:11"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "2584:3:11",
																	"nodeType": "YulTypedName",
																	"src": "2584:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2675:94:11",
																"nodeType": "YulBlock",
																"src": "2675:94:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2696:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2696:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "2720:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "2720:3:11"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nativeSrc": "2701:18:11",
																						"nodeType": "YulIdentifier",
																						"src": "2701:18:11"
																					},
																					"nativeSrc": "2701:23:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2701:23:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2689:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2689:6:11"
																			},
																			"nativeSrc": "2689:36:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2689:36:11"
																		},
																		"nativeSrc": "2689:36:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2689:36:11"
																	},
																	{
																		"nativeSrc": "2738:21:11",
																		"nodeType": "YulAssignment",
																		"src": "2738:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2749:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2749:3:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2754:4:11",
																					"nodeType": "YulLiteral",
																					"src": "2754:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2745:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2745:3:11"
																			},
																			"nativeSrc": "2745:14:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2745:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "2738:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2738:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2628:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2628:3:11"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2633:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2633:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2625:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2625:2:11"
																},
																"nativeSrc": "2625:15:11",
																"nodeType": "YulFunctionCall",
																"src": "2625:15:11"
															},
															"nativeSrc": "2617:152:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2641:25:11",
																"nodeType": "YulBlock",
																"src": "2641:25:11",
																"statements": [
																	{
																		"nativeSrc": "2643:21:11",
																		"nodeType": "YulAssignment",
																		"src": "2643:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2654:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2654:3:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2659:4:11",
																					"nodeType": "YulLiteral",
																					"src": "2659:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2650:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2650:3:11"
																			},
																			"nativeSrc": "2650:14:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2650:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "2643:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2643:3:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2621:3:11",
																"nodeType": "YulBlock",
																"src": "2621:3:11",
																"statements": []
															},
															"src": "2617:152:11"
														},
														{
															"nativeSrc": "2778:16:11",
															"nodeType": "YulAssignment",
															"src": "2778:16:11",
															"value": {
																"name": "array_1",
																"nativeSrc": "2787:7:11",
																"nodeType": "YulIdentifier",
																"src": "2787:7:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2778:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2778:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn",
												"nativeSrc": "2125:675:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2163:6:11",
														"nodeType": "YulTypedName",
														"src": "2163:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2171:3:11",
														"nodeType": "YulTypedName",
														"src": "2171:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2179:5:11",
														"nodeType": "YulTypedName",
														"src": "2179:5:11",
														"type": ""
													}
												],
												"src": "2125:675:11"
											},
											{
												"body": {
													"nativeSrc": "2942:1057:11",
													"nodeType": "YulBlock",
													"src": "2942:1057:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2988:16:11",
																"nodeType": "YulBlock",
																"src": "2988:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2997:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2997:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3000:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3000:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2990:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2990:6:11"
																			},
																			"nativeSrc": "2990:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2990:12:11"
																		},
																		"nativeSrc": "2990:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2990:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2963:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2963:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2972:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2972:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2959:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2959:3:11"
																		},
																		"nativeSrc": "2959:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2959:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2984:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2984:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2955:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2955:3:11"
																},
																"nativeSrc": "2955:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2955:32:11"
															},
															"nativeSrc": "2952:52:11",
															"nodeType": "YulIf",
															"src": "2952:52:11"
														},
														{
															"nativeSrc": "3013:37:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3013:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3040:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3040:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3027:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3027:12:11"
																},
																"nativeSrc": "3027:23:11",
																"nodeType": "YulFunctionCall",
																"src": "3027:23:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3017:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3017:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3093:16:11",
																"nodeType": "YulBlock",
																"src": "3093:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3102:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3102:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3105:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3095:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3095:6:11"
																			},
																			"nativeSrc": "3095:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3095:12:11"
																		},
																		"nativeSrc": "3095:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3095:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3065:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3065:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3073:18:11",
																		"nodeType": "YulLiteral",
																		"src": "3073:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3062:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3062:2:11"
																},
																"nativeSrc": "3062:30:11",
																"nodeType": "YulFunctionCall",
																"src": "3062:30:11"
															},
															"nativeSrc": "3059:50:11",
															"nodeType": "YulIf",
															"src": "3059:50:11"
														},
														{
															"nativeSrc": "3118:32:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3118:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3132:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3132:9:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3143:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3143:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3128:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3128:3:11"
																},
																"nativeSrc": "3128:22:11",
																"nodeType": "YulFunctionCall",
																"src": "3128:22:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3122:2:11",
																	"nodeType": "YulTypedName",
																	"src": "3122:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3198:16:11",
																"nodeType": "YulBlock",
																"src": "3198:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3207:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3207:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3210:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3210:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3200:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3200:6:11"
																			},
																			"nativeSrc": "3200:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3200:12:11"
																		},
																		"nativeSrc": "3200:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3200:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "3177:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "3177:2:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3181:4:11",
																						"nodeType": "YulLiteral",
																						"src": "3181:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3173:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3173:3:11"
																				},
																				"nativeSrc": "3173:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3173:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3188:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3188:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3169:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3169:3:11"
																		},
																		"nativeSrc": "3169:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3169:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3162:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:11"
																},
																"nativeSrc": "3162:35:11",
																"nodeType": "YulFunctionCall",
																"src": "3162:35:11"
															},
															"nativeSrc": "3159:55:11",
															"nodeType": "YulIf",
															"src": "3159:55:11"
														},
														{
															"nativeSrc": "3223:30:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3223:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "3250:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "3250:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3237:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3237:12:11"
																},
																"nativeSrc": "3237:16:11",
																"nodeType": "YulFunctionCall",
																"src": "3237:16:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3227:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3227:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3262:75:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3262:75:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3329:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3329:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nativeSrc": "3289:39:11",
																			"nodeType": "YulIdentifier",
																			"src": "3289:39:11"
																		},
																		"nativeSrc": "3289:47:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3289:47:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3273:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "3273:15:11"
																},
																"nativeSrc": "3273:64:11",
																"nodeType": "YulFunctionCall",
																"src": "3273:64:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "3266:3:11",
																	"nodeType": "YulTypedName",
																	"src": "3266:3:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3346:16:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3346:16:11",
															"value": {
																"name": "dst",
																"nativeSrc": "3359:3:11",
																"nodeType": "YulIdentifier",
																"src": "3359:3:11"
															},
															"variables": [
																{
																	"name": "array",
																	"nativeSrc": "3350:5:11",
																	"nodeType": "YulTypedName",
																	"src": "3350:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3378:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3378:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3383:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3383:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3371:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3371:6:11"
																},
																"nativeSrc": "3371:19:11",
																"nodeType": "YulFunctionCall",
																"src": "3371:19:11"
															},
															"nativeSrc": "3371:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "3371:19:11"
														},
														{
															"nativeSrc": "3399:21:11",
															"nodeType": "YulAssignment",
															"src": "3399:21:11",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3410:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3410:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3415:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3415:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3406:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3406:3:11"
																},
																"nativeSrc": "3406:14:11",
																"nodeType": "YulFunctionCall",
																"src": "3406:14:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "3399:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3399:3:11"
																}
															]
														},
														{
															"nativeSrc": "3429:48:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3429:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "3451:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "3451:2:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3459:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3459:1:11",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3462:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3462:6:11"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3455:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3455:3:11"
																				},
																				"nativeSrc": "3455:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3455:14:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3447:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3447:3:11"
																		},
																		"nativeSrc": "3447:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3447:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3472:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3472:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3443:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3443:3:11"
																},
																"nativeSrc": "3443:34:11",
																"nodeType": "YulFunctionCall",
																"src": "3443:34:11"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "3433:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3433:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3509:16:11",
																"nodeType": "YulBlock",
																"src": "3509:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3518:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3518:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3521:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3521:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3511:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3511:6:11"
																			},
																			"nativeSrc": "3511:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3511:12:11"
																		},
																		"nativeSrc": "3511:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3511:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "3492:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3492:6:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3500:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "3500:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3489:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3489:2:11"
																},
																"nativeSrc": "3489:19:11",
																"nodeType": "YulFunctionCall",
																"src": "3489:19:11"
															},
															"nativeSrc": "3486:39:11",
															"nodeType": "YulIf",
															"src": "3486:39:11"
														},
														{
															"nativeSrc": "3534:24:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3534:24:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "3549:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "3549:2:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3553:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3553:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3545:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3545:3:11"
																},
																"nativeSrc": "3545:13:11",
																"nodeType": "YulFunctionCall",
																"src": "3545:13:11"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "3538:3:11",
																	"nodeType": "YulTypedName",
																	"src": "3538:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3625:142:11",
																"nodeType": "YulBlock",
																"src": "3625:142:11",
																"statements": [
																	{
																		"nativeSrc": "3639:14:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3639:14:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3652:1:11",
																			"nodeType": "YulLiteral",
																			"src": "3652:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nativeSrc": "3643:5:11",
																				"nodeType": "YulTypedName",
																				"src": "3643:5:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3666:26:11",
																		"nodeType": "YulAssignment",
																		"src": "3666:26:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "3688:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3688:3:11"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "3675:12:11",
																				"nodeType": "YulIdentifier",
																				"src": "3675:12:11"
																			},
																			"nativeSrc": "3675:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3675:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "3666:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3666:5:11"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3712:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3712:3:11"
																				},
																				{
																					"name": "value",
																					"nativeSrc": "3717:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "3717:5:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3705:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3705:6:11"
																			},
																			"nativeSrc": "3705:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3705:18:11"
																		},
																		"nativeSrc": "3705:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3705:18:11"
																	},
																	{
																		"nativeSrc": "3736:21:11",
																		"nodeType": "YulAssignment",
																		"src": "3736:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3747:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3747:3:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3752:4:11",
																					"nodeType": "YulLiteral",
																					"src": "3752:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3743:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3743:3:11"
																			},
																			"nativeSrc": "3743:14:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3743:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "3736:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3736:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3578:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3578:3:11"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "3583:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3583:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3575:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3575:2:11"
																},
																"nativeSrc": "3575:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3575:15:11"
															},
															"nativeSrc": "3567:200:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3591:25:11",
																"nodeType": "YulBlock",
																"src": "3591:25:11",
																"statements": [
																	{
																		"nativeSrc": "3593:21:11",
																		"nodeType": "YulAssignment",
																		"src": "3593:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "3604:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3604:3:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3609:4:11",
																					"nodeType": "YulLiteral",
																					"src": "3609:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3600:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3600:3:11"
																			},
																			"nativeSrc": "3600:14:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3600:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "3593:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3593:3:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3571:3:11",
																"nodeType": "YulBlock",
																"src": "3571:3:11",
																"statements": []
															},
															"src": "3567:200:11"
														},
														{
															"nativeSrc": "3776:15:11",
															"nodeType": "YulAssignment",
															"src": "3776:15:11",
															"value": {
																"name": "array",
																"nativeSrc": "3786:5:11",
																"nodeType": "YulIdentifier",
																"src": "3786:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3776:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:11"
																}
															]
														},
														{
															"nativeSrc": "3800:50:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3800:50:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3833:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3833:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3844:4:11",
																				"nodeType": "YulLiteral",
																				"src": "3844:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3829:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3829:3:11"
																		},
																		"nativeSrc": "3829:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3829:20:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3816:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3816:12:11"
																},
																"nativeSrc": "3816:34:11",
																"nodeType": "YulFunctionCall",
																"src": "3816:34:11"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "3804:8:11",
																	"nodeType": "YulTypedName",
																	"src": "3804:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3895:16:11",
																"nodeType": "YulBlock",
																"src": "3895:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3904:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3904:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3907:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3907:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3897:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3897:6:11"
																			},
																			"nativeSrc": "3897:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3897:12:11"
																		},
																		"nativeSrc": "3897:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3897:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "3865:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "3865:8:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3875:18:11",
																		"nodeType": "YulLiteral",
																		"src": "3875:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3862:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3862:2:11"
																},
																"nativeSrc": "3862:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3862:32:11"
															},
															"nativeSrc": "3859:52:11",
															"nodeType": "YulIf",
															"src": "3859:52:11"
														},
														{
															"nativeSrc": "3920:73:11",
															"nodeType": "YulAssignment",
															"src": "3920:73:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3963:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3963:9:11"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "3974:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "3974:8:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3959:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3959:3:11"
																		},
																		"nativeSrc": "3959:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3959:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3985:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "3985:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nativeSrc": "3930:28:11",
																	"nodeType": "YulIdentifier",
																	"src": "3930:28:11"
																},
																"nativeSrc": "3930:63:11",
																"nodeType": "YulFunctionCall",
																"src": "3930:63:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3920:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3920:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "2805:1194:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2900:9:11",
														"nodeType": "YulTypedName",
														"src": "2900:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2911:7:11",
														"nodeType": "YulTypedName",
														"src": "2911:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2923:6:11",
														"nodeType": "YulTypedName",
														"src": "2923:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2931:6:11",
														"nodeType": "YulTypedName",
														"src": "2931:6:11",
														"type": ""
													}
												],
												"src": "2805:1194:11"
											},
											{
												"body": {
													"nativeSrc": "4093:497:11",
													"nodeType": "YulBlock",
													"src": "4093:497:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4139:16:11",
																"nodeType": "YulBlock",
																"src": "4139:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4148:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4148:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4151:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4151:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4141:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4141:6:11"
																			},
																			"nativeSrc": "4141:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4141:12:11"
																		},
																		"nativeSrc": "4141:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4141:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4114:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4114:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4123:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4123:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4110:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:11"
																		},
																		"nativeSrc": "4110:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4110:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4135:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4135:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4106:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4106:3:11"
																},
																"nativeSrc": "4106:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4106:32:11"
															},
															"nativeSrc": "4103:52:11",
															"nodeType": "YulIf",
															"src": "4103:52:11"
														},
														{
															"nativeSrc": "4164:37:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4164:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4191:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4191:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4178:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4178:12:11"
																},
																"nativeSrc": "4178:23:11",
																"nodeType": "YulFunctionCall",
																"src": "4178:23:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4168:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4168:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4244:16:11",
																"nodeType": "YulBlock",
																"src": "4244:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4253:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4253:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4256:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4256:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4246:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4246:6:11"
																			},
																			"nativeSrc": "4246:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4246:12:11"
																		},
																		"nativeSrc": "4246:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4246:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4216:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4216:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4224:18:11",
																		"nodeType": "YulLiteral",
																		"src": "4224:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4213:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4213:2:11"
																},
																"nativeSrc": "4213:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4213:30:11"
															},
															"nativeSrc": "4210:50:11",
															"nodeType": "YulIf",
															"src": "4210:50:11"
														},
														{
															"nativeSrc": "4269:32:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4269:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4283:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4283:9:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4294:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4294:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4279:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4279:3:11"
																},
																"nativeSrc": "4279:22:11",
																"nodeType": "YulFunctionCall",
																"src": "4279:22:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4273:2:11",
																	"nodeType": "YulTypedName",
																	"src": "4273:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4349:16:11",
																"nodeType": "YulBlock",
																"src": "4349:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4358:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4358:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4361:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4361:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4351:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4351:6:11"
																			},
																			"nativeSrc": "4351:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4351:12:11"
																		},
																		"nativeSrc": "4351:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4351:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4328:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4328:2:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4332:4:11",
																						"nodeType": "YulLiteral",
																						"src": "4332:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4324:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4324:3:11"
																				},
																				"nativeSrc": "4324:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4324:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4339:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4339:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4320:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4320:3:11"
																		},
																		"nativeSrc": "4320:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4320:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4313:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4313:6:11"
																},
																"nativeSrc": "4313:35:11",
																"nodeType": "YulFunctionCall",
																"src": "4313:35:11"
															},
															"nativeSrc": "4310:55:11",
															"nodeType": "YulIf",
															"src": "4310:55:11"
														},
														{
															"nativeSrc": "4374:30:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4374:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "4401:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "4401:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4388:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4388:12:11"
																},
																"nativeSrc": "4388:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4388:16:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4378:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4378:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4447:16:11",
																"nodeType": "YulBlock",
																"src": "4447:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4456:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4456:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4459:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4459:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4449:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4449:6:11"
																			},
																			"nativeSrc": "4449:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4449:12:11"
																		},
																		"nativeSrc": "4449:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4449:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4419:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4419:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4427:18:11",
																		"nodeType": "YulLiteral",
																		"src": "4427:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4416:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4416:2:11"
																},
																"nativeSrc": "4416:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4416:30:11"
															},
															"nativeSrc": "4413:50:11",
															"nodeType": "YulIf",
															"src": "4413:50:11"
														},
														{
															"body": {
																"nativeSrc": "4513:16:11",
																"nodeType": "YulBlock",
																"src": "4513:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4522:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4522:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4525:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4525:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4515:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4515:6:11"
																			},
																			"nativeSrc": "4515:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4515:12:11"
																		},
																		"nativeSrc": "4515:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4515:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4486:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4486:2:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4490:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4490:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4482:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4482:3:11"
																				},
																				"nativeSrc": "4482:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4482:15:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4499:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4499:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4478:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4478:3:11"
																		},
																		"nativeSrc": "4478:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4478:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4504:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "4504:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4475:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4475:2:11"
																},
																"nativeSrc": "4475:37:11",
																"nodeType": "YulFunctionCall",
																"src": "4475:37:11"
															},
															"nativeSrc": "4472:57:11",
															"nodeType": "YulIf",
															"src": "4472:57:11"
														},
														{
															"nativeSrc": "4538:21:11",
															"nodeType": "YulAssignment",
															"src": "4538:21:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "4552:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "4552:2:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4556:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4556:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4548:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4548:3:11"
																},
																"nativeSrc": "4548:11:11",
																"nodeType": "YulFunctionCall",
																"src": "4548:11:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4538:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4538:6:11"
																}
															]
														},
														{
															"nativeSrc": "4568:16:11",
															"nodeType": "YulAssignment",
															"src": "4568:16:11",
															"value": {
																"name": "length",
																"nativeSrc": "4578:6:11",
																"nodeType": "YulIdentifier",
																"src": "4578:6:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4568:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4568:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptr",
												"nativeSrc": "4004:586:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4051:9:11",
														"nodeType": "YulTypedName",
														"src": "4051:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4062:7:11",
														"nodeType": "YulTypedName",
														"src": "4062:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4074:6:11",
														"nodeType": "YulTypedName",
														"src": "4074:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4082:6:11",
														"nodeType": "YulTypedName",
														"src": "4082:6:11",
														"type": ""
													}
												],
												"src": "4004:586:11"
											},
											{
												"body": {
													"nativeSrc": "4691:743:11",
													"nodeType": "YulBlock",
													"src": "4691:743:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4737:16:11",
																"nodeType": "YulBlock",
																"src": "4737:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4746:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4746:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4749:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4749:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4739:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4739:6:11"
																			},
																			"nativeSrc": "4739:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4739:12:11"
																		},
																		"nativeSrc": "4739:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4739:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4712:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4712:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4721:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4721:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4708:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4708:3:11"
																		},
																		"nativeSrc": "4708:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4708:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4733:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4733:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4704:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4704:3:11"
																},
																"nativeSrc": "4704:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4704:32:11"
															},
															"nativeSrc": "4701:52:11",
															"nodeType": "YulIf",
															"src": "4701:52:11"
														},
														{
															"nativeSrc": "4762:39:11",
															"nodeType": "YulAssignment",
															"src": "4762:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4791:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4772:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:11"
																},
																"nativeSrc": "4772:29:11",
																"nodeType": "YulFunctionCall",
																"src": "4772:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4762:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4762:6:11"
																}
															]
														},
														{
															"nativeSrc": "4810:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4810:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4841:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4841:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4852:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4852:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4837:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4837:3:11"
																		},
																		"nativeSrc": "4837:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4837:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4824:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4824:12:11"
																},
																"nativeSrc": "4824:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4824:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4814:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4814:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4899:16:11",
																"nodeType": "YulBlock",
																"src": "4899:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4908:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4908:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4911:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4911:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4901:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4901:6:11"
																			},
																			"nativeSrc": "4901:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4901:12:11"
																		},
																		"nativeSrc": "4901:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4901:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4871:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4871:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4879:18:11",
																		"nodeType": "YulLiteral",
																		"src": "4879:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4868:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4868:2:11"
																},
																"nativeSrc": "4868:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4868:30:11"
															},
															"nativeSrc": "4865:50:11",
															"nodeType": "YulIf",
															"src": "4865:50:11"
														},
														{
															"nativeSrc": "4924:32:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4924:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4938:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4938:9:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4949:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4949:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4934:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4934:3:11"
																},
																"nativeSrc": "4934:22:11",
																"nodeType": "YulFunctionCall",
																"src": "4934:22:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4928:2:11",
																	"nodeType": "YulTypedName",
																	"src": "4928:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5004:16:11",
																"nodeType": "YulBlock",
																"src": "5004:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5013:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5013:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5016:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5016:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5006:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5006:6:11"
																			},
																			"nativeSrc": "5006:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5006:12:11"
																		},
																		"nativeSrc": "5006:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5006:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4983:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4983:2:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4987:4:11",
																						"nodeType": "YulLiteral",
																						"src": "4987:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4979:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4979:3:11"
																				},
																				"nativeSrc": "4979:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4979:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4994:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4994:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4975:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4975:3:11"
																		},
																		"nativeSrc": "4975:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4975:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4968:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4968:6:11"
																},
																"nativeSrc": "4968:35:11",
																"nodeType": "YulFunctionCall",
																"src": "4968:35:11"
															},
															"nativeSrc": "4965:55:11",
															"nodeType": "YulIf",
															"src": "4965:55:11"
														},
														{
															"nativeSrc": "5029:30:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5029:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "5056:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "5056:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5043:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5043:12:11"
																},
																"nativeSrc": "5043:16:11",
																"nodeType": "YulFunctionCall",
																"src": "5043:16:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5033:6:11",
																	"nodeType": "YulTypedName",
																	"src": "5033:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5102:22:11",
																"nodeType": "YulBlock",
																"src": "5102:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5104:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5104:16:11"
																			},
																			"nativeSrc": "5104:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5104:18:11"
																		},
																		"nativeSrc": "5104:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5104:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5074:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5074:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5082:18:11",
																		"nodeType": "YulLiteral",
																		"src": "5082:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5071:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5071:2:11"
																},
																"nativeSrc": "5071:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5071:30:11"
															},
															"nativeSrc": "5068:56:11",
															"nodeType": "YulIf",
															"src": "5068:56:11"
														},
														{
															"nativeSrc": "5133:70:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5133:70:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "5174:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "5174:6:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5182:4:11",
																								"nodeType": "YulLiteral",
																								"src": "5182:4:11",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5170:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "5170:3:11"
																						},
																						"nativeSrc": "5170:17:11",
																						"nodeType": "YulFunctionCall",
																						"src": "5170:17:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5193:2:11",
																								"nodeType": "YulLiteral",
																								"src": "5193:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "5189:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "5189:3:11"
																						},
																						"nativeSrc": "5189:7:11",
																						"nodeType": "YulFunctionCall",
																						"src": "5189:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "5166:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5166:3:11"
																				},
																				"nativeSrc": "5166:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5166:31:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5199:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5199:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5162:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5162:3:11"
																		},
																		"nativeSrc": "5162:40:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5162:40:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5146:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "5146:15:11"
																},
																"nativeSrc": "5146:57:11",
																"nodeType": "YulFunctionCall",
																"src": "5146:57:11"
															},
															"variables": [
																{
																	"name": "array",
																	"nativeSrc": "5137:5:11",
																	"nodeType": "YulTypedName",
																	"src": "5137:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5219:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5219:5:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5226:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5226:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5212:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:11"
																},
																"nativeSrc": "5212:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5212:21:11"
															},
															"nativeSrc": "5212:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "5212:21:11"
														},
														{
															"body": {
																"nativeSrc": "5283:16:11",
																"nodeType": "YulBlock",
																"src": "5283:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5292:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5292:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5295:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5295:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5285:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5285:6:11"
																			},
																			"nativeSrc": "5285:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5285:12:11"
																		},
																		"nativeSrc": "5285:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5285:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "5256:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "5256:2:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5260:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5260:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5252:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5252:3:11"
																				},
																				"nativeSrc": "5252:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5252:15:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5269:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5269:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5248:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5248:3:11"
																		},
																		"nativeSrc": "5248:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5248:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5274:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "5274:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5245:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5245:2:11"
																},
																"nativeSrc": "5245:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5245:37:11"
															},
															"nativeSrc": "5242:57:11",
															"nodeType": "YulIf",
															"src": "5242:57:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nativeSrc": "5325:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5325:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5332:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5332:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5321:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5321:3:11"
																		},
																		"nativeSrc": "5321:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5321:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "5341:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "5341:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5345:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5345:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5337:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5337:3:11"
																		},
																		"nativeSrc": "5337:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5337:11:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5350:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5350:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5308:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5308:12:11"
																},
																"nativeSrc": "5308:49:11",
																"nodeType": "YulFunctionCall",
																"src": "5308:49:11"
															},
															"nativeSrc": "5308:49:11",
															"nodeType": "YulExpressionStatement",
															"src": "5308:49:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array",
																						"nativeSrc": "5381:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5381:5:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5388:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5388:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5377:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5377:3:11"
																				},
																				"nativeSrc": "5377:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5377:18:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5397:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5397:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5373:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5373:3:11"
																		},
																		"nativeSrc": "5373:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5373:27:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5402:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5402:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5366:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5366:6:11"
																},
																"nativeSrc": "5366:38:11",
																"nodeType": "YulFunctionCall",
																"src": "5366:38:11"
															},
															"nativeSrc": "5366:38:11",
															"nodeType": "YulExpressionStatement",
															"src": "5366:38:11"
														},
														{
															"nativeSrc": "5413:15:11",
															"nodeType": "YulAssignment",
															"src": "5413:15:11",
															"value": {
																"name": "array",
																"nativeSrc": "5423:5:11",
																"nodeType": "YulIdentifier",
																"src": "5423:5:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5413:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5413:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "4595:839:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4649:9:11",
														"nodeType": "YulTypedName",
														"src": "4649:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4660:7:11",
														"nodeType": "YulTypedName",
														"src": "4660:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4672:6:11",
														"nodeType": "YulTypedName",
														"src": "4672:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4680:6:11",
														"nodeType": "YulTypedName",
														"src": "4680:6:11",
														"type": ""
													}
												],
												"src": "4595:839:11"
											},
											{
												"body": {
													"nativeSrc": "5540:76:11",
													"nodeType": "YulBlock",
													"src": "5540:76:11",
													"statements": [
														{
															"nativeSrc": "5550:26:11",
															"nodeType": "YulAssignment",
															"src": "5550:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5562:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5562:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5573:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5573:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5558:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5558:3:11"
																},
																"nativeSrc": "5558:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5558:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5550:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5550:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5592:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5592:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5603:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5603:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5585:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5585:6:11"
																},
																"nativeSrc": "5585:25:11",
																"nodeType": "YulFunctionCall",
																"src": "5585:25:11"
															},
															"nativeSrc": "5585:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "5585:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5439:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5509:9:11",
														"nodeType": "YulTypedName",
														"src": "5509:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5520:6:11",
														"nodeType": "YulTypedName",
														"src": "5520:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5531:4:11",
														"nodeType": "YulTypedName",
														"src": "5531:4:11",
														"type": ""
													}
												],
												"src": "5439:177:11"
											},
											{
												"body": {
													"nativeSrc": "5708:259:11",
													"nodeType": "YulBlock",
													"src": "5708:259:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5754:16:11",
																"nodeType": "YulBlock",
																"src": "5754:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5763:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5763:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5766:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5766:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5756:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5756:6:11"
																			},
																			"nativeSrc": "5756:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5756:12:11"
																		},
																		"nativeSrc": "5756:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5756:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5729:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5729:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5738:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5738:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5725:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5725:3:11"
																		},
																		"nativeSrc": "5725:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5725:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5750:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5750:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5721:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5721:3:11"
																},
																"nativeSrc": "5721:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5721:32:11"
															},
															"nativeSrc": "5718:52:11",
															"nodeType": "YulIf",
															"src": "5718:52:11"
														},
														{
															"nativeSrc": "5779:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5779:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "5792:1:11",
																"nodeType": "YulLiteral",
																"src": "5792:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5783:5:11",
																	"nodeType": "YulTypedName",
																	"src": "5783:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5802:32:11",
															"nodeType": "YulAssignment",
															"src": "5802:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5824:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5824:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5811:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5811:12:11"
																},
																"nativeSrc": "5811:23:11",
																"nodeType": "YulFunctionCall",
																"src": "5811:23:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5802:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5802:5:11"
																}
															]
														},
														{
															"nativeSrc": "5843:15:11",
															"nodeType": "YulAssignment",
															"src": "5843:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "5853:5:11",
																"nodeType": "YulIdentifier",
																"src": "5853:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5843:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5843:6:11"
																}
															]
														},
														{
															"nativeSrc": "5867:16:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5867:16:11",
															"value": {
																"kind": "number",
																"nativeSrc": "5882:1:11",
																"nodeType": "YulLiteral",
																"src": "5882:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "5871:7:11",
																	"nodeType": "YulTypedName",
																	"src": "5871:7:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5892:43:11",
															"nodeType": "YulAssignment",
															"src": "5892:43:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5920:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5920:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5931:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5931:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5916:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5916:3:11"
																		},
																		"nativeSrc": "5916:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5916:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5903:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5903:12:11"
																},
																"nativeSrc": "5903:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5903:32:11"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "5892:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "5892:7:11"
																}
															]
														},
														{
															"nativeSrc": "5944:17:11",
															"nodeType": "YulAssignment",
															"src": "5944:17:11",
															"value": {
																"name": "value_1",
																"nativeSrc": "5954:7:11",
																"nodeType": "YulIdentifier",
																"src": "5954:7:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5944:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5944:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "5621:346:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5666:9:11",
														"nodeType": "YulTypedName",
														"src": "5666:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5677:7:11",
														"nodeType": "YulTypedName",
														"src": "5677:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5689:6:11",
														"nodeType": "YulTypedName",
														"src": "5689:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5697:6:11",
														"nodeType": "YulTypedName",
														"src": "5697:6:11",
														"type": ""
													}
												],
												"src": "5621:346:11"
											},
											{
												"body": {
													"nativeSrc": "6021:239:11",
													"nodeType": "YulBlock",
													"src": "6021:239:11",
													"statements": [
														{
															"nativeSrc": "6031:26:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6031:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6051:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6051:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6045:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6045:5:11"
																},
																"nativeSrc": "6045:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6045:12:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6035:6:11",
																	"nodeType": "YulTypedName",
																	"src": "6035:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6073:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6073:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6078:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6078:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6066:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6066:6:11"
																},
																"nativeSrc": "6066:19:11",
																"nodeType": "YulFunctionCall",
																"src": "6066:19:11"
															},
															"nativeSrc": "6066:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "6066:19:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6104:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6104:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6109:4:11",
																				"nodeType": "YulLiteral",
																				"src": "6109:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6100:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6100:3:11"
																		},
																		"nativeSrc": "6100:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6100:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6120:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6120:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6127:4:11",
																				"nodeType": "YulLiteral",
																				"src": "6127:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6116:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6116:3:11"
																		},
																		"nativeSrc": "6116:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6116:16:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6134:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6134:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6094:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6094:5:11"
																},
																"nativeSrc": "6094:47:11",
																"nodeType": "YulFunctionCall",
																"src": "6094:47:11"
															},
															"nativeSrc": "6094:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "6094:47:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6165:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "6165:3:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "6170:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6170:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6161:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6161:3:11"
																				},
																				"nativeSrc": "6161:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6161:16:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6179:4:11",
																				"nodeType": "YulLiteral",
																				"src": "6179:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6157:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6157:3:11"
																		},
																		"nativeSrc": "6157:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6157:27:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6186:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6186:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6150:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6150:6:11"
																},
																"nativeSrc": "6150:38:11",
																"nodeType": "YulFunctionCall",
																"src": "6150:38:11"
															},
															"nativeSrc": "6150:38:11",
															"nodeType": "YulExpressionStatement",
															"src": "6150:38:11"
														},
														{
															"nativeSrc": "6197:57:11",
															"nodeType": "YulAssignment",
															"src": "6197:57:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6212:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6212:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "6225:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "6225:6:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6233:2:11",
																								"nodeType": "YulLiteral",
																								"src": "6233:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "6221:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6221:3:11"
																						},
																						"nativeSrc": "6221:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6221:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6242:2:11",
																								"nodeType": "YulLiteral",
																								"src": "6242:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "6238:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6238:3:11"
																						},
																						"nativeSrc": "6238:7:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6238:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "6217:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6217:3:11"
																				},
																				"nativeSrc": "6217:29:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6217:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6208:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6208:3:11"
																		},
																		"nativeSrc": "6208:39:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6208:39:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6249:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6249:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6204:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6204:3:11"
																},
																"nativeSrc": "6204:50:11",
																"nodeType": "YulFunctionCall",
																"src": "6204:50:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6197:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6197:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nativeSrc": "5972:288:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5998:5:11",
														"nodeType": "YulTypedName",
														"src": "5998:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6005:3:11",
														"nodeType": "YulTypedName",
														"src": "6005:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6013:3:11",
														"nodeType": "YulTypedName",
														"src": "6013:3:11",
														"type": ""
													}
												],
												"src": "5972:288:11"
											},
											{
												"body": {
													"nativeSrc": "6406:157:11",
													"nodeType": "YulBlock",
													"src": "6406:157:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6423:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6423:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "6448:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6448:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6441:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "6441:6:11"
																				},
																				"nativeSrc": "6441:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6441:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6434:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6434:6:11"
																		},
																		"nativeSrc": "6434:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6434:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6416:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6416:6:11"
																},
																"nativeSrc": "6416:41:11",
																"nodeType": "YulFunctionCall",
																"src": "6416:41:11"
															},
															"nativeSrc": "6416:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "6416:41:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6477:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6477:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6488:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6488:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6473:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6473:3:11"
																		},
																		"nativeSrc": "6473:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6473:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6493:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6493:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6466:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6466:6:11"
																},
																"nativeSrc": "6466:30:11",
																"nodeType": "YulFunctionCall",
																"src": "6466:30:11"
															},
															"nativeSrc": "6466:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "6466:30:11"
														},
														{
															"nativeSrc": "6505:52:11",
															"nodeType": "YulAssignment",
															"src": "6505:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6530:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6530:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6542:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6542:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6553:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6553:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6538:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6538:3:11"
																		},
																		"nativeSrc": "6538:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6538:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "6513:16:11",
																	"nodeType": "YulIdentifier",
																	"src": "6513:16:11"
																},
																"nativeSrc": "6513:44:11",
																"nodeType": "YulFunctionCall",
																"src": "6513:44:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6505:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6505:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "6265:298:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6367:9:11",
														"nodeType": "YulTypedName",
														"src": "6367:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6378:6:11",
														"nodeType": "YulTypedName",
														"src": "6378:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6386:6:11",
														"nodeType": "YulTypedName",
														"src": "6386:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6397:4:11",
														"nodeType": "YulTypedName",
														"src": "6397:4:11",
														"type": ""
													}
												],
												"src": "6265:298:11"
											},
											{
												"body": {
													"nativeSrc": "6689:98:11",
													"nodeType": "YulBlock",
													"src": "6689:98:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6706:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6706:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6717:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6717:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6699:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6699:6:11"
																},
																"nativeSrc": "6699:21:11",
																"nodeType": "YulFunctionCall",
																"src": "6699:21:11"
															},
															"nativeSrc": "6699:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "6699:21:11"
														},
														{
															"nativeSrc": "6729:52:11",
															"nodeType": "YulAssignment",
															"src": "6729:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6754:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6754:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6766:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6766:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6777:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6777:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6762:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6762:3:11"
																		},
																		"nativeSrc": "6762:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6762:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "6737:16:11",
																	"nodeType": "YulIdentifier",
																	"src": "6737:16:11"
																},
																"nativeSrc": "6737:44:11",
																"nodeType": "YulFunctionCall",
																"src": "6737:44:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6729:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6729:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6568:219:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6658:9:11",
														"nodeType": "YulTypedName",
														"src": "6658:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6669:6:11",
														"nodeType": "YulTypedName",
														"src": "6669:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6680:4:11",
														"nodeType": "YulTypedName",
														"src": "6680:4:11",
														"type": ""
													}
												],
												"src": "6568:219:11"
											},
											{
												"body": {
													"nativeSrc": "6862:116:11",
													"nodeType": "YulBlock",
													"src": "6862:116:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6908:16:11",
																"nodeType": "YulBlock",
																"src": "6908:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6917:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6917:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6920:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6920:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6910:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6910:6:11"
																			},
																			"nativeSrc": "6910:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6910:12:11"
																		},
																		"nativeSrc": "6910:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6910:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6883:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6883:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6892:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6892:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6879:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6879:3:11"
																		},
																		"nativeSrc": "6879:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6879:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6904:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6904:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6875:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6875:3:11"
																},
																"nativeSrc": "6875:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6875:32:11"
															},
															"nativeSrc": "6872:52:11",
															"nodeType": "YulIf",
															"src": "6872:52:11"
														},
														{
															"nativeSrc": "6933:39:11",
															"nodeType": "YulAssignment",
															"src": "6933:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6962:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6962:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6943:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "6943:18:11"
																},
																"nativeSrc": "6943:29:11",
																"nodeType": "YulFunctionCall",
																"src": "6943:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6933:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6933:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6792:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6828:9:11",
														"nodeType": "YulTypedName",
														"src": "6828:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6839:7:11",
														"nodeType": "YulTypedName",
														"src": "6839:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6851:6:11",
														"nodeType": "YulTypedName",
														"src": "6851:6:11",
														"type": ""
													}
												],
												"src": "6792:186:11"
											},
											{
												"body": {
													"nativeSrc": "7218:310:11",
													"nodeType": "YulBlock",
													"src": "7218:310:11",
													"statements": [
														{
															"nativeSrc": "7228:27:11",
															"nodeType": "YulAssignment",
															"src": "7228:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7240:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7240:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7251:3:11",
																		"nodeType": "YulLiteral",
																		"src": "7251:3:11",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7236:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7236:3:11"
																},
																"nativeSrc": "7236:19:11",
																"nodeType": "YulFunctionCall",
																"src": "7236:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7228:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7228:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7271:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7271:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "7296:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7296:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7289:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "7289:6:11"
																				},
																				"nativeSrc": "7289:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7289:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7282:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7282:6:11"
																		},
																		"nativeSrc": "7282:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7282:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7264:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7264:6:11"
																},
																"nativeSrc": "7264:41:11",
																"nodeType": "YulFunctionCall",
																"src": "7264:41:11"
															},
															"nativeSrc": "7264:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "7264:41:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7325:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7325:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7336:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7336:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7321:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7321:3:11"
																		},
																		"nativeSrc": "7321:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7321:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7341:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7341:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7314:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7314:6:11"
																},
																"nativeSrc": "7314:34:11",
																"nodeType": "YulFunctionCall",
																"src": "7314:34:11"
															},
															"nativeSrc": "7314:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "7314:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7368:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7368:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7379:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7379:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7364:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7364:3:11"
																		},
																		"nativeSrc": "7364:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7364:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7384:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7384:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7357:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7357:6:11"
																},
																"nativeSrc": "7357:34:11",
																"nodeType": "YulFunctionCall",
																"src": "7357:34:11"
															},
															"nativeSrc": "7357:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "7357:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7411:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7411:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7422:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7422:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7407:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7407:3:11"
																		},
																		"nativeSrc": "7407:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7407:18:11"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "7427:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7427:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7400:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7400:6:11"
																},
																"nativeSrc": "7400:34:11",
																"nodeType": "YulFunctionCall",
																"src": "7400:34:11"
															},
															"nativeSrc": "7400:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "7400:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7454:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7454:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7465:3:11",
																				"nodeType": "YulLiteral",
																				"src": "7465:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7450:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7450:3:11"
																		},
																		"nativeSrc": "7450:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7450:19:11"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "7471:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7471:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7443:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7443:6:11"
																},
																"nativeSrc": "7443:35:11",
																"nodeType": "YulFunctionCall",
																"src": "7443:35:11"
															},
															"nativeSrc": "7443:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "7443:35:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7498:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7498:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7509:3:11",
																				"nodeType": "YulLiteral",
																				"src": "7509:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7494:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7494:3:11"
																		},
																		"nativeSrc": "7494:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7494:19:11"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "7515:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7515:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7487:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7487:6:11"
																},
																"nativeSrc": "7487:35:11",
																"nodeType": "YulFunctionCall",
																"src": "7487:35:11"
															},
															"nativeSrc": "7487:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "7487:35:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6983:545:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7147:9:11",
														"nodeType": "YulTypedName",
														"src": "7147:9:11",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7158:6:11",
														"nodeType": "YulTypedName",
														"src": "7158:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7166:6:11",
														"nodeType": "YulTypedName",
														"src": "7166:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7174:6:11",
														"nodeType": "YulTypedName",
														"src": "7174:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7182:6:11",
														"nodeType": "YulTypedName",
														"src": "7182:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7190:6:11",
														"nodeType": "YulTypedName",
														"src": "7190:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7198:6:11",
														"nodeType": "YulTypedName",
														"src": "7198:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7209:4:11",
														"nodeType": "YulTypedName",
														"src": "7209:4:11",
														"type": ""
													}
												],
												"src": "6983:545:11"
											},
											{
												"body": {
													"nativeSrc": "7628:92:11",
													"nodeType": "YulBlock",
													"src": "7628:92:11",
													"statements": [
														{
															"nativeSrc": "7638:26:11",
															"nodeType": "YulAssignment",
															"src": "7638:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7650:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7650:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7661:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7661:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7646:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7646:3:11"
																},
																"nativeSrc": "7646:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7646:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7638:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7638:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7680:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7680:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "7705:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7705:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7698:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "7698:6:11"
																				},
																				"nativeSrc": "7698:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7698:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7691:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7691:6:11"
																		},
																		"nativeSrc": "7691:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7691:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7673:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7673:6:11"
																},
																"nativeSrc": "7673:41:11",
																"nodeType": "YulFunctionCall",
																"src": "7673:41:11"
															},
															"nativeSrc": "7673:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "7673:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "7533:187:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7597:9:11",
														"nodeType": "YulTypedName",
														"src": "7597:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7608:6:11",
														"nodeType": "YulTypedName",
														"src": "7608:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7619:4:11",
														"nodeType": "YulTypedName",
														"src": "7619:4:11",
														"type": ""
													}
												],
												"src": "7533:187:11"
											},
											{
												"body": {
													"nativeSrc": "7767:76:11",
													"nodeType": "YulBlock",
													"src": "7767:76:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7821:16:11",
																"nodeType": "YulBlock",
																"src": "7821:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7830:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7830:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7833:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7833:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7823:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7823:6:11"
																			},
																			"nativeSrc": "7823:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7823:12:11"
																		},
																		"nativeSrc": "7823:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7823:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7790:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7790:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "7811:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "7811:5:11"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "7804:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "7804:6:11"
																						},
																						"nativeSrc": "7804:13:11",
																						"nodeType": "YulFunctionCall",
																						"src": "7804:13:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7797:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "7797:6:11"
																				},
																				"nativeSrc": "7797:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7797:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7787:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "7787:2:11"
																		},
																		"nativeSrc": "7787:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7787:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7780:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7780:6:11"
																},
																"nativeSrc": "7780:40:11",
																"nodeType": "YulFunctionCall",
																"src": "7780:40:11"
															},
															"nativeSrc": "7777:60:11",
															"nodeType": "YulIf",
															"src": "7777:60:11"
														}
													]
												},
												"name": "validator_revert_bool",
												"nativeSrc": "7725:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7756:5:11",
														"nodeType": "YulTypedName",
														"src": "7756:5:11",
														"type": ""
													}
												],
												"src": "7725:118:11"
											},
											{
												"body": {
													"nativeSrc": "7932:231:11",
													"nodeType": "YulBlock",
													"src": "7932:231:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7978:16:11",
																"nodeType": "YulBlock",
																"src": "7978:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7987:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7987:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7990:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7990:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7980:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7980:6:11"
																			},
																			"nativeSrc": "7980:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7980:12:11"
																		},
																		"nativeSrc": "7980:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7980:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7953:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7953:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7962:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7962:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7949:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7949:3:11"
																		},
																		"nativeSrc": "7949:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7949:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7974:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7974:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7945:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7945:3:11"
																},
																"nativeSrc": "7945:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7945:32:11"
															},
															"nativeSrc": "7942:52:11",
															"nodeType": "YulIf",
															"src": "7942:52:11"
														},
														{
															"nativeSrc": "8003:39:11",
															"nodeType": "YulAssignment",
															"src": "8003:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8032:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8032:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "8013:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "8013:18:11"
																},
																"nativeSrc": "8013:29:11",
																"nodeType": "YulFunctionCall",
																"src": "8013:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8003:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8003:6:11"
																}
															]
														},
														{
															"nativeSrc": "8051:45:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8051:45:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8081:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8081:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8092:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8092:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8077:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8077:3:11"
																		},
																		"nativeSrc": "8077:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8077:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8064:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "8064:12:11"
																},
																"nativeSrc": "8064:32:11",
																"nodeType": "YulFunctionCall",
																"src": "8064:32:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8055:5:11",
																	"nodeType": "YulTypedName",
																	"src": "8055:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8127:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8127:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "8105:21:11",
																	"nodeType": "YulIdentifier",
																	"src": "8105:21:11"
																},
																"nativeSrc": "8105:28:11",
																"nodeType": "YulFunctionCall",
																"src": "8105:28:11"
															},
															"nativeSrc": "8105:28:11",
															"nodeType": "YulExpressionStatement",
															"src": "8105:28:11"
														},
														{
															"nativeSrc": "8142:15:11",
															"nodeType": "YulAssignment",
															"src": "8142:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "8152:5:11",
																"nodeType": "YulIdentifier",
																"src": "8152:5:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8142:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8142:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "7848:315:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7890:9:11",
														"nodeType": "YulTypedName",
														"src": "7890:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7901:7:11",
														"nodeType": "YulTypedName",
														"src": "7901:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7913:6:11",
														"nodeType": "YulTypedName",
														"src": "7913:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7921:6:11",
														"nodeType": "YulTypedName",
														"src": "7921:6:11",
														"type": ""
													}
												],
												"src": "7848:315:11"
											},
											{
												"body": {
													"nativeSrc": "8276:101:11",
													"nodeType": "YulBlock",
													"src": "8276:101:11",
													"statements": [
														{
															"nativeSrc": "8286:26:11",
															"nodeType": "YulAssignment",
															"src": "8286:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8298:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8298:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8309:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8309:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8294:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8294:3:11"
																},
																"nativeSrc": "8294:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8294:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8286:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8286:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8328:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8328:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8343:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8343:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8351:18:11",
																				"nodeType": "YulLiteral",
																				"src": "8351:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8339:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8339:3:11"
																		},
																		"nativeSrc": "8339:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8339:31:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8321:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8321:6:11"
																},
																"nativeSrc": "8321:50:11",
																"nodeType": "YulFunctionCall",
																"src": "8321:50:11"
															},
															"nativeSrc": "8321:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "8321:50:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "8168:209:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8245:9:11",
														"nodeType": "YulTypedName",
														"src": "8245:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8256:6:11",
														"nodeType": "YulTypedName",
														"src": "8256:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8267:4:11",
														"nodeType": "YulTypedName",
														"src": "8267:4:11",
														"type": ""
													}
												],
												"src": "8168:209:11"
											},
											{
												"body": {
													"nativeSrc": "8414:95:11",
													"nodeType": "YulBlock",
													"src": "8414:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8431:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8431:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8438:3:11",
																				"nodeType": "YulLiteral",
																				"src": "8438:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8443:10:11",
																				"nodeType": "YulLiteral",
																				"src": "8443:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8434:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8434:3:11"
																		},
																		"nativeSrc": "8434:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8434:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8424:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8424:6:11"
																},
																"nativeSrc": "8424:31:11",
																"nodeType": "YulFunctionCall",
																"src": "8424:31:11"
															},
															"nativeSrc": "8424:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "8424:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8471:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8471:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8474:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8474:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8464:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8464:6:11"
																},
																"nativeSrc": "8464:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8464:15:11"
															},
															"nativeSrc": "8464:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8464:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8495:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8495:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8498:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8498:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8488:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8488:6:11"
																},
																"nativeSrc": "8488:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8488:15:11"
															},
															"nativeSrc": "8488:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8488:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8382:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "8382:127:11"
											},
											{
												"body": {
													"nativeSrc": "8561:88:11",
													"nodeType": "YulBlock",
													"src": "8561:88:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8592:22:11",
																"nodeType": "YulBlock",
																"src": "8592:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8594:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "8594:16:11"
																			},
																			"nativeSrc": "8594:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8594:18:11"
																		},
																		"nativeSrc": "8594:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8594:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8577:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8577:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8588:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8588:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "8584:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8584:3:11"
																		},
																		"nativeSrc": "8584:6:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8584:6:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8574:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8574:2:11"
																},
																"nativeSrc": "8574:17:11",
																"nodeType": "YulFunctionCall",
																"src": "8574:17:11"
															},
															"nativeSrc": "8571:43:11",
															"nodeType": "YulIf",
															"src": "8571:43:11"
														},
														{
															"nativeSrc": "8623:20:11",
															"nodeType": "YulAssignment",
															"src": "8623:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8634:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8634:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8641:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8641:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8630:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8630:3:11"
																},
																"nativeSrc": "8630:13:11",
																"nodeType": "YulFunctionCall",
																"src": "8630:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8623:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8623:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "8514:135:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8543:5:11",
														"nodeType": "YulTypedName",
														"src": "8543:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8553:3:11",
														"nodeType": "YulTypedName",
														"src": "8553:3:11",
														"type": ""
													}
												],
												"src": "8514:135:11"
											},
											{
												"body": {
													"nativeSrc": "8703:79:11",
													"nodeType": "YulBlock",
													"src": "8703:79:11",
													"statements": [
														{
															"nativeSrc": "8713:17:11",
															"nodeType": "YulAssignment",
															"src": "8713:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8725:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8725:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8728:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8728:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8721:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8721:3:11"
																},
																"nativeSrc": "8721:9:11",
																"nodeType": "YulFunctionCall",
																"src": "8721:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8713:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8713:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8754:22:11",
																"nodeType": "YulBlock",
																"src": "8754:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8756:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "8756:16:11"
																			},
																			"nativeSrc": "8756:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8756:18:11"
																		},
																		"nativeSrc": "8756:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8756:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8745:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8745:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8751:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8751:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8742:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8742:2:11"
																},
																"nativeSrc": "8742:11:11",
																"nodeType": "YulFunctionCall",
																"src": "8742:11:11"
															},
															"nativeSrc": "8739:37:11",
															"nodeType": "YulIf",
															"src": "8739:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8654:128:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8685:1:11",
														"nodeType": "YulTypedName",
														"src": "8685:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8688:1:11",
														"nodeType": "YulTypedName",
														"src": "8688:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8694:4:11",
														"nodeType": "YulTypedName",
														"src": "8694:4:11",
														"type": ""
													}
												],
												"src": "8654:128:11"
											},
											{
												"body": {
													"nativeSrc": "8944:162:11",
													"nodeType": "YulBlock",
													"src": "8944:162:11",
													"statements": [
														{
															"nativeSrc": "8954:26:11",
															"nodeType": "YulAssignment",
															"src": "8954:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8966:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8966:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8977:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8977:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8962:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8962:3:11"
																},
																"nativeSrc": "8962:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8962:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8954:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8954:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8996:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8996:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9007:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9007:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8989:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8989:6:11"
																},
																"nativeSrc": "8989:25:11",
																"nodeType": "YulFunctionCall",
																"src": "8989:25:11"
															},
															"nativeSrc": "8989:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "8989:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9034:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9034:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9045:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9045:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9030:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9030:3:11"
																		},
																		"nativeSrc": "9030:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9030:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9050:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9050:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9023:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9023:6:11"
																},
																"nativeSrc": "9023:34:11",
																"nodeType": "YulFunctionCall",
																"src": "9023:34:11"
															},
															"nativeSrc": "9023:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "9023:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9077:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9077:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9088:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9088:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9073:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9073:3:11"
																		},
																		"nativeSrc": "9073:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9073:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9093:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9093:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9066:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9066:6:11"
																},
																"nativeSrc": "9066:34:11",
																"nodeType": "YulFunctionCall",
																"src": "9066:34:11"
															},
															"nativeSrc": "9066:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "9066:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8787:319:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8897:9:11",
														"nodeType": "YulTypedName",
														"src": "8897:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8908:6:11",
														"nodeType": "YulTypedName",
														"src": "8908:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8916:6:11",
														"nodeType": "YulTypedName",
														"src": "8916:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8924:6:11",
														"nodeType": "YulTypedName",
														"src": "8924:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8935:4:11",
														"nodeType": "YulTypedName",
														"src": "8935:4:11",
														"type": ""
													}
												],
												"src": "8787:319:11"
											},
											{
												"body": {
													"nativeSrc": "9143:95:11",
													"nodeType": "YulBlock",
													"src": "9143:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9160:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9160:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9167:3:11",
																				"nodeType": "YulLiteral",
																				"src": "9167:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9172:10:11",
																				"nodeType": "YulLiteral",
																				"src": "9172:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9163:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9163:3:11"
																		},
																		"nativeSrc": "9163:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9163:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9153:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9153:6:11"
																},
																"nativeSrc": "9153:31:11",
																"nodeType": "YulFunctionCall",
																"src": "9153:31:11"
															},
															"nativeSrc": "9153:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "9153:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9200:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9200:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9203:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9203:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9193:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9193:6:11"
																},
																"nativeSrc": "9193:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9193:15:11"
															},
															"nativeSrc": "9193:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9193:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9224:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9224:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9227:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9227:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9217:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9217:6:11"
																},
																"nativeSrc": "9217:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9217:15:11"
															},
															"nativeSrc": "9217:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9217:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9111:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "9111:127:11"
											},
											{
												"body": {
													"nativeSrc": "9291:77:11",
													"nodeType": "YulBlock",
													"src": "9291:77:11",
													"statements": [
														{
															"nativeSrc": "9301:16:11",
															"nodeType": "YulAssignment",
															"src": "9301:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9312:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9312:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9315:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9315:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9308:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9308:3:11"
																},
																"nativeSrc": "9308:9:11",
																"nodeType": "YulFunctionCall",
																"src": "9308:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9301:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9301:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9340:22:11",
																"nodeType": "YulBlock",
																"src": "9340:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9342:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "9342:16:11"
																			},
																			"nativeSrc": "9342:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9342:18:11"
																		},
																		"nativeSrc": "9342:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9342:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9332:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9332:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9335:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9335:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9329:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "9329:2:11"
																},
																"nativeSrc": "9329:10:11",
																"nodeType": "YulFunctionCall",
																"src": "9329:10:11"
															},
															"nativeSrc": "9326:36:11",
															"nodeType": "YulIf",
															"src": "9326:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9243:125:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9274:1:11",
														"nodeType": "YulTypedName",
														"src": "9274:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9277:1:11",
														"nodeType": "YulTypedName",
														"src": "9277:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9283:3:11",
														"nodeType": "YulTypedName",
														"src": "9283:3:11",
														"type": ""
													}
												],
												"src": "9243:125:11"
											},
											{
												"body": {
													"nativeSrc": "9530:188:11",
													"nodeType": "YulBlock",
													"src": "9530:188:11",
													"statements": [
														{
															"nativeSrc": "9540:26:11",
															"nodeType": "YulAssignment",
															"src": "9540:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9552:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9552:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9563:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9563:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9548:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9548:3:11"
																},
																"nativeSrc": "9548:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9548:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9540:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9540:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9582:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9582:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9597:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9597:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9613:3:11",
																								"nodeType": "YulLiteral",
																								"src": "9613:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9618:1:11",
																								"nodeType": "YulLiteral",
																								"src": "9618:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9609:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "9609:3:11"
																						},
																						"nativeSrc": "9609:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "9609:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9622:1:11",
																						"nodeType": "YulLiteral",
																						"src": "9622:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9605:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9605:3:11"
																				},
																				"nativeSrc": "9605:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9605:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9593:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9593:3:11"
																		},
																		"nativeSrc": "9593:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9593:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9575:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9575:6:11"
																},
																"nativeSrc": "9575:51:11",
																"nodeType": "YulFunctionCall",
																"src": "9575:51:11"
															},
															"nativeSrc": "9575:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "9575:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9646:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9646:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9657:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9657:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9642:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9642:3:11"
																		},
																		"nativeSrc": "9642:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9642:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9662:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9662:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9635:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9635:6:11"
																},
																"nativeSrc": "9635:34:11",
																"nodeType": "YulFunctionCall",
																"src": "9635:34:11"
															},
															"nativeSrc": "9635:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "9635:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9689:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9689:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9700:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9700:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9685:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9685:3:11"
																		},
																		"nativeSrc": "9685:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9685:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9705:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9705:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9678:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9678:6:11"
																},
																"nativeSrc": "9678:34:11",
																"nodeType": "YulFunctionCall",
																"src": "9678:34:11"
															},
															"nativeSrc": "9678:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "9678:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9373:345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9483:9:11",
														"nodeType": "YulTypedName",
														"src": "9483:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9494:6:11",
														"nodeType": "YulTypedName",
														"src": "9494:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9502:6:11",
														"nodeType": "YulTypedName",
														"src": "9502:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9510:6:11",
														"nodeType": "YulTypedName",
														"src": "9510:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9521:4:11",
														"nodeType": "YulTypedName",
														"src": "9521:4:11",
														"type": ""
													}
												],
												"src": "9373:345:11"
											},
											{
												"body": {
													"nativeSrc": "9897:249:11",
													"nodeType": "YulBlock",
													"src": "9897:249:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9914:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9914:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9925:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9925:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9907:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9907:6:11"
																},
																"nativeSrc": "9907:21:11",
																"nodeType": "YulFunctionCall",
																"src": "9907:21:11"
															},
															"nativeSrc": "9907:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "9907:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9948:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9948:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9959:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9959:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9944:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9944:3:11"
																		},
																		"nativeSrc": "9944:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9944:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9964:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9964:2:11",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9937:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9937:6:11"
																},
																"nativeSrc": "9937:30:11",
																"nodeType": "YulFunctionCall",
																"src": "9937:30:11"
															},
															"nativeSrc": "9937:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "9937:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9987:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9987:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9998:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9998:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9983:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9983:3:11"
																		},
																		"nativeSrc": "9983:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9983:18:11"
																	},
																	{
																		"hexValue": "54686973206164647265737320646f6573206e6f742068617665207065726d69",
																		"kind": "string",
																		"nativeSrc": "10003:34:11",
																		"nodeType": "YulLiteral",
																		"src": "10003:34:11",
																		"type": "",
																		"value": "This address does not have permi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9976:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9976:6:11"
																},
																"nativeSrc": "9976:62:11",
																"nodeType": "YulFunctionCall",
																"src": "9976:62:11"
															},
															"nativeSrc": "9976:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "9976:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10058:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10058:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10069:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10069:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10054:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10054:3:11"
																		},
																		"nativeSrc": "10054:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10054:18:11"
																	},
																	{
																		"hexValue": "7373696f6e20746f2063616c6c20706572666f726d55706b656570",
																		"kind": "string",
																		"nativeSrc": "10074:29:11",
																		"nodeType": "YulLiteral",
																		"src": "10074:29:11",
																		"type": "",
																		"value": "ssion to call performUpkeep"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10047:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10047:6:11"
																},
																"nativeSrc": "10047:57:11",
																"nodeType": "YulFunctionCall",
																"src": "10047:57:11"
															},
															"nativeSrc": "10047:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "10047:57:11"
														},
														{
															"nativeSrc": "10113:27:11",
															"nodeType": "YulAssignment",
															"src": "10113:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10125:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10125:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10136:3:11",
																		"nodeType": "YulLiteral",
																		"src": "10136:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10121:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10121:3:11"
																},
																"nativeSrc": "10121:19:11",
																"nodeType": "YulFunctionCall",
																"src": "10121:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10113:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10113:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9723:423:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9874:9:11",
														"nodeType": "YulTypedName",
														"src": "9874:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9888:4:11",
														"nodeType": "YulTypedName",
														"src": "9888:4:11",
														"type": ""
													}
												],
												"src": "9723:423:11"
											},
											{
												"body": {
													"nativeSrc": "10308:214:11",
													"nodeType": "YulBlock",
													"src": "10308:214:11",
													"statements": [
														{
															"nativeSrc": "10318:26:11",
															"nodeType": "YulAssignment",
															"src": "10318:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10330:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10330:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10341:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10341:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10326:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10326:3:11"
																},
																"nativeSrc": "10326:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10326:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10318:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10318:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10360:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10360:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10375:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10375:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10391:3:11",
																								"nodeType": "YulLiteral",
																								"src": "10391:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10396:1:11",
																								"nodeType": "YulLiteral",
																								"src": "10396:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10387:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "10387:3:11"
																						},
																						"nativeSrc": "10387:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "10387:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10400:1:11",
																						"nodeType": "YulLiteral",
																						"src": "10400:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10383:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10383:3:11"
																				},
																				"nativeSrc": "10383:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10383:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10371:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10371:3:11"
																		},
																		"nativeSrc": "10371:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10371:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10353:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10353:6:11"
																},
																"nativeSrc": "10353:51:11",
																"nodeType": "YulFunctionCall",
																"src": "10353:51:11"
															},
															"nativeSrc": "10353:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "10353:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10424:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10424:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10435:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10435:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10420:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10420:3:11"
																		},
																		"nativeSrc": "10420:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10420:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10444:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10444:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10460:3:11",
																								"nodeType": "YulLiteral",
																								"src": "10460:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10465:1:11",
																								"nodeType": "YulLiteral",
																								"src": "10465:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10456:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "10456:3:11"
																						},
																						"nativeSrc": "10456:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "10456:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10469:1:11",
																						"nodeType": "YulLiteral",
																						"src": "10469:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10452:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10452:3:11"
																				},
																				"nativeSrc": "10452:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10452:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10440:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10440:3:11"
																		},
																		"nativeSrc": "10440:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10440:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10413:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10413:6:11"
																},
																"nativeSrc": "10413:60:11",
																"nodeType": "YulFunctionCall",
																"src": "10413:60:11"
															},
															"nativeSrc": "10413:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "10413:60:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10493:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10493:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10504:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10504:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10489:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10489:3:11"
																		},
																		"nativeSrc": "10489:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10489:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10509:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10509:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10482:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10482:6:11"
																},
																"nativeSrc": "10482:34:11",
																"nodeType": "YulFunctionCall",
																"src": "10482:34:11"
															},
															"nativeSrc": "10482:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "10482:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10151:371:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10261:9:11",
														"nodeType": "YulTypedName",
														"src": "10261:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10272:6:11",
														"nodeType": "YulTypedName",
														"src": "10272:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10280:6:11",
														"nodeType": "YulTypedName",
														"src": "10280:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10288:6:11",
														"nodeType": "YulTypedName",
														"src": "10288:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10299:4:11",
														"nodeType": "YulTypedName",
														"src": "10299:4:11",
														"type": ""
													}
												],
												"src": "10151:371:11"
											},
											{
												"body": {
													"nativeSrc": "10605:167:11",
													"nodeType": "YulBlock",
													"src": "10605:167:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "10651:16:11",
																"nodeType": "YulBlock",
																"src": "10651:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10660:1:11",
																					"nodeType": "YulLiteral",
																					"src": "10660:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10663:1:11",
																					"nodeType": "YulLiteral",
																					"src": "10663:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10653:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10653:6:11"
																			},
																			"nativeSrc": "10653:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10653:12:11"
																		},
																		"nativeSrc": "10653:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10653:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10626:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "10626:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10635:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10635:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10622:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10622:3:11"
																		},
																		"nativeSrc": "10622:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10622:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10647:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10647:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10618:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10618:3:11"
																},
																"nativeSrc": "10618:32:11",
																"nodeType": "YulFunctionCall",
																"src": "10618:32:11"
															},
															"nativeSrc": "10615:52:11",
															"nodeType": "YulIf",
															"src": "10615:52:11"
														},
														{
															"nativeSrc": "10676:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "10676:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10695:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10695:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10689:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "10689:5:11"
																},
																"nativeSrc": "10689:16:11",
																"nodeType": "YulFunctionCall",
																"src": "10689:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10680:5:11",
																	"nodeType": "YulTypedName",
																	"src": "10680:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10736:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "10736:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "10714:21:11",
																	"nodeType": "YulIdentifier",
																	"src": "10714:21:11"
																},
																"nativeSrc": "10714:28:11",
																"nodeType": "YulFunctionCall",
																"src": "10714:28:11"
															},
															"nativeSrc": "10714:28:11",
															"nodeType": "YulExpressionStatement",
															"src": "10714:28:11"
														},
														{
															"nativeSrc": "10751:15:11",
															"nodeType": "YulAssignment",
															"src": "10751:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "10761:5:11",
																"nodeType": "YulIdentifier",
																"src": "10761:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10751:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10751:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "10527:245:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10571:9:11",
														"nodeType": "YulTypedName",
														"src": "10571:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10582:7:11",
														"nodeType": "YulTypedName",
														"src": "10582:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10594:6:11",
														"nodeType": "YulTypedName",
														"src": "10594:6:11",
														"type": ""
													}
												],
												"src": "10527:245:11"
											},
											{
												"body": {
													"nativeSrc": "10906:145:11",
													"nodeType": "YulBlock",
													"src": "10906:145:11",
													"statements": [
														{
															"nativeSrc": "10916:26:11",
															"nodeType": "YulAssignment",
															"src": "10916:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10928:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10928:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10939:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10939:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10924:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10924:3:11"
																},
																"nativeSrc": "10924:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10924:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10916:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10916:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10958:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10958:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10973:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10973:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10989:3:11",
																								"nodeType": "YulLiteral",
																								"src": "10989:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10994:1:11",
																								"nodeType": "YulLiteral",
																								"src": "10994:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10985:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "10985:3:11"
																						},
																						"nativeSrc": "10985:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "10985:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10998:1:11",
																						"nodeType": "YulLiteral",
																						"src": "10998:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10981:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10981:3:11"
																				},
																				"nativeSrc": "10981:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10981:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10969:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10969:3:11"
																		},
																		"nativeSrc": "10969:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10969:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10951:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10951:6:11"
																},
																"nativeSrc": "10951:51:11",
																"nodeType": "YulFunctionCall",
																"src": "10951:51:11"
															},
															"nativeSrc": "10951:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "10951:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11022:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11022:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11033:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11033:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11018:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11018:3:11"
																		},
																		"nativeSrc": "11018:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11018:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11038:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11038:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11011:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11011:6:11"
																},
																"nativeSrc": "11011:34:11",
																"nodeType": "YulFunctionCall",
																"src": "11011:34:11"
															},
															"nativeSrc": "11011:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "11011:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10777:274:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10867:9:11",
														"nodeType": "YulTypedName",
														"src": "10867:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10878:6:11",
														"nodeType": "YulTypedName",
														"src": "10878:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10886:6:11",
														"nodeType": "YulTypedName",
														"src": "10886:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10897:4:11",
														"nodeType": "YulTypedName",
														"src": "10897:4:11",
														"type": ""
													}
												],
												"src": "10777:274:11"
											},
											{
												"body": {
													"nativeSrc": "11230:181:11",
													"nodeType": "YulBlock",
													"src": "11230:181:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11247:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11247:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11258:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11258:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11240:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11240:6:11"
																},
																"nativeSrc": "11240:21:11",
																"nodeType": "YulFunctionCall",
																"src": "11240:21:11"
															},
															"nativeSrc": "11240:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "11240:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11281:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11281:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11292:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11292:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11277:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11277:3:11"
																		},
																		"nativeSrc": "11277:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11277:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11297:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11297:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11270:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11270:6:11"
																},
																"nativeSrc": "11270:30:11",
																"nodeType": "YulFunctionCall",
																"src": "11270:30:11"
															},
															"nativeSrc": "11270:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "11270:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11320:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11320:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11331:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11331:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11316:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11316:3:11"
																		},
																		"nativeSrc": "11316:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11316:18:11"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "11336:33:11",
																		"nodeType": "YulLiteral",
																		"src": "11336:33:11",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11309:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11309:6:11"
																},
																"nativeSrc": "11309:61:11",
																"nodeType": "YulFunctionCall",
																"src": "11309:61:11"
															},
															"nativeSrc": "11309:61:11",
															"nodeType": "YulExpressionStatement",
															"src": "11309:61:11"
														},
														{
															"nativeSrc": "11379:26:11",
															"nodeType": "YulAssignment",
															"src": "11379:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11391:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11391:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11402:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11402:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11387:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11387:3:11"
																},
																"nativeSrc": "11387:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11387:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11379:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11379:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11056:355:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11207:9:11",
														"nodeType": "YulTypedName",
														"src": "11207:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11221:4:11",
														"nodeType": "YulTypedName",
														"src": "11221:4:11",
														"type": ""
													}
												],
												"src": "11056:355:11"
											},
											{
												"body": {
													"nativeSrc": "11545:119:11",
													"nodeType": "YulBlock",
													"src": "11545:119:11",
													"statements": [
														{
															"nativeSrc": "11555:26:11",
															"nodeType": "YulAssignment",
															"src": "11555:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11567:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11567:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11578:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11578:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11563:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11563:3:11"
																},
																"nativeSrc": "11563:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11563:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11555:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11555:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11597:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11597:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11608:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11608:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11590:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11590:6:11"
																},
																"nativeSrc": "11590:25:11",
																"nodeType": "YulFunctionCall",
																"src": "11590:25:11"
															},
															"nativeSrc": "11590:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "11590:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11635:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11635:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11646:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11646:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11631:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11631:3:11"
																		},
																		"nativeSrc": "11631:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11631:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11651:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11651:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11624:6:11"
																},
																"nativeSrc": "11624:34:11",
																"nodeType": "YulFunctionCall",
																"src": "11624:34:11"
															},
															"nativeSrc": "11624:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "11624:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11416:248:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11506:9:11",
														"nodeType": "YulTypedName",
														"src": "11506:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11517:6:11",
														"nodeType": "YulTypedName",
														"src": "11517:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11525:6:11",
														"nodeType": "YulTypedName",
														"src": "11525:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11536:4:11",
														"nodeType": "YulTypedName",
														"src": "11536:4:11",
														"type": ""
													}
												],
												"src": "11416:248:11"
											},
											{
												"body": {
													"nativeSrc": "11798:171:11",
													"nodeType": "YulBlock",
													"src": "11798:171:11",
													"statements": [
														{
															"nativeSrc": "11808:26:11",
															"nodeType": "YulAssignment",
															"src": "11808:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11820:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11820:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11831:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11831:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11816:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11816:3:11"
																},
																"nativeSrc": "11816:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11816:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11808:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11808:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11850:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11850:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11865:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11865:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11881:3:11",
																								"nodeType": "YulLiteral",
																								"src": "11881:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11886:1:11",
																								"nodeType": "YulLiteral",
																								"src": "11886:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11877:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "11877:3:11"
																						},
																						"nativeSrc": "11877:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "11877:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11890:1:11",
																						"nodeType": "YulLiteral",
																						"src": "11890:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11873:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "11873:3:11"
																				},
																				"nativeSrc": "11873:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11873:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11861:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11861:3:11"
																		},
																		"nativeSrc": "11861:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11861:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11843:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11843:6:11"
																},
																"nativeSrc": "11843:51:11",
																"nodeType": "YulFunctionCall",
																"src": "11843:51:11"
															},
															"nativeSrc": "11843:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "11843:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11914:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11914:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11925:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11925:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11910:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11910:3:11"
																		},
																		"nativeSrc": "11910:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11910:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11934:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11934:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11950:3:11",
																								"nodeType": "YulLiteral",
																								"src": "11950:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11955:1:11",
																								"nodeType": "YulLiteral",
																								"src": "11955:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11946:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "11946:3:11"
																						},
																						"nativeSrc": "11946:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "11946:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11959:1:11",
																						"nodeType": "YulLiteral",
																						"src": "11959:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11942:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "11942:3:11"
																				},
																				"nativeSrc": "11942:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11942:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11930:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11930:3:11"
																		},
																		"nativeSrc": "11930:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11930:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11903:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11903:6:11"
																},
																"nativeSrc": "11903:60:11",
																"nodeType": "YulFunctionCall",
																"src": "11903:60:11"
															},
															"nativeSrc": "11903:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "11903:60:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "11669:300:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11759:9:11",
														"nodeType": "YulTypedName",
														"src": "11759:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11770:6:11",
														"nodeType": "YulTypedName",
														"src": "11770:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11778:6:11",
														"nodeType": "YulTypedName",
														"src": "11778:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11789:4:11",
														"nodeType": "YulTypedName",
														"src": "11789:4:11",
														"type": ""
													}
												],
												"src": "11669:300:11"
											},
											{
												"body": {
													"nativeSrc": "12125:230:11",
													"nodeType": "YulBlock",
													"src": "12125:230:11",
													"statements": [
														{
															"nativeSrc": "12135:26:11",
															"nodeType": "YulAssignment",
															"src": "12135:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12147:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12147:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12158:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12158:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12143:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12143:3:11"
																},
																"nativeSrc": "12143:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12143:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12135:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12135:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12177:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12177:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12192:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12192:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12208:3:11",
																								"nodeType": "YulLiteral",
																								"src": "12208:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12213:1:11",
																								"nodeType": "YulLiteral",
																								"src": "12213:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "12204:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "12204:3:11"
																						},
																						"nativeSrc": "12204:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "12204:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12217:1:11",
																						"nodeType": "YulLiteral",
																						"src": "12217:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12200:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "12200:3:11"
																				},
																				"nativeSrc": "12200:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12200:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12188:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12188:3:11"
																		},
																		"nativeSrc": "12188:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12188:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12170:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12170:6:11"
																},
																"nativeSrc": "12170:51:11",
																"nodeType": "YulFunctionCall",
																"src": "12170:51:11"
															},
															"nativeSrc": "12170:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "12170:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12241:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12241:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12252:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12252:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12237:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12237:3:11"
																		},
																		"nativeSrc": "12237:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12237:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "12261:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12261:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12277:3:11",
																								"nodeType": "YulLiteral",
																								"src": "12277:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12282:1:11",
																								"nodeType": "YulLiteral",
																								"src": "12282:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "12273:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "12273:3:11"
																						},
																						"nativeSrc": "12273:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "12273:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12286:1:11",
																						"nodeType": "YulLiteral",
																						"src": "12286:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12269:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "12269:3:11"
																				},
																				"nativeSrc": "12269:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12269:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12257:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12257:3:11"
																		},
																		"nativeSrc": "12257:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12257:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12230:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12230:6:11"
																},
																"nativeSrc": "12230:60:11",
																"nodeType": "YulFunctionCall",
																"src": "12230:60:11"
															},
															"nativeSrc": "12230:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "12230:60:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12310:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12310:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12321:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12321:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12306:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12306:3:11"
																		},
																		"nativeSrc": "12306:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12306:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nativeSrc": "12340:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "12340:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12333:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "12333:6:11"
																				},
																				"nativeSrc": "12333:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12333:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "12326:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "12326:6:11"
																		},
																		"nativeSrc": "12326:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12326:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12299:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12299:6:11"
																},
																"nativeSrc": "12299:50:11",
																"nodeType": "YulFunctionCall",
																"src": "12299:50:11"
															},
															"nativeSrc": "12299:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "12299:50:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed",
												"nativeSrc": "11974:381:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12078:9:11",
														"nodeType": "YulTypedName",
														"src": "12078:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12089:6:11",
														"nodeType": "YulTypedName",
														"src": "12089:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12097:6:11",
														"nodeType": "YulTypedName",
														"src": "12097:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12105:6:11",
														"nodeType": "YulTypedName",
														"src": "12105:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12116:4:11",
														"nodeType": "YulTypedName",
														"src": "12116:4:11",
														"type": ""
													}
												],
												"src": "11974:381:11"
											},
											{
												"body": {
													"nativeSrc": "12412:116:11",
													"nodeType": "YulBlock",
													"src": "12412:116:11",
													"statements": [
														{
															"nativeSrc": "12422:20:11",
															"nodeType": "YulAssignment",
															"src": "12422:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12437:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12437:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12440:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12440:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12433:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12433:3:11"
																},
																"nativeSrc": "12433:9:11",
																"nodeType": "YulFunctionCall",
																"src": "12433:9:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12422:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "12422:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12500:22:11",
																"nodeType": "YulBlock",
																"src": "12500:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12502:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "12502:16:11"
																			},
																			"nativeSrc": "12502:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12502:18:11"
																		},
																		"nativeSrc": "12502:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12502:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12471:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "12471:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12464:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "12464:6:11"
																				},
																				"nativeSrc": "12464:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12464:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12478:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "12478:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12485:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "12485:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12494:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "12494:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12481:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "12481:3:11"
																						},
																						"nativeSrc": "12481:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "12481:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12475:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "12475:2:11"
																				},
																				"nativeSrc": "12475:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12475:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12461:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "12461:2:11"
																		},
																		"nativeSrc": "12461:37:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12461:37:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12454:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12454:6:11"
																},
																"nativeSrc": "12454:45:11",
																"nodeType": "YulFunctionCall",
																"src": "12454:45:11"
															},
															"nativeSrc": "12451:71:11",
															"nodeType": "YulIf",
															"src": "12451:71:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12360:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12391:1:11",
														"nodeType": "YulTypedName",
														"src": "12391:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12394:1:11",
														"nodeType": "YulTypedName",
														"src": "12394:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12400:7:11",
														"nodeType": "YulTypedName",
														"src": "12400:7:11",
														"type": ""
													}
												],
												"src": "12360:168:11"
											},
											{
												"body": {
													"nativeSrc": "12579:171:11",
													"nodeType": "YulBlock",
													"src": "12579:171:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "12610:111:11",
																"nodeType": "YulBlock",
																"src": "12610:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12631:1:11",
																					"nodeType": "YulLiteral",
																					"src": "12631:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12638:3:11",
																							"nodeType": "YulLiteral",
																							"src": "12638:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "12643:10:11",
																							"nodeType": "YulLiteral",
																							"src": "12643:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "12634:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "12634:3:11"
																					},
																					"nativeSrc": "12634:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "12634:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12624:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12624:6:11"
																			},
																			"nativeSrc": "12624:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12624:31:11"
																		},
																		"nativeSrc": "12624:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12624:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12675:1:11",
																					"nodeType": "YulLiteral",
																					"src": "12675:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12678:4:11",
																					"nodeType": "YulLiteral",
																					"src": "12678:4:11",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12668:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12668:6:11"
																			},
																			"nativeSrc": "12668:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12668:15:11"
																		},
																		"nativeSrc": "12668:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12668:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12703:1:11",
																					"nodeType": "YulLiteral",
																					"src": "12703:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12706:4:11",
																					"nodeType": "YulLiteral",
																					"src": "12706:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12696:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12696:6:11"
																			},
																			"nativeSrc": "12696:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12696:15:11"
																		},
																		"nativeSrc": "12696:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12696:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12599:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12599:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12592:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12592:6:11"
																},
																"nativeSrc": "12592:9:11",
																"nodeType": "YulFunctionCall",
																"src": "12592:9:11"
															},
															"nativeSrc": "12589:132:11",
															"nodeType": "YulIf",
															"src": "12589:132:11"
														},
														{
															"nativeSrc": "12730:14:11",
															"nodeType": "YulAssignment",
															"src": "12730:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12739:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12739:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12742:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12742:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12735:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12735:3:11"
																},
																"nativeSrc": "12735:9:11",
																"nodeType": "YulFunctionCall",
																"src": "12735:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12730:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "12730:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12533:217:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12564:1:11",
														"nodeType": "YulTypedName",
														"src": "12564:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12567:1:11",
														"nodeType": "YulTypedName",
														"src": "12567:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12573:1:11",
														"nodeType": "YulTypedName",
														"src": "12573:1:11",
														"type": ""
													}
												],
												"src": "12533:217:11"
											},
											{
												"body": {
													"nativeSrc": "12929:176:11",
													"nodeType": "YulBlock",
													"src": "12929:176:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12946:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12946:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12957:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12957:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12939:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12939:6:11"
																},
																"nativeSrc": "12939:21:11",
																"nodeType": "YulFunctionCall",
																"src": "12939:21:11"
															},
															"nativeSrc": "12939:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "12939:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12980:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12980:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12991:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12991:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12976:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12976:3:11"
																		},
																		"nativeSrc": "12976:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12976:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12996:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12996:2:11",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12969:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12969:6:11"
																},
																"nativeSrc": "12969:30:11",
																"nodeType": "YulFunctionCall",
																"src": "12969:30:11"
															},
															"nativeSrc": "12969:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "12969:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13019:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13019:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13030:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13030:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13015:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13015:3:11"
																		},
																		"nativeSrc": "13015:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13015:18:11"
																	},
																	{
																		"hexValue": "416d6f756e742069732067726561746572207468656e20353025",
																		"kind": "string",
																		"nativeSrc": "13035:28:11",
																		"nodeType": "YulLiteral",
																		"src": "13035:28:11",
																		"type": "",
																		"value": "Amount is greater then 50%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13008:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13008:6:11"
																},
																"nativeSrc": "13008:56:11",
																"nodeType": "YulFunctionCall",
																"src": "13008:56:11"
															},
															"nativeSrc": "13008:56:11",
															"nodeType": "YulExpressionStatement",
															"src": "13008:56:11"
														},
														{
															"nativeSrc": "13073:26:11",
															"nodeType": "YulAssignment",
															"src": "13073:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13085:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13085:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13096:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13096:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13081:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13081:3:11"
																},
																"nativeSrc": "13081:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13081:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13073:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13073:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_daaf22ee48ba14ce5532421d554d114832ad11cacc0a90889b6df539cd8418d7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12755:350:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12906:9:11",
														"nodeType": "YulTypedName",
														"src": "12906:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12920:4:11",
														"nodeType": "YulTypedName",
														"src": "12920:4:11",
														"type": ""
													}
												],
												"src": "12755:350:11"
											},
											{
												"body": {
													"nativeSrc": "13191:103:11",
													"nodeType": "YulBlock",
													"src": "13191:103:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "13237:16:11",
																"nodeType": "YulBlock",
																"src": "13237:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13246:1:11",
																					"nodeType": "YulLiteral",
																					"src": "13246:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13249:1:11",
																					"nodeType": "YulLiteral",
																					"src": "13249:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13239:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13239:6:11"
																			},
																			"nativeSrc": "13239:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13239:12:11"
																		},
																		"nativeSrc": "13239:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "13239:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13212:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "13212:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13221:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13221:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13208:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13208:3:11"
																		},
																		"nativeSrc": "13208:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13208:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13233:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13233:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13204:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13204:3:11"
																},
																"nativeSrc": "13204:32:11",
																"nodeType": "YulFunctionCall",
																"src": "13204:32:11"
															},
															"nativeSrc": "13201:52:11",
															"nodeType": "YulIf",
															"src": "13201:52:11"
														},
														{
															"nativeSrc": "13262:26:11",
															"nodeType": "YulAssignment",
															"src": "13262:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13278:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13278:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13272:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "13272:5:11"
																},
																"nativeSrc": "13272:16:11",
																"nodeType": "YulFunctionCall",
																"src": "13272:16:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "13262:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13262:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "13110:184:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13157:9:11",
														"nodeType": "YulTypedName",
														"src": "13157:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13168:7:11",
														"nodeType": "YulTypedName",
														"src": "13168:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13180:6:11",
														"nodeType": "YulTypedName",
														"src": "13180:6:11",
														"type": ""
													}
												],
												"src": "13110:184:11"
											},
											{
												"body": {
													"nativeSrc": "13436:164:11",
													"nodeType": "YulBlock",
													"src": "13436:164:11",
													"statements": [
														{
															"nativeSrc": "13446:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "13446:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13466:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13466:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13460:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "13460:5:11"
																},
																"nativeSrc": "13460:13:11",
																"nodeType": "YulFunctionCall",
																"src": "13460:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13450:6:11",
																	"nodeType": "YulTypedName",
																	"src": "13450:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13488:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13488:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13497:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13497:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13505:4:11",
																				"nodeType": "YulLiteral",
																				"src": "13505:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13493:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13493:3:11"
																		},
																		"nativeSrc": "13493:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13493:17:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13512:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13512:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "13482:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "13482:5:11"
																},
																"nativeSrc": "13482:37:11",
																"nodeType": "YulFunctionCall",
																"src": "13482:37:11"
															},
															"nativeSrc": "13482:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "13482:37:11"
														},
														{
															"nativeSrc": "13528:26:11",
															"nodeType": "YulVariableDeclaration",
															"src": "13528:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13542:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13542:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13547:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13547:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13538:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13538:3:11"
																},
																"nativeSrc": "13538:16:11",
																"nodeType": "YulFunctionCall",
																"src": "13538:16:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "13532:2:11",
																	"nodeType": "YulTypedName",
																	"src": "13532:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "13570:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "13570:2:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13574:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13574:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13563:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13563:6:11"
																},
																"nativeSrc": "13563:13:11",
																"nodeType": "YulFunctionCall",
																"src": "13563:13:11"
															},
															"nativeSrc": "13563:13:11",
															"nodeType": "YulExpressionStatement",
															"src": "13563:13:11"
														},
														{
															"nativeSrc": "13585:9:11",
															"nodeType": "YulAssignment",
															"src": "13585:9:11",
															"value": {
																"name": "_1",
																"nativeSrc": "13592:2:11",
																"nodeType": "YulIdentifier",
																"src": "13592:2:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13585:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13585:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13299:301:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13412:3:11",
														"nodeType": "YulTypedName",
														"src": "13412:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13417:6:11",
														"nodeType": "YulTypedName",
														"src": "13417:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13428:3:11",
														"nodeType": "YulTypedName",
														"src": "13428:3:11",
														"type": ""
													}
												],
												"src": "13299:301:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IBEP20_$1425__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n        value4 := abi_decode_address(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(length))\n        let array_1 := dst\n        mstore(dst, length)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, length)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, 0x20)\n        }\n        array := array_1\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(length))\n        let array := dst\n        mstore(dst, length)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(_1, shl(5, length)), 0x20)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_1, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            let value := 0\n            value := calldataload(src)\n            mstore(dst, value)\n            dst := add(dst, 0x20)\n        }\n        value0 := array\n        let offset_1 := calldataload(add(headStart, 0x20))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_array_address_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(length, 0x1f), not(31)), 32))\n        mstore(array, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, 32), add(_1, 32), length)\n        mstore(add(add(array, length), 32), 0)\n        value1 := array\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"This address does not have permi\")\n        mstore(add(headStart, 96), \"ssion to call performUpkeep\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_daaf22ee48ba14ce5532421d554d114832ad11cacc0a90889b6df539cd8418d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Amount is greater then 50%\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"487": [
									{
										"length": 32,
										"start": 8492
									},
									{
										"length": 32,
										"start": 8533
									},
									{
										"length": 32,
										"start": 8857
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106102a5575f3560e01c80637547c7a31161016f578063ad8e5ec4116100d8578063d777cc6d11610092578063ed0610671161006d578063ed0610671461086d578063f0664a4f1461088c578063f2fde38b146108ab578063ff3d65d9146108ca575f80fd5b8063d777cc6d1461081b578063d9b998b41461083a578063e9c68e2c14610859575f80fd5b8063ad8e5ec4146106f4578063b47ff95114610713578063b9dac1eb14610728578063bccbc36c14610747578063c7fd5bf0146107c8578063ce356a2414610806575f80fd5b806385f452501161012957806385f45250146105fe5780638da5cb5b1461061d578063947a36fb146106595780639c361e4e1461066e578063a4f67b8b14610683578063ad3cb1cc146106b7575f80fd5b80637547c7a31461054457806378fd078d146105635780637f111e60146105825780637f70c5e7146105a15780637ffe4d93146105c057806383aa9985146105df575f80fd5b806344490ff411610211578063567e98f9116101cb578063567e98f91461049c5780635f17e616146104b15780636626b26d146104d057806367976974146104e45780636e04ff0d14610503578063715018a614610530575f80fd5b806344490ff4146104035780634585e33b146104185780634f1ef286146104375780635256dbbf1461044a57806352d1902d146104695780635462870d1461047d575f80fd5b806330cac9721161026257806330cac9721461037b57806333244c2c1461039057806334107c87146103a557806339518b5e146103c45780633a71a9e4146103d95780633f3b3b27146103ee575f80fd5b806301934a83146102a957806311eac855146102d15780631459457a14610307578063188e07b9146103285780632765df7a1461033d5780633070fbf81461035c575b5f80fd5b3480156102b4575f80fd5b506102be60085481565b6040519081526020015b60405180910390f35b3480156102dc575f80fd5b505f546102ef906001600160a01b031681565b6040516001600160a01b0390911681526020016102c8565b348015610312575f80fd5b50610326610321366004612813565b6108f5565b005b348015610333575f80fd5b506102be60015481565b348015610348575f80fd5b50610326610357366004612874565b610a70565b348015610367575f80fd5b50600e546102ef906001600160a01b031681565b348015610386575f80fd5b506102be600b5481565b34801561039b575f80fd5b506102be60045481565b3480156103b0575f80fd5b506103266103bf366004612964565b610b58565b3480156103cf575f80fd5b506102be600c5481565b3480156103e4575f80fd5b506102be60075481565b3480156103f9575f80fd5b506102be600d5481565b34801561040e575f80fd5b506102be60055481565b348015610423575f80fd5b50610326610432366004612a20565b610d05565b610326610445366004612a8e565b610dfc565b348015610455575f80fd5b50610326610464366004612874565b610e17565b348015610474575f80fd5b506102be610f61565b348015610488575f80fd5b506009546102ef906001600160a01b031681565b3480156104a7575f80fd5b506102be60035481565b3480156104bc575f80fd5b506103266104cb366004612b33565b610f7c565b3480156104db575f80fd5b50610326611064565b3480156104ef575f80fd5b506103266104fe366004612874565b6110ec565b34801561050e575f80fd5b5061052261051d366004612a20565b6112ef565b6040516102c8929190612b81565b34801561053b575f80fd5b5061032661131f565b34801561054f575f80fd5b5061032661055e366004612874565b611332565b34801561056e575f80fd5b5061032661057d366004612874565b611519565b34801561058d575f80fd5b5061032661059c366004612874565b611663565b3480156105ac575f80fd5b506103266105bb366004612874565b6116f4565b3480156105cb575f80fd5b506103266105da366004612874565b611785565b3480156105ea575f80fd5b506010546102ef906001600160a01b031681565b348015610609575f80fd5b50610326610618366004612b33565b6118d4565b348015610628575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166102ef565b348015610664575f80fd5b506102be600a5481565b348015610679575f80fd5b506102be60115481565b34801561068e575f80fd5b506102ef61069d366004612874565b60136020525f90815260409020546001600160a01b031681565b3480156106c2575f80fd5b506106e7604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516102c89190612ba3565b3480156106ff575f80fd5b5061032661070e366004612874565b611a0c565b34801561071e575f80fd5b506102be60025481565b348015610733575f80fd5b50610326610742366004612874565b611a9d565b348015610752575f80fd5b50610799610761366004612bb5565b60156020525f908152604090208054600182015460028301546003840154600485015460059095015460ff9094169492939192909186565b6040805196151587526020870195909552938501929092526060840152608083015260a082015260c0016102c8565b3480156107d3575f80fd5b506107f66107e2366004612bb5565b60126020525f908152604090205460ff1681565b60405190151581526020016102c8565b348015610811575f80fd5b506102be60065481565b348015610826575f80fd5b50610326610835366004612bb5565b611b2e565b348015610845575f80fd5b50610326610854366004612bdb565b611bfb565b348015610864575f80fd5b50610326611d55565b348015610878575f80fd5b50610326610887366004612b33565b61202e565b348015610897575f80fd5b50600f546102ef906001600160a01b031681565b3480156108b6575f80fd5b506103266108c5366004612bb5565b6120cb565b3480156108d5575f80fd5b506102be6108e4366004612874565b60146020525f908152604090205481565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f8115801561093a5750825b90505f8267ffffffffffffffff1660011480156109565750303b155b905081158015610964575080155b156109825760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156109ac57845460ff60401b1916600160401b1785555b6109b58a612108565b6109bd612119565b5f80546001600160a01b03808c166001600160a01b031992831617909255611388600455611d4c6005556105dc6006556103e860075560098054898416908316179055600f80548b841690831617905560108054928a16929091169190911790558315610a6457845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b600f546001600160a01b03163314801590610a9657506010546001600160a01b03163314155b15610abb57604051631ed6f38b60e31b81523360048201526024015b60405180910390fd5b5f8111610ade5760405163cdbc633560e01b815260048101829052602401610ab2565b601180545f90815260146020526040812083905581549190610aff83612c24565b90915550506011547fe1976e16ed8ce8e740235978fbe69b27d5eea683b2e017bb0bd2fabb33294b3f90610b3583612710612c3c565b60408051928352602083019190915281018390526060015b60405180910390a150565b600f546001600160a01b03163314801590610b7e57506010546001600160a01b03163314155b15610b9e57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f825111610bc4578151604051633ddd555760e21b8152600401610ab291815260200190565b5f815111610bea578051604051633a46e2ab60e01b8152600401610ab291815260200190565b8151815114610c0c5760405163512509d360e11b815260040160405180910390fd5b5f5b8251811015610cbc57828181518110610c2957610c29612c4f565b602002602001015160155f848481518110610c4657610c46612c4f565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f206005015f828254610c7e9190612c63565b92505081905550828181518110610c9757610c97612c4f565b602002602001015160035f828254610caf9190612c63565b9091555050600101610c0e565b50815181516040805133815260208101939093528201527f472714a70b748503a00efa85a1c3081b2a3477ce3be0227cb140455f82ccaeb6906060015b60405180910390a15050565b600e546001600160a01b03163314610d855760405162461bcd60e51b815260206004820152603b60248201527f54686973206164647265737320646f6573206e6f742068617665207065726d6960448201527f7373696f6e20746f2063616c6c20706572666f726d55706b65657000000000006064820152608401610ab2565b600a545f03610dad57600a54604051637154000760e01b8152600401610ab291815260200190565b600c544210610ddd57600b54600a81905542600d819055610dce9190612c63565b600c55610dd9611d55565b5050565b600c546040516354593e7560e01b8152600401610ab291815260200190565b610e04612121565b610e0d826121c5565b610dd982826121cd565b600f546001600160a01b03163314801590610e3d57506010546001600160a01b03163314155b15610e5d57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111610e80576040516302ff478360e41b815260048101829052602401610ab2565b8060015f828254610e919190612c63565b90915550505f80546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610eca90339030908790600401612c76565b6020604051808303815f875af1158015610ee6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f0a9190612c9a565b905080610f2e5760405163d85d3cef60e01b81528115156004820152602401610ab2565b7fa9f166643ec132a11638e74e3c3a78d4ae278fcbf92998240e0e97676f54e404600154604051610cf991815260200190565b5f610f6a61228e565b505f80516020612d1983398151915290565b600f546001600160a01b03163314801590610fa257506010546001600160a01b03163314155b15610fc257604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111610fe557604051637154000760e01b815260048101829052602401610ab2565b42821015611009576040516354593e7560e01b815260048101839052602401610ab2565b6110134283612c3c565b600a819055600c83905542600d819055600b8390556040805133815260208101939093528201527f2b5090e035d3026f5448298c9adc68db8bbc1b26a8af5c81b2b2a9fc07ca4a0090606001610cf9565b600f546001600160a01b0316331480159061108a57506010546001600160a01b03163314155b156110aa57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f600a8190556040805133815260208101929092527f3b68dc4e210c46d3622293f2b941cdfde795bb6e17286bb289ba05a6a3b5541f910160405180910390a1565b600954600160a01b900460ff16156111465760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610ab2565b6009805460ff60a01b1916600160a01b1790558061117a576040516302ff478360e41b815260048101829052602401610ab2565b335f908152601560205260409020600101548111156111c357335f90815260156020526040908190206001015490516398e712c360e01b81526004810191909152602401610ab2565b335f90815260156020526040812060010180548392906111e4908490612c3c565b9091555050335f908152601560205260408120600201805483929061120a908490612c63565b90915550505f805460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303815f875af115801561125d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112819190612c9a565b9050806112a55760405163d85d3cef60e01b81528115156004820152602401610ab2565b60408051338152602081018490527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a150506009805460ff60a01b19169055565b5f60605f600a54600d54426113049190612c3c565b60408051602081019091525f81529110969095509350505050565b6113276122d7565b6113305f612332565b565b5f8111611355576040516302ff478360e41b815260048101829052602401610ab2565b335f9081526015602052604090205460ff161561139d57335f90815260156020526040908190205490516301be970f60e61b815260ff90911615156004820152602401610ab2565b335f90815260156020526040812060050180548392906113be908490612c63565b9091555050335f9081526012602052604090205460ff1661142757600880545f90815260136020908152604080832080546001600160a01b03191633908117909155835260129091528120805460ff191660011790558154919061142183612c24565b91905055505b8060035f8282546114389190612c63565b90915550505f80546009546040516323b872dd60e01b81526001600160a01b03928316926323b872dd92611476923392909116908790600401612c76565b6020604051808303815f875af1158015611492573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114b69190612c9a565b9050806114da5760405163d85d3cef60e01b81528115156004820152602401610ab2565b6009546040517f14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab91610cf99133916001600160a01b0316908690612c76565b600f546001600160a01b0316331480159061153f57506010546001600160a01b03163314155b1561155f57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111611582576040516302ff478360e41b815260048101829052602401610ab2565b8060025f8282546115939190612c63565b90915550505f80546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906115cc90339030908790600401612c76565b6020604051808303815f875af11580156115e8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061160c9190612c9a565b9050806116305760405163d85d3cef60e01b81528115156004820152602401610ab2565b7f73834e1d1ee73ba659470a3603b888903853d3a3c9fda34e71c093a0e35cab94600254604051610cf991815260200190565b600f546001600160a01b0316331480159061168957506010546001600160a01b03163314155b156116a957604051631ed6f38b60e31b8152336004820152602401610ab2565b5f81116116cc5760405163cdbc633560e01b815260048101829052602401610ab2565b600781905560408051338152602081018390525f80516020612d398339815191529101610b4d565b600f546001600160a01b0316331480159061171a57506010546001600160a01b03163314155b1561173a57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f811161175d5760405163cdbc633560e01b815260048101829052602401610ab2565b600481905560408051338152602081018390525f80516020612d398339815191529101610b4d565b5f81116117a8576040516302ff478360e41b815260048101829052602401610ab2565b335f9081526015602052604090205460ff16156117f057335f90815260156020526040908190205490516301be970f60e61b815260ff90911615156004820152602401610ab2565b335f90815260156020526040902060010154811061182457604051630636dc6b60e31b815260048101829052602401610ab2565b335f9081526015602052604081206001018054839290611845908490612c3c565b9091555050335f908152601560205260408120600501805483929061186b908490612c63565b925050819055508060025f8282546118839190612c63565b925050819055508060035f82825461189b9190612c63565b90915550506040517f14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab90610b4d90339030908590612c76565b5f82116118f7576040516302ff478360e41b815260048101839052602401610ab2565b60115481111561191d5760405163222a50f360e01b815260048101829052602401610ab2565b5f818152601460205260409020546119369083906123a2565b5f80546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061196a90339030908890600401612c76565b6020604051808303815f875af1158015611986573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119aa9190612c9a565b9050806119ce5760405163d85d3cef60e01b81528115156004820152602401610ab2565b60408051848152602081018490527fa89b69c5958ec1ccf0df0de746a8708f5b6a6b429430129f16f46f44b319c900910160405180910390a1505050565b600f546001600160a01b03163314801590611a3257506010546001600160a01b03163314155b15611a5257604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111611a755760405163cdbc633560e01b815260048101829052602401610ab2565b600681905560408051338152602081018390525f80516020612d398339815191529101610b4d565b600f546001600160a01b03163314801590611ac357506010546001600160a01b03163314155b15611ae357604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111611b065760405163cdbc633560e01b815260048101829052602401610ab2565b600581905560408051338152602081018390525f80516020612d398339815191529101610b4d565b600f546001600160a01b03163314801590611b5457506010546001600160a01b03163314155b15611b7457604051631ed6f38b60e31b8152336004820152602401610ab2565b6001600160a01b038116611ba65760405163e4cfa94d60e01b81526001600160a01b0382166004820152602401610ab2565b600e80546001600160a01b0319166001600160a01b0383169081179091556040805133815260208101929092527f75f91f3cecb8c46f20150f60f77a6e1f0de00776627692db82ef1960af84c33a9101610b4d565b600f546001600160a01b03163314801590611c2157506010546001600160a01b03163314155b15611c4157604051631ed6f38b60e31b8152336004820152602401610ab2565b6001600160a01b038216611c735760405163e4cfa94d60e01b81526001600160a01b0383166004820152602401610ab2565b600181151514801590611c8557508015155b15611ca7576040516381ed1ae360e01b81528115156004820152602401610ab2565b801515600103611cd8576001600160a01b0382165f908152601560205260409020805460ff19166001179055611cf8565b6001600160a01b0382165f908152601560205260409020805460ff191690555b6001600160a01b0382165f818152601560209081526040918290205482513381529182019390935260ff9092161515908201527f7a1655bc3160d3413bf1d5235e55be12e01b7e8bc2436a9bff09c3b4fa2421f190606001610cf9565b600e546001600160a01b03163314801590611d7b5750600f546001600160a01b03163314155b8015611d9257506010546001600160a01b03163314155b15611db257604051631ed6f38b60e31b8152336004820152602401610ab2565b600254158015611dc25750600154155b15611def57600254600154604051632fd92d8d60e01b815260048101929092526024820152604401610ab2565b5f805f611dfa612400565b919450925090505f805b600854811015611fe2575f818152601360209081526040808320546001600160a01b03168352601590915290205460ff16611fda576003545f828152601360209081526040808320546001600160a01b031683526015909152812060050154909190611e7290612710612cb5565b611e7c9190612ccc565b90505f611e89868361256d565b90508060025f828254611e9c9190612c3c565b90915550611eac90508185612c63565b93508460015f828254611ebf9190612c3c565b90915550505f838152601360209081526040808320546001600160a01b03168352601590915281206003018054879290611efa908490612c63565b90915550505f838152601360209081526040808320546001600160a01b03168352601590915281206004018054839290611f35908490612c63565b909155505f9050611f468683612c63565b5f858152601360209081526040808320546001600160a01b031683526015909152812060010180549293508392909190611f81908490612c63565b909155505087851115611fd65760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e742069732067726561746572207468656e203530250000000000006044820152606401610ab2565b5050505b600101611e04565b506002546001546040805133815260208101939093528201527fee826440768329b0c72f81331212ee31fcdac1ea79a248d24821e40c34e580209060600160405180910390a150505050565b600f546001600160a01b0316331480159061205457506010546001600160a01b03163314155b1561207457604051631ed6f38b60e31b8152336004820152602401610ab2565b5f81116120975760405163cdbc633560e01b815260048101829052602401610ab2565b5f8281526014602090815260409182902083905581513381529081018390525f80516020612d398339815191529101610cf9565b6120d36122d7565b6001600160a01b0381166120fc57604051631e4fbdf760e01b81525f6004820152602401610ab2565b61210581612332565b50565b6121106125d6565b6121058161261f565b6113306125d6565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806121a757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661219b5f80516020612d19833981519152546001600160a01b031690565b6001600160a01b031614155b156113305760405163703e46dd60e11b815260040160405180910390fd5b6121056122d7565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612227575060408051601f3d908101601f1916820190925261222491810190612ceb565b60015b61224f57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610ab2565b5f80516020612d19833981519152811461227f57604051632a87526960e21b815260048101829052602401610ab2565b6122898383612627565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146113305760405163703e46dd60e11b815260040160405180910390fd5b336123097f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146113305760405163118cdaa760e01b8152336004820152602401610ab2565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f6123af82612710612c3c565b90505f6123bc848361256d565b90505f6123c9858561256d565b90508160025f8282546123dc9190612c63565b925050819055508060015f8282546123f49190612c63565b90915550505050505050565b5f805f8061241260025461138861256d565b90505f6124218260055461256d565b90505f6124308360065461256d565b90505f61243f8460075461256d565b90505f61245060015460045461256d565b90505f6008541161247a57600854604051637ca8d0db60e01b8152600401610ab291815260200190565b5f600854826124899190612ccc565b90506124958385612c63565b60025f8282546124a59190612c3c565b925050819055508360015f8282546124bd9190612c63565b90915550505f805460095460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810187905291169063a9059cbb906044016020604051808303815f875af1158015612514573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906125389190612c9a565b90508061255c5760405163d85d3cef60e01b81528115156004820152602401610ab2565b509498939750939550919350505050565b5f80831161259157604051639b7220af60e01b815260048101849052602401610ab2565b5f82116125b457604051630b015aa760e31b815260048101839052602401610ab2565b5f6127106125c28486612cb5565b6125cc9190612ccc565b9150505b92915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661133057604051631afcd79f60e31b815260040160405180910390fd5b6120d36125d6565b6126308261267c565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156126745761228982826126df565b610dd9612751565b806001600160a01b03163b5f036126b157604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610ab2565b5f80516020612d1983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516126fb9190612d02565b5f60405180830381855af49150503d805f8114612733576040519150601f19603f3d011682016040523d82523d5f602084013e612738565b606091505b5091509150612748858383612770565b95945050505050565b34156113305760405163b398979f60e01b815260040160405180910390fd5b60608261278557612780826127cf565b6127c8565b815115801561279c57506001600160a01b0384163b155b156127c557604051639996b31560e01b81526001600160a01b0385166004820152602401610ab2565b50805b9392505050565b8051156127df5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b038116811461280e575f80fd5b919050565b5f805f805f60a08688031215612827575f80fd5b612830866127f8565b945061283e602087016127f8565b935061284c604087016127f8565b925061285a606087016127f8565b9150612868608087016127f8565b90509295509295909350565b5f60208284031215612884575f80fd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff811182821017156128c8576128c861288b565b604052919050565b5f67ffffffffffffffff8211156128e9576128e961288b565b5060051b60200190565b5f82601f830112612902575f80fd5b8135612915612910826128d0565b61289f565b8082825260208201915060208360051b860101925085831115612936575f80fd5b602085015b8381101561295a5761294c816127f8565b83526020928301920161293b565b5095945050505050565b5f8060408385031215612975575f80fd5b823567ffffffffffffffff81111561298b575f80fd5b8301601f8101851361299b575f80fd5b80356129a9612910826128d0565b8082825260208201915060208360051b8501019250878311156129ca575f80fd5b6020840193505b828410156129ec5783358252602093840193909101906129d1565b9450505050602083013567ffffffffffffffff811115612a0a575f80fd5b612a16858286016128f3565b9150509250929050565b5f8060208385031215612a31575f80fd5b823567ffffffffffffffff811115612a47575f80fd5b8301601f81018513612a57575f80fd5b803567ffffffffffffffff811115612a6d575f80fd5b856020828401011115612a7e575f80fd5b6020919091019590945092505050565b5f8060408385031215612a9f575f80fd5b612aa8836127f8565b9150602083013567ffffffffffffffff811115612ac3575f80fd5b8301601f81018513612ad3575f80fd5b803567ffffffffffffffff811115612aed57612aed61288b565b612b00601f8201601f191660200161289f565b818152866020838501011115612b14575f80fd5b816020840160208301375f602083830101528093505050509250929050565b5f8060408385031215612b44575f80fd5b50508035926020909101359150565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b8215158152604060208201525f612b9b6040830184612b53565b949350505050565b602081525f6127c86020830184612b53565b5f60208284031215612bc5575f80fd5b6127c8826127f8565b8015158114612105575f80fd5b5f8060408385031215612bec575f80fd5b612bf5836127f8565b91506020830135612c0581612bce565b809150509250929050565b634e487b7160e01b5f52601160045260245ffd5b5f60018201612c3557612c35612c10565b5060010190565b818103818111156125d0576125d0612c10565b634e487b7160e01b5f52603260045260245ffd5b808201808211156125d0576125d0612c10565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f60208284031215612caa575f80fd5b81516127c881612bce565b80820281158282048414176125d0576125d0612c10565b5f82612ce657634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215612cfb575f80fd5b5051919050565b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcb5671393c7c6980552e50a31e778921eb17d764c2e98fbf4d44fff524712def9a26469706673582212208faa61c493bc1e7ec40ac17c40f46b6e4f326660a1aff6215ed06ee7754902f664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2A5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7547C7A3 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0xAD8E5EC4 GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0xD777CC6D GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xED061067 GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xED061067 EQ PUSH2 0x86D JUMPI DUP1 PUSH4 0xF0664A4F EQ PUSH2 0x88C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8AB JUMPI DUP1 PUSH4 0xFF3D65D9 EQ PUSH2 0x8CA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD777CC6D EQ PUSH2 0x81B JUMPI DUP1 PUSH4 0xD9B998B4 EQ PUSH2 0x83A JUMPI DUP1 PUSH4 0xE9C68E2C EQ PUSH2 0x859 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD8E5EC4 EQ PUSH2 0x6F4 JUMPI DUP1 PUSH4 0xB47FF951 EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0xB9DAC1EB EQ PUSH2 0x728 JUMPI DUP1 PUSH4 0xBCCBC36C EQ PUSH2 0x747 JUMPI DUP1 PUSH4 0xC7FD5BF0 EQ PUSH2 0x7C8 JUMPI DUP1 PUSH4 0xCE356A24 EQ PUSH2 0x806 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x85F45250 GT PUSH2 0x129 JUMPI DUP1 PUSH4 0x85F45250 EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x947A36FB EQ PUSH2 0x659 JUMPI DUP1 PUSH4 0x9C361E4E EQ PUSH2 0x66E JUMPI DUP1 PUSH4 0xA4F67B8B EQ PUSH2 0x683 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x6B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x78FD078D EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0x7F111E60 EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0x7F70C5E7 EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x7FFE4D93 EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0x83AA9985 EQ PUSH2 0x5DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x44490FF4 GT PUSH2 0x211 JUMPI DUP1 PUSH4 0x567E98F9 GT PUSH2 0x1CB JUMPI DUP1 PUSH4 0x567E98F9 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x5F17E616 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x6626B26D EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0x67976974 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x530 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x44490FF4 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x5256DBBF EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0x5462870D EQ PUSH2 0x47D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30CAC972 GT PUSH2 0x262 JUMPI DUP1 PUSH4 0x30CAC972 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x33244C2C EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x34107C87 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x39518B5E EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x3A71A9E4 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0x3EE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1934A83 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x11EAC855 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x1459457A EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x188E07B9 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x2765DF7A EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x3070FBF8 EQ PUSH2 0x35C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x2813 JUMP JUMPDEST PUSH2 0x8F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x3BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2964 JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x445 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A8E JUMP JUMPDEST PUSH2 0xDFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x455 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x464 CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0xE17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x474 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0xF61 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x4CB CALLDATASIZE PUSH1 0x4 PUSH2 0x2B33 JUMP JUMPDEST PUSH2 0xF7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x1064 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x4FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x10EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x522 PUSH2 0x51D CALLDATASIZE PUSH1 0x4 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0x12EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP3 SWAP2 SWAP1 PUSH2 0x2B81 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x131F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1332 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x57D CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1519 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1663 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x5BB CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x16F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x5DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1785 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x618 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B33 JUMP JUMPDEST PUSH2 0x18D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x628 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x664 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x679 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x69D CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x70E CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1A0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x733 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x742 CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1A9D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x752 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x799 PUSH2 0x761 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0xFF SWAP1 SWAP5 AND SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 ISZERO ISZERO DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F6 PUSH2 0x7E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x811 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x826 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x835 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x1B2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x845 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x854 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BDB JUMP JUMPDEST PUSH2 0x1BFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x864 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x1D55 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x878 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x887 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B33 JUMP JUMPDEST PUSH2 0x202E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x897 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x8C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x20CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0x8E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x93A JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x956 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x964 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x9AC JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x9B5 DUP11 PUSH2 0x2108 JUMP JUMPDEST PUSH2 0x9BD PUSH2 0x2119 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH2 0x1388 PUSH1 0x4 SSTORE PUSH2 0x1D4C PUSH1 0x5 SSTORE PUSH2 0x5DC PUSH1 0x6 SSTORE PUSH2 0x3E8 PUSH1 0x7 SSTORE PUSH1 0x9 DUP1 SLOAD DUP10 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0xF DUP1 SLOAD DUP12 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0xA64 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xA96 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xABB JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP1 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0xAFF DUP4 PUSH2 0x2C24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x11 SLOAD PUSH32 0xE1976E16ED8CE8E740235978FBE69B27D5EEA683B2E017BB0BD2FABB33294B3F SWAP1 PUSH2 0xB35 DUP4 PUSH2 0x2710 PUSH2 0x2C3C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xB7E JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT PUSH2 0xBC4 JUMPI DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x3DDD5557 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD GT PUSH2 0xBEA JUMPI DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0x3A46E2AB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD EQ PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH4 0x512509D3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xCBC JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC29 JUMPI PUSH2 0xC29 PUSH2 0x2C4F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x15 PUSH0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC46 JUMPI PUSH2 0xC46 PUSH2 0x2C4F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC7E SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC97 JUMPI PUSH2 0xC97 PUSH2 0x2C4F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCAF SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 ADD PUSH2 0xC0E JUMP JUMPDEST POP DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0x472714A70B748503A00EFA85A1C3081B2A3477CE3BE0227CB140455F82CCAEB6 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320646F6573206E6F742068617665207065726D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373696F6E20746F2063616C6C20706572666F726D55706B6565700000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH0 SUB PUSH2 0xDAD JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x71540007 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD TIMESTAMP LT PUSH2 0xDDD JUMPI PUSH1 0xB SLOAD PUSH1 0xA DUP2 SWAP1 SSTORE TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE PUSH2 0xDCE SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0xDD9 PUSH2 0x1D55 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x54593E75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0xE04 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0xE0D DUP3 PUSH2 0x21C5 JUMP JUMPDEST PUSH2 0xDD9 DUP3 DUP3 PUSH2 0x21CD JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xE3D JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xE5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xE80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE91 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xECA SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF0A SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xF2E JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH32 0xA9F166643EC132A11638E74E3C3A78D4AE278FCBF92998240E0E97676F54E404 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0xCF9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xF6A PUSH2 0x228E JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D19 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xFA2 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x71540007 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST TIMESTAMP DUP3 LT ISZERO PUSH2 0x1009 JUMPI PUSH1 0x40 MLOAD PUSH4 0x54593E75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x1013 TIMESTAMP DUP4 PUSH2 0x2C3C JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xC DUP4 SWAP1 SSTORE TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0xB DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0x2B5090E035D3026F5448298C9ADC68DB8BBC1B26A8AF5C81B2B2A9FC07CA4A00 SWAP1 PUSH1 0x60 ADD PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x108A JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x10AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x3B68DC4E210C46D3622293F2B941CDFDE795BB6E17286BB289BA05A6A3B5541F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1146 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE DUP1 PUSH2 0x117A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0x11C3 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH4 0x98E712C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x11E4 SWAP1 DUP5 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x120A SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x125D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1281 SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x12A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH0 PUSH1 0xA SLOAD PUSH1 0xD SLOAD TIMESTAMP PUSH2 0x1304 SWAP2 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP2 LT SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1327 PUSH2 0x22D7 JUMP JUMPDEST PUSH2 0x1330 PUSH0 PUSH2 0x2332 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1355 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x139D JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x1BE970F PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x13BE SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1427 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x12 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0x1421 DUP4 PUSH2 0x2C24 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1438 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x1476 SWAP3 CALLER SWAP3 SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1492 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14B6 SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x14DA JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH32 0x14EE34C24635186D212F515353DADAE9C226529EDEF2D1FCF5504CB33B5C25AB SWAP2 PUSH2 0xCF9 SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 SWAP1 PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x153F JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x155F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1582 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1593 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x15CC SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15E8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x160C SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1630 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH32 0x73834E1D1EE73BA659470A3603B888903853D3A3C9FDA34E71C093A0E35CAB94 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH2 0xCF9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1689 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x16CC JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x171A JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x173A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x175D JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x17A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x17F0 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x1BE970F PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 LT PUSH2 0x1824 JUMPI PUSH1 0x40 MLOAD PUSH4 0x636DC6B PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1845 SWAP1 DUP5 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x186B SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1883 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x189B SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x14EE34C24635186D212F515353DADAE9C226529EDEF2D1FCF5504CB33B5C25AB SWAP1 PUSH2 0xB4D SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP6 SWAP1 PUSH2 0x2C76 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x18F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 GT ISZERO PUSH2 0x191D JUMPI PUSH1 0x40 MLOAD PUSH4 0x222A50F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1936 SWAP1 DUP4 SWAP1 PUSH2 0x23A2 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x196A SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1986 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19AA SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x19CE JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xA89B69C5958EC1CCF0DF0DE746A8708F5B6A6B429430129F16F46F44B319C900 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1A32 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1A52 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1A75 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1AC3 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1AE3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1B06 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1B54 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1B74 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1BA6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE4CFA94D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x75F91F3CECB8C46F20150F60F77A6E1F0DE00776627692DB82EF1960AF84C33A SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1C21 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1C41 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C73 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE4CFA94D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x1 DUP2 ISZERO ISZERO EQ DUP1 ISZERO SWAP1 PUSH2 0x1C85 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1CA7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x81ED1AE3 PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x1CD8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD CALLER DUP2 MSTORE SWAP2 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF SWAP1 SWAP3 AND ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH32 0x7A1655BC3160D3413BF1D5235E55BE12E01B7E8BC2436A9BFF09C3B4FA2421F1 SWAP1 PUSH1 0x60 ADD PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1D7B JUMPI POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1D92 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x2 SLOAD ISZERO DUP1 ISZERO PUSH2 0x1DC2 JUMPI POP PUSH1 0x1 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1DEF JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2FD92D8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x1DFA PUSH2 0x2400 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1FE2 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1FDA JUMPI PUSH1 0x3 SLOAD PUSH0 DUP3 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1E72 SWAP1 PUSH2 0x2710 PUSH2 0x2CB5 JUMP JUMPDEST PUSH2 0x1E7C SWAP2 SWAP1 PUSH2 0x2CCC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1E89 DUP7 DUP4 PUSH2 0x256D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E9C SWAP2 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1EAC SWAP1 POP DUP2 DUP6 PUSH2 0x2C63 JUMP JUMPDEST SWAP4 POP DUP5 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1EBF SWAP2 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1EFA SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1F35 SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0x1F46 DUP7 DUP4 PUSH2 0x2C63 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1F81 SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP8 DUP6 GT ISZERO PUSH2 0x1FD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742069732067726561746572207468656E20353025000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAB2 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1E04 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0xEE826440768329B0C72F81331212EE31FCDAC1EA79A248D24821E40C34E58020 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x2054 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x2074 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x2097 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE DUP2 MLOAD CALLER DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x20D3 PUSH2 0x22D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x2105 DUP2 PUSH2 0x2332 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2110 PUSH2 0x25D6 JUMP JUMPDEST PUSH2 0x2105 DUP2 PUSH2 0x261F JUMP JUMPDEST PUSH2 0x1330 PUSH2 0x25D6 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x21A7 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x219B PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D19 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2105 PUSH2 0x22D7 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2227 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2224 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x224F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D19 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x227F JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x2289 DUP4 DUP4 PUSH2 0x2627 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x2309 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23AF DUP3 PUSH2 0x2710 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x23BC DUP5 DUP4 PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x23C9 DUP6 DUP6 PUSH2 0x256D JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x23DC SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x23F4 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x2412 PUSH1 0x2 SLOAD PUSH2 0x1388 PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2421 DUP3 PUSH1 0x5 SLOAD PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2430 DUP4 PUSH1 0x6 SLOAD PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x243F DUP5 PUSH1 0x7 SLOAD PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2450 PUSH1 0x1 SLOAD PUSH1 0x4 SLOAD PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD GT PUSH2 0x247A JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7CA8D0DB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x2489 SWAP2 SWAP1 PUSH2 0x2CCC JUMP JUMPDEST SWAP1 POP PUSH2 0x2495 DUP4 DUP6 PUSH2 0x2C63 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x24A5 SWAP2 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x24BD SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2514 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2538 SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x255C JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST POP SWAP5 SWAP9 SWAP4 SWAP8 POP SWAP4 SWAP6 POP SWAP2 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 GT PUSH2 0x2591 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9B7220AF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x25B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB015AA7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0x25C2 DUP5 DUP7 PUSH2 0x2CB5 JUMP JUMPDEST PUSH2 0x25CC SWAP2 SWAP1 PUSH2 0x2CCC JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20D3 PUSH2 0x25D6 JUMP JUMPDEST PUSH2 0x2630 DUP3 PUSH2 0x267C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x2674 JUMPI PUSH2 0x2289 DUP3 DUP3 PUSH2 0x26DF JUMP JUMPDEST PUSH2 0xDD9 PUSH2 0x2751 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x26B1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D19 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x26FB SWAP2 SWAP1 PUSH2 0x2D02 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2733 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2738 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2748 DUP6 DUP4 DUP4 PUSH2 0x2770 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2785 JUMPI PUSH2 0x2780 DUP3 PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x27C8 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x279C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x27C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x27DF JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x280E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2827 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2830 DUP7 PUSH2 0x27F8 JUMP JUMPDEST SWAP5 POP PUSH2 0x283E PUSH1 0x20 DUP8 ADD PUSH2 0x27F8 JUMP JUMPDEST SWAP4 POP PUSH2 0x284C PUSH1 0x40 DUP8 ADD PUSH2 0x27F8 JUMP JUMPDEST SWAP3 POP PUSH2 0x285A PUSH1 0x60 DUP8 ADD PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2868 PUSH1 0x80 DUP8 ADD PUSH2 0x27F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2884 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x28C8 JUMPI PUSH2 0x28C8 PUSH2 0x288B JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x28E9 JUMPI PUSH2 0x28E9 PUSH2 0x288B JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2902 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2915 PUSH2 0x2910 DUP3 PUSH2 0x28D0 JUMP JUMPDEST PUSH2 0x289F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP DUP6 DUP4 GT ISZERO PUSH2 0x2936 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x295A JUMPI PUSH2 0x294C DUP2 PUSH2 0x27F8 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x293B JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2975 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x298B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x299B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x29A9 PUSH2 0x2910 DUP3 PUSH2 0x28D0 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP8 DUP4 GT ISZERO PUSH2 0x29CA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x29EC JUMPI DUP4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x29D1 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A0A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2A16 DUP6 DUP3 DUP7 ADD PUSH2 0x28F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A31 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A47 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2A57 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A6D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x2A7E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A9F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2AA8 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2AD3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AED JUMPI PUSH2 0x2AED PUSH2 0x288B JUMP JUMPDEST PUSH2 0x2B00 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x289F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP7 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x2B14 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B44 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x2B9B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2B53 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x27C8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B53 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x27C8 DUP3 PUSH2 0x27F8 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2105 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BEC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2BF5 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2C05 DUP2 PUSH2 0x2BCE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x2C35 JUMPI PUSH2 0x2C35 PUSH2 0x2C10 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x25D0 JUMPI PUSH2 0x25D0 PUSH2 0x2C10 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x25D0 JUMPI PUSH2 0x25D0 PUSH2 0x2C10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CAA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x27C8 DUP2 PUSH2 0x2BCE JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x25D0 JUMPI PUSH2 0x25D0 PUSH2 0x2C10 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2CE6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CFB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCB5671393C7C6980552E50A BALANCE 0xE7 PUSH25 0x921EB17D764C2E98FBF4D44FFF524712DEF9A2646970667358 0x22 SLT KECCAK256 DUP16 0xAA PUSH2 0xC493 0xBC 0x1E PUSH31 0xC40AC17C40F46B6E4F326660A1AFF6215ED06EE7754902F664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "896:17073:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1344:24;;;;;;;;;;;;;;;;;;;160:25:11;;;148:2;133:18;1344:24:10;;;;;;;;1010:23;;;;;;;;;;-1:-1:-1;1010:23:10;;;;-1:-1:-1;;;;;1010:23:10;;;;;;-1:-1:-1;;;;;375:32:11;;;357:51;;345:2;330:18;1010:23:10;196:218:11;4292:902:10;;;;;;;;;;-1:-1:-1;4292:902:10;;;;;:::i;:::-;;:::i;:::-;;1044:33;;;;;;;;;;;;;;;;5207:337;;;;;;;;;;-1:-1:-1;5207:337:10;;;;;:::i;:::-;;:::i;1710:33::-;;;;;;;;;;-1:-1:-1;1710:33:10;;;;-1:-1:-1;;;;;1710:33:10;;;1512:27;;;;;;;;;;;;;;;;1162:40;;;;;;;;;;;;;;;;7179:647;;;;;;;;;;-1:-1:-1;7179:647:10;;;;;:::i;:::-;;:::i;1592:27::-;;;;;;;;;;;;;;;;1299:38;;;;;;;;;;;;;;;;1626:28;;;;;;;;;;;;;;;;1208:40;;;;;;;;;;;;;;;;12528:633;;;;;;;;;;-1:-1:-1;12528:633:10;;;;;:::i;:::-;;:::i;4158:214:3:-;;;;;;:::i;:::-;;:::i;5961:399:10:-;;;;;;;;;;-1:-1:-1;5961:399:10;;;;;:::i;:::-;;:::i;3705:134:3:-;;;;;;;;;;;;;:::i;1374:30:10:-;;;;;;;;;;-1:-1:-1;1374:30:10;;;;-1:-1:-1;;;;;1374:30:10;;;1123:32;;;;;;;;;;;;;;;;13172:542;;;;;;;;;;-1:-1:-1;13172:542:10;;;;;:::i;:::-;;:::i;13720:120::-;;;;;;;;;;;;;:::i;14639:641::-;;;;;;;;;;-1:-1:-1;14639:641:10;;;;;:::i;:::-;;:::i;12282:235::-;;;;;;;;;;-1:-1:-1;12282:235:10;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3155:101:1:-;;;;;;;;;;;;;:::i;6366:802:10:-;;;;;;;;;;-1:-1:-1;6366:802:10;;;;;:::i;:::-;;:::i;5550:401::-;;;;;;;;;;-1:-1:-1;5550:401:10;;;;;:::i;:::-;;:::i;17211:323::-;;;;;;;;;;-1:-1:-1;17211:323:10;;;;;:::i;:::-;;:::i;16200:330::-;;;;;;;;;;-1:-1:-1;16200:330:10;;;;;:::i;:::-;;:::i;7833:678::-;;;;;;;;;;-1:-1:-1;7833:678:10;;;;;:::i;:::-;;:::i;1779:23::-;;;;;;;;;;-1:-1:-1;1779:23:10;;;;-1:-1:-1;;;;;1779:23:10;;;8521:541;;;;;;;;;;-1:-1:-1;8521:541:10;;;;;:::i;:::-;;:::i;2441:144:1:-;;;;;;;;;;-1:-1:-1;1313:22:1;2570:8;-1:-1:-1;;;;;2570:8:1;2441:144;;1436:23:10;;;;;;;;;;;;;;;;2041:28;;;;;;;;;;;;;;;;2125:45;;;;;;;;;;-1:-1:-1;2125:45:10;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2125:45:10;;;1819:58:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:3;;;;;;;;;;;;:::i;16880:325:10:-;;;;;;;;;;-1:-1:-1;16880:325:10;;;;;:::i;:::-;;:::i;1083:34::-;;;;;;;;;;;;;;;;16540:329;;;;;;;;;;-1:-1:-1;16540:329:10;;;;;:::i;:::-;;:::i;2230:56::-;;;;;;;;;;-1:-1:-1;2230:56:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7289:14:11;;7282:22;7264:41;;7336:2;7321:18;;7314:34;;;;7364:18;;;7357:34;;;;7422:2;7407:18;;7400:34;7465:3;7450:19;;7443:35;7509:3;7494:19;;7487:35;7251:3;7236:19;2230:56:10;6983:545:11;2075:44:10;;;;;;;;;;-1:-1:-1;2075:44:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7698:14:11;;7691:22;7673:41;;7661:2;7646:18;2075:44:10;7533:187:11;1254:39:10;;;;;;;;;;;;;;;;13847:318;;;;;;;;;;-1:-1:-1;13847:318:10;;;;;:::i;:::-;;:::i;15286:554::-;;;;;;;;;;-1:-1:-1;15286:554:10;;;;;:::i;:::-;;:::i;9456:1623::-;;;;;;;;;;;;;:::i;15852:342::-;;;;;;;;;;-1:-1:-1;15852:342:10;;;;;:::i;:::-;;:::i;1750:23::-;;;;;;;;;;-1:-1:-1;1750:23:10;;;;-1:-1:-1;;;;;1750:23:10;;;3405:215:1;;;;;;;;;;-1:-1:-1;3405:215:1;;;;;:::i;:::-;;:::i;2176:48:10:-;;;;;;;;;;-1:-1:-1;2176:48:10;;;;;:::i;:::-;;;;;;;;;;;;;;4292:902;8870:21:2;4302:15;;-1:-1:-1;;;4302:15:2;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:2;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:2;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:2;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:2;-1:-1:-1;;;5013:22:2;;;4979:67;4511:28:10::1;4526:12;4511:14;:28::i;:::-;4549:24;:22;:24::i;:::-;4584:9;:32:::0;;-1:-1:-1;;;;;4584:32:10;;::::1;-1:-1:-1::0;;;;;;4584:32:10;;::::1;;::::0;;;4852:4:::1;4824:25;:32:::0;4906:4:::1;4878:25;:32:::0;4972:4:::1;4945:24;:31:::0;5023:4:::1;4997:23;:30:::0;5085:15:::1;:34:::0;;;;::::1;::::0;;::::1;;::::0;;5133:8:::1;:20:::0;;;;::::1;::::0;;::::1;;::::0;;5167:8:::1;:20:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;5066:101:2;;;;5100:23;;-1:-1:-1;;;;5100:23:2;;;5142:14;;-1:-1:-1;8321:50:11;;5142:14:2;;8309:2:11;8294:18;5142:14:2;;;;;;;5066:101;4092:1081;;;;;4292:902:10;;;;;:::o;5207:337::-;17587:8;;-1:-1:-1;;;;;17587:8:10;17573:10;:22;;;;:48;;-1:-1:-1;17613:8:10;;-1:-1:-1;;;;;17613:8:10;17599:10;:22;;17573:48;17570:106;;;17643:22;;-1:-1:-1;;;17643:22:10;;17654:10;17643:22;;;357:51:11;330:18;;17643:22:10;;;;;;;;17570:106;5310:1:::1;5293:13;:18;5290:84;;5333:30;::::0;-1:-1:-1;;;5333:30:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;5333:30:10::1;14:177:11::0;5290:84:10::1;5398:13;::::0;;5384:28:::1;::::0;;;:13:::1;:28;::::0;;;;:44;;;5438:15;;;5398:13;5438:15:::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;5482:13:10::1;::::0;5470:67:::1;::::0;5499:21:::1;5507:13:::0;5499:5:::1;:21;:::i;:::-;5470:67;::::0;;8989:25:11;;;9045:2;9030:18;;9023:34;;;;9073:18;;9066:34;;;8977:2;8962:18;5470:67:10::1;;;;;;;;5207:337:::0;:::o;7179:647::-;17587:8;;-1:-1:-1;;;;;17587:8:10;17573:10;:22;;;;:48;;-1:-1:-1;17613:8:10;;-1:-1:-1;;;;;17613:8:10;17599:10;:22;;17573:48;17570:106;;;17643:22;;-1:-1:-1;;;17643:22:10;;17654:10;17643:22;;;357:51:11;330:18;;17643:22:10;196:218:11;17570:106:10;7319:1:::1;7301:7;:14;:19;7298:83;;7355:7;:14;7343:27;;-1:-1:-1::0;;;7343:27:10::1;;;;;;160:25:11::0;;148:2;133:18;;14:177;7298:83:10::1;7409:1;7393:5;:12;:17;7390:82;;7448:5;:12;7433:28;;-1:-1:-1::0;;;7433:28:10::1;;;;;;160:25:11::0;;148:2;133:18;;14:177;7390:82:10::1;7502:7;:14;7486:5;:12;:30;7482:89;;7539:21;;-1:-1:-1::0;;;7539:21:10::1;;;;;;;;;;;7482:89;7585:6;7581:165;7599:7;:14;7595:1;:18;7581:165;;;7680:7;7688:1;7680:10;;;;;;;;:::i;:::-;;;;;;;7634:14;:24;7649:5;7655:1;7649:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;7634:24:10::1;-1:-1:-1::0;;;;;7634:24:10::1;;;;;;;;;;;;:42;;;:56;;;;;;;:::i;:::-;;;;;;;;7725:7;7733:1;7725:10;;;;;;;;:::i;:::-;;;;;;;7704:17;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7615:3:10::1;;7581:165;;;-1:-1:-1::0;7791:14:10;;7806:12;;7761:58:::1;::::0;;7780:10:::1;9575:51:11::0;;9657:2;9642:18;;9635:34;;;;9685:18;;9678:34;7761:58:10::1;::::0;9563:2:11;9548:18;7761:58:10::1;;;;;;;;7179:647:::0;;:::o;12528:633::-;12647:18;;-1:-1:-1;;;;;12647:18:10;12633:10;:32;12612:138;;;;-1:-1:-1;;;12612:138:10;;9925:2:11;12612:138:10;;;9907:21:11;9964:2;9944:18;;;9937:30;10003:34;9983:18;;;9976:62;10074:29;10054:18;;;10047:57;10121:19;;12612:138:10;9723:423:11;12612:138:10;12772:8;;12784:1;12772:13;12768:73;;12821:8;;12807:23;;-1:-1:-1;;;12807:23:10;;;;;;160:25:11;;148:2;133:18;;14:177;12768:73:10;12882:12;;12863:15;:31;12860:286;;12921:12;;12910:8;:23;;;12963:15;12947:13;:31;;;13007:30;;12921:12;13007:30;:::i;:::-;12992:12;:45;13051:16;:14;:16::i;:::-;12528:633;;:::o;12860:286::-;13122:12;;13112:23;;-1:-1:-1;;;13112:23:10;;;;;;160:25:11;;148:2;133:18;;14:177;4158:214:3;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;5961:399:10:-:0;17587:8;;-1:-1:-1;;;;;17587:8:10;17573:10;:22;;;;:48;;-1:-1:-1;17613:8:10;;-1:-1:-1;;;;;17613:8:10;17599:10;:22;;17573:48;17570:106;;;17643:22;;-1:-1:-1;;;17643:22:10;;17654:10;17643:22;;;357:51:11;330:18;;17643:22:10;196:218:11;17570:106:10;6053:1:::1;6042:7;:12;6039:68;;6076:20;::::0;-1:-1:-1;;;6076:20:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;6076:20:10::1;14:177:11::0;6039:68:10::1;6139:7;6117:18;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6157:12:10::1;6172:9:::0;;:57:::1;::::0;-1:-1:-1;;;6172:57:10;;-1:-1:-1;;;;;6172:9:10;;::::1;::::0;:22:::1;::::0;:57:::1;::::0;6195:10:::1;::::0;6214:4:::1;::::0;6220:7;;6172:57:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6157:72;;6243:7;6239:67;;6272:23;::::0;-1:-1:-1;;;6272:23:10;;7698:14:11;;7691:22;6272:23:10::1;::::0;::::1;7673:41:11::0;7646:18;;6272:23:10::1;7533:187:11::0;6239:67:10::1;6321:32;6334:18;;6321:32;;;;160:25:11::0;;148:2;133:18;;14:177;3705:134:3;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:3;:::o;13172:542:10:-;17587:8;;-1:-1:-1;;;;;17587:8:10;17573:10;:22;;;;:48;;-1:-1:-1;17613:8:10;;-1:-1:-1;;;;;17613:8:10;17599:10;:22;;17573:48;17570:106;;;17643:22;;-1:-1:-1;;;17643:22:10;;17654:10;17643:22;;;357:51:11;330:18;;17643:22:10;196:218:11;17570:106:10;13300:1:::1;13282:14;:19;13279:84;;13323:29;::::0;-1:-1:-1;;;13323:29:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;13323:29:10::1;14:177:11::0;13279:84:10::1;13400:15;13384:13;:31;13381:91;;;13437:24;::::0;-1:-1:-1;;;13437:24:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;13437:24:10::1;14:177:11::0;13381:91:10::1;13493:31;13509:15;13493:13:::0;:31:::1;:::i;:::-;13482:8;:42:::0;;;13534:12:::1;:28:::0;;;13588:15:::1;13572:13;:31:::0;;;13613:12:::1;:29:::0;;;13658:48:::1;::::0;;13670:10:::1;9575:51:11::0;;9657:2;9642:18;;9635:34;;;;9685:18;;9678:34;13658:48:10::1;::::0;9563:2:11;9548:18;13658:48:10::1;9373:345:11::0;13720:120:10;17587:8;;-1:-1:-1;;;;;17587:8:10;17573:10;:22;;;;:48;;-1:-1:-1;17613:8:10;;-1:-1:-1;;;;;17613:8:10;17599:10;:22;;17573:48;17570:106;;;17643:22;;-1:-1:-1;;;17643:22:10;;17654:10;17643:22;;;357:51:11;330:18;;17643:22:10;196:218:11;17570:106:10;13784:1:::1;13773:8;:12:::0;;;13800:33:::1;::::0;;13812:10:::1;10951:51:11::0;;11033:2;11018:18;;11011:34;;;;13800:33:10::1;::::0;10924:18:11;13800:33:10::1;;;;;;;13720:120::o:0;14639:641::-;17742:6;;-1:-1:-1;;;17742:6:10;;;;17741:7;17733:51;;;;-1:-1:-1;;;17733:51:10;;11258:2:11;17733:51:10;;;11240:21:11;11297:2;11277:18;;;11270:30;11336:33;11316:18;;;11309:61;11387:18;;17733:51:10;11056:355:11;17733:51:10;17794:6;:13;;-1:-1:-1;;;;17794:13:10;-1:-1:-1;;;17794:13:10;;;14729:12;14726:68:::1;;14763:20;::::0;-1:-1:-1;;;14763:20:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;14763:20:10::1;14:177:11::0;14726:68:10::1;14832:10;14817:26;::::0;;;:14:::1;:26;::::0;;;;:41:::1;;::::0;14807:51;::::1;14804:145;;;14911:10;14896:26;::::0;;;:14:::1;:26;::::0;;;;;;:41:::1;;::::0;14880:58;;-1:-1:-1;;;14880:58:10;;::::1;::::0;::::1;160:25:11::0;;;;133:18;;14880:58:10::1;14:177:11::0;14804:145:10::1;14974:10;14959:26;::::0;;;:14:::1;:26;::::0;;;;:41:::1;;:52:::0;;15004:7;;14959:26;:52:::1;::::0;15004:7;;14959:52:::1;:::i;:::-;::::0;;;-1:-1:-1;;15036:10:10::1;15021:26;::::0;;;:14:::1;:26;::::0;;;;:41:::1;;:52:::0;;15066:7;;15021:26;:52:::1;::::0;15066:7;;15021:52:::1;:::i;:::-;::::0;;;-1:-1:-1;;15091:12:10::1;15106:9:::0;;:38:::1;::::0;-1:-1:-1;;;15106:38:10;;15125:10:::1;15106:38;::::0;::::1;10951:51:11::0;11018:18;;;11011:34;;;-1:-1:-1;;;;;15106:9:10;;::::1;::::0;:18:::1;::::0;10924::11;;15106:38:10::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15091:53;;15166:7;15162:67;;15195:23;::::0;-1:-1:-1;;;15195:23:10;;7698:14:11;;7691:22;15195:23:10::1;::::0;::::1;7673:41:11::0;7646:18;;15195:23:10::1;7533:187:11::0;15162:67:10::1;15244:29;::::0;;15253:10:::1;10951:51:11::0;;11033:2;11018:18;;11011:34;;;15244:29:10::1;::::0;10924:18:11;15244:29:10::1;;;;;;;-1:-1:-1::0;;17828:6:10;:14;;-1:-1:-1;;;;17828:14:10;;;14639:641::o;12282:235::-;12366:4;12372:12;12406:16;12461:8;;12444:13;;12426:15;:31;;;;:::i;:::-;12500:9;;;;;;;;;-1:-1:-1;12500:9:10;;-1:-1:-1;;;12500:9:10;;-1:-1:-1;12282:235:10;-1:-1:-1;;;;12282:235:10:o;3155:101:1:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;6366:802:10:-;6447:1;6436:7;:12;6433:68;;6470:20;;-1:-1:-1;;;6470:20:10;;;;;160:25:11;;;133:18;;6470:20:10;14:177:11;6433:68:10;6537:10;6522:26;;;;:14;:26;;;;;:34;;;6519:117;;;6605:10;6590:26;;;;:14;:26;;;;;;;:34;6578:47;;-1:-1:-1;;;6578:47:10;;6590:34;;;;7698:14:11;7691:22;6578:47:10;;;7673:41:11;7646:18;;6578:47:10;7533:187:11;6519:117:10;6661:10;6646:26;;;;:14;:26;;;;;:44;;:55;;6694:7;;6646:26;:55;;6694:7;;6646:55;:::i;:::-;;;;-1:-1:-1;;6736:10:10;6723:24;;;;:12;:24;;;;;;;;6719:171;;6786:9;;;6775:21;;;;:10;:21;;;;;;;;:34;;-1:-1:-1;;;;;;6775:34:10;6799:10;6775:34;;;;;;6823:24;;:12;:24;;;;;:31;;-1:-1:-1;;6823:31:10;6775:34;6823:31;;;6868:11;;;6786:9;6868:11;;;:::i;:::-;;;;;;6719:171;6921:7;6900:17;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;6939:12:10;6953:9;;6987:15;;6953:58;;-1:-1:-1;;;6953:58:10;;-1:-1:-1;;;;;6953:9:10;;;;:22;;:58;;6976:10;;6987:15;;;;7003:7;;6953:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6939:72;;7034:7;7030:67;;7063:23;;-1:-1:-1;;;7063:23:10;;7698:14:11;;7691:22;7063:23:10;;;7673:41:11;7646:18;;7063:23:10;7533:187:11;7030:67:10;7135:15;;7112:48;;;;;;7124:10;;-1:-1:-1;;;;;7135:15:10;;7152:7;;7112:48;:::i;5550:401::-;17587:8;;-1:-1:-1;;;;;17587:8:10;17573:10;:22;;;;:48;;-1:-1:-1;17613:8:10;;-1:-1:-1;;;;;17613:8:10;17599:10;:22;;17573:48;17570:106;;;17643:22;;-1:-1:-1;;;17643:22:10;;17654:10;17643:22;;;357:51:11;330:18;;17643:22:10;196:218:11;17570:106:10;5642:1:::1;5631:7;:12;5628:68;;5665:20;::::0;-1:-1:-1;;;5665:20:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;5665:20:10::1;14:177:11::0;5628:68:10::1;5729:7;5706:19;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5747:12:10::1;5762:9:::0;;:57:::1;::::0;-1:-1:-1;;;5762:57:10;;-1:-1:-1;;;;;5762:9:10;;::::1;::::0;:22:::1;::::0;:57:::1;::::0;5785:10:::1;::::0;5804:4:::1;::::0;5810:7;;5762:57:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5747:72;;5833:7;5829:67;;5862:23;::::0;-1:-1:-1;;;5862:23:10;;7698:14:11;;7691:22;5862:23:10::1;::::0;::::1;7673:41:11::0;7646:18;;5862:23:10::1;7533:187:11::0;5829:67:10::1;5911:33;5924:19;;5911:33;;;;160:25:11::0;;148:2;133:18;;14:177;17211:323:10;17587:8;;-1:-1:-1;;;;;17587:8:10;17573:10;:22;;;;:48;;-1:-1:-1;17613:8:10;;-1:-1:-1;;;;;17613:8:10;17599:10;:22;;17573:48;17570:106;;;17643:22;;-1:-1:-1;;;17643:22:10;;17654:10;17643:22;;;357:51:11;330:18;;17643:22:10;196:218:11;17570:106:10;17332:1:::1;17313:15;:20;17310:88;;17355:32;::::0;-1:-1:-1;;;17355:32:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;17355:32:10::1;14:177:11::0;17310:88:10::1;17416:23;:41:::0;;;17473:54:::1;::::0;;17491:10:::1;10951:51:11::0;;11033:2;11018:18;;11011:34;;;-1:-1:-1;;;;;;;;;;;17473:54:10;10924:18:11;17473:54:10::1;10777:274:11::0;16200:330:10;17587:8;;-1:-1:-1;;;;;17587:8:10;17573:10;:22;;;;:48;;-1:-1:-1;17613:8:10;;-1:-1:-1;;;;;17613:8:10;17599:10;:22;;17573:48;17570:106;;;17643:22;;-1:-1:-1;;;17643:22:10;;17654:10;17643:22;;;357:51:11;330:18;;17643:22:10;196:218:11;17570:106:10;16323:1:::1;16304:15;:20;16301:88;;16346:32;::::0;-1:-1:-1;;;16346:32:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;16346:32:10::1;14:177:11::0;16301:88:10::1;16407:25;:43:::0;;;16466:56:::1;::::0;;16484:10:::1;10951:51:11::0;;11033:2;11018:18;;11011:34;;;-1:-1:-1;;;;;;;;;;;16466:56:10;10924:18:11;16466:56:10::1;10777:274:11::0;7833:678:10;7916:1;7905:7;:12;7902:68;;7939:20;;-1:-1:-1;;;7939:20:10;;;;;160:25:11;;;133:18;;7939:20:10;14:177:11;7902:68:10;8005:10;7990:26;;;;:14;:26;;;;;:34;;;7987:117;;;8073:10;8058:26;;;;:14;:26;;;;;;;:34;8046:47;;-1:-1:-1;;;8046:47:10;;8058:34;;;;7698:14:11;7691:22;8046:47:10;;;7673:41:11;7646:18;;8046:47:10;7533:187:11;7987:117:10;8132:10;8117:26;;;;:14;:26;;;;;:41;;;:52;-1:-1:-1;8114:113:10;;8191:25;;-1:-1:-1;;;8191:25:10;;;;;160::11;;;133:18;;8191:25:10;14:177:11;8114:113:10;8252:10;8237:26;;;;:14;:26;;;;;:41;;:52;;8282:7;;8237:26;:52;;8282:7;;8237:52;:::i;:::-;;;;-1:-1:-1;;8314:10:10;8299:26;;;;:14;:26;;;;;:44;;:55;;8347:7;;8299:26;:55;;8347:7;;8299:55;:::i;:::-;;;;;;;;8396:7;8373:19;;:30;;;;;;;:::i;:::-;;;;;;;;8434:7;8413:17;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;8457:46:10;;;;;;8469:10;;8488:4;;8495:7;;8457:46;:::i;8521:541::-;8612:1;8601:7;:12;8598:68;;8635:20;;-1:-1:-1;;;8635:20:10;;;;;160:25:11;;;133:18;;8635:20:10;14:177:11;8598:68:10;8692:13;;8679:10;:26;8676:88;;;8727:26;;-1:-1:-1;;;8727:26:10;;;;;160:25:11;;;133:18;;8727:26:10;14:177:11;8676:88:10;8809:25;;;;:13;:25;;;;;;8786:49;;8800:7;;8786:13;:49::i;:::-;8854:12;8869:9;;:57;;-1:-1:-1;;;8869:57:10;;-1:-1:-1;;;;;8869:9:10;;;;:22;;:57;;8892:10;;8911:4;;8917:7;;8869:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8854:72;;8940:7;8936:67;;8969:23;;-1:-1:-1;;;8969:23:10;;7698:14:11;;7691:22;8969:23:10;;;7673:41:11;7646:18;;8969:23:10;7533:187:11;8936:67:10;9018:28;;;11590:25:11;;;11646:2;11631:18;;11624:34;;;9018:28:10;;11563:18:11;9018:28:10;;;;;;;8587:475;8521:541;;:::o;16880:325::-;17587:8;;-1:-1:-1;;;;;17587:8:10;17573:10;:22;;;;:48;;-1:-1:-1;17613:8:10;;-1:-1:-1;;;;;17613:8:10;17599:10;:22;;17573:48;17570:106;;;17643:22;;-1:-1:-1;;;17643:22:10;;17654:10;17643:22;;;357:51:11;330:18;;17643:22:10;196:218:11;17570:106:10;17001:1:::1;16982:15;:20;16979:88;;17024:32;::::0;-1:-1:-1;;;17024:32:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;17024:32:10::1;14:177:11::0;16979:88:10::1;17085:24;:42:::0;;;17143:55:::1;::::0;;17161:10:::1;10951:51:11::0;;11033:2;11018:18;;11011:34;;;-1:-1:-1;;;;;;;;;;;17143:55:10;10924:18:11;17143:55:10::1;10777:274:11::0;16540:329:10;17587:8;;-1:-1:-1;;;;;17587:8:10;17573:10;:22;;;;:48;;-1:-1:-1;17613:8:10;;-1:-1:-1;;;;;17613:8:10;17599:10;:22;;17573:48;17570:106;;;17643:22;;-1:-1:-1;;;17643:22:10;;17654:10;17643:22;;;357:51:11;330:18;;17643:22:10;196:218:11;17570:106:10;16663:1:::1;16644:15;:20;16641:88;;16686:32;::::0;-1:-1:-1;;;16686:32:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;16686:32:10::1;14:177:11::0;16641:88:10::1;16747:25;:43:::0;;;16806:56:::1;::::0;;16824:10:::1;10951:51:11::0;;11033:2;11018:18;;11011:34;;;-1:-1:-1;;;;;;;;;;;16806:56:10;10924:18:11;16806:56:10::1;10777:274:11::0;13847:318:10;17587:8;;-1:-1:-1;;;;;17587:8:10;17573:10;:22;;;;:48;;-1:-1:-1;17613:8:10;;-1:-1:-1;;;;;17613:8:10;17599:10;:22;;17573:48;17570:106;;;17643:22;;-1:-1:-1;;;17643:22:10;;17654:10;17643:22;;;357:51:11;330:18;;17643:22:10;196:218:11;17570:106:10;-1:-1:-1;;;;;13943:30:10;::::1;13940:96;;13995:30;::::0;-1:-1:-1;;;13995:30:10;;-1:-1:-1;;;;;375:32:11;;13995:30:10::1;::::0;::::1;357:51:11::0;330:18;;13995:30:10::1;196:218:11::0;13940:96:10::1;14054:18;:37:::0;;-1:-1:-1;;;;;;14054:37:10::1;-1:-1:-1::0;;;;;14054:37:10;::::1;::::0;;::::1;::::0;;;14107:51:::1;::::0;;14127:10:::1;11843:51:11::0;;11925:2;11910:18;;11903:60;;;;14107:51:10::1;::::0;11816:18:11;14107:51:10::1;11669:300:11::0;15286:554:10;17587:8;;-1:-1:-1;;;;;17587:8:10;17573:10;:22;;;;:48;;-1:-1:-1;17613:8:10;;-1:-1:-1;;;;;17613:8:10;17599:10;:22;;17573:48;17570:106;;;17643:22;;-1:-1:-1;;;17643:22:10;;17654:10;17643:22;;;357:51:11;330:18;;17643:22:10;196:218:11;17570:106:10;-1:-1:-1;;;;;15380:26:10;::::1;15377:88;;15428:26;::::0;-1:-1:-1;;;15428:26:10;;-1:-1:-1;;;;;375:32:11;;15428:26:10::1;::::0;::::1;357:51:11::0;330:18;;15428:26:10::1;196:218:11::0;15377:88:10::1;15487:4;15478:13:::0;::::1;;;::::0;::::1;::::0;:31:::1;;-1:-1:-1::0;15495:14:10;::::1;;15478:31;15475:84;;;15531:17;::::0;-1:-1:-1;;;15531:17:10;;7698:14:11;;7691:22;15531:17:10::1;::::0;::::1;7673:41:11::0;7646:18;;15531:17:10::1;7533:187:11::0;15475:84:10::1;15572:13:::0;::::1;;15581:4;15572:13:::0;15569:167:::1;;-1:-1:-1::0;;;;;15601:28:10;::::1;;::::0;;;:14:::1;:28;::::0;;;;:43;;-1:-1:-1;;15601:43:10::1;15640:4;15601:43;::::0;;15569:167:::1;;;-1:-1:-1::0;;;;;15681:28:10;::::1;15720:5;15681:28:::0;;;:14:::1;:28;::::0;;;;:44;;-1:-1:-1;;15681:44:10::1;::::0;;15569:167:::1;-1:-1:-1::0;;;;;15796:28:10;::::1;;::::0;;;:14:::1;:28;::::0;;;;;;;;:36;15759:74;;15771:10:::1;12170:51:11::0;;12237:18;;;12230:60;;;;15796:36:10::1;::::0;;::::1;12333:14:11::0;12326:22;12306:18;;;12299:50;15759:74:10::1;::::0;12158:2:11;12143:18;15759:74:10::1;11974:381:11::0;9456:1623:10;9518:18;;-1:-1:-1;;;;;9518:18:10;9504:10;:32;;;;:58;;-1:-1:-1;9554:8:10;;-1:-1:-1;;;;;9554:8:10;9540:10;:22;;9504:58;:84;;;;-1:-1:-1;9580:8:10;;-1:-1:-1;;;;;9580:8:10;9566:10;:22;;9504:84;9501:142;;;9610:22;;-1:-1:-1;;;9610:22:10;;9621:10;9610:22;;;357:51:11;330:18;;9610:22:10;196:218:11;9501:142:10;9656:19;;:24;;;:51;;-1:-1:-1;9684:18:10;;:23;9656:51;9653:137;;;9740:19;;9760:18;;9729:50;;-1:-1:-1;;;9729:50:10;;;;;11590:25:11;;;;11631:18;;;11624:34;11563:18;;9729:50:10;11416:248:11;9653:137:10;9810:24;9835:33;9870:26;9901:20;:18;:20::i;:::-;9808:113;;-1:-1:-1;9808:113:10;-1:-1:-1;9808:113:10;-1:-1:-1;9948:16:10;;9975:1012;9998:9;;9994:1;:13;9975:1012;;;10032:29;10047:13;;;:10;:13;;;;;;;;;-1:-1:-1;;;;;10047:13:10;10032:29;;:14;:29;;;;;:37;;;10028:936;;10182:17;;10089:27;10135:13;;;:10;:13;;;;;;;;;-1:-1:-1;;;;;10135:13:10;10120:29;;:14;:29;;;;;:47;;;10089:27;;10182:17;10120:57;;10171:5;10120:57;:::i;:::-;10119:81;;;;:::i;:::-;10089:111;;10235:22;10260:67;10280:25;10307:19;10260;:67::i;:::-;10235:92;;10368:14;10345:19;;:37;;;;;;;:::i;:::-;;;;-1:-1:-1;10425:26:10;;-1:-1:-1;10437:14:10;10425:26;;:::i;:::-;;;10491:18;10469;;:40;;;;;;;:::i;:::-;;;;-1:-1:-1;;10528:29:10;10543:13;;;:10;:13;;;;;;;;;-1:-1:-1;;;;;10543:13:10;10528:29;;:14;:29;;;;;:49;;:71;;10581:18;;10528:29;:71;;10581:18;;10528:71;:::i;:::-;;;;-1:-1:-1;;10617:29:10;10632:13;;;:10;:13;;;;;;;;;-1:-1:-1;;;;;10632:13:10;10617:29;;:14;:29;;;;;:51;;:69;;10672:14;;10617:29;:69;;10672:14;;10617:69;:::i;:::-;;;;-1:-1:-1;10721:23:10;;-1:-1:-1;10747:35:10;10764:18;10747:14;:35;:::i;:::-;10800:29;10815:13;;;:10;:13;;;;;;;;;-1:-1:-1;;;;;10815:13:10;10800:29;;:14;:29;;;;;10815:13;10800:44;:63;;10721:61;;-1:-1:-1;10721:61:10;;10800:44;;:29;:63;;10721:61;;10800:63;:::i;:::-;;;;-1:-1:-1;;10890:28:10;;;;10882:67;;;;-1:-1:-1;;;10882:67:10;;12957:2:11;10882:67:10;;;12939:21:11;12996:2;12976:18;;;12969:30;13035:28;13015:18;;;13008:56;13081:18;;10882:67:10;12755:350:11;10882:67:10;10070:894;;;10028:936;10009:3;;9975:1012;;;-1:-1:-1;11031:19:10;;11052:18;;11002:69;;;11019:10;9575:51:11;;9657:2;9642:18;;9635:34;;;;9685:18;;9678:34;11002:69:10;;9563:2:11;9548:18;11002:69:10;;;;;;;9490:1589;;;;9456:1623::o;15852:342::-;17587:8;;-1:-1:-1;;;;;17587:8:10;17573:10;:22;;;;:48;;-1:-1:-1;17613:8:10;;-1:-1:-1;;;;;17613:8:10;17599:10;:22;;17573:48;17570:106;;;17643:22;;-1:-1:-1;;;17643:22:10;;17654:10;17643:22;;;357:51:11;330:18;;17643:22:10;196:218:11;17570:106:10;15988:1:::1;15969:15;:20;15966:88;;16011:32;::::0;-1:-1:-1;;;16011:32:10;;::::1;::::0;::::1;160:25:11::0;;;133:18;;16011:32:10::1;14:177:11::0;15966:88:10::1;16072:25;::::0;;;:13:::1;:25;::::0;;;;;;;;:43;;;16131:56;;16149:10:::1;10951:51:11::0;;11018:18;;;11011:34;;;-1:-1:-1;;;;;;;;;;;16131:56:10;10924:18:11;16131:56:10::1;10777:274:11::0;3405:215:1;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:1;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:1;;3562:1:::1;3534:31;::::0;::::1;357:51:11::0;330:18;;3534:31:1::1;196:218:11::0;3485:91:1::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1847:127::-;6931:20:2;:18;:20::i;:::-;1929:38:1::1;1954:12;1929:24;:38::i;2968:67:3:-:0;6931:20:2;:18;:20::i;4599:312:3:-;4679:4;-1:-1:-1;;;;;4688:6:3;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:3;:32;-1:-1:-1;;;;;;;;;;;2035:53:6;-1:-1:-1;;;;;2035:53:6;;1957:138;4749:32:3;-1:-1:-1;;;;;4749:42:3;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:3;;;;;;;;;;;17855:112:10;2334:13:1;:11;:13::i;6052:538:3:-;6169:17;-1:-1:-1;;;;;6151:50:3;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:3;;;;;;;;-1:-1:-1;;6151:52:3;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:3;;-1:-1:-1;;;;;375:32:11;;6513:60:3;;;357:51:11;330:18;;6513:60:3;196:218:11;6147:437:3;-1:-1:-1;;;;;;;;;;;6245:40:3;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:3;;;;;160:25:11;;;133:18;;6312:34:3;14:177:11;6241:120:3;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:3;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:3;;;;;;;;;;;2658:162:1;966:10:4;2717:7:1;1313:22;2570:8;-1:-1:-1;;;;;2570:8:1;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:1;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:1;;966:10:4;2763:40:1;;;357:51:11;330:18;;2763:40:1;196:218:11;3774:248:1;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:1;;-1:-1:-1;;;;;3941:19:1;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;9069:379:10:-;9158:20;9181:21;9189:13;9181:5;:21;:::i;:::-;9158:44;;9212:20;9235:42;9255:7;9264:12;9235:19;:42::i;:::-;9212:65;;9287:19;9309:43;9329:7;9338:13;9309:19;:43::i;:::-;9287:65;;9386:12;9363:19;;:35;;;;;;;:::i;:::-;;;;;;;;9430:11;9408:18;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9069:379:10:o;11091:1185::-;11137:7;11146;11154;11182:24;11209:46;11229:19;;11250:4;11209:19;:46::i;:::-;11182:73;;11266:33;11302:64;11322:16;11340:25;;11302:19;:64::i;:::-;11266:100;;11376:36;11415:63;11435:16;11453:24;;11415:19;:63::i;:::-;11376:102;;11488:36;11527:62;11547:16;11565:23;;11527:19;:62::i;:::-;11488:101;;11599:30;11632:66;11652:18;;11672:25;;11632:19;:66::i;:::-;11599:99;;11725:1;11712:9;;:14;11709:70;;11758:9;;11748:20;;-1:-1:-1;;;11748:20:10;;;;;;160:25:11;;148:2;133:18;;14:177;11709:70:10;11797:26;11849:9;;11826:22;:32;;;;:::i;:::-;11797:61;-1:-1:-1;11901:59:10;11932:28;11901;:59;:::i;:::-;11877:19;;:84;;;;;;;:::i;:::-;;;;;;;;11993:28;11971:18;;:50;;;;;;;:::i;:::-;;;;-1:-1:-1;;12032:12:10;12047:9;;12066:15;;12047:65;;-1:-1:-1;;;12047:65:10;;-1:-1:-1;;;;;12066:15:10;;;12047:65;;;10951:51:11;11018:18;;;11011:34;;;12047:9:10;;;:18;;10924::11;;12047:65:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12032:80;;12126:7;12122:67;;12155:23;;-1:-1:-1;;;12155:23:10;;7698:14:11;;7691:22;12155:23:10;;;7673:41:11;7646:18;;12155:23:10;7533:187:11;12122:67:10;-1:-1:-1;12207:16:10;;12224:25;;-1:-1:-1;12250:18:10;;-1:-1:-1;11091:1185:10;;-1:-1:-1;;;;11091:1185:10:o;14171:457::-;14273:7;14325:1;14304:17;:22;14301:98;;14348:40;;-1:-1:-1;;;14348:40:10;;;;;160:25:11;;;133:18;;14348:40:10;14:177:11;14301:98:10;14431:1;14411:16;:21;14408:91;;14454:34;;-1:-1:-1;;;14454:34:10;;;;;160:25:11;;;133:18;;14454:34:10;14:177:11;14408:91:10;14516:18;14579:5;14537:38;14558:16;14537:17;:38;:::i;:::-;:48;;;;:::i;:::-;14516:69;-1:-1:-1;;14171:457:10;;;;;:::o;7084:141:2:-;8870:21;8560:40;-1:-1:-1;;;8560:40:2;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:2;;;;;;;;;;;1980:235:1;6931:20:2;:18;:20::i;2779:335:6:-;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:6;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;2186:281::-;2263:17;-1:-1:-1;;;;;2263:29:6;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:6;;-1:-1:-1;;;;;375:32:11;;2320:47:6;;;357:51:11;330:18;;2320:47:6;196:218:11;2259:119:6;-1:-1:-1;;;;;;;;;;;2387:73:6;;-1:-1:-1;;;;;;2387:73:6;-1:-1:-1;;;;;2387:73:6;;;;;;;;;;2186:281::o;4106:253:8:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:8;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:8:o;6598:122:6:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:6;;;;;;;;;;;4625:582:8;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:8;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:8;;-1:-1:-1;;;;;375:32:11;;5121:24:8;;;357:51:11;330:18;;5121:24:8;196:218:11;5041:119:8;-1:-1:-1;5180:10:8;4793:408;4625:582;;;;;:::o;5743:516::-;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:8;;;;;;;;;;;419:173:11;487:20;;-1:-1:-1;;;;;536:31:11;;526:42;;516:70;;582:1;579;572:12;516:70;419:173;;;:::o;597:484::-;692:6;700;708;716;724;777:3;765:9;756:7;752:23;748:33;745:53;;;794:1;791;784:12;745:53;817:29;836:9;817:29;:::i;:::-;807:39;;865:38;899:2;888:9;884:18;865:38;:::i;:::-;855:48;;922:38;956:2;945:9;941:18;922:38;:::i;:::-;912:48;;979:38;1013:2;1002:9;998:18;979:38;:::i;:::-;969:48;;1036:39;1070:3;1059:9;1055:19;1036:39;:::i;:::-;1026:49;;597:484;;;;;;;;:::o;1086:226::-;1145:6;1198:2;1186:9;1177:7;1173:23;1169:32;1166:52;;;1214:1;1211;1204:12;1166:52;-1:-1:-1;1259:23:11;;1086:226;-1:-1:-1;1086:226:11:o;1525:127::-;1586:10;1581:3;1577:20;1574:1;1567:31;1617:4;1614:1;1607:15;1641:4;1638:1;1631:15;1657:275;1728:2;1722:9;1793:2;1774:13;;-1:-1:-1;;1770:27:11;1758:40;;1828:18;1813:34;;1849:22;;;1810:62;1807:88;;;1875:18;;:::i;:::-;1911:2;1904:22;1657:275;;-1:-1:-1;1657:275:11:o;1937:183::-;1997:4;2030:18;2022:6;2019:30;2016:56;;;2052:18;;:::i;:::-;-1:-1:-1;2097:1:11;2093:14;2109:4;2089:25;;1937:183::o;2125:675::-;2179:5;2232:3;2225:4;2217:6;2213:17;2209:27;2199:55;;2250:1;2247;2240:12;2199:55;2290:6;2277:20;2317:64;2333:47;2373:6;2333:47;:::i;:::-;2317:64;:::i;:::-;2405:3;2429:6;2424:3;2417:19;2461:4;2456:3;2452:14;2445:21;;2522:4;2512:6;2509:1;2505:14;2497:6;2493:27;2489:38;2475:52;;2550:3;2542:6;2539:15;2536:35;;;2567:1;2564;2557:12;2536:35;2603:4;2595:6;2591:17;2617:152;2633:6;2628:3;2625:15;2617:152;;;2701:23;2720:3;2701:23;:::i;:::-;2689:36;;2754:4;2745:14;;;;2650;2617:152;;;-1:-1:-1;2787:7:11;2125:675;-1:-1:-1;;;;;2125:675:11:o;2805:1194::-;2923:6;2931;2984:2;2972:9;2963:7;2959:23;2955:32;2952:52;;;3000:1;2997;2990:12;2952:52;3040:9;3027:23;3073:18;3065:6;3062:30;3059:50;;;3105:1;3102;3095:12;3059:50;3128:22;;3181:4;3173:13;;3169:27;-1:-1:-1;3159:55:11;;3210:1;3207;3200:12;3159:55;3250:2;3237:16;3273:64;3289:47;3329:6;3289:47;:::i;3273:64::-;3359:3;3383:6;3378:3;3371:19;3415:4;3410:3;3406:14;3399:21;;3472:4;3462:6;3459:1;3455:14;3451:2;3447:23;3443:34;3429:48;;3500:7;3492:6;3489:19;3486:39;;;3521:1;3518;3511:12;3486:39;3553:4;3549:2;3545:13;3534:24;;3567:200;3583:6;3578:3;3575:15;3567:200;;;3675:17;;3705:18;;3752:4;3600:14;;;;3743;;;;3567:200;;;3786:5;-1:-1:-1;;;;3844:4:11;3829:20;;3816:34;3875:18;3862:32;;3859:52;;;3907:1;3904;3897:12;3859:52;3930:63;3985:7;3974:8;3963:9;3959:24;3930:63;:::i;:::-;3920:73;;;2805:1194;;;;;:::o;4004:586::-;4074:6;4082;4135:2;4123:9;4114:7;4110:23;4106:32;4103:52;;;4151:1;4148;4141:12;4103:52;4191:9;4178:23;4224:18;4216:6;4213:30;4210:50;;;4256:1;4253;4246:12;4210:50;4279:22;;4332:4;4324:13;;4320:27;-1:-1:-1;4310:55:11;;4361:1;4358;4351:12;4310:55;4401:2;4388:16;4427:18;4419:6;4416:30;4413:50;;;4459:1;4456;4449:12;4413:50;4504:7;4499:2;4490:6;4486:2;4482:15;4478:24;4475:37;4472:57;;;4525:1;4522;4515:12;4472:57;4556:2;4548:11;;;;;4578:6;;-1:-1:-1;4004:586:11;-1:-1:-1;;;4004:586:11:o;4595:839::-;4672:6;4680;4733:2;4721:9;4712:7;4708:23;4704:32;4701:52;;;4749:1;4746;4739:12;4701:52;4772:29;4791:9;4772:29;:::i;:::-;4762:39;;4852:2;4841:9;4837:18;4824:32;4879:18;4871:6;4868:30;4865:50;;;4911:1;4908;4901:12;4865:50;4934:22;;4987:4;4979:13;;4975:27;-1:-1:-1;4965:55:11;;5016:1;5013;5006:12;4965:55;5056:2;5043:16;5082:18;5074:6;5071:30;5068:56;;;5104:18;;:::i;:::-;5146:57;5193:2;5170:17;;-1:-1:-1;;5166:31:11;5199:2;5162:40;5146:57;:::i;:::-;5226:6;5219:5;5212:21;5274:7;5269:2;5260:6;5256:2;5252:15;5248:24;5245:37;5242:57;;;5295:1;5292;5285:12;5242:57;5350:6;5345:2;5341;5337:11;5332:2;5325:5;5321:14;5308:49;5402:1;5397:2;5388:6;5381:5;5377:18;5373:27;5366:38;5423:5;5413:15;;;;;4595:839;;;;;:::o;5621:346::-;5689:6;5697;5750:2;5738:9;5729:7;5725:23;5721:32;5718:52;;;5766:1;5763;5756:12;5718:52;-1:-1:-1;;5811:23:11;;;5931:2;5916:18;;;5903:32;;-1:-1:-1;5621:346:11:o;5972:288::-;6013:3;6051:5;6045:12;6078:6;6073:3;6066:19;6134:6;6127:4;6120:5;6116:16;6109:4;6104:3;6100:14;6094:47;6186:1;6179:4;6170:6;6165:3;6161:16;6157:27;6150:38;6249:4;6242:2;6238:7;6233:2;6225:6;6221:15;6217:29;6212:3;6208:39;6204:50;6197:57;;;5972:288;;;;:::o;6265:298::-;6448:6;6441:14;6434:22;6423:9;6416:41;6493:2;6488;6477:9;6473:18;6466:30;6397:4;6513:44;6553:2;6542:9;6538:18;6530:6;6513:44;:::i;:::-;6505:52;6265:298;-1:-1:-1;;;;6265:298:11:o;6568:219::-;6717:2;6706:9;6699:21;6680:4;6737:44;6777:2;6766:9;6762:18;6754:6;6737:44;:::i;6792:186::-;6851:6;6904:2;6892:9;6883:7;6879:23;6875:32;6872:52;;;6920:1;6917;6910:12;6872:52;6943:29;6962:9;6943:29;:::i;7725:118::-;7811:5;7804:13;7797:21;7790:5;7787:32;7777:60;;7833:1;7830;7823:12;7848:315;7913:6;7921;7974:2;7962:9;7953:7;7949:23;7945:32;7942:52;;;7990:1;7987;7980:12;7942:52;8013:29;8032:9;8013:29;:::i;:::-;8003:39;;8092:2;8081:9;8077:18;8064:32;8105:28;8127:5;8105:28;:::i;:::-;8152:5;8142:15;;;7848:315;;;;;:::o;8382:127::-;8443:10;8438:3;8434:20;8431:1;8424:31;8474:4;8471:1;8464:15;8498:4;8495:1;8488:15;8514:135;8553:3;8574:17;;;8571:43;;8594:18;;:::i;:::-;-1:-1:-1;8641:1:11;8630:13;;8514:135::o;8654:128::-;8721:9;;;8742:11;;;8739:37;;;8756:18;;:::i;9111:127::-;9172:10;9167:3;9163:20;9160:1;9153:31;9203:4;9200:1;9193:15;9227:4;9224:1;9217:15;9243:125;9308:9;;;9329:10;;;9326:36;;;9342:18;;:::i;10151:371::-;-1:-1:-1;;;;;10371:32:11;;;10353:51;;10440:32;;;;10435:2;10420:18;;10413:60;10504:2;10489:18;;10482:34;;;;10341:2;10326:18;;10151:371::o;10527:245::-;10594:6;10647:2;10635:9;10626:7;10622:23;10618:32;10615:52;;;10663:1;10660;10653:12;10615:52;10695:9;10689:16;10714:28;10736:5;10714:28;:::i;12360:168::-;12433:9;;;12464;;12481:15;;;12475:22;;12461:37;12451:71;;12502:18;;:::i;12533:217::-;12573:1;12599;12589:132;;12643:10;12638:3;12634:20;12631:1;12624:31;12678:4;12675:1;12668:15;12706:4;12703:1;12696:15;12589:132;-1:-1:-1;12735:9:11;;12533:217::o;13110:184::-;13180:6;13233:2;13221:9;13212:7;13208:23;13204:32;13201:52;;;13249:1;13246;13239:12;13201:52;-1:-1:-1;13272:16:11;;13110:184;-1:-1:-1;13110:184:11:o;13299:301::-;13428:3;13466:6;13460:13;13512:6;13505:4;13497:6;13493:17;13488:3;13482:37;13574:1;13538:16;;13563:13;;;-1:-1:-1;13538:16:11;13299:301;-1:-1:-1;13299:301:11:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2332400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"addFunds(uint256,uint256)": "infinite",
								"addOwnership(uint256)": "infinite",
								"addProjects(uint256)": "57030",
								"addTreasuery(uint256)": "infinite",
								"alreadyAdded(address)": "2661",
								"blockUser(address,bool)": "33068",
								"checkUpkeep(bytes)": "infinite",
								"flowToTreasuryPercentage()": "2438",
								"initialize(address,address,address,address,address)": "infinite",
								"interval()": "2372",
								"lastTimeStamp()": "2439",
								"maintainceFeePercentage()": "2417",
								"multisigAddress()": "2492",
								"noOfUsers()": "2330",
								"odividentPayoutPercentage()": "2329",
								"off()": "10876",
								"owner()": "2397",
								"ownerOne()": "2424",
								"ownerShipPoolAmount()": "2350",
								"ownerTwo()": "2492",
								"performUpkeep(bytes)": "infinite",
								"proxiableUUID()": "infinite",
								"reStakeTokens(uint256)": "infinite",
								"realInterval()": "2329",
								"renounceOwnership()": "infinite",
								"s_forwarderAddress()": "2493",
								"setForwarderAddress(address)": "30312",
								"setInterval(uint256,uint256)": "94788",
								"setTeasueryPercentages(uint256,uint256)": "infinite",
								"setflowToTreasuryPercentage(uint256)": "infinite",
								"setmaintainceFeePercentage(uint256)": "infinite",
								"setodividentPayoutPercentage(uint256)": "infinite",
								"settdividentPayoutPercentage(uint256)": "infinite",
								"stakeTokens(uint256)": "infinite",
								"stakeTokensByOwner(uint256[],address[])": "infinite",
								"startingTime()": "2395",
								"tPPercentages(uint256)": "2556",
								"tdividentPayoutPercentage()": "2351",
								"totalProjects()": "2394",
								"totalStakedAmount()": "2328",
								"totalUsers(uint256)": "2607",
								"transferOwnership(address)": "28475",
								"treasuryPoolAmount()": "2396",
								"upgradeToAndCall(address,bytes)": "infinite",
								"usdcToken()": "2404",
								"userRegistered(address)": "13313",
								"userWithdrawAmoount(uint256)": "infinite",
								"weeklyTransfer()": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite",
								"calculateFees(uint256,uint256)": "infinite",
								"calculatePercentage(uint256,uint256)": "infinite",
								"perPoolCalculation()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 896,
									"end": 17969,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 896,
									"end": 17969,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 896,
									"end": 17969,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4233,
									"end": 4286,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 4233,
									"end": 4286,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4233,
									"end": 4286,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4233,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4233,
									"end": 4286,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4233,
									"end": 4286,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4233,
									"end": 4286,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4233,
									"end": 4286,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 4233,
									"end": 4286,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4233,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4257,
									"end": 4279,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 4257,
									"end": 4277,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 4257,
									"end": 4279,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4257,
									"end": 4279,
									"name": "tag",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 4257,
									"end": 4279,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 896,
									"end": 17969,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 896,
									"end": 17969,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8870,
									"end": 8891,
									"name": "PUSH",
									"source": 2,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 2,
									"value": "10000000000000000"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F92EE8A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 158,
									"end": 208,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 158,
									"end": 208,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 158,
									"end": 208,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 2,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 146,
									"end": 148,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 131,
									"end": 149,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "LOG1",
									"source": 2
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7760,
									"end": 8133,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7711,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 214,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 214,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 896,
									"end": 17969,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 896,
									"end": 17969,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 896,
									"end": 17969,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 896,
									"end": 17969,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 896,
									"end": 17969,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 896,
									"end": 17969,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 896,
									"end": 17969,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 896,
									"end": 17969,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "487"
								},
								{
									"begin": 896,
									"end": 17969,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 896,
									"end": 17969,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 896,
									"end": 17969,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208faa61c493bc1e7ec40ac17c40f46b6e4f326660a1aff6215ed06ee7754902f664736f6c634300081a0033",
									".code": [
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "7547C7A3"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "AD8E5EC4"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "D777CC6D"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "ED061067"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "ED061067"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "F0664A4F"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "FF3D65D9"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "D777CC6D"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "D9B998B4"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "E9C68E2C"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "AD8E5EC4"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "B47FF951"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "B9DAC1EB"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "BCCBC36C"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "C7FD5BF0"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "CE356A24"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "85F45250"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "85F45250"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "947A36FB"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "9C361E4E"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "A4F67B8B"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "AD3CB1CC"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "7547C7A3"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "78FD078D"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "7F111E60"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "7F70C5E7"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "7FFE4D93"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "83AA9985"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "44490FF4"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "567E98F9"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "567E98F9"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "5F17E616"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "6626B26D"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "67976974"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "6E04FF0D"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "44490FF4"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "4585E33B"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "4F1EF286"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "5256DBBF"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "52D1902D"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "5462870D"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "30CAC972"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "30CAC972"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "33244C2C"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "34107C87"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "39518B5E"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "3A71A9E4"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "3F3B3B27"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "1934A83"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "11EAC855"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "1459457A"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "188E07B9"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "2765DF7A"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "3070FBF8"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 17969,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1368,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 375,
											"end": 407,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 375,
											"end": 407,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 357,
											"end": 408,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 4292,
											"end": 5194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 4292,
											"end": 5194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 5207,
											"end": 5544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 5207,
											"end": 5544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1743,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1202,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 7179,
											"end": 7826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7179,
											"end": 7826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1619,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1592,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1619,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1619,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1619,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1592,
											"end": 1619,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1619,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1619,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1619,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1619,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1592,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1619,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1592,
											"end": 1619,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 1592,
											"end": 1619,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1619,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1619,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1337,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1248,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 12528,
											"end": 13161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 12528,
											"end": 13161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 5961,
											"end": 6360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 5961,
											"end": 6360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1404,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 13172,
											"end": 13714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 13172,
											"end": 13714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13720,
											"end": 13840,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 13720,
											"end": 13840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13720,
											"end": 13840,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 13720,
											"end": 13840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13720,
											"end": 13840,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13720,
											"end": 13840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 13720,
											"end": 13840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13720,
											"end": 13840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13720,
											"end": 13840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13720,
											"end": 13840,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13720,
											"end": 13840,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 13720,
											"end": 13840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13720,
											"end": 13840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13720,
											"end": 13840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 13720,
											"end": 13840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 13720,
											"end": 13840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 14639,
											"end": 15280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 14639,
											"end": 15280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 12282,
											"end": 12517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 12282,
											"end": 12517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 12282,
											"end": 12517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 6366,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 6366,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 5550,
											"end": 5951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 5550,
											"end": 5951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 17211,
											"end": 17534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 17211,
											"end": 17534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 16200,
											"end": 16530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 16200,
											"end": 16530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 7833,
											"end": 8511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 7833,
											"end": 8511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1802,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 8521,
											"end": 9062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 8521,
											"end": 9062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2069,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 2041,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2069,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2069,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2069,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 2041,
											"end": 2069,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2069,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2069,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2069,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2069,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 2041,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2069,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 2041,
											"end": 2069,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2069,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2069,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2125,
											"end": 2170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2170,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 16880,
											"end": 17205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 16880,
											"end": 17205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1083,
											"end": 1117,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 16540,
											"end": 16869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 16540,
											"end": 16869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 2230,
											"end": 2286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7289,
											"end": 7303,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 7289,
											"end": 7303,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7282,
											"end": 7304,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7264,
											"end": 7305,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7264,
											"end": 7305,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7336,
											"end": 7338,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7314,
											"end": 7348,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 7314,
											"end": 7348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7314,
											"end": 7348,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 7314,
											"end": 7348,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 7382,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 7382,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7364,
											"end": 7382,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7357,
											"end": 7391,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7357,
											"end": 7391,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7357,
											"end": 7391,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7357,
											"end": 7391,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7422,
											"end": 7424,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7407,
											"end": 7425,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7407,
											"end": 7425,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7400,
											"end": 7434,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7465,
											"end": 7468,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 7450,
											"end": 7469,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7450,
											"end": 7469,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7443,
											"end": 7478,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7512,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 7494,
											"end": 7513,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7494,
											"end": 7513,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7487,
											"end": 7522,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7251,
											"end": 7254,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 6983,
											"end": 7528,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 2075,
											"end": 2119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7661,
											"end": 7663,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1293,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 13847,
											"end": 14165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 13847,
											"end": 14165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 15286,
											"end": 15840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 15286,
											"end": 15840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 11079,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 9456,
											"end": 11079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 11079,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 11079,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 11079,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 11079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 9456,
											"end": 11079,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 11079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 11079,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 11079,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 11079,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 9456,
											"end": 11079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 11079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 11079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 9456,
											"end": 11079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 9456,
											"end": 11079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 15852,
											"end": 16194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 15852,
											"end": 16194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2176,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2224,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 2,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4511,
											"end": 4539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 4526,
											"end": 4538,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 4511,
											"end": 4539,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 4511,
											"end": 4539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4549,
											"end": 4573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 4549,
											"end": 4571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 4549,
											"end": 4573,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4549,
											"end": 4573,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 4549,
											"end": 4573,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4616,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4616,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4584,
											"end": 4616,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4616,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4616,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4584,
											"end": 4616,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4616,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4616,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4616,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4616,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4616,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4852,
											"end": 4856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1388"
										},
										{
											"begin": 4824,
											"end": 4849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4824,
											"end": 4856,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4906,
											"end": 4910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1D4C"
										},
										{
											"begin": 4878,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4878,
											"end": 4910,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4972,
											"end": 4976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5DC"
										},
										{
											"begin": 4945,
											"end": 4969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4945,
											"end": 4976,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5023,
											"end": 5027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3E8"
										},
										{
											"begin": 4997,
											"end": 5020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 4997,
											"end": 5027,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 5085,
											"end": 5119,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5119,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5119,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5119,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5119,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5119,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5119,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5119,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5119,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 5133,
											"end": 5153,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5153,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5153,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5153,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5153,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5153,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5153,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5153,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5153,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 5167,
											"end": 5187,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5187,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5187,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5187,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5187,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5187,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5187,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5187,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5187,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 8321,
											"end": 8371,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 2,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8309,
											"end": 8311,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8312,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 5194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 5194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17583,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17609,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17654,
											"end": 17664,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5310,
											"end": 5311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5306,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5293,
											"end": 5311,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5290,
											"end": 5374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5290,
											"end": 5374,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5333,
											"end": 5363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5333,
											"end": 5363,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDBC6335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5333,
											"end": 5363,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5333,
											"end": 5363,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5333,
											"end": 5363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5333,
											"end": 5363,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5333,
											"end": 5363,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5333,
											"end": 5363,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5290,
											"end": 5374,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5290,
											"end": 5374,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5398,
											"end": 5411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5398,
											"end": 5411,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5398,
											"end": 5411,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5412,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5412,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 5384,
											"end": 5412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5384,
											"end": 5412,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5412,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5384,
											"end": 5412,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5412,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5428,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5428,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5428,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5438,
											"end": 5453,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5438,
											"end": 5453,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5438,
											"end": 5453,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5398,
											"end": 5411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5438,
											"end": 5453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 5438,
											"end": 5453,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5438,
											"end": 5453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 5438,
											"end": 5453,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5438,
											"end": 5453,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 5438,
											"end": 5453,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5438,
											"end": 5453,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5438,
											"end": 5453,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5438,
											"end": 5453,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5482,
											"end": 5495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5482,
											"end": 5495,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5470,
											"end": 5537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E1976E16ED8CE8E740235978FBE69B27D5EEA683B2E017BB0BD2FABB33294B3F"
										},
										{
											"begin": 5470,
											"end": 5537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5499,
											"end": 5520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 5507,
											"end": 5520,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5499,
											"end": 5504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 5499,
											"end": 5520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 5499,
											"end": 5520,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5499,
											"end": 5520,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 5499,
											"end": 5520,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5470,
											"end": 5537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5537,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5470,
											"end": 5537,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8989,
											"end": 9014,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8989,
											"end": 9014,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8989,
											"end": 9014,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9047,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9030,
											"end": 9048,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9030,
											"end": 9048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9057,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9057,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9057,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9057,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9073,
											"end": 9091,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9073,
											"end": 9091,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9066,
											"end": 9100,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9066,
											"end": 9100,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9066,
											"end": 9100,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8977,
											"end": 8979,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5470,
											"end": 5537,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 5470,
											"end": 5537,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5470,
											"end": 5537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5537,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5470,
											"end": 5537,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5470,
											"end": 5537,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5470,
											"end": 5537,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5470,
											"end": 5537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5470,
											"end": 5537,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 5207,
											"end": 5544,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5207,
											"end": 5544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17583,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17609,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17654,
											"end": 17664,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7319,
											"end": 7320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7301,
											"end": 7308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7301,
											"end": 7315,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7301,
											"end": 7320,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7298,
											"end": 7381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 7298,
											"end": 7381,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7355,
											"end": 7362,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7355,
											"end": 7369,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7343,
											"end": 7370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7343,
											"end": 7370,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3DDD5557"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7343,
											"end": 7370,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7343,
											"end": 7370,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7343,
											"end": 7370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7343,
											"end": 7370,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7343,
											"end": 7370,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7343,
											"end": 7370,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7298,
											"end": 7381,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 7298,
											"end": 7381,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7409,
											"end": 7410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7393,
											"end": 7398,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7405,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7410,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7390,
											"end": 7472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 7390,
											"end": 7472,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7448,
											"end": 7453,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7448,
											"end": 7460,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7433,
											"end": 7461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7433,
											"end": 7461,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A46E2AB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7433,
											"end": 7461,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7433,
											"end": 7461,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7433,
											"end": 7461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7433,
											"end": 7461,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7433,
											"end": 7461,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7433,
											"end": 7461,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7390,
											"end": 7472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 7390,
											"end": 7472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7516,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7486,
											"end": 7491,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7486,
											"end": 7498,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7486,
											"end": 7516,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 7482,
											"end": 7571,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7539,
											"end": 7560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7539,
											"end": 7560,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "512509D3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7539,
											"end": 7560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7539,
											"end": 7560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7539,
											"end": 7560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7539,
											"end": 7560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7539,
											"end": 7560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7539,
											"end": 7560,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7539,
											"end": 7560,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7539,
											"end": 7560,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7539,
											"end": 7560,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7539,
											"end": 7560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7539,
											"end": 7560,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 7482,
											"end": 7571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7585,
											"end": 7591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7581,
											"end": 7746,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 7581,
											"end": 7746,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7599,
											"end": 7606,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7599,
											"end": 7613,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7595,
											"end": 7596,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7595,
											"end": 7613,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7581,
											"end": 7746,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7581,
											"end": 7746,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 7581,
											"end": 7746,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7680,
											"end": 7687,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7688,
											"end": 7689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7680,
											"end": 7690,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7680,
											"end": 7690,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7680,
											"end": 7690,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7680,
											"end": 7690,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7680,
											"end": 7690,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 7680,
											"end": 7690,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7680,
											"end": 7690,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 7680,
											"end": 7690,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 7680,
											"end": 7690,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7680,
											"end": 7690,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 7680,
											"end": 7690,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7680,
											"end": 7690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7680,
											"end": 7690,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7680,
											"end": 7690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7680,
											"end": 7690,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7680,
											"end": 7690,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7680,
											"end": 7690,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 7634,
											"end": 7658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7649,
											"end": 7654,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7655,
											"end": 7656,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7657,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7657,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7657,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7657,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 7649,
											"end": 7657,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 7649,
											"end": 7657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 7649,
											"end": 7657,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7657,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 7649,
											"end": 7657,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7649,
											"end": 7657,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7649,
											"end": 7657,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7657,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7657,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7634,
											"end": 7658,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7634,
											"end": 7658,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7658,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7658,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7634,
											"end": 7658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7658,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7658,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7658,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7634,
											"end": 7658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7658,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 7634,
											"end": 7676,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7690,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7690,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7690,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7690,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 7634,
											"end": 7690,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7690,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7690,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 7634,
											"end": 7690,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7690,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 7634,
											"end": 7690,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7690,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7690,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7690,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7690,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7690,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7690,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7690,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 7732,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7733,
											"end": 7734,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 7735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 7735,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 7735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 7735,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 7725,
											"end": 7735,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 7725,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 7725,
											"end": 7735,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 7735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 7725,
											"end": 7735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7725,
											"end": 7735,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7725,
											"end": 7735,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 7735,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 7735,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7704,
											"end": 7721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7704,
											"end": 7721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7704,
											"end": 7735,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7704,
											"end": 7735,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7704,
											"end": 7735,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7704,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 7704,
											"end": 7735,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7704,
											"end": 7735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7704,
											"end": 7735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 7704,
											"end": 7735,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7704,
											"end": 7735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 7704,
											"end": 7735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7704,
											"end": 7735,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7704,
											"end": 7735,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7704,
											"end": 7735,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7615,
											"end": 7618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7615,
											"end": 7618,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7581,
											"end": 7746,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 7581,
											"end": 7746,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7581,
											"end": 7746,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 7581,
											"end": 7746,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7805,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7791,
											"end": 7805,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7806,
											"end": 7818,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7806,
											"end": 7818,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7761,
											"end": 7819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7761,
											"end": 7819,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7761,
											"end": 7819,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7780,
											"end": 7790,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9626,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9575,
											"end": 9626,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9657,
											"end": 9659,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9642,
											"end": 9660,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9642,
											"end": 9660,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9678,
											"end": 9712,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7761,
											"end": 7819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "472714A70B748503A00EFA85A1C3081B2A3477CE3BE0227CB140455F82CCAEB6"
										},
										{
											"begin": 7761,
											"end": 7819,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9563,
											"end": 9565,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9548,
											"end": 9566,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7761,
											"end": 7819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 7761,
											"end": 7819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7761,
											"end": 7819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7761,
											"end": 7819,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7761,
											"end": 7819,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7761,
											"end": 7819,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7761,
											"end": 7819,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7761,
											"end": 7819,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7761,
											"end": 7819,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7179,
											"end": 7826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7179,
											"end": 7826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12647,
											"end": 12665,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 12647,
											"end": 12665,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12647,
											"end": 12665,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12633,
											"end": 12643,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 12633,
											"end": 12665,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 12612,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 12612,
											"end": 12750,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12612,
											"end": 12750,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12612,
											"end": 12750,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12612,
											"end": 12750,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12612,
											"end": 12750,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9925,
											"end": 9927,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12612,
											"end": 12750,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12612,
											"end": 12750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12612,
											"end": 12750,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9907,
											"end": 9928,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9964,
											"end": 9966,
											"name": "PUSH",
											"source": 11,
											"value": "3B"
										},
										{
											"begin": 9944,
											"end": 9962,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9944,
											"end": 9962,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9944,
											"end": 9962,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9937,
											"end": 9967,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10003,
											"end": 10037,
											"name": "PUSH",
											"source": 11,
											"value": "54686973206164647265737320646F6573206E6F742068617665207065726D69"
										},
										{
											"begin": 9983,
											"end": 10001,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 9983,
											"end": 10001,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9983,
											"end": 10001,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9976,
											"end": 10038,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10074,
											"end": 10103,
											"name": "PUSH",
											"source": 11,
											"value": "7373696F6E20746F2063616C6C20706572666F726D55706B6565700000000000"
										},
										{
											"begin": 10054,
											"end": 10072,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 10054,
											"end": 10072,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10054,
											"end": 10072,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10047,
											"end": 10104,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10121,
											"end": 10140,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 10121,
											"end": 10140,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12612,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 9723,
											"end": 10146,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12612,
											"end": 12750,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 12612,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12772,
											"end": 12780,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 12772,
											"end": 12780,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12784,
											"end": 12785,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12772,
											"end": 12785,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12768,
											"end": 12841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 12768,
											"end": 12841,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12821,
											"end": 12829,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 12821,
											"end": 12829,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12807,
											"end": 12830,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12807,
											"end": 12830,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71540007"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12807,
											"end": 12830,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12807,
											"end": 12830,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12807,
											"end": 12830,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12807,
											"end": 12830,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12807,
											"end": 12830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 12807,
											"end": 12830,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12768,
											"end": 12841,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 12768,
											"end": 12841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12882,
											"end": 12894,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 12882,
											"end": 12894,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12863,
											"end": 12878,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 12863,
											"end": 12894,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12860,
											"end": 13146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 12860,
											"end": 13146,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12921,
											"end": 12933,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 12921,
											"end": 12933,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12910,
											"end": 12918,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 12910,
											"end": 12933,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12910,
											"end": 12933,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12910,
											"end": 12933,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 12963,
											"end": 12978,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 12947,
											"end": 12960,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 12947,
											"end": 12978,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12947,
											"end": 12978,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12947,
											"end": 12978,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 13007,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 13007,
											"end": 13037,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12921,
											"end": 12933,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13007,
											"end": 13037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 13007,
											"end": 13037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13007,
											"end": 13037,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 13007,
											"end": 13037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12992,
											"end": 13004,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 12992,
											"end": 13037,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 13051,
											"end": 13067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 13051,
											"end": 13065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 13051,
											"end": 13067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13051,
											"end": 13067,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 13051,
											"end": 13067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 13161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 13161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12860,
											"end": 13146,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 12860,
											"end": 13146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13122,
											"end": 13134,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 13122,
											"end": 13134,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 13112,
											"end": 13135,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13112,
											"end": 13135,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54593E75"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13112,
											"end": 13135,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13112,
											"end": 13135,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13112,
											"end": 13135,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13112,
											"end": 13135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13112,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 13112,
											"end": 13135,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 2653,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 4291,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4273,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 4273,
											"end": 4309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 4341,
											"end": 4358,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4360,
											"end": 4364,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4319,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 4319,
											"end": 4365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 5961,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17583,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17609,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17654,
											"end": 17664,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6053,
											"end": 6054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6042,
											"end": 6049,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6042,
											"end": 6054,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 6039,
											"end": 6107,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6076,
											"end": 6096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6076,
											"end": 6096,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FF4783"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6076,
											"end": 6096,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6076,
											"end": 6096,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6076,
											"end": 6096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6076,
											"end": 6096,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6076,
											"end": 6096,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6076,
											"end": 6096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6039,
											"end": 6107,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 6039,
											"end": 6107,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6139,
											"end": 6146,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6117,
											"end": 6135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6117,
											"end": 6146,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6146,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6146,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 6117,
											"end": 6146,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 6117,
											"end": 6146,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6146,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 6117,
											"end": 6146,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6146,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6146,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6146,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6157,
											"end": 6169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6181,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6181,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6172,
											"end": 6229,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6172,
											"end": 6229,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6172,
											"end": 6181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6181,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6181,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 6172,
											"end": 6194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 6172,
											"end": 6229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6195,
											"end": 6205,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6195,
											"end": 6205,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6214,
											"end": 6218,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 6214,
											"end": 6218,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6220,
											"end": 6227,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6220,
											"end": 6227,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 6172,
											"end": 6229,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6229,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 6172,
											"end": 6229,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 6172,
											"end": 6229,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6157,
											"end": 6229,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6157,
											"end": 6229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6250,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6239,
											"end": 6306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 6239,
											"end": 6306,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6272,
											"end": 6295,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D85D3CEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6272,
											"end": 6295,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6295,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6272,
											"end": 6295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6272,
											"end": 6295,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6295,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6272,
											"end": 6295,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6239,
											"end": 6306,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 6239,
											"end": 6306,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6321,
											"end": 6353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A9F166643EC132A11638E74E3C3A78D4AE278FCBF92998240E0E97676F54E404"
										},
										{
											"begin": 6334,
											"end": 6352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6334,
											"end": 6352,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6321,
											"end": 6353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6321,
											"end": 6353,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6321,
											"end": 6353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 6321,
											"end": 6353,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 2924,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 13172,
											"end": 13714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17583,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17609,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17654,
											"end": 17664,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13300,
											"end": 13301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13282,
											"end": 13296,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13282,
											"end": 13301,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13279,
											"end": 13363,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 13279,
											"end": 13363,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13323,
											"end": 13352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13323,
											"end": 13352,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71540007"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13323,
											"end": 13352,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13323,
											"end": 13352,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13323,
											"end": 13352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13323,
											"end": 13352,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13323,
											"end": 13352,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13323,
											"end": 13352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13279,
											"end": 13363,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 13279,
											"end": 13363,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13400,
											"end": 13415,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 13384,
											"end": 13397,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13384,
											"end": 13415,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13381,
											"end": 13472,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13381,
											"end": 13472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 13381,
											"end": 13472,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13437,
											"end": 13461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13437,
											"end": 13461,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54593E75"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13437,
											"end": 13461,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13437,
											"end": 13461,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13437,
											"end": 13461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13437,
											"end": 13461,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13437,
											"end": 13461,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13437,
											"end": 13461,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13381,
											"end": 13472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 13381,
											"end": 13472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13493,
											"end": 13524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 13509,
											"end": 13524,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 13493,
											"end": 13506,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13493,
											"end": 13524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 13493,
											"end": 13524,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13493,
											"end": 13524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 13493,
											"end": 13524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13482,
											"end": 13490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 13482,
											"end": 13524,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13482,
											"end": 13524,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13482,
											"end": 13524,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 13534,
											"end": 13546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 13534,
											"end": 13562,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13534,
											"end": 13562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13534,
											"end": 13562,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 13588,
											"end": 13603,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 13572,
											"end": 13585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 13572,
											"end": 13603,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13572,
											"end": 13603,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13572,
											"end": 13603,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 13613,
											"end": 13625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 13613,
											"end": 13642,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13613,
											"end": 13642,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13613,
											"end": 13642,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 13658,
											"end": 13706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13658,
											"end": 13706,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13658,
											"end": 13706,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13670,
											"end": 13680,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9626,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9575,
											"end": 9626,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9657,
											"end": 9659,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9642,
											"end": 9660,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9642,
											"end": 9660,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9678,
											"end": 9712,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13658,
											"end": 13706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2B5090E035D3026F5448298C9ADC68DB8BBC1B26A8AF5C81B2B2A9FC07CA4A00"
										},
										{
											"begin": 13658,
											"end": 13706,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9563,
											"end": 9565,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9548,
											"end": 9566,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13658,
											"end": 13706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 9373,
											"end": 9718,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13720,
											"end": 13840,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 13720,
											"end": 13840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17583,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17609,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17654,
											"end": 17664,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13784,
											"end": 13785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13773,
											"end": 13781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 13773,
											"end": 13785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13785,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 13800,
											"end": 13833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13800,
											"end": 13833,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13800,
											"end": 13833,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13812,
											"end": 13822,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13800,
											"end": 13833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3B68DC4E210C46D3622293F2B941CDFDE795BB6E17286BB289BA05A6A3B5541F"
										},
										{
											"begin": 13800,
											"end": 13833,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13800,
											"end": 13833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13800,
											"end": 13833,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13800,
											"end": 13833,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13800,
											"end": 13833,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13800,
											"end": 13833,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13800,
											"end": 13833,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13800,
											"end": 13833,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 13720,
											"end": 13840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 14639,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17742,
											"end": 17748,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 17742,
											"end": 17748,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17742,
											"end": 17748,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17742,
											"end": 17748,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 17742,
											"end": 17748,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 17742,
											"end": 17748,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17741,
											"end": 17748,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17733,
											"end": 17784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 17733,
											"end": 17784,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17733,
											"end": 17784,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17733,
											"end": 17784,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17733,
											"end": 17784,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17733,
											"end": 17784,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11258,
											"end": 11260,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17733,
											"end": 17784,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17733,
											"end": 17784,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17733,
											"end": 17784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11240,
											"end": 11261,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11297,
											"end": 11299,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 11277,
											"end": 11295,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11277,
											"end": 11295,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11277,
											"end": 11295,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11270,
											"end": 11300,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11336,
											"end": 11369,
											"name": "PUSH",
											"source": 11,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 11316,
											"end": 11334,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 11316,
											"end": 11334,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11316,
											"end": 11334,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11309,
											"end": 11370,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11387,
											"end": 11405,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 11387,
											"end": 11405,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17733,
											"end": 17784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 11056,
											"end": 11411,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17733,
											"end": 17784,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 17733,
											"end": 17784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17794,
											"end": 17800,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 17794,
											"end": 17807,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17794,
											"end": 17807,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17794,
											"end": 17807,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17794,
											"end": 17807,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 17794,
											"end": 17807,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17794,
											"end": 17807,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 14729,
											"end": 14741,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14726,
											"end": 14794,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 14726,
											"end": 14794,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14763,
											"end": 14783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14763,
											"end": 14783,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FF4783"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14763,
											"end": 14783,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14763,
											"end": 14783,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14763,
											"end": 14783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14763,
											"end": 14783,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14763,
											"end": 14783,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14763,
											"end": 14783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14726,
											"end": 14794,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 14726,
											"end": 14794,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14832,
											"end": 14842,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 14817,
											"end": 14843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14817,
											"end": 14843,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14817,
											"end": 14843,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14817,
											"end": 14843,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14817,
											"end": 14831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 14817,
											"end": 14843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14817,
											"end": 14843,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14817,
											"end": 14843,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14817,
											"end": 14843,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14817,
											"end": 14843,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 14817,
											"end": 14858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14817,
											"end": 14858,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14817,
											"end": 14858,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 14807,
											"end": 14858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14807,
											"end": 14858,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14804,
											"end": 14949,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14804,
											"end": 14949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 14804,
											"end": 14949,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14911,
											"end": 14921,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 14896,
											"end": 14922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14896,
											"end": 14922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14896,
											"end": 14922,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14896,
											"end": 14922,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14896,
											"end": 14910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 14896,
											"end": 14922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14896,
											"end": 14922,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14896,
											"end": 14922,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14896,
											"end": 14922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14896,
											"end": 14922,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14896,
											"end": 14922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14896,
											"end": 14922,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 14896,
											"end": 14937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14896,
											"end": 14937,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14896,
											"end": 14937,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 14880,
											"end": 14938,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14880,
											"end": 14938,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98E712C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14880,
											"end": 14938,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14880,
											"end": 14938,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14880,
											"end": 14938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14880,
											"end": 14938,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14880,
											"end": 14938,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14880,
											"end": 14938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14804,
											"end": 14949,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 14804,
											"end": 14949,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14974,
											"end": 14984,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 14959,
											"end": 14985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14959,
											"end": 14985,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14959,
											"end": 14985,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14959,
											"end": 14985,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14959,
											"end": 14973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 14959,
											"end": 14985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14959,
											"end": 14985,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14959,
											"end": 14985,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14959,
											"end": 14985,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14959,
											"end": 14985,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 14959,
											"end": 15000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14959,
											"end": 15000,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14959,
											"end": 15011,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14959,
											"end": 15011,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 15004,
											"end": 15011,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15004,
											"end": 15011,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14959,
											"end": 14985,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14959,
											"end": 15011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 14959,
											"end": 15011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15004,
											"end": 15011,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15004,
											"end": 15011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14959,
											"end": 15011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 14959,
											"end": 15011,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14959,
											"end": 15011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 14959,
											"end": 15011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14959,
											"end": 15011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14959,
											"end": 15011,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14959,
											"end": 15011,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15036,
											"end": 15046,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15021,
											"end": 15047,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15047,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15047,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 15021,
											"end": 15047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15021,
											"end": 15047,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15047,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15021,
											"end": 15047,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15047,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 15021,
											"end": 15062,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15073,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15073,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 15066,
											"end": 15073,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15066,
											"end": 15073,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15047,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 15021,
											"end": 15073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15066,
											"end": 15073,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15066,
											"end": 15073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 15021,
											"end": 15073,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15073,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 15021,
											"end": 15073,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15073,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15073,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15091,
											"end": 15103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15106,
											"end": 15115,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15115,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15106,
											"end": 15144,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15106,
											"end": 15144,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15125,
											"end": 15135,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15106,
											"end": 15144,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15106,
											"end": 15115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15115,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15115,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 15106,
											"end": 15124,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15106,
											"end": 15144,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 15106,
											"end": 15144,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 15106,
											"end": 15144,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15091,
											"end": 15144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15091,
											"end": 15144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15166,
											"end": 15173,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15162,
											"end": 15229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 15162,
											"end": 15229,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15195,
											"end": 15218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15195,
											"end": 15218,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D85D3CEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15195,
											"end": 15218,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15195,
											"end": 15218,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15195,
											"end": 15218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15195,
											"end": 15218,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15195,
											"end": 15218,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15195,
											"end": 15218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15162,
											"end": 15229,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 15162,
											"end": 15229,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15244,
											"end": 15273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15244,
											"end": 15273,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15244,
											"end": 15273,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15253,
											"end": 15263,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15244,
											"end": 15273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 15244,
											"end": 15273,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15244,
											"end": 15273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15244,
											"end": 15273,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15244,
											"end": 15273,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15244,
											"end": 15273,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15244,
											"end": 15273,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15244,
											"end": 15273,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15244,
											"end": 15273,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17828,
											"end": 17834,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 17828,
											"end": 17842,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17828,
											"end": 17842,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17828,
											"end": 17842,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17828,
											"end": 17842,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17828,
											"end": 17842,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 14639,
											"end": 15280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12370,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12372,
											"end": 12384,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12406,
											"end": 12422,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12461,
											"end": 12469,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 12461,
											"end": 12469,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12444,
											"end": 12457,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 12444,
											"end": 12457,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12426,
											"end": 12441,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 12426,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 12426,
											"end": 12457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12426,
											"end": 12457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12426,
											"end": 12457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 12426,
											"end": 12457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12426,
											"end": 12457,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 12426,
											"end": 12457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12500,
											"end": 12509,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12500,
											"end": 12509,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12500,
											"end": 12509,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12500,
											"end": 12509,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12500,
											"end": 12509,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12500,
											"end": 12509,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12500,
											"end": 12509,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12500,
											"end": 12509,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12500,
											"end": 12509,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12500,
											"end": 12509,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12500,
											"end": 12509,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 12500,
											"end": 12509,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12500,
											"end": 12509,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12282,
											"end": 12517,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12282,
											"end": 12517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 6366,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6447,
											"end": 6448,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6436,
											"end": 6443,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6436,
											"end": 6448,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 6433,
											"end": 6501,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6490,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6470,
											"end": 6490,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FF4783"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6470,
											"end": 6490,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6490,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6490,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6470,
											"end": 6490,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6470,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6433,
											"end": 6501,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 6433,
											"end": 6501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6537,
											"end": 6547,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6536,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6556,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6556,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6522,
											"end": 6556,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6519,
											"end": 6636,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6519,
											"end": 6636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 6519,
											"end": 6636,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6605,
											"end": 6615,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6616,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6590,
											"end": 6616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6604,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 6590,
											"end": 6616,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6590,
											"end": 6616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6616,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6590,
											"end": 6616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6616,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6624,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6625,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6625,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BE970F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6578,
											"end": 6625,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6625,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6624,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6590,
											"end": 6624,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6624,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6624,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6578,
											"end": 6625,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6578,
											"end": 6625,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6578,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6519,
											"end": 6636,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 6519,
											"end": 6636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6661,
											"end": 6671,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6672,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6646,
											"end": 6672,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6672,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6672,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6660,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 6646,
											"end": 6672,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6646,
											"end": 6672,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6672,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6646,
											"end": 6672,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6672,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6690,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6646,
											"end": 6690,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6701,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6701,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6694,
											"end": 6701,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6694,
											"end": 6701,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6672,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 6646,
											"end": 6701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6694,
											"end": 6701,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6694,
											"end": 6701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 6646,
											"end": 6701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6701,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 6646,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6701,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6701,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6723,
											"end": 6747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6747,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6747,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6735,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 6723,
											"end": 6747,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6723,
											"end": 6747,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6747,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6723,
											"end": 6747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6747,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6747,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6747,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6723,
											"end": 6747,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 6719,
											"end": 6890,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6786,
											"end": 6795,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 6786,
											"end": 6795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6786,
											"end": 6795,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6796,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6775,
											"end": 6796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6796,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6796,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6785,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 6775,
											"end": 6796,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6775,
											"end": 6796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6796,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6796,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6796,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6775,
											"end": 6796,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6796,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6796,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6809,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6809,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6775,
											"end": 6809,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6799,
											"end": 6809,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6809,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6809,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6809,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6809,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6809,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6809,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6823,
											"end": 6847,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6823,
											"end": 6847,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6823,
											"end": 6835,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 6823,
											"end": 6847,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6823,
											"end": 6847,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6823,
											"end": 6847,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6823,
											"end": 6847,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6823,
											"end": 6847,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6823,
											"end": 6854,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6823,
											"end": 6854,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6823,
											"end": 6854,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6809,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6823,
											"end": 6854,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6823,
											"end": 6854,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6823,
											"end": 6854,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6868,
											"end": 6879,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6868,
											"end": 6879,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6868,
											"end": 6879,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6786,
											"end": 6795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6868,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 6868,
											"end": 6879,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6868,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 6868,
											"end": 6879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6868,
											"end": 6879,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 6868,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6868,
											"end": 6879,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6868,
											"end": 6879,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6868,
											"end": 6879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6868,
											"end": 6879,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6868,
											"end": 6879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6890,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 6719,
											"end": 6890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6921,
											"end": 6928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6900,
											"end": 6917,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6900,
											"end": 6917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6900,
											"end": 6928,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6900,
											"end": 6928,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6900,
											"end": 6928,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6900,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 6900,
											"end": 6928,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6900,
											"end": 6928,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6900,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 6900,
											"end": 6928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6900,
											"end": 6928,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 6900,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6900,
											"end": 6928,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6900,
											"end": 6928,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6900,
											"end": 6928,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6939,
											"end": 6951,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 6962,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 6962,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 7002,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 6987,
											"end": 7002,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6953,
											"end": 6962,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 6962,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 6962,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 6962,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 6975,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 6953,
											"end": 6975,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 7002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 7002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 7002,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 7002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7003,
											"end": 7010,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7003,
											"end": 7010,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 6953,
											"end": 7011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 6953,
											"end": 7011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 6953,
											"end": 7011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 7011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 7011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7034,
											"end": 7041,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7030,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 7030,
											"end": 7097,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7063,
											"end": 7086,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7063,
											"end": 7086,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D85D3CEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7063,
											"end": 7086,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7063,
											"end": 7086,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7063,
											"end": 7086,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7063,
											"end": 7086,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7063,
											"end": 7086,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7063,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7030,
											"end": 7097,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 7030,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7150,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 7135,
											"end": 7150,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7112,
											"end": 7160,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7112,
											"end": 7160,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7112,
											"end": 7160,
											"name": "PUSH",
											"source": 10,
											"value": "14EE34C24635186D212F515353DADAE9C226529EDEF2D1FCF5504CB33B5C25AB"
										},
										{
											"begin": 7112,
											"end": 7160,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7112,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 7112,
											"end": 7160,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7124,
											"end": 7134,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7124,
											"end": 7134,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7135,
											"end": 7150,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7159,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7112,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 7112,
											"end": 7160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 5550,
											"end": 5951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17583,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17609,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17654,
											"end": 17664,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5642,
											"end": 5643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5631,
											"end": 5638,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5643,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5628,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 5628,
											"end": 5696,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FF4783"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5685,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5665,
											"end": 5685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5628,
											"end": 5696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 5628,
											"end": 5696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5729,
											"end": 5736,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5706,
											"end": 5725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5736,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5736,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5736,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 5706,
											"end": 5736,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5736,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 5706,
											"end": 5736,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5736,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 5706,
											"end": 5736,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5736,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5736,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5747,
											"end": 5759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5771,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5771,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5762,
											"end": 5819,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5762,
											"end": 5819,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5762,
											"end": 5771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5771,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 5762,
											"end": 5784,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 5762,
											"end": 5819,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5785,
											"end": 5795,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5785,
											"end": 5795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5804,
											"end": 5808,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 5804,
											"end": 5808,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5810,
											"end": 5817,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5810,
											"end": 5817,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 5762,
											"end": 5819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5819,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 5762,
											"end": 5819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 5762,
											"end": 5819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5747,
											"end": 5819,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5747,
											"end": 5819,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5833,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 5829,
											"end": 5896,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5862,
											"end": 5885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5862,
											"end": 5885,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D85D3CEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5862,
											"end": 5885,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5862,
											"end": 5885,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5862,
											"end": 5885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5862,
											"end": 5885,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5862,
											"end": 5885,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5862,
											"end": 5885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5829,
											"end": 5896,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 5829,
											"end": 5896,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5911,
											"end": 5944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "73834E1D1EE73BA659470A3603B888903853D3A3C9FDA34E71C093A0E35CAB94"
										},
										{
											"begin": 5924,
											"end": 5943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5924,
											"end": 5943,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5911,
											"end": 5944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5911,
											"end": 5944,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5911,
											"end": 5944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 5911,
											"end": 5944,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 17211,
											"end": 17534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17583,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17609,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17654,
											"end": 17664,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17332,
											"end": 17333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17313,
											"end": 17328,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17313,
											"end": 17333,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17310,
											"end": 17398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 17310,
											"end": 17398,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17355,
											"end": 17387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17355,
											"end": 17387,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDBC6335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17355,
											"end": 17387,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17355,
											"end": 17387,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17355,
											"end": 17387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17355,
											"end": 17387,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17355,
											"end": 17387,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17355,
											"end": 17387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17310,
											"end": 17398,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 17310,
											"end": 17398,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17416,
											"end": 17439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 17416,
											"end": 17457,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17416,
											"end": 17457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17416,
											"end": 17457,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 17473,
											"end": 17527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17473,
											"end": 17527,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17473,
											"end": 17527,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 17491,
											"end": 17501,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D85598D6EA860439B48FC265883A1CAC638FF64DCA5391FE12B46F27076E26FE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17473,
											"end": 17527,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17473,
											"end": 17527,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 10777,
											"end": 11051,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 16200,
											"end": 16530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17583,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17609,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17654,
											"end": 17664,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16323,
											"end": 16324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16304,
											"end": 16319,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16304,
											"end": 16324,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16301,
											"end": 16389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 16301,
											"end": 16389,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16346,
											"end": 16378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16346,
											"end": 16378,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDBC6335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16346,
											"end": 16378,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16346,
											"end": 16378,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16346,
											"end": 16378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16346,
											"end": 16378,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16346,
											"end": 16378,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16346,
											"end": 16378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16301,
											"end": 16389,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 16301,
											"end": 16389,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16407,
											"end": 16432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16407,
											"end": 16450,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16407,
											"end": 16450,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16407,
											"end": 16450,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 16466,
											"end": 16522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16466,
											"end": 16522,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16466,
											"end": 16522,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16494,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D85598D6EA860439B48FC265883A1CAC638FF64DCA5391FE12B46F27076E26FE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16466,
											"end": 16522,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16466,
											"end": 16522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 10777,
											"end": 11051,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 7833,
											"end": 8511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7916,
											"end": 7917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7905,
											"end": 7912,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7905,
											"end": 7917,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7939,
											"end": 7959,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7939,
											"end": 7959,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FF4783"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7939,
											"end": 7959,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7939,
											"end": 7959,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7939,
											"end": 7959,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7939,
											"end": 7959,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7939,
											"end": 7959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7939,
											"end": 7959,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 7902,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8015,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7990,
											"end": 8016,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8016,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7990,
											"end": 8016,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7990,
											"end": 8016,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7990,
											"end": 8004,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 7990,
											"end": 8016,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7990,
											"end": 8016,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7990,
											"end": 8016,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7990,
											"end": 8016,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7990,
											"end": 8016,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7990,
											"end": 8024,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7990,
											"end": 8024,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7990,
											"end": 8024,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7987,
											"end": 8104,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7987,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 7987,
											"end": 8104,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8073,
											"end": 8083,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8058,
											"end": 8072,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8058,
											"end": 8092,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8046,
											"end": 8093,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8046,
											"end": 8093,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BE970F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8046,
											"end": 8093,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8046,
											"end": 8093,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8058,
											"end": 8092,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 8058,
											"end": 8092,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8058,
											"end": 8092,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8058,
											"end": 8092,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8046,
											"end": 8093,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8046,
											"end": 8093,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8046,
											"end": 8093,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8046,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7987,
											"end": 8104,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 7987,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8142,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8117,
											"end": 8143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8117,
											"end": 8143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8117,
											"end": 8143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8117,
											"end": 8143,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8117,
											"end": 8131,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 8117,
											"end": 8143,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8117,
											"end": 8143,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8117,
											"end": 8143,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8117,
											"end": 8143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8117,
											"end": 8143,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8117,
											"end": 8158,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8117,
											"end": 8158,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8117,
											"end": 8158,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8117,
											"end": 8169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8114,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 8114,
											"end": 8227,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8191,
											"end": 8216,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8191,
											"end": 8216,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "636DC6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8191,
											"end": 8216,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8191,
											"end": 8216,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8191,
											"end": 8216,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8191,
											"end": 8216,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8191,
											"end": 8216,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8191,
											"end": 8216,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8114,
											"end": 8227,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 8114,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8252,
											"end": 8262,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8263,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8237,
											"end": 8263,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8263,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8251,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 8237,
											"end": 8263,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8237,
											"end": 8263,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8263,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8237,
											"end": 8263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8263,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8278,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8237,
											"end": 8278,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8289,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8289,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8282,
											"end": 8289,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8282,
											"end": 8289,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8263,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 8237,
											"end": 8289,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8282,
											"end": 8289,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8282,
											"end": 8289,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 8237,
											"end": 8289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8289,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 8237,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8289,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8289,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8289,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8314,
											"end": 8324,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8299,
											"end": 8325,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8325,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8325,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8313,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 8299,
											"end": 8325,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8299,
											"end": 8325,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8325,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8299,
											"end": 8325,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8325,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8343,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 8299,
											"end": 8343,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8354,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8354,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8347,
											"end": 8354,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8347,
											"end": 8354,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8325,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 8299,
											"end": 8354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8347,
											"end": 8354,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8347,
											"end": 8354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 8299,
											"end": 8354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8354,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 8299,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8354,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8354,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8354,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8396,
											"end": 8403,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8392,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8373,
											"end": 8392,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8373,
											"end": 8403,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8403,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8403,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 8373,
											"end": 8403,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 8373,
											"end": 8403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8403,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 8373,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8403,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8403,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8403,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8403,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8403,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8403,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8434,
											"end": 8441,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8413,
											"end": 8430,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 8413,
											"end": 8430,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 8413,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8413,
											"end": 8441,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8457,
											"end": 8503,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8457,
											"end": 8503,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8457,
											"end": 8503,
											"name": "PUSH",
											"source": 10,
											"value": "14EE34C24635186D212F515353DADAE9C226529EDEF2D1FCF5504CB33B5C25AB"
										},
										{
											"begin": 8457,
											"end": 8503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8457,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 8457,
											"end": 8503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8469,
											"end": 8479,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8469,
											"end": 8479,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8488,
											"end": 8492,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 8488,
											"end": 8492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8495,
											"end": 8502,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8495,
											"end": 8502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8457,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 8457,
											"end": 8503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8612,
											"end": 8613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8601,
											"end": 8608,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8601,
											"end": 8613,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8598,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 8598,
											"end": 8666,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FF4783"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8635,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8598,
											"end": 8666,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 8598,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8692,
											"end": 8705,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 8692,
											"end": 8705,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8679,
											"end": 8689,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8679,
											"end": 8705,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8676,
											"end": 8764,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8676,
											"end": 8764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 8676,
											"end": 8764,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8727,
											"end": 8753,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8727,
											"end": 8753,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "222A50F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8727,
											"end": 8753,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8727,
											"end": 8753,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8727,
											"end": 8753,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8727,
											"end": 8753,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8727,
											"end": 8753,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8727,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8676,
											"end": 8764,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 8676,
											"end": 8764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8834,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8809,
											"end": 8834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8834,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 8809,
											"end": 8834,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8809,
											"end": 8834,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8834,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8809,
											"end": 8834,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8834,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8834,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8786,
											"end": 8835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 8786,
											"end": 8835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8800,
											"end": 8807,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8800,
											"end": 8807,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8786,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 8786,
											"end": 8835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8786,
											"end": 8835,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 8786,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8854,
											"end": 8866,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8869,
											"end": 8878,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8878,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8869,
											"end": 8878,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8878,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8878,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8878,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8892,
											"end": 8902,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8892,
											"end": 8902,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8911,
											"end": 8915,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 8911,
											"end": 8915,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8917,
											"end": 8924,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8917,
											"end": 8924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 8869,
											"end": 8926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 8869,
											"end": 8926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 8869,
											"end": 8926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8854,
											"end": 8926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8854,
											"end": 8926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8947,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8936,
											"end": 9003,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 8936,
											"end": 9003,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8969,
											"end": 8992,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8969,
											"end": 8992,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D85D3CEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8969,
											"end": 8992,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8969,
											"end": 8992,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8969,
											"end": 8992,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8969,
											"end": 8992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8969,
											"end": 8992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8969,
											"end": 8992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8936,
											"end": 9003,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 8936,
											"end": 9003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9018,
											"end": 9046,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9018,
											"end": 9046,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9018,
											"end": 9046,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11590,
											"end": 11615,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11590,
											"end": 11615,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11590,
											"end": 11615,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11646,
											"end": 11648,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11631,
											"end": 11649,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11631,
											"end": 11649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11624,
											"end": 11658,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11624,
											"end": 11658,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11624,
											"end": 11658,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9018,
											"end": 9046,
											"name": "PUSH",
											"source": 10,
											"value": "A89B69C5958EC1CCF0DF0DE746A8708F5B6A6B429430129F16F46F44B319C900"
										},
										{
											"begin": 9018,
											"end": 9046,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11563,
											"end": 11581,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9018,
											"end": 9046,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9018,
											"end": 9046,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9018,
											"end": 9046,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9018,
											"end": 9046,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9018,
											"end": 9046,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9018,
											"end": 9046,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9018,
											"end": 9046,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 8587,
											"end": 9062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 9062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 9062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 16880,
											"end": 17205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17583,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17609,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17654,
											"end": 17664,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17001,
											"end": 17002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16982,
											"end": 16997,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16982,
											"end": 17002,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16979,
											"end": 17067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 16979,
											"end": 17067,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17024,
											"end": 17056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17024,
											"end": 17056,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDBC6335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17024,
											"end": 17056,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17024,
											"end": 17056,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17024,
											"end": 17056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17024,
											"end": 17056,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17024,
											"end": 17056,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17024,
											"end": 17056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16979,
											"end": 17067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 16979,
											"end": 17067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17085,
											"end": 17109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 17085,
											"end": 17127,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17085,
											"end": 17127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17085,
											"end": 17127,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 17143,
											"end": 17198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17143,
											"end": 17198,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17143,
											"end": 17198,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 17161,
											"end": 17171,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D85598D6EA860439B48FC265883A1CAC638FF64DCA5391FE12B46F27076E26FE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17143,
											"end": 17198,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17143,
											"end": 17198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 10777,
											"end": 11051,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 16540,
											"end": 16869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17583,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17609,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17654,
											"end": 17664,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16663,
											"end": 16664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16644,
											"end": 16659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16644,
											"end": 16664,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16641,
											"end": 16729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 16641,
											"end": 16729,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16686,
											"end": 16718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16686,
											"end": 16718,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDBC6335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16686,
											"end": 16718,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16686,
											"end": 16718,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16686,
											"end": 16718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16686,
											"end": 16718,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16686,
											"end": 16718,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16686,
											"end": 16718,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16641,
											"end": 16729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 16641,
											"end": 16729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16747,
											"end": 16772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 16747,
											"end": 16790,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16747,
											"end": 16790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16747,
											"end": 16790,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 16806,
											"end": 16862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16806,
											"end": 16862,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16806,
											"end": 16862,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16824,
											"end": 16834,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D85598D6EA860439B48FC265883A1CAC638FF64DCA5391FE12B46F27076E26FE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16806,
											"end": 16862,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16806,
											"end": 16862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 10777,
											"end": 11051,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 13847,
											"end": 14165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17583,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17609,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17654,
											"end": 17664,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13943,
											"end": 13973,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13943,
											"end": 13973,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13940,
											"end": 14036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 13940,
											"end": 14036,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13995,
											"end": 14025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13995,
											"end": 14025,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4CFA94D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13995,
											"end": 14025,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13995,
											"end": 14025,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 375,
											"end": 407,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13995,
											"end": 14025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13995,
											"end": 14025,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13995,
											"end": 14025,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13995,
											"end": 14025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13940,
											"end": 14036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 13940,
											"end": 14036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14054,
											"end": 14072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 14054,
											"end": 14091,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14054,
											"end": 14091,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14054,
											"end": 14091,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14054,
											"end": 14091,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14054,
											"end": 14091,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14054,
											"end": 14091,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14054,
											"end": 14091,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14054,
											"end": 14091,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 14054,
											"end": 14091,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14054,
											"end": 14091,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14054,
											"end": 14091,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 14107,
											"end": 14158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14107,
											"end": 14158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14107,
											"end": 14158,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14127,
											"end": 14137,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 11843,
											"end": 11894,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11843,
											"end": 11894,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11925,
											"end": 11927,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11910,
											"end": 11928,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11910,
											"end": 11928,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11903,
											"end": 11963,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11903,
											"end": 11963,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11903,
											"end": 11963,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11903,
											"end": 11963,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14107,
											"end": 14158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "75F91F3CECB8C46F20150F60F77A6E1F0DE00776627692DB82EF1960AF84C33A"
										},
										{
											"begin": 14107,
											"end": 14158,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11816,
											"end": 11834,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14107,
											"end": 14158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 11669,
											"end": 11969,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 15286,
											"end": 15840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17583,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17609,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17654,
											"end": 17664,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15380,
											"end": 15406,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15380,
											"end": 15406,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15377,
											"end": 15465,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 15377,
											"end": 15465,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15428,
											"end": 15454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15428,
											"end": 15454,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4CFA94D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15428,
											"end": 15454,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15428,
											"end": 15454,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 375,
											"end": 407,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15428,
											"end": 15454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15428,
											"end": 15454,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15428,
											"end": 15454,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15428,
											"end": 15454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15377,
											"end": 15465,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 15377,
											"end": 15465,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15487,
											"end": 15491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 15478,
											"end": 15491,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15478,
											"end": 15491,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15478,
											"end": 15491,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15478,
											"end": 15491,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 15478,
											"end": 15491,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15478,
											"end": 15491,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15478,
											"end": 15491,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15478,
											"end": 15509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 15478,
											"end": 15509,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15495,
											"end": 15509,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15495,
											"end": 15509,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15495,
											"end": 15509,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15478,
											"end": 15509,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 15478,
											"end": 15509,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15475,
											"end": 15559,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15475,
											"end": 15559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 15475,
											"end": 15559,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15531,
											"end": 15548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15531,
											"end": 15548,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81ED1AE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15531,
											"end": 15548,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15531,
											"end": 15548,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15531,
											"end": 15548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15531,
											"end": 15548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15531,
											"end": 15548,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15531,
											"end": 15548,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15475,
											"end": 15559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 15475,
											"end": 15559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15572,
											"end": 15585,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15572,
											"end": 15585,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15572,
											"end": 15585,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15581,
											"end": 15585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 15572,
											"end": 15585,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15569,
											"end": 15736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 15569,
											"end": 15736,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15601,
											"end": 15629,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15601,
											"end": 15629,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15601,
											"end": 15629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15601,
											"end": 15629,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15601,
											"end": 15629,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15601,
											"end": 15629,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15601,
											"end": 15615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 15601,
											"end": 15629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15601,
											"end": 15629,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15601,
											"end": 15629,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15601,
											"end": 15629,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15601,
											"end": 15629,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15601,
											"end": 15644,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15601,
											"end": 15644,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15601,
											"end": 15644,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15640,
											"end": 15644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 15601,
											"end": 15644,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 15601,
											"end": 15644,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15601,
											"end": 15644,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15569,
											"end": 15736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 15569,
											"end": 15736,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15569,
											"end": 15736,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 15569,
											"end": 15736,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15681,
											"end": 15709,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15681,
											"end": 15709,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15720,
											"end": 15725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15681,
											"end": 15709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15681,
											"end": 15709,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15681,
											"end": 15709,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15681,
											"end": 15695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 15681,
											"end": 15709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15681,
											"end": 15709,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15681,
											"end": 15709,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15681,
											"end": 15709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15681,
											"end": 15709,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15681,
											"end": 15725,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15681,
											"end": 15725,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15681,
											"end": 15725,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15681,
											"end": 15725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15681,
											"end": 15725,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15569,
											"end": 15736,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 15569,
											"end": 15736,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15796,
											"end": 15824,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15796,
											"end": 15824,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15796,
											"end": 15824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15796,
											"end": 15824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15796,
											"end": 15824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15796,
											"end": 15824,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15796,
											"end": 15810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 15796,
											"end": 15824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15796,
											"end": 15824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15796,
											"end": 15824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15796,
											"end": 15824,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15796,
											"end": 15824,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15796,
											"end": 15824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15796,
											"end": 15824,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15796,
											"end": 15824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15796,
											"end": 15824,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15796,
											"end": 15832,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 15759,
											"end": 15833,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15759,
											"end": 15833,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15771,
											"end": 15781,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 12170,
											"end": 12221,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12170,
											"end": 12221,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12230,
											"end": 12290,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 12230,
											"end": 12290,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12230,
											"end": 12290,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 12230,
											"end": 12290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15796,
											"end": 15832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 15796,
											"end": 15832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15796,
											"end": 15832,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15796,
											"end": 15832,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12333,
											"end": 12347,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12326,
											"end": 12348,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12306,
											"end": 12324,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12306,
											"end": 12324,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12306,
											"end": 12324,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12299,
											"end": 12349,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15759,
											"end": 15833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7A1655BC3160D3413BF1D5235E55BE12E01B7E8BC2436A9BFF09C3B4FA2421F1"
										},
										{
											"begin": 15759,
											"end": 15833,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12158,
											"end": 12160,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 12143,
											"end": 12161,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15759,
											"end": 15833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 11974,
											"end": 12355,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9456,
											"end": 11079,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 9456,
											"end": 11079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9518,
											"end": 9536,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 9518,
											"end": 9536,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9518,
											"end": 9536,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9504,
											"end": 9514,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9504,
											"end": 9536,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9504,
											"end": 9536,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9504,
											"end": 9536,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9504,
											"end": 9536,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9504,
											"end": 9562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 9504,
											"end": 9562,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9554,
											"end": 9562,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 9554,
											"end": 9562,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9554,
											"end": 9562,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9540,
											"end": 9550,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9540,
											"end": 9562,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9540,
											"end": 9562,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9504,
											"end": 9562,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 9504,
											"end": 9562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9504,
											"end": 9588,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9504,
											"end": 9588,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9504,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 9504,
											"end": 9588,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9580,
											"end": 9588,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 9580,
											"end": 9588,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9580,
											"end": 9588,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9566,
											"end": 9576,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9566,
											"end": 9588,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9566,
											"end": 9588,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9504,
											"end": 9588,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 9504,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9501,
											"end": 9643,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9501,
											"end": 9643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 9501,
											"end": 9643,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9610,
											"end": 9632,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9610,
											"end": 9632,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9610,
											"end": 9632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9610,
											"end": 9632,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9621,
											"end": 9631,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9610,
											"end": 9632,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9610,
											"end": 9632,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9610,
											"end": 9632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9610,
											"end": 9632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9501,
											"end": 9643,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 9501,
											"end": 9643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9675,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 9656,
											"end": 9675,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9680,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9680,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 9656,
											"end": 9707,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9684,
											"end": 9702,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9684,
											"end": 9702,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9684,
											"end": 9707,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9707,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 9656,
											"end": 9707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9790,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 9653,
											"end": 9790,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9760,
											"end": 9778,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9760,
											"end": 9778,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9729,
											"end": 9779,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9729,
											"end": 9779,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FD92D8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9729,
											"end": 9779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9729,
											"end": 9779,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9729,
											"end": 9779,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9729,
											"end": 9779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9729,
											"end": 9779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11590,
											"end": 11615,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11590,
											"end": 11615,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11590,
											"end": 11615,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11590,
											"end": 11615,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11631,
											"end": 11649,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11631,
											"end": 11649,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11631,
											"end": 11649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11624,
											"end": 11658,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11563,
											"end": 11581,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 11563,
											"end": 11581,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9729,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 11416,
											"end": 11664,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9653,
											"end": 9790,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 9653,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9810,
											"end": 9834,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9835,
											"end": 9868,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9870,
											"end": 9896,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9901,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 9901,
											"end": 9919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 9901,
											"end": 9921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9921,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 9901,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9808,
											"end": 9921,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9808,
											"end": 9921,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9808,
											"end": 9921,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9808,
											"end": 9921,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9948,
											"end": 9964,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9948,
											"end": 9964,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9975,
											"end": 10987,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 9975,
											"end": 10987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9998,
											"end": 10007,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 9998,
											"end": 10007,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9994,
											"end": 9995,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9994,
											"end": 10007,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9975,
											"end": 10987,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9975,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 9975,
											"end": 10987,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10032,
											"end": 10061,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10047,
											"end": 10060,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10047,
											"end": 10060,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10047,
											"end": 10060,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10047,
											"end": 10057,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 10047,
											"end": 10060,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10047,
											"end": 10060,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10047,
											"end": 10060,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10047,
											"end": 10060,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10047,
											"end": 10060,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10047,
											"end": 10060,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10047,
											"end": 10060,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10047,
											"end": 10060,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10047,
											"end": 10060,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10047,
											"end": 10060,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10032,
											"end": 10061,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10032,
											"end": 10061,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10032,
											"end": 10046,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 10032,
											"end": 10061,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10032,
											"end": 10061,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10032,
											"end": 10061,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10032,
											"end": 10061,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10032,
											"end": 10061,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10032,
											"end": 10069,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10032,
											"end": 10069,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 10032,
											"end": 10069,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10028,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 10028,
											"end": 10964,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10182,
											"end": 10199,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 10182,
											"end": 10199,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10135,
											"end": 10148,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10135,
											"end": 10148,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10135,
											"end": 10148,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10135,
											"end": 10145,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 10135,
											"end": 10148,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10135,
											"end": 10148,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10135,
											"end": 10148,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10135,
											"end": 10148,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10135,
											"end": 10148,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10135,
											"end": 10148,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10135,
											"end": 10148,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10135,
											"end": 10148,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10135,
											"end": 10148,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10135,
											"end": 10148,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10149,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10149,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10134,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 10120,
											"end": 10149,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10149,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10149,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10149,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10149,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10167,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 10120,
											"end": 10167,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10167,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10116,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10182,
											"end": 10199,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 10120,
											"end": 10177,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10171,
											"end": 10176,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 10120,
											"end": 10177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 10120,
											"end": 10177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10177,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 10120,
											"end": 10177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10119,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 10119,
											"end": 10200,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10119,
											"end": 10200,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10119,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 10119,
											"end": 10200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10119,
											"end": 10200,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 10119,
											"end": 10200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10200,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10089,
											"end": 10200,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10235,
											"end": 10257,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10260,
											"end": 10327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 10280,
											"end": 10305,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10307,
											"end": 10326,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10260,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 10260,
											"end": 10327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10260,
											"end": 10327,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 10260,
											"end": 10327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10235,
											"end": 10327,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10235,
											"end": 10327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10368,
											"end": 10382,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10364,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10345,
											"end": 10364,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10345,
											"end": 10382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10382,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 10345,
											"end": 10382,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10382,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 10345,
											"end": 10382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10382,
											"name": "tag",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 10345,
											"end": 10382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10382,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10382,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10382,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10437,
											"end": 10451,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 10425,
											"end": 10451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10491,
											"end": 10509,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10469,
											"end": 10487,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10469,
											"end": 10487,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10469,
											"end": 10509,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10469,
											"end": 10509,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10469,
											"end": 10509,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10469,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 10469,
											"end": 10509,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10469,
											"end": 10509,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10469,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 10469,
											"end": 10509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10469,
											"end": 10509,
											"name": "tag",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 10469,
											"end": 10509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10469,
											"end": 10509,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10469,
											"end": 10509,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10469,
											"end": 10509,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10528,
											"end": 10557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10543,
											"end": 10556,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10543,
											"end": 10556,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10543,
											"end": 10556,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10543,
											"end": 10553,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 10543,
											"end": 10556,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10543,
											"end": 10556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10543,
											"end": 10556,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10543,
											"end": 10556,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10543,
											"end": 10556,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10543,
											"end": 10556,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10543,
											"end": 10556,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10543,
											"end": 10556,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10543,
											"end": 10556,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10543,
											"end": 10556,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10557,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10557,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10542,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 10528,
											"end": 10557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10557,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10557,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10577,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 10528,
											"end": 10577,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10599,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10599,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 10528,
											"end": 10599,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 10528,
											"end": 10599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10599,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 10528,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10599,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10599,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10528,
											"end": 10599,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10617,
											"end": 10646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10632,
											"end": 10645,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10645,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10642,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 10632,
											"end": 10645,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10632,
											"end": 10645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10645,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10645,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10632,
											"end": 10645,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10645,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10645,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10645,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10632,
											"end": 10645,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10646,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10646,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10631,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 10617,
											"end": 10646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10646,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10646,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10646,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10668,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10617,
											"end": 10668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10686,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10686,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10686,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10686,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 10617,
											"end": 10686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10686,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 10617,
											"end": 10686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10686,
											"name": "tag",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 10617,
											"end": 10686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10686,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10686,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10721,
											"end": 10744,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10721,
											"end": 10744,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10747,
											"end": 10782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 10764,
											"end": 10782,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10747,
											"end": 10761,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10747,
											"end": 10782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 10747,
											"end": 10782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10747,
											"end": 10782,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 10747,
											"end": 10782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10815,
											"end": 10828,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10815,
											"end": 10828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10815,
											"end": 10828,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10815,
											"end": 10825,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 10815,
											"end": 10828,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10815,
											"end": 10828,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10815,
											"end": 10828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10815,
											"end": 10828,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10815,
											"end": 10828,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10815,
											"end": 10828,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10815,
											"end": 10828,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10815,
											"end": 10828,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10815,
											"end": 10828,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10815,
											"end": 10828,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10829,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10829,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10814,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 10800,
											"end": 10829,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10829,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10829,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10829,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10829,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10815,
											"end": 10828,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10800,
											"end": 10844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10863,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10721,
											"end": 10782,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10721,
											"end": 10782,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10721,
											"end": 10782,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10721,
											"end": 10782,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10844,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10829,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 10800,
											"end": 10863,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10721,
											"end": 10782,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10721,
											"end": 10782,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 10800,
											"end": 10863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10863,
											"name": "tag",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 10800,
											"end": 10863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10863,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10863,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10800,
											"end": 10863,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10890,
											"end": 10918,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10890,
											"end": 10918,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10890,
											"end": 10918,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10890,
											"end": 10918,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10882,
											"end": 10949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 10882,
											"end": 10949,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10882,
											"end": 10949,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10882,
											"end": 10949,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10882,
											"end": 10949,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10882,
											"end": 10949,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12957,
											"end": 12959,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10882,
											"end": 10949,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10882,
											"end": 10949,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10882,
											"end": 10949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12939,
											"end": 12960,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12996,
											"end": 12998,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 12976,
											"end": 12994,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 12976,
											"end": 12994,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12976,
											"end": 12994,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12969,
											"end": 12999,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13035,
											"end": 13063,
											"name": "PUSH",
											"source": 11,
											"value": "416D6F756E742069732067726561746572207468656E20353025000000000000"
										},
										{
											"begin": 13015,
											"end": 13033,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 13015,
											"end": 13033,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13015,
											"end": 13033,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13008,
											"end": 13064,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13081,
											"end": 13099,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 13081,
											"end": 13099,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10882,
											"end": 10949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 12755,
											"end": 13105,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10882,
											"end": 10949,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 10882,
											"end": 10949,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10070,
											"end": 10964,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10070,
											"end": 10964,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10070,
											"end": 10964,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10028,
											"end": 10964,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 10028,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10009,
											"end": 10012,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10009,
											"end": 10012,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9975,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 9975,
											"end": 10987,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9975,
											"end": 10987,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 9975,
											"end": 10987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11031,
											"end": 11050,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 11031,
											"end": 11050,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11052,
											"end": 11070,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 11052,
											"end": 11070,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11071,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11002,
											"end": 11071,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11071,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11019,
											"end": 11029,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9626,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9575,
											"end": 9626,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9657,
											"end": 9659,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9642,
											"end": 9660,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9642,
											"end": 9660,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9678,
											"end": 9712,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11002,
											"end": 11071,
											"name": "PUSH",
											"source": 10,
											"value": "EE826440768329B0C72F81331212EE31FCDAC1EA79A248D24821E40C34E58020"
										},
										{
											"begin": 11002,
											"end": 11071,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9563,
											"end": 9565,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9548,
											"end": 9566,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11002,
											"end": 11071,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11002,
											"end": 11071,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11071,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11071,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11071,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11071,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11002,
											"end": 11071,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 9490,
											"end": 11079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9490,
											"end": 11079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9490,
											"end": 11079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9490,
											"end": 11079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 11079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 15852,
											"end": 16194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17587,
											"end": 17595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17583,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17613,
											"end": 17621,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17609,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17621,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 17573,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17654,
											"end": 17664,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 17570,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15988,
											"end": 15989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15969,
											"end": 15984,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15969,
											"end": 15989,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15966,
											"end": 16054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 15966,
											"end": 16054,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16011,
											"end": 16043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16011,
											"end": 16043,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDBC6335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16011,
											"end": 16043,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16011,
											"end": 16043,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16011,
											"end": 16043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16011,
											"end": 16043,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16011,
											"end": 16043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16011,
											"end": 16043,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15966,
											"end": 16054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 15966,
											"end": 16054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16072,
											"end": 16097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16072,
											"end": 16097,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16072,
											"end": 16097,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16072,
											"end": 16097,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16072,
											"end": 16085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 16072,
											"end": 16097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16072,
											"end": 16097,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16072,
											"end": 16097,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16072,
											"end": 16097,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16072,
											"end": 16097,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16072,
											"end": 16097,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16072,
											"end": 16097,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16072,
											"end": 16097,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16072,
											"end": 16097,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 16072,
											"end": 16115,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16072,
											"end": 16115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16072,
											"end": 16115,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 16131,
											"end": 16187,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16131,
											"end": 16187,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16149,
											"end": 16159,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D85598D6EA860439B48FC265883A1CAC638FF64DCA5391FE12B46F27076E26FE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16131,
											"end": 16187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16131,
											"end": 16187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 10777,
											"end": 11051,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "573"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "574"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 2,
											"value": "573"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3035,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 2968,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "574"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "487"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "582"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "487"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "583"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "tag",
											"source": 3,
											"value": "583"
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "tag",
											"source": 3,
											"value": "582"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17855,
											"end": 17967,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 17855,
											"end": 17967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 3,
											"value": "52D1902D"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "590"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "591"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "592"
										},
										{
											"begin": 6151,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 3,
											"value": "591"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 3,
											"value": "590"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "593"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 375,
											"end": 407,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "tag",
											"source": 3,
											"value": "593"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "599"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "tag",
											"source": 3,
											"value": "599"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "601"
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "602"
										},
										{
											"begin": 6374,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "tag",
											"source": 3,
											"value": "601"
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6204,
											"end": 6439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6052,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5111,
											"end": 5117,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "487"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9448,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 9069,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9158,
											"end": 9178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9181,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 9189,
											"end": 9202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9181,
											"end": 9186,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 9181,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 9181,
											"end": 9202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9181,
											"end": 9202,
											"name": "tag",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 9181,
											"end": 9202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9158,
											"end": 9202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9158,
											"end": 9202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9212,
											"end": 9232,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9235,
											"end": 9277,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 9255,
											"end": 9262,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9264,
											"end": 9276,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9235,
											"end": 9254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 9235,
											"end": 9277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9235,
											"end": 9277,
											"name": "tag",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 9235,
											"end": 9277,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9212,
											"end": 9277,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9212,
											"end": 9277,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9287,
											"end": 9306,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9309,
											"end": 9352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 9329,
											"end": 9336,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9338,
											"end": 9351,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9309,
											"end": 9328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 9309,
											"end": 9352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9309,
											"end": 9352,
											"name": "tag",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 9309,
											"end": 9352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9287,
											"end": 9352,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9287,
											"end": 9352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9386,
											"end": 9398,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9363,
											"end": 9382,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 9363,
											"end": 9382,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9363,
											"end": 9398,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9363,
											"end": 9398,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9363,
											"end": 9398,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9363,
											"end": 9398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 9363,
											"end": 9398,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9363,
											"end": 9398,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9363,
											"end": 9398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 9363,
											"end": 9398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9363,
											"end": 9398,
											"name": "tag",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 9363,
											"end": 9398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9363,
											"end": 9398,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9363,
											"end": 9398,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9363,
											"end": 9398,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9363,
											"end": 9398,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9363,
											"end": 9398,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9363,
											"end": 9398,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9363,
											"end": 9398,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9430,
											"end": 9441,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9408,
											"end": 9426,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9408,
											"end": 9426,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9408,
											"end": 9441,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9408,
											"end": 9441,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9408,
											"end": 9441,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9408,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 9408,
											"end": 9441,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9408,
											"end": 9441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9408,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 9408,
											"end": 9441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9408,
											"end": 9441,
											"name": "tag",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 9408,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9408,
											"end": 9441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9408,
											"end": 9441,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9408,
											"end": 9441,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9069,
											"end": 9448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11091,
											"end": 12276,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 11091,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11137,
											"end": 11144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11146,
											"end": 11153,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11154,
											"end": 11161,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11182,
											"end": 11206,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11255,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 11229,
											"end": 11248,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 11229,
											"end": 11248,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11250,
											"end": 11254,
											"name": "PUSH",
											"source": 10,
											"value": "1388"
										},
										{
											"begin": 11209,
											"end": 11228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 11209,
											"end": 11255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11255,
											"name": "tag",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 11209,
											"end": 11255,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11182,
											"end": 11255,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11182,
											"end": 11255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11266,
											"end": 11299,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11302,
											"end": 11366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 11322,
											"end": 11338,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11340,
											"end": 11365,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 11340,
											"end": 11365,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11302,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 11302,
											"end": 11366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11302,
											"end": 11366,
											"name": "tag",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 11302,
											"end": 11366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11266,
											"end": 11366,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11266,
											"end": 11366,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11376,
											"end": 11412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11415,
											"end": 11478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 11435,
											"end": 11451,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11453,
											"end": 11477,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 11453,
											"end": 11477,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11415,
											"end": 11434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 11415,
											"end": 11478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11415,
											"end": 11478,
											"name": "tag",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 11415,
											"end": 11478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11376,
											"end": 11478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11376,
											"end": 11478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11488,
											"end": 11524,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11527,
											"end": 11589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 11547,
											"end": 11563,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11565,
											"end": 11588,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 11565,
											"end": 11588,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11527,
											"end": 11546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 11527,
											"end": 11589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11527,
											"end": 11589,
											"name": "tag",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 11527,
											"end": 11589,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11488,
											"end": 11589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11488,
											"end": 11589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11599,
											"end": 11629,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11632,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 11652,
											"end": 11670,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 11652,
											"end": 11670,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11672,
											"end": 11697,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11672,
											"end": 11697,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11632,
											"end": 11651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 11632,
											"end": 11698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11632,
											"end": 11698,
											"name": "tag",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 11632,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11599,
											"end": 11698,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11599,
											"end": 11698,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11725,
											"end": 11726,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11712,
											"end": 11721,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 11712,
											"end": 11721,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11712,
											"end": 11726,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11709,
											"end": 11779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 11709,
											"end": 11779,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11758,
											"end": 11767,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 11758,
											"end": 11767,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11768,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11748,
											"end": 11768,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7CA8D0DB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11748,
											"end": 11768,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11768,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11768,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11748,
											"end": 11768,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 11748,
											"end": 11768,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11709,
											"end": 11779,
											"name": "tag",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 11709,
											"end": 11779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11797,
											"end": 11823,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11849,
											"end": 11858,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 11849,
											"end": 11858,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11826,
											"end": 11848,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11826,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 11826,
											"end": 11858,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11826,
											"end": 11858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11826,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 11826,
											"end": 11858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11826,
											"end": 11858,
											"name": "tag",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 11826,
											"end": 11858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11797,
											"end": 11858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11901,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "630"
										},
										{
											"begin": 11932,
											"end": 11960,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11901,
											"end": 11929,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11901,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 11901,
											"end": 11960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11901,
											"end": 11960,
											"name": "tag",
											"source": 10,
											"value": "630"
										},
										{
											"begin": 11901,
											"end": 11960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 11896,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 11877,
											"end": 11896,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11877,
											"end": 11961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 11961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 11961,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 11961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 11877,
											"end": 11961,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 11961,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 11961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 11877,
											"end": 11961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 11961,
											"name": "tag",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 11877,
											"end": 11961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 11961,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 11961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 11961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 11961,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 11961,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 11961,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 11961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11993,
											"end": 12021,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11971,
											"end": 12021,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11971,
											"end": 12021,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11971,
											"end": 12021,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11971,
											"end": 12021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "632"
										},
										{
											"begin": 11971,
											"end": 12021,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11971,
											"end": 12021,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11971,
											"end": 12021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 11971,
											"end": 12021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11971,
											"end": 12021,
											"name": "tag",
											"source": 10,
											"value": "632"
										},
										{
											"begin": 11971,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11971,
											"end": 12021,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11971,
											"end": 12021,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11971,
											"end": 12021,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12032,
											"end": 12044,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12047,
											"end": 12056,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12056,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12066,
											"end": 12081,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 12066,
											"end": 12081,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12066,
											"end": 12081,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12066,
											"end": 12081,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12066,
											"end": 12081,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12047,
											"end": 12056,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12056,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12065,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 12047,
											"end": 12065,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "tag",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 12047,
											"end": 12112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "tag",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 12047,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12032,
											"end": 12112,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12032,
											"end": 12112,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12126,
											"end": 12133,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12122,
											"end": 12189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 12122,
											"end": 12189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12155,
											"end": 12178,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12155,
											"end": 12178,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D85D3CEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12155,
											"end": 12178,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12155,
											"end": 12178,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12155,
											"end": 12178,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12155,
											"end": 12178,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12155,
											"end": 12178,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12155,
											"end": 12178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12122,
											"end": 12189,
											"name": "tag",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 12122,
											"end": 12189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12207,
											"end": 12223,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 12207,
											"end": 12223,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 12224,
											"end": 12249,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12224,
											"end": 12249,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12250,
											"end": 12268,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12250,
											"end": 12268,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11091,
											"end": 12276,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11091,
											"end": 12276,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11091,
											"end": 12276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14171,
											"end": 14628,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 14171,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14273,
											"end": 14280,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14325,
											"end": 14326,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14304,
											"end": 14321,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14304,
											"end": 14326,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14301,
											"end": 14399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 14301,
											"end": 14399,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14348,
											"end": 14388,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14348,
											"end": 14388,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9B7220AF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14348,
											"end": 14388,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14348,
											"end": 14388,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14348,
											"end": 14388,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14348,
											"end": 14388,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14348,
											"end": 14388,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14348,
											"end": 14388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14301,
											"end": 14399,
											"name": "tag",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 14301,
											"end": 14399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14431,
											"end": 14432,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14411,
											"end": 14427,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14411,
											"end": 14432,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14408,
											"end": 14499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 14408,
											"end": 14499,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14454,
											"end": 14488,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14454,
											"end": 14488,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B015AA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14454,
											"end": 14488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14454,
											"end": 14488,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14454,
											"end": 14488,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14454,
											"end": 14488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14454,
											"end": 14488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14454,
											"end": 14488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14408,
											"end": 14499,
											"name": "tag",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 14408,
											"end": 14499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14516,
											"end": 14534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14579,
											"end": 14584,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 14537,
											"end": 14575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 14558,
											"end": 14574,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14537,
											"end": 14554,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14537,
											"end": 14575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 14537,
											"end": 14575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14537,
											"end": 14575,
											"name": "tag",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 14537,
											"end": 14575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14537,
											"end": 14585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 14537,
											"end": 14585,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14537,
											"end": 14585,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14537,
											"end": 14585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 14537,
											"end": 14585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14537,
											"end": 14585,
											"name": "tag",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 14537,
											"end": 14585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14516,
											"end": 14585,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14171,
											"end": 14628,
											"name": "tag",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 14171,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14171,
											"end": 14628,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14171,
											"end": 14628,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14171,
											"end": 14628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14171,
											"end": 14628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14171,
											"end": 14628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 2,
											"value": "574"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 2,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "566"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "574"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "tag",
											"source": 6,
											"value": "602"
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "660"
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "661"
										},
										{
											"begin": 2870,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "tag",
											"source": 6,
											"value": "660"
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 6,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "662"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "601"
										},
										{
											"begin": 3024,
											"end": 3041,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "664"
										},
										{
											"begin": 2995,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 6,
											"value": "662"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "667"
										},
										{
											"begin": 3079,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "tag",
											"source": 6,
											"value": "661"
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2297,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "673"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 375,
											"end": 407,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 6,
											"value": "673"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "tag",
											"source": 8,
											"value": "664"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "677"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "678"
										},
										{
											"begin": 4255,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 8,
											"value": "677"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DELEGATECALL",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "681"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "680"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 8,
											"value": "681"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 8,
											"value": "680"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4341,
											"end": 4351,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4297,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "683"
										},
										{
											"begin": 4297,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "tag",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "tag",
											"source": 6,
											"value": "667"
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 8,
											"value": "683"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "687"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "688"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "689"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 8,
											"value": "688"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "690"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 8,
											"value": "687"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "691"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 8,
											"value": "691"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "692"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 375,
											"end": 407,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 8,
											"value": "692"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 8,
											"value": "690"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 8,
											"value": "689"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "695"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 8,
											"value": "695"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 419,
											"end": 592,
											"name": "tag",
											"source": 11,
											"value": "697"
										},
										{
											"begin": 419,
											"end": 592,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 487,
											"end": 507,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 487,
											"end": 507,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 536,
											"end": 567,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 536,
											"end": 567,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 526,
											"end": 568,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 526,
											"end": 568,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 516,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "709"
										},
										{
											"begin": 516,
											"end": 586,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 582,
											"end": 583,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 580,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 572,
											"end": 584,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 516,
											"end": 586,
											"name": "tag",
											"source": 11,
											"value": "709"
										},
										{
											"begin": 516,
											"end": 586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 419,
											"end": 592,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 419,
											"end": 592,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 419,
											"end": 592,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 419,
											"end": 592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 692,
											"end": 698,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 706,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 708,
											"end": 714,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 722,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 724,
											"end": 730,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 780,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 765,
											"end": 774,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 756,
											"end": 763,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 752,
											"end": 775,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 748,
											"end": 781,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 745,
											"end": 798,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 745,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "711"
										},
										{
											"begin": 745,
											"end": 798,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 794,
											"end": 795,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 792,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 784,
											"end": 796,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 745,
											"end": 798,
											"name": "tag",
											"source": 11,
											"value": "711"
										},
										{
											"begin": 745,
											"end": 798,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 817,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "712"
										},
										{
											"begin": 836,
											"end": 845,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 817,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "697"
										},
										{
											"begin": 817,
											"end": 846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 817,
											"end": 846,
											"name": "tag",
											"source": 11,
											"value": "712"
										},
										{
											"begin": 817,
											"end": 846,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 807,
											"end": 846,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 807,
											"end": 846,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 865,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "713"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 888,
											"end": 897,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 884,
											"end": 902,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 865,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "697"
										},
										{
											"begin": 865,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 865,
											"end": 903,
											"name": "tag",
											"source": 11,
											"value": "713"
										},
										{
											"begin": 865,
											"end": 903,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 855,
											"end": 903,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 855,
											"end": 903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 922,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "714"
										},
										{
											"begin": 956,
											"end": 958,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 954,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 941,
											"end": 959,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 922,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "697"
										},
										{
											"begin": 922,
											"end": 960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 922,
											"end": 960,
											"name": "tag",
											"source": 11,
											"value": "714"
										},
										{
											"begin": 922,
											"end": 960,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 912,
											"end": 960,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 979,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "715"
										},
										{
											"begin": 1013,
											"end": 1015,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1002,
											"end": 1011,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 979,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "697"
										},
										{
											"begin": 979,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 979,
											"end": 1017,
											"name": "tag",
											"source": 11,
											"value": "715"
										},
										{
											"begin": 979,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 969,
											"end": 1017,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 969,
											"end": 1017,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "716"
										},
										{
											"begin": 1070,
											"end": 1073,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "697"
										},
										{
											"begin": 1036,
											"end": 1075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1075,
											"name": "tag",
											"source": 11,
											"value": "716"
										},
										{
											"begin": 1036,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1026,
											"end": 1075,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1026,
											"end": 1075,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 597,
											"end": 1081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1312,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 1086,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1145,
											"end": 1151,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1200,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1186,
											"end": 1195,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1177,
											"end": 1184,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1196,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1169,
											"end": 1201,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1218,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "718"
										},
										{
											"begin": 1166,
											"end": 1218,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1212,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1204,
											"end": 1216,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1218,
											"name": "tag",
											"source": 11,
											"value": "718"
										},
										{
											"begin": 1166,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1259,
											"end": 1282,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1282,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1312,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1086,
											"end": 1312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1652,
											"name": "tag",
											"source": 11,
											"value": "698"
										},
										{
											"begin": 1525,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1596,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 1581,
											"end": 1584,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1577,
											"end": 1597,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1598,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1621,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1614,
											"end": 1615,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1607,
											"end": 1622,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1641,
											"end": 1645,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1639,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1646,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1657,
											"end": 1932,
											"name": "tag",
											"source": 11,
											"value": "699"
										},
										{
											"begin": 1657,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1730,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1722,
											"end": 1731,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1793,
											"end": 1795,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1774,
											"end": 1787,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1774,
											"end": 1787,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 1797,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1758,
											"end": 1798,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1758,
											"end": 1798,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1828,
											"end": 1846,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1813,
											"end": 1847,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1813,
											"end": 1847,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1849,
											"end": 1871,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1849,
											"end": 1871,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1849,
											"end": 1871,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1872,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1807,
											"end": 1895,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1807,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "723"
										},
										{
											"begin": 1807,
											"end": 1895,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "723"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "698"
										},
										{
											"begin": 1875,
											"end": 1893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "tag",
											"source": 11,
											"value": "723"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1913,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1904,
											"end": 1926,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1657,
											"end": 1932,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1657,
											"end": 1932,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1657,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1937,
											"end": 2120,
											"name": "tag",
											"source": 11,
											"value": "700"
										},
										{
											"begin": 1937,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2001,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2048,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2022,
											"end": 2028,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2019,
											"end": 2049,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2016,
											"end": 2072,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2016,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "726"
										},
										{
											"begin": 2016,
											"end": 2072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "726"
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "698"
										},
										{
											"begin": 2052,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "tag",
											"source": 11,
											"value": "726"
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2097,
											"end": 2098,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2093,
											"end": 2107,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2109,
											"end": 2113,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2089,
											"end": 2114,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2114,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1937,
											"end": 2120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2125,
											"end": 2800,
											"name": "tag",
											"source": 11,
											"value": "701"
										},
										{
											"begin": 2125,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2179,
											"end": 2184,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2235,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2225,
											"end": 2229,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2217,
											"end": 2223,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2213,
											"end": 2230,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2236,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2199,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "728"
										},
										{
											"begin": 2199,
											"end": 2254,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2250,
											"end": 2251,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2247,
											"end": 2248,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2199,
											"end": 2254,
											"name": "tag",
											"source": 11,
											"value": "728"
										},
										{
											"begin": 2199,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2290,
											"end": 2296,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2277,
											"end": 2297,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2317,
											"end": 2381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "729"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "730"
										},
										{
											"begin": 2373,
											"end": 2379,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "700"
										},
										{
											"begin": 2333,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "tag",
											"source": 11,
											"value": "730"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2317,
											"end": 2381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "699"
										},
										{
											"begin": 2317,
											"end": 2381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2317,
											"end": 2381,
											"name": "tag",
											"source": 11,
											"value": "729"
										},
										{
											"begin": 2317,
											"end": 2381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2408,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2435,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2424,
											"end": 2427,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2461,
											"end": 2465,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2456,
											"end": 2459,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2452,
											"end": 2466,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2445,
											"end": 2466,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2445,
											"end": 2466,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2522,
											"end": 2526,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2512,
											"end": 2518,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2510,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2489,
											"end": 2527,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2527,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2527,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2550,
											"end": 2553,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2542,
											"end": 2548,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2539,
											"end": 2554,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2571,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "731"
										},
										{
											"begin": 2536,
											"end": 2571,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2568,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2565,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2569,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2571,
											"name": "tag",
											"source": 11,
											"value": "731"
										},
										{
											"begin": 2536,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2603,
											"end": 2607,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2601,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2608,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2769,
											"name": "tag",
											"source": 11,
											"value": "732"
										},
										{
											"begin": 2617,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2633,
											"end": 2639,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2628,
											"end": 2631,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2640,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2769,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "734"
										},
										{
											"begin": 2617,
											"end": 2769,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2701,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "735"
										},
										{
											"begin": 2720,
											"end": 2723,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2701,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "697"
										},
										{
											"begin": 2701,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2701,
											"end": 2724,
											"name": "tag",
											"source": 11,
											"value": "735"
										},
										{
											"begin": 2701,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2689,
											"end": 2725,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2689,
											"end": 2725,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2754,
											"end": 2758,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2745,
											"end": 2759,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2745,
											"end": 2759,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2745,
											"end": 2759,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2745,
											"end": 2759,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "732"
										},
										{
											"begin": 2617,
											"end": 2769,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2769,
											"name": "tag",
											"source": 11,
											"value": "734"
										},
										{
											"begin": 2617,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2787,
											"end": 2794,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2125,
											"end": 2800,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2125,
											"end": 2800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2805,
											"end": 3999,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 2805,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 2986,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 2970,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2959,
											"end": 2982,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2955,
											"end": 2987,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2952,
											"end": 3004,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2952,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "737"
										},
										{
											"begin": 2952,
											"end": 3004,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3000,
											"end": 3001,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 2998,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2990,
											"end": 3002,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2952,
											"end": 3004,
											"name": "tag",
											"source": 11,
											"value": "737"
										},
										{
											"begin": 2952,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3049,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3027,
											"end": 3050,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3073,
											"end": 3091,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3065,
											"end": 3071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3062,
											"end": 3092,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3059,
											"end": 3109,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3059,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "738"
										},
										{
											"begin": 3059,
											"end": 3109,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3103,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3059,
											"end": 3109,
											"name": "tag",
											"source": 11,
											"value": "738"
										},
										{
											"begin": 3059,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3128,
											"end": 3150,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3128,
											"end": 3150,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3181,
											"end": 3185,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3169,
											"end": 3196,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 3159,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "739"
										},
										{
											"begin": 3159,
											"end": 3214,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3207,
											"end": 3208,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3200,
											"end": 3212,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3159,
											"end": 3214,
											"name": "tag",
											"source": 11,
											"value": "739"
										},
										{
											"begin": 3159,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3252,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3237,
											"end": 3253,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3273,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "740"
										},
										{
											"begin": 3289,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "730"
										},
										{
											"begin": 3329,
											"end": 3335,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "700"
										},
										{
											"begin": 3289,
											"end": 3336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3273,
											"end": 3337,
											"name": "tag",
											"source": 11,
											"value": "740"
										},
										{
											"begin": 3273,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3359,
											"end": 3362,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3383,
											"end": 3389,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3378,
											"end": 3381,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3371,
											"end": 3390,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3415,
											"end": 3419,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3413,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3406,
											"end": 3420,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3399,
											"end": 3420,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3399,
											"end": 3420,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3472,
											"end": 3476,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3459,
											"end": 3460,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3455,
											"end": 3469,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3453,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3447,
											"end": 3470,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3443,
											"end": 3477,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3477,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3500,
											"end": 3507,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3492,
											"end": 3498,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3489,
											"end": 3508,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3486,
											"end": 3525,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3486,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "742"
										},
										{
											"begin": 3486,
											"end": 3525,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3521,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3523,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3486,
											"end": 3525,
											"name": "tag",
											"source": 11,
											"value": "742"
										},
										{
											"begin": 3486,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3553,
											"end": 3557,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3549,
											"end": 3551,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3545,
											"end": 3558,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3534,
											"end": 3558,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3534,
											"end": 3558,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3567,
											"end": 3767,
											"name": "tag",
											"source": 11,
											"value": "743"
										},
										{
											"begin": 3567,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3583,
											"end": 3589,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3578,
											"end": 3581,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3575,
											"end": 3590,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3567,
											"end": 3767,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3567,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "745"
										},
										{
											"begin": 3567,
											"end": 3767,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3675,
											"end": 3692,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3675,
											"end": 3692,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3756,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3600,
											"end": 3614,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3600,
											"end": 3614,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3600,
											"end": 3614,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3600,
											"end": 3614,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3743,
											"end": 3757,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3743,
											"end": 3757,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3743,
											"end": 3757,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3743,
											"end": 3757,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3567,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "743"
										},
										{
											"begin": 3567,
											"end": 3767,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3567,
											"end": 3767,
											"name": "tag",
											"source": 11,
											"value": "745"
										},
										{
											"begin": 3567,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3786,
											"end": 3791,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3844,
											"end": 3848,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3829,
											"end": 3849,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3829,
											"end": 3849,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3816,
											"end": 3850,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3862,
											"end": 3894,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3894,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3859,
											"end": 3911,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3859,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "746"
										},
										{
											"begin": 3859,
											"end": 3911,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3907,
											"end": 3908,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3905,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3897,
											"end": 3909,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3859,
											"end": 3911,
											"name": "tag",
											"source": 11,
											"value": "746"
										},
										{
											"begin": 3859,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "747"
										},
										{
											"begin": 3985,
											"end": 3992,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3974,
											"end": 3982,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3963,
											"end": 3972,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "701"
										},
										{
											"begin": 3930,
											"end": 3993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3993,
											"name": "tag",
											"source": 11,
											"value": "747"
										},
										{
											"begin": 3930,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3920,
											"end": 3993,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3920,
											"end": 3993,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3920,
											"end": 3993,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2805,
											"end": 3999,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2805,
											"end": 3999,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2805,
											"end": 3999,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2805,
											"end": 3999,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2805,
											"end": 3999,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2805,
											"end": 3999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4004,
											"end": 4590,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 4004,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4074,
											"end": 4080,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4082,
											"end": 4088,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4135,
											"end": 4137,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4123,
											"end": 4132,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4114,
											"end": 4121,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4133,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4138,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4155,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "749"
										},
										{
											"begin": 4103,
											"end": 4155,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4151,
											"end": 4152,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4148,
											"end": 4149,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4153,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4155,
											"name": "tag",
											"source": 11,
											"value": "749"
										},
										{
											"begin": 4103,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4191,
											"end": 4200,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4178,
											"end": 4201,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4224,
											"end": 4242,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4216,
											"end": 4222,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4213,
											"end": 4243,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4210,
											"end": 4260,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4210,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "750"
										},
										{
											"begin": 4210,
											"end": 4260,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4257,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4253,
											"end": 4254,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4246,
											"end": 4258,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4210,
											"end": 4260,
											"name": "tag",
											"source": 11,
											"value": "750"
										},
										{
											"begin": 4210,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4279,
											"end": 4301,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4279,
											"end": 4301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4332,
											"end": 4336,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4324,
											"end": 4337,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4324,
											"end": 4337,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4320,
											"end": 4347,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4310,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "751"
										},
										{
											"begin": 4310,
											"end": 4365,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4361,
											"end": 4362,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4358,
											"end": 4359,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4363,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4310,
											"end": 4365,
											"name": "tag",
											"source": 11,
											"value": "751"
										},
										{
											"begin": 4310,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4403,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4388,
											"end": 4404,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4445,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4419,
											"end": 4425,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4416,
											"end": 4446,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4413,
											"end": 4463,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4413,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "752"
										},
										{
											"begin": 4413,
											"end": 4463,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4459,
											"end": 4460,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4457,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4449,
											"end": 4461,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4413,
											"end": 4463,
											"name": "tag",
											"source": 11,
											"value": "752"
										},
										{
											"begin": 4413,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4504,
											"end": 4511,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4499,
											"end": 4501,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4490,
											"end": 4496,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4486,
											"end": 4488,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4482,
											"end": 4497,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4502,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4475,
											"end": 4512,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4472,
											"end": 4529,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4472,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "753"
										},
										{
											"begin": 4472,
											"end": 4529,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4525,
											"end": 4526,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4523,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4515,
											"end": 4527,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4472,
											"end": 4529,
											"name": "tag",
											"source": 11,
											"value": "753"
										},
										{
											"begin": 4472,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4556,
											"end": 4558,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4548,
											"end": 4559,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4548,
											"end": 4559,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4548,
											"end": 4559,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4548,
											"end": 4559,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4548,
											"end": 4559,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4578,
											"end": 4584,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4578,
											"end": 4584,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4004,
											"end": 4590,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4004,
											"end": 4590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4595,
											"end": 5434,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 4595,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4672,
											"end": 4678,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4680,
											"end": 4686,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4733,
											"end": 4735,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4721,
											"end": 4730,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4712,
											"end": 4719,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4708,
											"end": 4731,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4736,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4701,
											"end": 4753,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4701,
											"end": 4753,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "755"
										},
										{
											"begin": 4701,
											"end": 4753,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4749,
											"end": 4750,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4739,
											"end": 4751,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4701,
											"end": 4753,
											"name": "tag",
											"source": 11,
											"value": "755"
										},
										{
											"begin": 4701,
											"end": 4753,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4772,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "756"
										},
										{
											"begin": 4791,
											"end": 4800,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4772,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "697"
										},
										{
											"begin": 4772,
											"end": 4801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4772,
											"end": 4801,
											"name": "tag",
											"source": 11,
											"value": "756"
										},
										{
											"begin": 4772,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4762,
											"end": 4801,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4762,
											"end": 4801,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4852,
											"end": 4854,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4841,
											"end": 4850,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4837,
											"end": 4855,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4824,
											"end": 4856,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4879,
											"end": 4897,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4871,
											"end": 4877,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4868,
											"end": 4898,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4915,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "757"
										},
										{
											"begin": 4865,
											"end": 4915,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4911,
											"end": 4912,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4908,
											"end": 4909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4913,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4915,
											"name": "tag",
											"source": 11,
											"value": "757"
										},
										{
											"begin": 4865,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4987,
											"end": 4991,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4979,
											"end": 4992,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4979,
											"end": 4992,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4975,
											"end": 5002,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4965,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "758"
										},
										{
											"begin": 4965,
											"end": 5020,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5016,
											"end": 5017,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5006,
											"end": 5018,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4965,
											"end": 5020,
											"name": "tag",
											"source": 11,
											"value": "758"
										},
										{
											"begin": 4965,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5056,
											"end": 5058,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5074,
											"end": 5080,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5071,
											"end": 5101,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "760"
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5104,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "760"
										},
										{
											"begin": 5104,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "698"
										},
										{
											"begin": 5104,
											"end": 5122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5104,
											"end": 5122,
											"name": "tag",
											"source": 11,
											"value": "760"
										},
										{
											"begin": 5104,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5146,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "761"
										},
										{
											"begin": 5193,
											"end": 5195,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5170,
											"end": 5187,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5170,
											"end": 5187,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5166,
											"end": 5197,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5199,
											"end": 5201,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5202,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5146,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "699"
										},
										{
											"begin": 5146,
											"end": 5203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5146,
											"end": 5203,
											"name": "tag",
											"source": 11,
											"value": "761"
										},
										{
											"begin": 5146,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5226,
											"end": 5232,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5219,
											"end": 5224,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5281,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5269,
											"end": 5271,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5260,
											"end": 5266,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5258,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5252,
											"end": 5267,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5272,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5245,
											"end": 5282,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5242,
											"end": 5299,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5242,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "762"
										},
										{
											"begin": 5242,
											"end": 5299,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5295,
											"end": 5296,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5292,
											"end": 5293,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5285,
											"end": 5297,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5242,
											"end": 5299,
											"name": "tag",
											"source": 11,
											"value": "762"
										},
										{
											"begin": 5242,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5350,
											"end": 5356,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5345,
											"end": 5347,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5343,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5337,
											"end": 5348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5332,
											"end": 5334,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5330,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5321,
											"end": 5335,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5308,
											"end": 5357,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 5402,
											"end": 5403,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5397,
											"end": 5399,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5388,
											"end": 5394,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5381,
											"end": 5386,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5377,
											"end": 5395,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5373,
											"end": 5400,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5404,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5423,
											"end": 5428,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4595,
											"end": 5434,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4595,
											"end": 5434,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4595,
											"end": 5434,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4595,
											"end": 5434,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4595,
											"end": 5434,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4595,
											"end": 5434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5621,
											"end": 5967,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 5621,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5689,
											"end": 5695,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5697,
											"end": 5703,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5752,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5738,
											"end": 5747,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5729,
											"end": 5736,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5748,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5721,
											"end": 5753,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5718,
											"end": 5770,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5718,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "765"
										},
										{
											"begin": 5718,
											"end": 5770,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5766,
											"end": 5767,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5763,
											"end": 5764,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5756,
											"end": 5768,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5718,
											"end": 5770,
											"name": "tag",
											"source": 11,
											"value": "765"
										},
										{
											"begin": 5718,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5811,
											"end": 5834,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5811,
											"end": 5834,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5811,
											"end": 5834,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5931,
											"end": 5933,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5903,
											"end": 5935,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5903,
											"end": 5935,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5621,
											"end": 5967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5972,
											"end": 6260,
											"name": "tag",
											"source": 11,
											"value": "702"
										},
										{
											"begin": 5972,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6013,
											"end": 6016,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6051,
											"end": 6056,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6045,
											"end": 6057,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6078,
											"end": 6084,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6073,
											"end": 6076,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6066,
											"end": 6085,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6134,
											"end": 6140,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6127,
											"end": 6131,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6120,
											"end": 6125,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6132,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6109,
											"end": 6113,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6104,
											"end": 6107,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6100,
											"end": 6114,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6141,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6183,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6170,
											"end": 6176,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6165,
											"end": 6168,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6161,
											"end": 6177,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6157,
											"end": 6184,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6150,
											"end": 6188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6249,
											"end": 6253,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6242,
											"end": 6244,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6238,
											"end": 6245,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6233,
											"end": 6235,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6225,
											"end": 6231,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6221,
											"end": 6236,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6217,
											"end": 6246,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6212,
											"end": 6215,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6208,
											"end": 6247,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6204,
											"end": 6254,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6254,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6254,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6254,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5972,
											"end": 6260,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5972,
											"end": 6260,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5972,
											"end": 6260,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5972,
											"end": 6260,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5972,
											"end": 6260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6563,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 6265,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6448,
											"end": 6454,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6441,
											"end": 6455,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6434,
											"end": 6456,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6423,
											"end": 6432,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6416,
											"end": 6457,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6493,
											"end": 6495,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6488,
											"end": 6490,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6477,
											"end": 6486,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6473,
											"end": 6491,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6466,
											"end": 6496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6397,
											"end": 6401,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6513,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "768"
										},
										{
											"begin": 6553,
											"end": 6555,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6542,
											"end": 6551,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6538,
											"end": 6556,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6530,
											"end": 6536,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6513,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "702"
										},
										{
											"begin": 6513,
											"end": 6557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6513,
											"end": 6557,
											"name": "tag",
											"source": 11,
											"value": "768"
										},
										{
											"begin": 6513,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6505,
											"end": 6557,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6563,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6265,
											"end": 6563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6568,
											"end": 6787,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 6568,
											"end": 6787,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6717,
											"end": 6719,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6706,
											"end": 6715,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6699,
											"end": 6720,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6684,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6737,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "690"
										},
										{
											"begin": 6777,
											"end": 6779,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6762,
											"end": 6780,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6754,
											"end": 6760,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6737,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "702"
										},
										{
											"begin": 6737,
											"end": 6781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6792,
											"end": 6978,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 6792,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6851,
											"end": 6857,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6904,
											"end": 6906,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6892,
											"end": 6901,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6883,
											"end": 6890,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6902,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6875,
											"end": 6907,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6872,
											"end": 6924,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6872,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "772"
										},
										{
											"begin": 6872,
											"end": 6924,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6920,
											"end": 6921,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6917,
											"end": 6918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6910,
											"end": 6922,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6872,
											"end": 6924,
											"name": "tag",
											"source": 11,
											"value": "772"
										},
										{
											"begin": 6872,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6943,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "690"
										},
										{
											"begin": 6962,
											"end": 6971,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6943,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "697"
										},
										{
											"begin": 6943,
											"end": 6972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7725,
											"end": 7843,
											"name": "tag",
											"source": 11,
											"value": "703"
										},
										{
											"begin": 7725,
											"end": 7843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7811,
											"end": 7816,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7804,
											"end": 7817,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7797,
											"end": 7818,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7790,
											"end": 7795,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7787,
											"end": 7819,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 7777,
											"end": 7837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 7777,
											"end": 7837,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7833,
											"end": 7834,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7830,
											"end": 7831,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7823,
											"end": 7835,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7848,
											"end": 8163,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 7848,
											"end": 8163,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7913,
											"end": 7919,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7921,
											"end": 7927,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7974,
											"end": 7976,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7962,
											"end": 7971,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7953,
											"end": 7960,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7949,
											"end": 7972,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7945,
											"end": 7977,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7942,
											"end": 7994,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7942,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "779"
										},
										{
											"begin": 7942,
											"end": 7994,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7990,
											"end": 7991,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7987,
											"end": 7988,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7980,
											"end": 7992,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7942,
											"end": 7994,
											"name": "tag",
											"source": 11,
											"value": "779"
										},
										{
											"begin": 7942,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8013,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "780"
										},
										{
											"begin": 8032,
											"end": 8041,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8013,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "697"
										},
										{
											"begin": 8013,
											"end": 8042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8013,
											"end": 8042,
											"name": "tag",
											"source": 11,
											"value": "780"
										},
										{
											"begin": 8013,
											"end": 8042,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8003,
											"end": 8042,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8003,
											"end": 8042,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8092,
											"end": 8094,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8081,
											"end": 8090,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8077,
											"end": 8095,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8064,
											"end": 8096,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 8105,
											"end": 8133,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "781"
										},
										{
											"begin": 8127,
											"end": 8132,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8105,
											"end": 8133,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "703"
										},
										{
											"begin": 8105,
											"end": 8133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8105,
											"end": 8133,
											"name": "tag",
											"source": 11,
											"value": "781"
										},
										{
											"begin": 8105,
											"end": 8133,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8152,
											"end": 8157,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8142,
											"end": 8157,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8142,
											"end": 8157,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8142,
											"end": 8157,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7848,
											"end": 8163,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7848,
											"end": 8163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7848,
											"end": 8163,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7848,
											"end": 8163,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7848,
											"end": 8163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7848,
											"end": 8163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8382,
											"end": 8509,
											"name": "tag",
											"source": 11,
											"value": "704"
										},
										{
											"begin": 8382,
											"end": 8509,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8443,
											"end": 8453,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 8438,
											"end": 8441,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 8434,
											"end": 8454,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 8431,
											"end": 8432,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8424,
											"end": 8455,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8474,
											"end": 8478,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 8471,
											"end": 8472,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8464,
											"end": 8479,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8498,
											"end": 8502,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8495,
											"end": 8496,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8488,
											"end": 8503,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8514,
											"end": 8649,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 8514,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8553,
											"end": 8556,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8574,
											"end": 8591,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8574,
											"end": 8591,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8574,
											"end": 8591,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8571,
											"end": 8614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "786"
										},
										{
											"begin": 8571,
											"end": 8614,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "786"
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "704"
										},
										{
											"begin": 8594,
											"end": 8612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "tag",
											"source": 11,
											"value": "786"
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8641,
											"end": 8642,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8630,
											"end": 8643,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8630,
											"end": 8643,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8514,
											"end": 8649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8654,
											"end": 8782,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 8654,
											"end": 8782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8721,
											"end": 8730,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8721,
											"end": 8730,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8721,
											"end": 8730,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8742,
											"end": 8753,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8742,
											"end": 8753,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8742,
											"end": 8753,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8739,
											"end": 8776,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8739,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "639"
										},
										{
											"begin": 8739,
											"end": 8776,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "639"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "704"
										},
										{
											"begin": 8756,
											"end": 8774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9111,
											"end": 9238,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 9111,
											"end": 9238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9172,
											"end": 9182,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 9167,
											"end": 9170,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 9160,
											"end": 9161,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9153,
											"end": 9184,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9203,
											"end": 9207,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 9200,
											"end": 9201,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9193,
											"end": 9208,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9227,
											"end": 9231,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9224,
											"end": 9225,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9217,
											"end": 9232,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9243,
											"end": 9368,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 9243,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9308,
											"end": 9317,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9308,
											"end": 9317,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9308,
											"end": 9317,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9329,
											"end": 9339,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9329,
											"end": 9339,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9329,
											"end": 9339,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9326,
											"end": 9362,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9326,
											"end": 9362,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "639"
										},
										{
											"begin": 9326,
											"end": 9362,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9342,
											"end": 9360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "639"
										},
										{
											"begin": 9342,
											"end": 9360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "704"
										},
										{
											"begin": 9342,
											"end": 9360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10151,
											"end": 10522,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 10151,
											"end": 10522,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10371,
											"end": 10403,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10371,
											"end": 10403,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10371,
											"end": 10403,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10353,
											"end": 10404,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10353,
											"end": 10404,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10440,
											"end": 10472,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10440,
											"end": 10472,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10440,
											"end": 10472,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10440,
											"end": 10472,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10435,
											"end": 10437,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10420,
											"end": 10438,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10420,
											"end": 10438,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10413,
											"end": 10473,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10504,
											"end": 10506,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10489,
											"end": 10507,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10489,
											"end": 10507,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10482,
											"end": 10516,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10482,
											"end": 10516,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10482,
											"end": 10516,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10482,
											"end": 10516,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10341,
											"end": 10343,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 10326,
											"end": 10344,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10326,
											"end": 10344,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10151,
											"end": 10522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10527,
											"end": 10772,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 10527,
											"end": 10772,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10594,
											"end": 10600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10647,
											"end": 10649,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10635,
											"end": 10644,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10626,
											"end": 10633,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10622,
											"end": 10645,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10618,
											"end": 10650,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 10615,
											"end": 10667,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10615,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "799"
										},
										{
											"begin": 10615,
											"end": 10667,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10663,
											"end": 10664,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10660,
											"end": 10661,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10653,
											"end": 10665,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10615,
											"end": 10667,
											"name": "tag",
											"source": 11,
											"value": "799"
										},
										{
											"begin": 10615,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10695,
											"end": 10704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10689,
											"end": 10705,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10714,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "690"
										},
										{
											"begin": 10736,
											"end": 10741,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10714,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "703"
										},
										{
											"begin": 10714,
											"end": 10742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12360,
											"end": 12528,
											"name": "tag",
											"source": 11,
											"value": "541"
										},
										{
											"begin": 12360,
											"end": 12528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12433,
											"end": 12442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12433,
											"end": 12442,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12433,
											"end": 12442,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 12464,
											"end": 12473,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12464,
											"end": 12473,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12481,
											"end": 12496,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12481,
											"end": 12496,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12481,
											"end": 12496,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12475,
											"end": 12497,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12475,
											"end": 12497,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 12461,
											"end": 12498,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 12451,
											"end": 12522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "639"
										},
										{
											"begin": 12451,
											"end": 12522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12502,
											"end": 12520,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "639"
										},
										{
											"begin": 12502,
											"end": 12520,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "704"
										},
										{
											"begin": 12502,
											"end": 12520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12533,
											"end": 12750,
											"name": "tag",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 12533,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12573,
											"end": 12574,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12599,
											"end": 12600,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12589,
											"end": 12721,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "810"
										},
										{
											"begin": 12589,
											"end": 12721,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12643,
											"end": 12653,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 12638,
											"end": 12641,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 12634,
											"end": 12654,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 12632,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12624,
											"end": 12655,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12678,
											"end": 12682,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 12675,
											"end": 12676,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12668,
											"end": 12683,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12706,
											"end": 12710,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 12703,
											"end": 12704,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12696,
											"end": 12711,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12589,
											"end": 12721,
											"name": "tag",
											"source": 11,
											"value": "810"
										},
										{
											"begin": 12589,
											"end": 12721,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12735,
											"end": 12744,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12735,
											"end": 12744,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12533,
											"end": 12750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13294,
											"name": "tag",
											"source": 11,
											"value": "592"
										},
										{
											"begin": 13110,
											"end": 13294,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13180,
											"end": 13186,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13233,
											"end": 13235,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13221,
											"end": 13230,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13212,
											"end": 13219,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13208,
											"end": 13231,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13204,
											"end": 13236,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 13201,
											"end": 13253,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13201,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "813"
										},
										{
											"begin": 13201,
											"end": 13253,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13249,
											"end": 13250,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13246,
											"end": 13247,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13239,
											"end": 13251,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13201,
											"end": 13253,
											"name": "tag",
											"source": 11,
											"value": "813"
										},
										{
											"begin": 13201,
											"end": 13253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13272,
											"end": 13288,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13272,
											"end": 13288,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13294,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13110,
											"end": 13294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13299,
											"end": 13600,
											"name": "tag",
											"source": 11,
											"value": "678"
										},
										{
											"begin": 13299,
											"end": 13600,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13428,
											"end": 13431,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13466,
											"end": 13472,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13460,
											"end": 13473,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13512,
											"end": 13518,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13505,
											"end": 13509,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13497,
											"end": 13503,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13493,
											"end": 13510,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13488,
											"end": 13491,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13482,
											"end": 13519,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 13574,
											"end": 13575,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13538,
											"end": 13554,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13538,
											"end": 13554,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13563,
											"end": 13576,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13563,
											"end": 13576,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13563,
											"end": 13576,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13538,
											"end": 13554,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13299,
											"end": 13600,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13299,
											"end": 13600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"D85598D6EA860439B48FC265883A1CAC638FF64DCA5391FE12B46F27076E26FE": "b5671393c7c6980552e50a31e778921eb17d764c2e98fbf4d44fff524712def9"
									}
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"DripWarrior/poolContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"addFunds(uint256,uint256)": "85f45250",
							"addOwnership(uint256)": "78fd078d",
							"addProjects(uint256)": "2765df7a",
							"addTreasuery(uint256)": "5256dbbf",
							"alreadyAdded(address)": "c7fd5bf0",
							"blockUser(address,bool)": "d9b998b4",
							"checkUpkeep(bytes)": "6e04ff0d",
							"flowToTreasuryPercentage()": "ce356a24",
							"initialize(address,address,address,address,address)": "1459457a",
							"interval()": "947a36fb",
							"lastTimeStamp()": "3f3b3b27",
							"maintainceFeePercentage()": "3a71a9e4",
							"multisigAddress()": "5462870d",
							"noOfUsers()": "01934a83",
							"odividentPayoutPercentage()": "44490ff4",
							"off()": "6626b26d",
							"owner()": "8da5cb5b",
							"ownerOne()": "f0664a4f",
							"ownerShipPoolAmount()": "b47ff951",
							"ownerTwo()": "83aa9985",
							"performUpkeep(bytes)": "4585e33b",
							"proxiableUUID()": "52d1902d",
							"reStakeTokens(uint256)": "7ffe4d93",
							"realInterval()": "30cac972",
							"renounceOwnership()": "715018a6",
							"s_forwarderAddress()": "3070fbf8",
							"setForwarderAddress(address)": "d777cc6d",
							"setInterval(uint256,uint256)": "5f17e616",
							"setTeasueryPercentages(uint256,uint256)": "ed061067",
							"setflowToTreasuryPercentage(uint256)": "ad8e5ec4",
							"setmaintainceFeePercentage(uint256)": "7f111e60",
							"setodividentPayoutPercentage(uint256)": "b9dac1eb",
							"settdividentPayoutPercentage(uint256)": "7f70c5e7",
							"stakeTokens(uint256)": "7547c7a3",
							"stakeTokensByOwner(uint256[],address[])": "34107c87",
							"startingTime()": "39518b5e",
							"tPPercentages(uint256)": "ff3d65d9",
							"tdividentPayoutPercentage()": "33244c2c",
							"totalProjects()": "9c361e4e",
							"totalStakedAmount()": "567e98f9",
							"totalUsers(uint256)": "a4f67b8b",
							"transferOwnership(address)": "f2fde38b",
							"treasuryPoolAmount()": "188e07b9",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"usdcToken()": "11eac855",
							"userRegistered(address)": "bccbc36c",
							"userWithdrawAmoount(uint256)": "67976974",
							"weeklyTransfer()": "e9c68e2c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"addressLength\",\"type\":\"uint256\"}],\"name\":\"emptyAddresses\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountLength\",\"type\":\"uint256\"}],\"name\":\"emptyAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ownerShipPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"treasuryPoolAmount\",\"type\":\"uint256\"}],\"name\":\"emptyPools\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balanceAmount\",\"type\":\"uint256\"}],\"name\":\"notEnoughAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"notEnoughBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"transfered\",\"type\":\"bool\"}],\"name\":\"transferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"blocked\",\"type\":\"bool\"}],\"name\":\"userBlocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wrongAddress\",\"type\":\"address\"}],\"name\":\"wrongAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wrongAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"updateInterval\",\"type\":\"uint256\"}],\"name\":\"wrongInterval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"wrongOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentageNumber\",\"type\":\"uint256\"}],\"name\":\"wrongPerceentage\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"wrongPercentage\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalStakeAmount\",\"type\":\"uint256\"}],\"name\":\"wrongPercentageAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"projectNO\",\"type\":\"uint256\"}],\"name\":\"wrongProjectNo\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"wrongTime\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"wrongValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"noOfUsers\",\"type\":\"uint256\"}],\"name\":\"zeroUsers\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_projectNo\",\"type\":\"uint256\"}],\"name\":\"AddFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ownerShipPoolAmount\",\"type\":\"uint256\"}],\"name\":\"AddOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"OpPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tpPercentage\",\"type\":\"uint256\"}],\"name\":\"AddProject\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_treasuryPoolAmount\",\"type\":\"uint256\"}],\"name\":\"AddTreasuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newPercentage\",\"type\":\"uint256\"}],\"name\":\"PercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_s_forwarderAddress\",\"type\":\"address\"}],\"name\":\"SetForwarderAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_interval\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lastTimeStamp\",\"type\":\"uint256\"}],\"name\":\"SetInterval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recepient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"StakeTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"blockUserAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"blocked\",\"type\":\"bool\"}],\"name\":\"UserBlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ownerShipPoolAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"treasuryPoolAmount\",\"type\":\"uint256\"}],\"name\":\"WeeklyTransfered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountLength\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usersLength\",\"type\":\"uint256\"}],\"name\":\"multipleUserAddeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_interval\",\"type\":\"uint256\"}],\"name\":\"offInterval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"singleUserAddeed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_projectNo\",\"type\":\"uint256\"}],\"name\":\"addFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tPPercentage\",\"type\":\"uint256\"}],\"name\":\"addProjects\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addTreasuery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"alreadyAdded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"blockUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flowToTreasuryPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ownerOne\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ownerTwo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_multisigAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maintainceFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multisigAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"noOfUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"odividentPayoutPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"off\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerOne\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerShipPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerTwo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"reStakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"realInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_forwarderAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarderAddress\",\"type\":\"address\"}],\"name\":\"setForwarderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updateInterval\",\"type\":\"uint256\"}],\"name\":\"setInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newPerccentage\",\"type\":\"uint256\"}],\"name\":\"setTeasueryPercentages\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPerccentage\",\"type\":\"uint256\"}],\"name\":\"setflowToTreasuryPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPerccentage\",\"type\":\"uint256\"}],\"name\":\"setmaintainceFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPerccentage\",\"type\":\"uint256\"}],\"name\":\"setodividentPayoutPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPerccentage\",\"type\":\"uint256\"}],\"name\":\"settdividentPayoutPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_amount\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"}],\"name\":\"stakeTokensByOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tPPercentages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tdividentPayoutPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalProjects\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"blocked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"receivedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"receiveFromTreasury\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"receiveFromOwneerShip\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"userWithdrawAmoount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weeklyTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/poolContract.sol\":\"PoolContrcat\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"DripWarrior/poolContract.sol\":{\"keccak256\":\"0x6e49f0b119bcf4a4c484e6e60feb1786e50882007ec29a07f0b00e8181fdee65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90c8ed8d953209f291de1e75e258cb8849835414bf1dfc32a91a60b059b73928\",\"dweb:/ipfs/QmS95Gy5QCpzMoNXvWovzjTeouVva5wH56FSu52kWphMVA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1436,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "usdcToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IBEP20)1425"
							},
							{
								"astId": 1438,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "treasuryPoolAmount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1440,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "ownerShipPoolAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1442,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "totalStakedAmount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1444,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "tdividentPayoutPercentage",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1446,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "odividentPayoutPercentage",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1448,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "flowToTreasuryPercentage",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1450,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "maintainceFeePercentage",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1452,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "noOfUsers",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1454,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "multisigAddress",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1456,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "locked",
								"offset": 20,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 1458,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "interval",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1460,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "realInterval",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1462,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "startingTime",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1464,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "lastTimeStamp",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1466,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "s_forwarderAddress",
								"offset": 0,
								"slot": "14",
								"type": "t_address"
							},
							{
								"astId": 1468,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "ownerOne",
								"offset": 0,
								"slot": "15",
								"type": "t_address"
							},
							{
								"astId": 1470,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "ownerTwo",
								"offset": 0,
								"slot": "16",
								"type": "t_address"
							},
							{
								"astId": 1485,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "totalProjects",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 1489,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "alreadyAdded",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1493,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "totalUsers",
								"offset": 0,
								"slot": "19",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1497,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "tPPercentages",
								"offset": 0,
								"slot": "20",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1502,
								"contract": "DripWarrior/poolContract.sol:PoolContrcat",
								"label": "userRegistered",
								"offset": 0,
								"slot": "21",
								"type": "t_mapping(t_address,t_struct(UserRegistered)1483_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IBEP20)1425": {
								"encoding": "inplace",
								"label": "contract IBEP20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(UserRegistered)1483_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct PoolContrcat.UserRegistered)",
								"numberOfBytes": "32",
								"value": "t_struct(UserRegistered)1483_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(UserRegistered)1483_storage": {
								"encoding": "inplace",
								"label": "struct PoolContrcat.UserRegistered",
								"members": [
									{
										"astId": 1472,
										"contract": "DripWarrior/poolContract.sol:PoolContrcat",
										"label": "blocked",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1474,
										"contract": "DripWarrior/poolContract.sol:PoolContrcat",
										"label": "receivedAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1476,
										"contract": "DripWarrior/poolContract.sol:PoolContrcat",
										"label": "withdrawAmount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1478,
										"contract": "DripWarrior/poolContract.sol:PoolContrcat",
										"label": "receiveFromTreasury",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1480,
										"contract": "DripWarrior/poolContract.sol:PoolContrcat",
										"label": "receiveFromOwneerShip",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1482,
										"contract": "DripWarrior/poolContract.sol:PoolContrcat",
										"label": "totalStakedAmount",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
					"exportedSymbols": {
						"AutomationCompatibleInterface": [
							18
						]
					},
					"id": 19,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AutomationCompatibleInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 18,
							"linearizedBaseContracts": [
								18
							],
							"name": "AutomationCompatibleInterface",
							"nameLocation": "120:29:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "154:985:0",
										"text": " @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."
									},
									"functionSelector": "6e04ff0d",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "1151:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "checkData",
												"nameLocation": "1178:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "1163:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1163:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1162:26:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "upkeepNeeded",
												"nameLocation": "1212:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "1207:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1207:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "1239:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "1226:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1226:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1206:45:0"
									},
									"scope": 18,
									"src": "1142:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "1256:1003:0",
										"text": " @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."
									},
									"functionSelector": "4585e33b",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "2271:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "2300:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "2285:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2285:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:28:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:0:0"
									},
									"scope": 18,
									"src": "2262:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 19,
							"src": "110:2214:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2293:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							695
						],
						"Initializable": [
							467
						],
						"OwnableUpgradeable": [
							213
						]
					},
					"id": 214,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 20,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 22,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 214,
							"sourceUnit": 696,
							"src": "128:67:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 21,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 695,
										"src": "136:18:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 24,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 214,
							"sourceUnit": 468,
							"src": "196:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 23,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 467,
										"src": "204:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 26,
										"name": "Initializable",
										"nameLocations": [
											"789:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 467,
										"src": "789:13:1"
									},
									"id": 27,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:1"
								},
								{
									"baseName": {
										"id": 28,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 695,
										"src": "804:18:1"
									},
									"id": 29,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:1"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 25,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 213,
							"linearizedBaseContracts": [
								213,
								695,
								467
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:1",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 33,
									"members": [
										{
											"constant": false,
											"id": 32,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 33,
											"src": "931:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 31,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:1",
									"nodeType": "StructDefinition",
									"scope": 213,
									"src": "899:53:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 36,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 213,
									"src": "1069:116:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 34,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 35,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1270:81:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:1",
													"nodeType": "YulBlock",
													"src": "1289:56:1",
													"statements": [
														{
															"nativeSrc": "1303:32:1",
															"nodeType": "YulAssignment",
															"src": "1303:32:1",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:1",
																"nodeType": "YulIdentifier",
																"src": "1313:22:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 40,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 36,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:1",
														"valueSize": 1
													}
												],
												"id": 42,
												"nodeType": "InlineAssembly",
												"src": "1280:65:1"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:1"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1244:24:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 39,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 38,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 33,
														"src": "1244:14:1"
													},
													"referencedDeclaration": 33,
													"src": "1244:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:1"
									},
									"scope": 213,
									"src": "1192:159:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 49,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1480:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:1"
									},
									"src": "1447:50:1"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 54,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1616:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:1"
									},
									"src": "1590:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 60,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1664:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1695:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:1"
									},
									"src": "1637:84:1"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "1919:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 69,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "1954:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 68,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1929:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:1"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 376,
												"src": "1902:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:1"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1871:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:1"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:1"
									},
									"scope": 213,
									"src": "1847:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "2062:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 80,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2076:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 81,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 94,
												"nodeType": "IfStatement",
												"src": "2072:95:1",
												"trueBody": {
													"id": 93,
													"nodeType": "Block",
													"src": "2104:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 89,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 88,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 87,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 90,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 86,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "2125:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 92,
															"nodeType": "RevertStatement",
															"src": "2118:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "2195:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 95,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "2176:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:1"
											}
										]
									},
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 78,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 77,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 376,
												"src": "2045:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:1"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2014:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:1"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:1"
									},
									"scope": 213,
									"src": "1980:235:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2324:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 103,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "2334:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:1"
											},
											{
												"id": 106,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:1"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 108,
									"name": "onlyOwner",
									"nameLocation": "2312:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:1"
									},
									"src": "2303:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "2496:89:1",
										"statements": [
											{
												"assignments": [
													116
												],
												"declarations": [
													{
														"constant": false,
														"id": 116,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 123,
														"src": "2506:24:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 115,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 114,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 33,
																"src": "2506:14:1"
															},
															"referencedDeclaration": 33,
															"src": "2506:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 117,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2533:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$33_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:1"
											},
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "2570:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:1",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 32,
													"src": "2570:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 113,
												"id": 122,
												"nodeType": "Return",
												"src": "2563:15:1"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2487:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:1"
									},
									"scope": 213,
									"src": "2441:144:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "2703:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 128,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "2717:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 130,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "2728:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 139,
												"nodeType": "IfStatement",
												"src": "2713:101:1",
												"trueBody": {
													"id": 138,
													"nodeType": "Block",
													"src": "2742:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 134,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 677,
																			"src": "2790:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 133,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "2763:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 137,
															"nodeType": "RevertStatement",
															"src": "2756:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:1"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:1"
									},
									"scope": 213,
									"src": "2658:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "3209:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 148,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 147,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "3219:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:1"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 145,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 144,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 108,
												"src": "3199:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:1"
									},
									"scope": 213,
									"src": "3155:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "3475:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 163,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3489:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 164,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 177,
												"nodeType": "IfStatement",
												"src": "3485:91:1",
												"trueBody": {
													"id": 176,
													"nodeType": "Block",
													"src": "3513:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 172,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 170,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 169,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "3534:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 175,
															"nodeType": "RevertStatement",
															"src": "3527:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 179,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "3604:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 178,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "3585:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 161,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 160,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 108,
												"src": "3465:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "3432:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:1"
									},
									"scope": 213,
									"src": "3405:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "3837:185:1",
										"statements": [
											{
												"assignments": [
													191
												],
												"declarations": [
													{
														"constant": false,
														"id": 191,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "3847:24:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 190,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 189,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 33,
																"src": "3847:14:1"
															},
															"referencedDeclaration": 33,
															"src": "3847:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 194,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 192,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "3874:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$33_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:1"
											},
											{
												"assignments": [
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 196,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "3904:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 195,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 199,
												"initialValue": {
													"expression": {
														"id": 197,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "3923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:1",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 32,
													"src": "3923:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:1"
											},
											{
												"expression": {
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 200,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "3941:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$33_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:1",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 32,
														"src": "3941:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 203,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "3952:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 207,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "3996:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 208,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "4006:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 206,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "3975:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "EmitStatement",
												"src": "3970:45:1"
											}
										]
									},
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "3802:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:1"
									},
									"scope": 213,
									"src": "3774:248:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 214,
							"src": "749:3275:1",
							"usedErrors": [
								49,
								54,
								230,
								233
							],
							"usedEvents": [
								60,
								238
							]
						}
					],
					"src": "102:3923:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							467
						]
					},
					"id": 468,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 215,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 216,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:2",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 467,
							"linearizedBaseContracts": [
								467
							],
							"name": "Initializable",
							"nameLocation": "2367:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:2",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 224,
									"members": [
										{
											"constant": false,
											"id": 220,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 224,
											"src": "2813:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 219,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 223,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 224,
											"src": "2950:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 222,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:2",
									"nodeType": "StructDefinition",
									"scope": 467,
									"src": "2685:290:2",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 227,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "3098:115:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 225,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 226,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:2",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 230,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:2"
									},
									"src": "3285:30:2"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:2",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 233,
									"name": "NotInitializing",
									"nameLocation": "3389:15:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:2"
									},
									"src": "3383:24:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:2",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 238,
									"name": "Initialized",
									"nameLocation": "3514:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3526:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 235,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:2"
									},
									"src": "3508:34:2"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "4092:1081:2",
										"statements": [
											{
												"assignments": [
													243
												],
												"declarations": [
													{
														"constant": false,
														"id": 243,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "4158:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 242,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 241,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 224,
																"src": "4158:20:2"
															},
															"referencedDeclaration": 224,
															"src": "4158:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 244,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "4191:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$224_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:2"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "4279:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 252,
												"initialValue": {
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:2",
													"subExpression": {
														"expression": {
															"id": 249,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "4302:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "4302:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:2"
											},
											{
												"assignments": [
													254
												],
												"declarations": [
													{
														"constant": false,
														"id": 254,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "4327:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 253,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 257,
												"initialValue": {
													"expression": {
														"id": 255,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "4348:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:2",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 220,
													"src": "4348:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:2"
											},
											{
												"assignments": [
													259
												],
												"declarations": [
													{
														"constant": false,
														"id": 259,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "4706:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 258,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 265,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 260,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4726:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 263,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "4746:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:2"
											},
											{
												"assignments": [
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "4770:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 266,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 280,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 268,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4790:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 273,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$467",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$467",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 271,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:2",
														"subExpression": {
															"id": 281,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "4856:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:2",
														"subExpression": {
															"id": 283,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "4873:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 290,
												"nodeType": "IfStatement",
												"src": "4851:91:2",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "4887:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 286,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "4908:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 288,
															"nodeType": "RevertStatement",
															"src": "4901:30:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 291,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "4951:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 293,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "4951:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:2"
											},
											{
												"condition": {
													"id": 297,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 248,
													"src": "4983:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 305,
												"nodeType": "IfStatement",
												"src": "4979:67:2",
												"trueBody": {
													"id": 304,
													"nodeType": "Block",
													"src": "4999:47:2",
													"statements": [
														{
															"expression": {
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 298,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "5013:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:2",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 223,
																	"src": "5013:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 303,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:2"
														}
													]
												}
											},
											{
												"id": 306,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:2"
											},
											{
												"condition": {
													"id": 307,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 248,
													"src": "5070:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 319,
												"nodeType": "IfStatement",
												"src": "5066:101:2",
												"trueBody": {
													"id": 318,
													"nodeType": "Block",
													"src": "5086:81:2",
													"statements": [
														{
															"expression": {
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 308,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "5100:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:2",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 223,
																	"src": "5100:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 313,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 314,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "5142:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 317,
															"nodeType": "EmitStatement",
															"src": "5137:19:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:2",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 321,
									"name": "initializer",
									"nameLocation": "4078:11:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:2"
									},
									"src": "4069:1104:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "6291:392:2",
										"statements": [
											{
												"assignments": [
													328
												],
												"declarations": [
													{
														"constant": false,
														"id": 328,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 367,
														"src": "6357:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 327,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 326,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 224,
																"src": "6357:20:2"
															},
															"referencedDeclaration": 224,
															"src": "6357:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 331,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 329,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "6390:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$224_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 332,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "6431:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "6431:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 334,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "6450:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:2",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 220,
															"src": "6450:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 336,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "6468:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "IfStatement",
												"src": "6427:105:2",
												"trueBody": {
													"id": 342,
													"nodeType": "Block",
													"src": "6477:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 339,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "6498:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 341,
															"nodeType": "RevertStatement",
															"src": "6491:30:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 344,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "6541:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 346,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "6541:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 347,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "6558:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:2"
											},
											{
												"expression": {
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 350,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "6575:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "6575:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:2"
											},
											{
												"id": 356,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:2"
											},
											{
												"expression": {
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 357,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "6618:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:2",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "6618:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 364,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "6668:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 363,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "6656:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "EmitStatement",
												"src": "6651:25:2"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:2",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 368,
									"name": "reinitializer",
									"nameLocation": "6261:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "6275:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 323,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:2"
									},
									"src": "6252:431:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "6921:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 371,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "6931:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:2"
											},
											{
												"id": 374,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:2"
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:2",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 376,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:2"
									},
									"src": "6893:76:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "7136:89:2",
										"statements": [
											{
												"condition": {
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:2",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 380,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "7151:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 387,
												"nodeType": "IfStatement",
												"src": "7146:73:2",
												"trueBody": {
													"id": 386,
													"nodeType": "Block",
													"src": "7170:49:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 383,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "7191:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 385,
															"nodeType": "RevertStatement",
															"src": "7184:24:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:2",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:2"
									},
									"scope": 467,
									"src": "7084:141:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "7760:373:2",
										"statements": [
											{
												"assignments": [
													395
												],
												"declarations": [
													{
														"constant": false,
														"id": 395,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 434,
														"src": "7826:30:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 394,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 393,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 224,
																"src": "7826:20:2"
															},
															"referencedDeclaration": 224,
															"src": "7826:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 398,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 396,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "7859:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$224_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:2"
											},
											{
												"condition": {
													"expression": {
														"id": 399,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "7900:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:2",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 223,
													"src": "7900:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 405,
												"nodeType": "IfStatement",
												"src": "7896:76:2",
												"trueBody": {
													"id": 404,
													"nodeType": "Block",
													"src": "7917:55:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 401,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "7938:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 403,
															"nodeType": "RevertStatement",
															"src": "7931:30:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 406,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "7985:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:2",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "7985:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 409,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 408,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 433,
												"nodeType": "IfStatement",
												"src": "7981:146:2",
												"trueBody": {
													"id": 432,
													"nodeType": "Block",
													"src": "8021:106:2",
													"statements": [
														{
															"expression": {
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 414,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 395,
																		"src": "8035:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 416,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:2",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 220,
																	"src": "8035:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 418,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:2",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 417,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:2",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 423,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 427,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 426,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:2",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 425,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:2",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 424,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "8087:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 431,
															"nodeType": "EmitStatement",
															"src": "8082:34:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:2",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:2"
									},
									"scope": 467,
									"src": "7711:422:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "8308:63:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 441,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "8325:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$224_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:2",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 220,
													"src": "8325:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 440,
												"id": 444,
												"nodeType": "Return",
												"src": "8318:46:2"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:2",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "8300:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 438,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:2"
									},
									"scope": 467,
									"src": "8243:128:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "8543:64:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 452,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "8560:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$224_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:2",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 223,
													"src": "8560:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 451,
												"id": 455,
												"nodeType": "Return",
												"src": "8553:47:2"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:2",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:2"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "8537:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 449,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:2"
									},
									"scope": 467,
									"src": "8487:120:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "8827:80:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:2",
													"nodeType": "YulBlock",
													"src": "8846:55:2",
													"statements": [
														{
															"nativeSrc": "8860:31:2",
															"nodeType": "YulAssignment",
															"src": "8860:31:2",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:2",
																"nodeType": "YulIdentifier",
																"src": "8870:21:2"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 462,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 227,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:2",
														"valueSize": 1
													}
												],
												"id": 464,
												"nodeType": "InlineAssembly",
												"src": "8837:64:2"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:2",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:2"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "8795:30:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 461,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 460,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 224,
														"src": "8795:20:2"
													},
													"referencedDeclaration": 224,
													"src": "8795:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$224_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:2"
									},
									"scope": 467,
									"src": "8737:170:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 468,
							"src": "2349:6560:2",
							"usedErrors": [
								230,
								233
							],
							"usedEvents": [
								238
							]
						}
					],
					"src": "113:8797:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1008
						],
						"IERC1822Proxiable": [
							705
						],
						"Initializable": [
							467
						],
						"UUPSUpgradeable": [
							649
						]
					},
					"id": 650,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 469,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 471,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 706,
							"src": "141:88:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 470,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 705,
										"src": "149:17:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 473,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 1009,
							"src": "230:84:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 472,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1008,
										"src": "238:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 475,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 468,
							"src": "315:50:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 474,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 467,
										"src": "323:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 477,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 467,
										"src": "1023:13:3"
									},
									"id": 478,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:3"
								},
								{
									"baseName": {
										"id": 479,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 705,
										"src": "1038:17:3"
									},
									"id": 480,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:3"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 476,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:3",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 649,
							"linearizedBaseContracts": [
								649,
								705,
								467
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:3",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 487,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1128:48:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 482,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 485,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$649",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$649",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 484,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 483,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:3",
												"typeDescriptions": {}
											}
										},
										"id": 486,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:3",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 491,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1819:58:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 489,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 490,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:3",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 494,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:3"
									},
									"src": "1954:36:3"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:3",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 499,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "2104:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 496,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:3"
									},
									"src": "2069:49:3"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2643:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 502,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "2653:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2653:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "2653:13:3"
											},
											{
												"id": 505,
												"nodeType": "PlaceholderStatement",
												"src": "2676:1:3"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "2124:493:3",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 507,
									"name": "onlyProxy",
									"nameLocation": "2631:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:3"
									},
									"src": "2622:62:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "2914:48:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 510,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "2924:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2924:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "2924:20:3"
											},
											{
												"id": 513,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:3"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2690:195:3",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 515,
									"name": "notDelegated",
									"nameLocation": "2899:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2911:2:3"
									},
									"src": "2890:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "3028:7:3",
										"statements": []
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 518,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 517,
												"name": "onlyInitializing",
												"nameLocations": [
													"3011:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 376,
												"src": "3011:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3011:16:3"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2977:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2999:2:3"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:0:3"
									},
									"scope": 649,
									"src": "2968:67:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "3111:7:3",
										"statements": []
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 524,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 523,
												"name": "onlyInitializing",
												"nameLocations": [
													"3094:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 376,
												"src": "3094:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3094:16:3"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3050:32:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3082:2:3"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3111:0:3"
									},
									"scope": 649,
									"src": "3041:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										704
									],
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "3783:56:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 535,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "3800:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1008_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3813:19:3",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 735,
													"src": "3800:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 534,
												"id": 537,
												"nodeType": "Return",
												"src": "3793:39:3"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "3123:577:3",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 531,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 530,
												"name": "notDelegated",
												"nameLocations": [
													"3752:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 515,
												"src": "3752:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3752:12:3"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3714:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3727:2:3"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "3774:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 532,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:3"
									},
									"scope": 649,
									"src": "3705:134:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "4263:109:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4291:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 549,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "4273:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "4273:36:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 554,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4341:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "4360:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 553,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "4319:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "4319:46:3"
											}
										]
									},
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "3845:308:3",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 547,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 546,
												"name": "onlyProxy",
												"nameLocations": [
													"4253:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 507,
												"src": "4253:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4253:9:3"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4167:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4192:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "4184:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4224:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "4211:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 543,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4211:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:46:3"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4263:0:3"
									},
									"scope": 649,
									"src": "4158:214:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "4644:267:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 565,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4679:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$649",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$649",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4671:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 563,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4671:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4671:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 567,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "4688:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4671:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 569,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "4749:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1008_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4762:17:3",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 766,
																"src": "4749:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4749:32:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 572,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "4785:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4749:42:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4671:120:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "4654:251:3",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "4844:61:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 575,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "4865:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4865:29:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 577,
															"nodeType": "RevertStatement",
															"src": "4858:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "4378:216:3",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4608:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4619:2:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4644:0:3"
									},
									"scope": 649,
									"src": "4599:312:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "5080:161:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 587,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5102:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$649",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$649",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5094:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 585,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5094:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5094:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 589,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5111:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5094:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 595,
												"nodeType": "IfStatement",
												"src": "5090:145:3",
												"trueBody": {
													"id": 594,
													"nodeType": "Block",
													"src": "5119:116:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 591,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "5195:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5195:29:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 593,
															"nodeType": "RevertStatement",
															"src": "5188:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "4917:106:3",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5037:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5055:2:3"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5080:0:3"
									},
									"scope": 649,
									"src": "5028:213:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "5247:372:3",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5633:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5659:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "5651:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:27:3"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5694:0:3"
									},
									"scope": 649,
									"src": "5624:71:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "6137:453:3",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 636,
															"nodeType": "Block",
															"src": "6227:212:3",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 619,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "6245:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 620,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1008,
																				"src": "6253:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1008_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6266:19:3",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 735,
																			"src": "6253:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6245:40:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 628,
																	"nodeType": "IfStatement",
																	"src": "6241:120:3",
																	"trueBody": {
																		"id": 627,
																		"nodeType": "Block",
																		"src": "6287:74:3",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 624,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 617,
																							"src": "6341:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 623,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 499,
																						"src": "6312:28:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 625,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6312:34:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 626,
																				"nodeType": "RevertStatement",
																				"src": "6305:41:3"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 632,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 606,
																				"src": "6404:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 633,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 608,
																				"src": "6423:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 629,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1008,
																				"src": "6374:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1008_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6387:16:3",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 827,
																			"src": "6374:29:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6374:54:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 635,
																	"nodeType": "ExpressionStatement",
																	"src": "6374:54:3"
																}
															]
														},
														"errorName": "",
														"id": 637,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 618,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 617,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6221:4:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 637,
																	"src": "6213:12:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 616,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6213:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6212:14:3"
														},
														"src": "6204:235:3"
													},
													{
														"block": {
															"id": 644,
															"nodeType": "Block",
															"src": "6446:138:3",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 641,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 606,
																				"src": "6555:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 638,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1008,
																				"src": "6513:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1008_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6526:28:3",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 740,
																			"src": "6513:41:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6513:60:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 643,
																	"nodeType": "RevertStatement",
																	"src": "6506:67:3"
																}
															]
														},
														"errorName": "",
														"id": 645,
														"nodeType": "TryCatchClause",
														"src": "6440:144:3"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 612,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "6169:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 611,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "6151:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$705_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6151:36:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$705",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6188:13:3",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 704,
														"src": "6151:50:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6151:52:3",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 646,
												"nodeType": "TryStatement",
												"src": "6147:437:3"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "5701:346:3",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6061:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6091:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "6083:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6123:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "6110:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 607,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6110:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:46:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6137:0:3"
									},
									"scope": 649,
									"src": "6052:538:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 650,
							"src": "986:5606:3",
							"usedErrors": [
								230,
								233,
								494,
								499,
								740,
								753,
								1031,
								1034
							],
							"usedEvents": [
								238,
								719
							]
						}
					],
					"src": "115:6478:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							695
						],
						"Initializable": [
							467
						]
					},
					"id": 696,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 651,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 653,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 696,
							"sourceUnit": 468,
							"src": "126:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 652,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 467,
										"src": "134:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 655,
										"name": "Initializable",
										"nameLocations": [
											"728:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 467,
										"src": "728:13:4"
									},
									"id": 656,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:4"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 695,
							"linearizedBaseContracts": [
								695,
								467
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "800:7:4",
										"statements": []
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 659,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 658,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 376,
												"src": "783:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:4"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:4"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:4"
									},
									"scope": 695,
									"src": "748:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "875:7:4",
										"statements": []
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 665,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 664,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 376,
												"src": "858:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:4"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:4"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:4"
									},
									"scope": 695,
									"src": "813:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "949:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 673,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 672,
												"id": 675,
												"nodeType": "Return",
												"src": "959:17:4"
											}
										]
									},
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:4"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "940:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:4"
									},
									"scope": 695,
									"src": "887:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "1056:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 682,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 681,
												"id": 684,
												"nodeType": "Return",
												"src": "1066:15:4"
											}
										]
									},
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:4"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1040:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 679,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:4"
									},
									"scope": 695,
									"src": "989:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "1166:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 690,
												"id": 692,
												"nodeType": "Return",
												"src": "1176:8:4"
											}
										]
									},
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:4"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "1157:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:4"
									},
									"scope": 695,
									"src": "1094:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 696,
							"src": "688:505:4",
							"usedErrors": [
								230,
								233
							],
							"usedEvents": [
								238
							]
						}
					],
					"src": "101:1093:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							705
						]
					},
					"id": 706,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 697,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 698,
								"nodeType": "StructuredDocumentation",
								"src": "139:203:5",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 705,
							"linearizedBaseContracts": [
								705
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "353:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "377:438:5",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "829:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:5"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "868:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 701,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:5"
									},
									"scope": 705,
									"src": "820:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 706,
							"src": "343:536:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:767:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1271
						],
						"ERC1967Utils": [
							1008
						],
						"IBeacon": [
							1018
						],
						"StorageSlot": [
							1381
						]
					},
					"id": 1009,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 707,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 709,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1009,
							"sourceUnit": 1019,
							"src": "140:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 708,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1018,
										"src": "148:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1009,
							"sourceUnit": 1272,
							"src": "187:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 710,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1271,
										"src": "195:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1009,
							"sourceUnit": 1382,
							"src": "236:56:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 712,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1381,
										"src": "244:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 714,
								"nodeType": "StructuredDocumentation",
								"src": "294:154:6",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 1008,
							"linearizedBaseContracts": [
								1008
							],
							"name": "ERC1967Utils",
							"nameLocation": "457:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "660:68:6",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 719,
									"name": "Upgraded",
									"nameLocation": "739:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "764:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "748:30:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:32:6"
									},
									"src": "733:47:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "786:67:6",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 726,
									"name": "AdminChanged",
									"nameLocation": "864:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "885:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "877:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "908:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "900:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:41:6"
									},
									"src": "858:60:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "924:59:6",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 731,
									"name": "BeaconUpgraded",
									"nameLocation": "994:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1025:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1009:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:24:6"
									},
									"src": "988:45:6"
								},
								{
									"constant": true,
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "1039:170:6",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 735,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "1305:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1008,
									"src": "1279:114:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 733,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 734,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "1400:69:6",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 740,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "1480:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1517:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1509:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:24:6"
									},
									"src": "1474:59:6"
								},
								{
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "1539:60:6",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 745,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1610:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1638:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1630:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:6"
									},
									"src": "1604:41:6"
								},
								{
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "1651:61:6",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 750,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1723:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1752:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1744:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:16:6"
									},
									"src": "1717:43:6"
								},
								{
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "1766:82:6",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 753,
									"name": "ERC1967NonPayable",
									"nameLocation": "1859:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:2:6"
									},
									"src": "1853:26:6"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "2018:77:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 761,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "2062:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 759,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "2035:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1381_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2047:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1303,
															"src": "2035:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1277_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2035:47:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1277_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2083:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1276,
													"src": "2035:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 758,
												"id": 764,
												"nodeType": "Return",
												"src": "2028:60:6"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "1885:67:6",
										"text": " @dev Returns the current implementation address."
									},
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1966:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:6"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "2009:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:9:6"
									},
									"scope": 1008,
									"src": "1957:138:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "2249:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 772,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "2263:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2281:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2263:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2286:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2263:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 782,
												"nodeType": "IfStatement",
												"src": "2259:119:6",
												"trueBody": {
													"id": 781,
													"nodeType": "Block",
													"src": "2299:79:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 778,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 769,
																		"src": "2349:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 777,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "2320:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2320:47:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 780,
															"nodeType": "RevertStatement",
															"src": "2313:54:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 786,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "2414:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 783,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "2387:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1381_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2399:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1303,
																"src": "2387:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1277_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2387:47:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1277_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2435:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1276,
														"src": "2387:53:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 789,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "2443:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2387:73:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "2387:73:6"
											}
										]
									},
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "2101:80:6",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2195:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2222:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2214:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:27:6"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:6"
									},
									"scope": 1008,
									"src": "2186:281:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "2860:254:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 802,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "2889:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 801,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "2870:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "2870:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 806,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "2931:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 805,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "2922:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "EmitStatement",
												"src": "2917:32:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 809,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "2964:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2964:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2964:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 824,
													"nodeType": "Block",
													"src": "3065:43:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 821,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "3079:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3079:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 823,
															"nodeType": "ExpressionStatement",
															"src": "3079:18:6"
														}
													]
												},
												"id": 825,
												"nodeType": "IfStatement",
												"src": "2960:148:6",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "2981:78:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 816,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "3024:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 817,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "3043:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 813,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1271,
																		"src": "2995:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1271_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3003:20:6",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1190,
																	"src": "2995:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2995:53:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 819,
															"nodeType": "ExpressionStatement",
															"src": "2995:53:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "2473:301:6",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2788:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2813:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "2805:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2845:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "2832:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 797,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:46:6"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:6"
									},
									"scope": 1008,
									"src": "2779:335:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "3120:145:6",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 831,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "3361:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1008,
									"src": "3335:105:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 829,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3335:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 830,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3374:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "3844:68:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 839,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "3888:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 837,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "3861:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1381_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3873:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1303,
															"src": "3861:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1277_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:38:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1277_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3900:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1276,
													"src": "3861:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 836,
												"id": 842,
												"nodeType": "Return",
												"src": "3854:51:6"
											}
										]
									},
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "3447:340:6",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3801:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3809:2:6"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "3835:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3835:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:9:6"
									},
									"scope": 1008,
									"src": "3792:120:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "4039:172:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 850,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "4053:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 851,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4065:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4053:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 864,
												"nodeType": "IfStatement",
												"src": "4049:91:6",
												"trueBody": {
													"id": 863,
													"nodeType": "Block",
													"src": "4077:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 859,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4126:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4118:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 857,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4118:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 856,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "4098:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 862,
															"nodeType": "RevertStatement",
															"src": "4091:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 868,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "4176:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 865,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "4149:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1381_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4161:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1303,
																"src": "4149:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1277_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1277_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4188:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1276,
														"src": "4149:44:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 871,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "4196:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4149:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "4149:55:6"
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "3918:71:6",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4003:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4021:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "4013:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4012:18:6"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:0:6"
									},
									"scope": 1008,
									"src": "3994:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "4379:85:6",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 882,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "4407:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4407:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "4419:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 881,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "4394:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "EmitStatement",
												"src": "4389:39:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 888,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "4448:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 887,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "4438:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "4438:19:6"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "4217:109:6",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "4340:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4360:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "4352:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:18:6"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:6"
									},
									"scope": 1008,
									"src": "4331:133:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "4470:201:6",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 896,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4767:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1008,
									"src": "4741:106:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 894,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4741:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 895,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4781:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "4963:69:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 904,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "5007:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 902,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "4980:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1381_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4992:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1303,
															"src": "4980:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1277_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4980:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1277_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5020:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1276,
													"src": "4980:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 901,
												"id": 907,
												"nodeType": "Return",
												"src": "4973:52:6"
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "4854:51:6",
										"text": " @dev Returns the current beacon."
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4919:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4928:2:6"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "4954:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4954:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4953:9:6"
									},
									"scope": 1008,
									"src": "4910:122:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "5161:390:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 915,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "5175:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5185:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5175:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5190:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5175:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5200:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5175:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 925,
												"nodeType": "IfStatement",
												"src": "5171:95:6",
												"trueBody": {
													"id": 924,
													"nodeType": "Block",
													"src": "5203:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 921,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 912,
																		"src": "5245:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 920,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "5224:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5224:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 923,
															"nodeType": "RevertStatement",
															"src": "5217:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 929,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "5303:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 926,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "5276:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1381_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5288:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1303,
																"src": "5276:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1277_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5276:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1277_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5316:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1276,
														"src": "5276:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 932,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "5324:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5276:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "5276:57:6"
											},
											{
												"assignments": [
													936
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "5352:20:6",
														"nodeType": "VariableDeclaration",
														"scope": 954,
														"src": "5344:28:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 935,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5344:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 942,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 938,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "5383:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 937,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "5375:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1018_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5375:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1018",
																"typeString": "contract IBeacon"
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5394:14:6",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1017,
														"src": "5375:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5344:66:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 943,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "5424:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5445:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5424:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5450:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5424:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5460:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5424:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 953,
												"nodeType": "IfStatement",
												"src": "5420:125:6",
												"trueBody": {
													"id": 952,
													"nodeType": "Block",
													"src": "5463:82:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 949,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "5513:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 948,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "5484:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 951,
															"nodeType": "RevertStatement",
															"src": "5477:57:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "5038:71:6",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5123:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5142:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "5134:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:19:6"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 1008,
									"src": "5114:437:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "6155:254:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 964,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "6176:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 963,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "6165:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6165:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "6165:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 968,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "6216:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 967,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "6201:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "EmitStatement",
												"src": "6196:30:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 971,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "6241:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6246:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6241:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6255:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6241:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 990,
													"nodeType": "Block",
													"src": "6360:43:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 987,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "6374:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6374:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 989,
															"nodeType": "ExpressionStatement",
															"src": "6374:18:6"
														}
													]
												},
												"id": 991,
												"nodeType": "IfStatement",
												"src": "6237:166:6",
												"trueBody": {
													"id": 986,
													"nodeType": "Block",
													"src": "6258:96:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 979,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 958,
																						"src": "6309:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 978,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1018,
																					"src": "6301:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1018_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 980,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6301:18:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1018",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6320:14:6",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1017,
																			"src": "6301:33:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6301:35:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 983,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "6338:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 975,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1271,
																		"src": "6272:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1271_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6280:20:6",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1190,
																	"src": "6272:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 985,
															"nodeType": "ExpressionStatement",
															"src": "6272:71:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "5557:514:6",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "6085:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6116:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "6108:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6140:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "6127:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 959,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6127:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:38:6"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6155:0:6"
									},
									"scope": 1008,
									"src": "6076:333:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "6634:86:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 997,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6648:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6652:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6648:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6660:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6648:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1005,
												"nodeType": "IfStatement",
												"src": "6644:70:6",
												"trueBody": {
													"id": 1004,
													"nodeType": "Block",
													"src": "6663:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1001,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "6684:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6684:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1003,
															"nodeType": "RevertStatement",
															"src": "6677:26:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "6415:178:6",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6607:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6623:2:6"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:0:6"
									},
									"scope": 1008,
									"src": "6598:122:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1009,
							"src": "449:6273:6",
							"usedErrors": [
								740,
								745,
								750,
								753
							],
							"usedEvents": [
								719,
								726,
								731
							]
						}
					],
					"src": "114:6609:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1018
						]
					},
					"id": 1019,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1010,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1011,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:7",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1018,
							"linearizedBaseContracts": [
								1018
							],
							"name": "IBeacon",
							"nameLocation": "224:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:7",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:7"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "460:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:7"
									},
									"scope": 1018,
									"src": "411:58:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1019,
							"src": "214:257:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1271
						]
					},
					"id": 1272,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1020,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1021,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1271,
							"linearizedBaseContracts": [
								1271
							],
							"name": "Address",
							"nameLocation": "203:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:8",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1026,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "349:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:8"
									},
									"src": "316:50:8"
								},
								{
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1031,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "475:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:8"
									},
									"src": "452:39:8"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:8",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1034,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:8"
									},
									"src": "591:24:8"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "1602:260:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1044,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1271",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1271",
																		"typeString": "library Address"
																	}
																],
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1042,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1047,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "1640:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1057,
												"nodeType": "IfStatement",
												"src": "1612:109:8",
												"trueBody": {
													"id": 1056,
													"nodeType": "Block",
													"src": "1648:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1052,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1271",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1271",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1050,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1049,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "1669:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1055,
															"nodeType": "RevertStatement",
															"src": "1662:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													1059,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1059,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1074,
														"src": "1732:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1058,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1066,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1060,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "1750:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1062,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "1772:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:8"
											},
											{
												"condition": {
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:8",
													"subExpression": {
														"id": 1067,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "1798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1073,
												"nodeType": "IfStatement",
												"src": "1793:63:8",
												"trueBody": {
													"id": 1072,
													"nodeType": "Block",
													"src": "1807:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1069,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "1828:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1071,
															"nodeType": "RevertStatement",
															"src": "1821:24:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1550:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1577:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:8"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:8"
									},
									"scope": 1271,
									"src": "1531:331:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "2794:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1086,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "2833:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1087,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "2841:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1085,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "2811:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1084,
												"id": 1090,
												"nodeType": "Return",
												"src": "2804:45:8"
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "2727:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "2743:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1079,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:8"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "2780:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1082,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:8"
									},
									"scope": 1271,
									"src": "2705:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "3293:279:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1106,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1271",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1271",
																		"typeString": "library Address"
																	}
																],
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1104,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1109,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "3331:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1119,
												"nodeType": "IfStatement",
												"src": "3303:108:8",
												"trueBody": {
													"id": 1118,
													"nodeType": "Block",
													"src": "3338:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1114,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1271",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1271",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1112,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1111,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "3359:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1117,
															"nodeType": "RevertStatement",
															"src": "3352:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													1121,
													1123
												],
												"declarations": [
													{
														"constant": false,
														"id": 1121,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "3421:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1120,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1123,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "3435:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1122,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1130,
												"initialValue": {
													"arguments": [
														{
															"id": 1128,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "3488:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1124,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "3462:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1126,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1099,
																"src": "3481:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1132,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "3537:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1133,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "3545:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1134,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "3554:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1131,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "3510:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1103,
												"id": 1136,
												"nodeType": "Return",
												"src": "3503:62:8"
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3211:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3227:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3246:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:8"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3279:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:8"
									},
									"scope": 1271,
									"src": "3180:392:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "3811:154:8",
										"statements": [
											{
												"assignments": [
													1149,
													1151
												],
												"declarations": [
													{
														"constant": false,
														"id": 1149,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "3822:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1148,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1151,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "3836:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1150,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1156,
												"initialValue": {
													"arguments": [
														{
															"id": 1154,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "3881:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1152,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "3863:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1158,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "3930:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1159,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "3938:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1160,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "3947:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1157,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "3903:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1147,
												"id": 1162,
												"nodeType": "Return",
												"src": "3896:62:8"
											}
										]
									},
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "3739:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "3755:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:8"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "3797:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1145,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:8"
									},
									"scope": 1271,
									"src": "3711:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "4203:156:8",
										"statements": [
											{
												"assignments": [
													1175,
													1177
												],
												"declarations": [
													{
														"constant": false,
														"id": 1175,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1189,
														"src": "4214:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1174,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1177,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1189,
														"src": "4228:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1176,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1182,
												"initialValue": {
													"arguments": [
														{
															"id": 1180,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "4275:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1178,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "4255:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1184,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "4324:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1185,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "4332:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1186,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "4341:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1183,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "4297:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1173,
												"id": 1188,
												"nodeType": "Return",
												"src": "4290:62:8"
											}
										]
									},
									"documentation": {
										"id": 1165,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "4136:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "4152:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1168,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:8"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "4189:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1171,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:8"
									},
									"scope": 1271,
									"src": "4106:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "4783:424:8",
										"statements": [
											{
												"condition": {
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:8",
													"subExpression": {
														"id": 1202,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "4798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1227,
													"nodeType": "Block",
													"src": "4857:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1209,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "5045:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1213,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1193,
																				"src": "5071:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1224,
															"nodeType": "IfStatement",
															"src": "5041:119:8",
															"trueBody": {
																"id": 1223,
																"nodeType": "Block",
																"src": "5096:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1220,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1193,
																					"src": "5138:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1219,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1031,
																				"src": "5121:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1222,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1225,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "5180:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1201,
															"id": 1226,
															"nodeType": "Return",
															"src": "5173:17:8"
														}
													]
												},
												"id": 1228,
												"nodeType": "IfStatement",
												"src": "4793:408:8",
												"trueBody": {
													"id": 1208,
													"nodeType": "Block",
													"src": "4807:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1205,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1197,
																		"src": "4829:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1204,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1270,
																	"src": "4821:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1207,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "4670:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "4694:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "4716:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1196,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:8"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "4769:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1199,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:8"
									},
									"scope": 1271,
									"src": "4625:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "5509:122:8",
										"statements": [
											{
												"condition": {
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:8",
													"subExpression": {
														"id": 1240,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "5524:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1249,
													"nodeType": "Block",
													"src": "5583:42:8",
													"statements": [
														{
															"expression": {
																"id": 1247,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "5604:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1239,
															"id": 1248,
															"nodeType": "Return",
															"src": "5597:17:8"
														}
													]
												},
												"id": 1250,
												"nodeType": "IfStatement",
												"src": "5519:106:8",
												"trueBody": {
													"id": 1246,
													"nodeType": "Block",
													"src": "5533:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1243,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "5555:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1242,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1270,
																	"src": "5547:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1245,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5433:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1232,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5447:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:8"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5495:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:8"
									},
									"scope": 1271,
									"src": "5407:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "5798:461:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1258,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "5874:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1267,
													"nodeType": "Block",
													"src": "6204:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1264,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "6225:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1266,
															"nodeType": "RevertStatement",
															"src": "6218:24:8"
														}
													]
												},
												"id": 1268,
												"nodeType": "IfStatement",
												"src": "5870:383:8",
												"trueBody": {
													"id": 1263,
													"nodeType": "Block",
													"src": "5897:301:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:8",
																"nodeType": "YulBlock",
																"src": "6055:133:8",
																"statements": [
																	{
																		"nativeSrc": "6073:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:8"
																			},
																			"nativeSrc": "6096:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:8",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:8",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:8"
																					},
																					"nativeSrc": "6137:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:8"
																			},
																			"nativeSrc": "6130:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:8"
																		},
																		"nativeSrc": "6130:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:8"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1255,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1255,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:8",
																	"valueSize": 1
																}
															],
															"id": 1262,
															"nodeType": "InlineAssembly",
															"src": "6046:142:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "5760:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:8"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:8"
									},
									"scope": 1271,
									"src": "5743:516:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1272,
							"src": "195:6066:8",
							"usedErrors": [
								1026,
								1031,
								1034
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1381
						]
					},
					"id": 1382,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1273,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1274,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:9",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1381,
							"linearizedBaseContracts": [
								1381
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1277,
									"members": [
										{
											"constant": false,
											"id": 1276,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1277,
											"src": "1300:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1275,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:9",
									"nodeType": "StructDefinition",
									"scope": 1381,
									"src": "1271:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1280,
									"members": [
										{
											"constant": false,
											"id": 1279,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1280,
											"src": "1355:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1278,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:9",
									"nodeType": "StructDefinition",
									"scope": 1381,
									"src": "1326:46:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1283,
									"members": [
										{
											"constant": false,
											"id": 1282,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1283,
											"src": "1407:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1281,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:9",
									"nodeType": "StructDefinition",
									"scope": 1381,
									"src": "1378:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1286,
									"members": [
										{
											"constant": false,
											"id": 1285,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1286,
											"src": "1462:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1284,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:9",
									"nodeType": "StructDefinition",
									"scope": 1381,
									"src": "1433:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1289,
									"members": [
										{
											"constant": false,
											"id": 1288,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1289,
											"src": "1516:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1287,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:9",
									"nodeType": "StructDefinition",
									"scope": 1381,
									"src": "1488:47:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1292,
									"members": [
										{
											"constant": false,
											"id": 1291,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1292,
											"src": "1568:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1290,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:9",
									"nodeType": "StructDefinition",
									"scope": 1381,
									"src": "1541:45:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "1768:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:9",
													"nodeType": "YulBlock",
													"src": "1830:38:9",
													"statements": [
														{
															"nativeSrc": "1844:14:9",
															"nodeType": "YulAssignment",
															"src": "1844:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:9",
																"nodeType": "YulIdentifier",
																"src": "1854:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1299,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1295,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:9",
														"valueSize": 1
													}
												],
												"id": 1301,
												"nodeType": "InlineAssembly",
												"src": "1821:47:9"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:9",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1708:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1294,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:9"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1745:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1277_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1298,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1297,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1277,
														"src": "1745:11:9"
													},
													"referencedDeclaration": 1277,
													"src": "1745:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1277_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:9"
									},
									"scope": 1381,
									"src": "1684:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "2056:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:9",
													"nodeType": "YulBlock",
													"src": "2118:38:9",
													"statements": [
														{
															"nativeSrc": "2132:14:9",
															"nodeType": "YulAssignment",
															"src": "2132:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:9",
																"nodeType": "YulIdentifier",
																"src": "2142:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1310,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1306,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:9",
														"valueSize": 1
													}
												],
												"id": 1312,
												"nodeType": "InlineAssembly",
												"src": "2109:47:9"
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:9",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "1996:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:9"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2033:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1280_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1309,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1308,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1280,
														"src": "2033:11:9"
													},
													"referencedDeclaration": 1280,
													"src": "2033:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1280_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:9"
									},
									"scope": 1381,
									"src": "1972:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "2344:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:9",
													"nodeType": "YulBlock",
													"src": "2406:38:9",
													"statements": [
														{
															"nativeSrc": "2420:14:9",
															"nodeType": "YulAssignment",
															"src": "2420:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:9",
																"nodeType": "YulIdentifier",
																"src": "2430:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1321,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1317,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:9",
														"valueSize": 1
													}
												],
												"id": 1323,
												"nodeType": "InlineAssembly",
												"src": "2397:47:9"
											}
										]
									},
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:9",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "2284:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1316,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:9"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "2321:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1283_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1320,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1319,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1283,
														"src": "2321:11:9"
													},
													"referencedDeclaration": 1283,
													"src": "2321:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1283_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:9"
									},
									"scope": 1381,
									"src": "2260:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "2632:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:9",
													"nodeType": "YulBlock",
													"src": "2694:38:9",
													"statements": [
														{
															"nativeSrc": "2708:14:9",
															"nodeType": "YulAssignment",
															"src": "2708:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:9",
																"nodeType": "YulIdentifier",
																"src": "2718:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1332,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1328,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:9",
														"valueSize": 1
													}
												],
												"id": 1334,
												"nodeType": "InlineAssembly",
												"src": "2685:47:9"
											}
										]
									},
									"documentation": {
										"id": 1326,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:9",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "2572:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:9"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "2609:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1286_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1331,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1330,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1286,
														"src": "2609:11:9"
													},
													"referencedDeclaration": 1286,
													"src": "2609:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1286_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:9"
									},
									"scope": 1381,
									"src": "2548:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "2917:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:9",
													"nodeType": "YulBlock",
													"src": "2979:38:9",
													"statements": [
														{
															"nativeSrc": "2993:14:9",
															"nodeType": "YulAssignment",
															"src": "2993:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:9",
																"nodeType": "YulIdentifier",
																"src": "3003:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1343,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1339,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:9",
														"valueSize": 1
													}
												],
												"id": 1345,
												"nodeType": "InlineAssembly",
												"src": "2970:47:9"
											}
										]
									},
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:9",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "2858:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:9"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "2895:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1289_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1342,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1341,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1289,
														"src": "2895:10:9"
													},
													"referencedDeclaration": 1289,
													"src": "2895:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1289_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:9"
									},
									"scope": 1381,
									"src": "2835:188:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1357,
										"nodeType": "Block",
										"src": "3225:112:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:9",
													"nodeType": "YulBlock",
													"src": "3287:44:9",
													"statements": [
														{
															"nativeSrc": "3301:20:9",
															"nodeType": "YulAssignment",
															"src": "3301:20:9",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:9",
																"nodeType": "YulIdentifier",
																"src": "3311:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1354,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1350,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1356,
												"nodeType": "InlineAssembly",
												"src": "3278:53:9"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:9",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "3158:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1349,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:9"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "3203:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1289_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1353,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1352,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1289,
														"src": "3203:10:9"
													},
													"referencedDeclaration": 1289,
													"src": "3203:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1289_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:9"
									},
									"scope": 1381,
									"src": "3135:202:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "3513:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:9",
													"nodeType": "YulBlock",
													"src": "3575:38:9",
													"statements": [
														{
															"nativeSrc": "3589:14:9",
															"nodeType": "YulAssignment",
															"src": "3589:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:9",
																"nodeType": "YulIdentifier",
																"src": "3599:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1365,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1361,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:9",
														"valueSize": 1
													}
												],
												"id": 1367,
												"nodeType": "InlineAssembly",
												"src": "3566:47:9"
											}
										]
									},
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:9",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "3455:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:9"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "3492:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1292_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1364,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1363,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1292,
														"src": "3492:9:9"
													},
													"referencedDeclaration": 1292,
													"src": "3492:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1292_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:9"
									},
									"scope": 1381,
									"src": "3433:186:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "3816:112:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:9",
													"nodeType": "YulBlock",
													"src": "3878:44:9",
													"statements": [
														{
															"nativeSrc": "3892:20:9",
															"nodeType": "YulAssignment",
															"src": "3892:20:9",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:9",
																"nodeType": "YulIdentifier",
																"src": "3902:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1376,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1372,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1378,
												"nodeType": "InlineAssembly",
												"src": "3869:53:9"
											}
										]
									},
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:9",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "3751:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:9"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "3795:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1292_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1375,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1374,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1292,
														"src": "3795:9:9"
													},
													"referencedDeclaration": 1292,
													"src": "3795:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1292_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:9"
									},
									"scope": 1381,
									"src": "3729:199:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1382,
							"src": "1245:2685:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:9"
				},
				"id": 9
			},
			"DripWarrior/poolContract.sol": {
				"ast": {
					"absolutePath": "DripWarrior/poolContract.sol",
					"exportedSymbols": {
						"AutomationCompatibleInterface": [
							18
						],
						"ContextUpgradeable": [
							695
						],
						"ERC1967Utils": [
							1008
						],
						"IBEP20": [
							1425
						],
						"IERC1822Proxiable": [
							705
						],
						"Initializable": [
							467
						],
						"OwnableUpgradeable": [
							213
						],
						"PoolContrcat": [
							3007
						],
						"UUPSUpgradeable": [
							649
						]
					},
					"id": 3008,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1383,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3008,
							"sourceUnit": 214,
							"src": "107:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1385,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3008,
							"sourceUnit": 468,
							"src": "183:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 1386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3008,
							"sourceUnit": 650,
							"src": "259:77:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
							"file": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
							"id": 1388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3008,
							"sourceUnit": 19,
							"src": "337:132:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1387,
										"name": "AutomationCompatibleInterface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 18,
										"src": "345:29:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1425,
							"linearizedBaseContracts": [
								1425
							],
							"name": "IBEP20",
							"nameLocation": "528:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 1395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "563:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "581:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "573:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:17:10"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "613:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:9:10"
									},
									"scope": 1425,
									"src": "554:68:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1404,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "636:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "653:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "645:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "672:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "664:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:35:10"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "698:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "698:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:6:10"
									},
									"scope": 1425,
									"src": "627:77:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "718:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "736:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "728:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "751:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "743:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:32:10"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "783:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "782:9:10"
									},
									"scope": 1425,
									"src": "709:83:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "806:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "827:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "819:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "842:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "834:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "860:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "852:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:49:10"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "886:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "886:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "885:6:10"
									},
									"scope": 1425,
									"src": "797:95:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3008,
							"src": "518:376:10",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1426,
										"name": "Initializable",
										"nameLocations": [
											"921:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 467,
										"src": "921:13:10"
									},
									"id": 1427,
									"nodeType": "InheritanceSpecifier",
									"src": "921:13:10"
								},
								{
									"baseName": {
										"id": 1428,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"936:18:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 213,
										"src": "936:18:10"
									},
									"id": 1429,
									"nodeType": "InheritanceSpecifier",
									"src": "936:18:10"
								},
								{
									"baseName": {
										"id": 1430,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"956:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 649,
										"src": "956:15:10"
									},
									"id": 1431,
									"nodeType": "InheritanceSpecifier",
									"src": "956:15:10"
								},
								{
									"baseName": {
										"id": 1432,
										"name": "AutomationCompatibleInterface",
										"nameLocations": [
											"973:29:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 18,
										"src": "973:29:10"
									},
									"id": 1433,
									"nodeType": "InheritanceSpecifier",
									"src": "973:29:10"
								}
							],
							"canonicalName": "PoolContrcat",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3007,
							"linearizedBaseContracts": [
								3007,
								18,
								649,
								705,
								213,
								695,
								467
							],
							"name": "PoolContrcat",
							"nameLocation": "905:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "11eac855",
									"id": 1436,
									"mutability": "mutable",
									"name": "usdcToken",
									"nameLocation": "1024:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "1010:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$1425",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 1435,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1434,
											"name": "IBEP20",
											"nameLocations": [
												"1010:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1425,
											"src": "1010:6:10"
										},
										"referencedDeclaration": 1425,
										"src": "1010:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$1425",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "188e07b9",
									"id": 1438,
									"mutability": "mutable",
									"name": "treasuryPoolAmount",
									"nameLocation": "1059:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "1044:33:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1437,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1044:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b47ff951",
									"id": 1440,
									"mutability": "mutable",
									"name": "ownerShipPoolAmount",
									"nameLocation": "1098:19:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "1083:34:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1439,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1083:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "567e98f9",
									"id": 1442,
									"mutability": "mutable",
									"name": "totalStakedAmount",
									"nameLocation": "1138:17:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "1123:32:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1441,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1123:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "33244c2c",
									"id": 1444,
									"mutability": "mutable",
									"name": "tdividentPayoutPercentage",
									"nameLocation": "1177:25:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "1162:40:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1443,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1162:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "44490ff4",
									"id": 1446,
									"mutability": "mutable",
									"name": "odividentPayoutPercentage",
									"nameLocation": "1223:25:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "1208:40:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1445,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1208:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ce356a24",
									"id": 1448,
									"mutability": "mutable",
									"name": "flowToTreasuryPercentage",
									"nameLocation": "1269:24:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "1254:39:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1447,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1254:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3a71a9e4",
									"id": 1450,
									"mutability": "mutable",
									"name": "maintainceFeePercentage",
									"nameLocation": "1314:23:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "1299:38:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1449,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1299:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "01934a83",
									"id": 1452,
									"mutability": "mutable",
									"name": "noOfUsers",
									"nameLocation": "1359:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "1344:24:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1451,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1344:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5462870d",
									"id": 1454,
									"mutability": "mutable",
									"name": "multisigAddress",
									"nameLocation": "1389:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "1374:30:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1453,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1374:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1456,
									"mutability": "mutable",
									"name": "locked",
									"nameLocation": "1424:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "1411:19:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1455,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1411:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "947a36fb",
									"id": 1458,
									"mutability": "mutable",
									"name": "interval",
									"nameLocation": "1451:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "1436:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1457,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1436:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "30cac972",
									"id": 1460,
									"mutability": "mutable",
									"name": "realInterval",
									"nameLocation": "1527:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "1512:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1512:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "39518b5e",
									"id": 1462,
									"mutability": "mutable",
									"name": "startingTime",
									"nameLocation": "1607:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "1592:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1461,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1592:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3f3b3b27",
									"id": 1464,
									"mutability": "mutable",
									"name": "lastTimeStamp",
									"nameLocation": "1641:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "1626:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1463,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1626:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3070fbf8",
									"id": 1466,
									"mutability": "mutable",
									"name": "s_forwarderAddress",
									"nameLocation": "1725:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "1710:33:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1465,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1710:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f0664a4f",
									"id": 1468,
									"mutability": "mutable",
									"name": "ownerOne",
									"nameLocation": "1765:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "1750:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1467,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1750:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "83aa9985",
									"id": 1470,
									"mutability": "mutable",
									"name": "ownerTwo",
									"nameLocation": "1794:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "1779:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1469,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1779:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "PoolContrcat.UserRegistered",
									"id": 1483,
									"members": [
										{
											"constant": false,
											"id": 1472,
											"mutability": "mutable",
											"name": "blocked",
											"nameLocation": "1846:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1483,
											"src": "1841:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1471,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1841:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1474,
											"mutability": "mutable",
											"name": "receivedAmount",
											"nameLocation": "1871:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 1483,
											"src": "1863:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1473,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1863:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1476,
											"mutability": "mutable",
											"name": "withdrawAmount",
											"nameLocation": "1903:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 1483,
											"src": "1895:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1475,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1895:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1478,
											"mutability": "mutable",
											"name": "receiveFromTreasury",
											"nameLocation": "1935:19:10",
											"nodeType": "VariableDeclaration",
											"scope": 1483,
											"src": "1927:27:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1477,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1927:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1480,
											"mutability": "mutable",
											"name": "receiveFromOwneerShip",
											"nameLocation": "1972:21:10",
											"nodeType": "VariableDeclaration",
											"scope": 1483,
											"src": "1964:29:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1479,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1964:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1482,
											"mutability": "mutable",
											"name": "totalStakedAmount",
											"nameLocation": "2011:17:10",
											"nodeType": "VariableDeclaration",
											"scope": 1483,
											"src": "2003:25:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1481,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2003:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserRegistered",
									"nameLocation": "1816:14:10",
									"nodeType": "StructDefinition",
									"scope": 3007,
									"src": "1809:226:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9c361e4e",
									"id": 1485,
									"mutability": "mutable",
									"name": "totalProjects",
									"nameLocation": "2056:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "2041:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1484,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2041:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c7fd5bf0",
									"id": 1489,
									"mutability": "mutable",
									"name": "alreadyAdded",
									"nameLocation": "2107:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "2075:44:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1488,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1486,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2083:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2075:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1487,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2094:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a4f67b8b",
									"id": 1493,
									"mutability": "mutable",
									"name": "totalUsers",
									"nameLocation": "2160:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "2125:45:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1492,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1490,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2133:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2125:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1491,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2144:7:10",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ff3d65d9",
									"id": 1497,
									"mutability": "mutable",
									"name": "tPPercentages",
									"nameLocation": "2211:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "2176:48:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1496,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1494,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2184:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2176:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1495,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2195:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bccbc36c",
									"id": 1502,
									"mutability": "mutable",
									"name": "userRegistered",
									"nameLocation": "2272:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 3007,
									"src": "2230:56:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
										"typeString": "mapping(address => struct PoolContrcat.UserRegistered)"
									},
									"typeName": {
										"id": 1501,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1498,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2238:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2230:34:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
											"typeString": "mapping(address => struct PoolContrcat.UserRegistered)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1500,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1499,
												"name": "UserRegistered",
												"nameLocations": [
													"2249:14:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1483,
												"src": "2249:14:10"
											},
											"referencedDeclaration": 1483,
											"src": "2249:14:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserRegistered_$1483_storage_ptr",
												"typeString": "struct PoolContrcat.UserRegistered"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "a9f166643ec132a11638e74e3c3a78d4ae278fcbf92998240e0e97676f54e404",
									"id": 1506,
									"name": "AddTreasuery",
									"nameLocation": "2299:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"indexed": false,
												"mutability": "mutable",
												"name": "_treasuryPoolAmount",
												"nameLocation": "2320:19:10",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "2312:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2312:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2311:29:10"
									},
									"src": "2293:48:10"
								},
								{
									"anonymous": false,
									"eventSelector": "73834e1d1ee73ba659470a3603b888903853d3a3c9fda34e71c093a0e35cab94",
									"id": 1510,
									"name": "AddOwnership",
									"nameLocation": "2352:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"indexed": false,
												"mutability": "mutable",
												"name": "_ownerShipPoolAmount",
												"nameLocation": "2373:20:10",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "2365:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2365:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2364:30:10"
									},
									"src": "2346:49:10"
								},
								{
									"anonymous": false,
									"eventSelector": "a89b69c5958ec1ccf0df0de746a8708f5b6a6b429430129f16f46f44b319c900",
									"id": 1516,
									"name": "AddFunds",
									"nameLocation": "2406:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2423:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "2415:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2415:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"indexed": false,
												"mutability": "mutable",
												"name": "_projectNo",
												"nameLocation": "2440:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "2432:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2432:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2414:37:10"
									},
									"src": "2400:52:10"
								},
								{
									"anonymous": false,
									"eventSelector": "3b68dc4e210c46d3622293f2b941cdfde795bb6e17286bb289ba05a6a3b5541f",
									"id": 1522,
									"name": "offInterval",
									"nameLocation": "2463:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"indexed": false,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "2483:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "2475:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2475:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"indexed": false,
												"mutability": "mutable",
												"name": "_interval",
												"nameLocation": "2499:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "2491:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2491:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:35:10"
									},
									"src": "2457:53:10"
								},
								{
									"anonymous": false,
									"eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
									"id": 1528,
									"name": "Withdraw",
									"nameLocation": "2521:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2539:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "2531:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2531:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdcAmount",
												"nameLocation": "2558:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "2550:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2550:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2530:39:10"
									},
									"src": "2515:55:10"
								},
								{
									"anonymous": false,
									"eventSelector": "b5671393c7c6980552e50a31e778921eb17d764c2e98fbf4d44fff524712def9",
									"id": 1534,
									"name": "PercentageChanged",
									"nameLocation": "2581:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"indexed": false,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "2607:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "2599:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2599:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"indexed": false,
												"mutability": "mutable",
												"name": "_newPercentage",
												"nameLocation": "2623:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "2615:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2598:40:10"
									},
									"src": "2575:64:10"
								},
								{
									"anonymous": false,
									"eventSelector": "75f91f3cecb8c46f20150f60f77a6e1f0de00776627692db82ef1960af84c33a",
									"id": 1540,
									"name": "SetForwarderAddress",
									"nameLocation": "2650:19:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"indexed": false,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "2678:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "2670:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2670:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"indexed": false,
												"mutability": "mutable",
												"name": "_s_forwarderAddress",
												"nameLocation": "2694:19:10",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "2686:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:45:10"
									},
									"src": "2644:71:10"
								},
								{
									"anonymous": false,
									"eventSelector": "7a1655bc3160d3413bf1d5235e55be12e01b7e8bc2436a9bff09c3b4fa2421f1",
									"id": 1548,
									"name": "UserBlocked",
									"nameLocation": "2726:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2746:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "2738:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockUserAddress",
												"nameLocation": "2760:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "2752:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2752:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"indexed": false,
												"mutability": "mutable",
												"name": "blocked",
												"nameLocation": "2783:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "2778:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2778:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2737:54:10"
									},
									"src": "2720:72:10"
								},
								{
									"anonymous": false,
									"eventSelector": "14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab",
									"id": 1556,
									"name": "StakeTokens",
									"nameLocation": "2803:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2824:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "2816:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2816:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"indexed": false,
												"mutability": "mutable",
												"name": "recepient",
												"nameLocation": "2840:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "2832:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2832:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdcAmount",
												"nameLocation": "2858:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "2850:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2850:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2815:54:10"
									},
									"src": "2797:73:10"
								},
								{
									"anonymous": false,
									"eventSelector": "ae69b6b07596923fbb836fe40924ed537f2035f0f44e37f42440b0939253d167",
									"id": 1564,
									"name": "singleUserAddeed",
									"nameLocation": "2881:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2906:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2898:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2898:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2920:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2912:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"indexed": false,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "2937:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2929:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2929:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2897:52:10"
									},
									"src": "2875:75:10"
								},
								{
									"anonymous": false,
									"eventSelector": "2b5090e035d3026f5448298c9adc68db8bbc1b26a8af5c81b2b2a9fc07ca4a00",
									"id": 1572,
									"name": "SetInterval",
									"nameLocation": "2961:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"indexed": false,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "2981:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "2973:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2973:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"indexed": false,
												"mutability": "mutable",
												"name": "_interval",
												"nameLocation": "2997:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "2989:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2989:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"indexed": false,
												"mutability": "mutable",
												"name": "_lastTimeStamp",
												"nameLocation": "3016:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "3008:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3008:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2972:59:10"
									},
									"src": "2955:77:10"
								},
								{
									"anonymous": false,
									"eventSelector": "e1976e16ed8ce8e740235978fbe69b27d5eea683b2e017bb0bd2fabb33294b3f",
									"id": 1580,
									"name": "AddProject",
									"nameLocation": "3043:10:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"indexed": false,
												"mutability": "mutable",
												"name": "projectId",
												"nameLocation": "3062:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "3054:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3054:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"indexed": false,
												"mutability": "mutable",
												"name": "OpPercentage",
												"nameLocation": "3081:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "3073:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3073:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"indexed": false,
												"mutability": "mutable",
												"name": "tpPercentage",
												"nameLocation": "3102:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "3094:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3094:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:62:10"
									},
									"src": "3037:79:10"
								},
								{
									"anonymous": false,
									"eventSelector": "472714a70b748503a00efa85a1c3081b2a3477ce3be0227cb140455f82ccaeb6",
									"id": 1588,
									"name": "multipleUserAddeed",
									"nameLocation": "3127:18:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3154:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "3146:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amountLength",
												"nameLocation": "3168:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "3160:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"indexed": false,
												"mutability": "mutable",
												"name": "usersLength",
												"nameLocation": "3191:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "3183:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3145:58:10"
									},
									"src": "3121:83:10"
								},
								{
									"anonymous": false,
									"eventSelector": "ee826440768329b0c72f81331212ee31fcdac1ea79a248d24821e40c34e58020",
									"id": 1596,
									"name": "WeeklyTransfered",
									"nameLocation": "3215:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"indexed": false,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "3240:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "3232:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3232:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"indexed": false,
												"mutability": "mutable",
												"name": "ownerShipPoolAmount",
												"nameLocation": "3256:19:10",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "3247:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3247:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"indexed": false,
												"mutability": "mutable",
												"name": "treasuryPoolAmount",
												"nameLocation": "3286:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "3277:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3277:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3231:74:10"
									},
									"src": "3209:97:10"
								},
								{
									"errorSelector": "a24a13a6",
									"id": 1598,
									"name": "ArrayLengthMismatch",
									"nameLocation": "3318:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3337:2:10"
									},
									"src": "3312:28:10"
								},
								{
									"errorSelector": "81ed1ae3",
									"id": 1602,
									"name": "wrongValue",
									"nameLocation": "3351:10:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3367:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "3362:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1599,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3362:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3361:12:10"
									},
									"src": "3345:29:10"
								},
								{
									"errorSelector": "54593e75",
									"id": 1606,
									"name": "wrongTime",
									"nameLocation": "3385:9:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "3403:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "3395:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:14:10"
									},
									"src": "3379:30:10"
								},
								{
									"errorSelector": "6fa5c3c0",
									"id": 1610,
									"name": "userBlocked",
									"nameLocation": "3420:11:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "blocked",
												"nameLocation": "3437:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "3432:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1607,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3432:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:14:10"
									},
									"src": "3414:32:10"
								},
								{
									"errorSelector": "f6b79c58",
									"id": 1614,
									"name": "wrongOwner",
									"nameLocation": "3457:10:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3476:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "3468:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3468:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3467:15:10"
									},
									"src": "3451:32:10"
								},
								{
									"errorSelector": "2ff47830",
									"id": 1618,
									"name": "wrongAmount",
									"nameLocation": "3494:11:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3514:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "3506:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3505:16:10"
									},
									"src": "3488:34:10"
								},
								{
									"errorSelector": "7ca8d0db",
									"id": 1622,
									"name": "zeroUsers",
									"nameLocation": "3533:9:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "noOfUsers",
												"nameLocation": "3551:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "3543:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3543:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3542:19:10"
									},
									"src": "3527:35:10"
								},
								{
									"errorSelector": "d85d3cef",
									"id": 1626,
									"name": "transferFailed",
									"nameLocation": "3573:14:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "transfered",
												"nameLocation": "3593:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "3588:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3588:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3587:17:10"
									},
									"src": "3567:38:10"
								},
								{
									"errorSelector": "31b6e358",
									"id": 1630,
									"name": "notEnoughBalance",
									"nameLocation": "3616:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3641:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "3633:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3633:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3632:16:10"
									},
									"src": "3610:39:10"
								},
								{
									"errorSelector": "f775555c",
									"id": 1634,
									"name": "emptyAmount",
									"nameLocation": "3660:11:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "amountLength",
												"nameLocation": "3680:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "3672:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3672:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3671:22:10"
									},
									"src": "3654:40:10"
								},
								{
									"errorSelector": "222a50f3",
									"id": 1638,
									"name": "wrongProjectNo",
									"nameLocation": "3705:14:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "projectNO",
												"nameLocation": "3728:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "3720:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3720:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3719:19:10"
									},
									"src": "3699:40:10"
								},
								{
									"errorSelector": "e4cfa94d",
									"id": 1642,
									"name": "wrongAddress",
									"nameLocation": "3750:12:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "wrongAddress",
												"nameLocation": "3771:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "3763:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3763:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3762:22:10"
									},
									"src": "3744:41:10"
								},
								{
									"errorSelector": "cdbc6335",
									"id": 1646,
									"name": "wrongPercentage",
									"nameLocation": "3796:15:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "percentage",
												"nameLocation": "3820:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3812:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3812:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3811:20:10"
									},
									"src": "3790:42:10"
								},
								{
									"errorSelector": "3a46e2ab",
									"id": 1650,
									"name": "emptyAddresses",
									"nameLocation": "3843:14:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "addressLength",
												"nameLocation": "3866:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "3858:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3858:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3857:23:10"
									},
									"src": "3837:44:10"
								},
								{
									"errorSelector": "71540007",
									"id": 1654,
									"name": "wrongInterval",
									"nameLocation": "3892:13:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "updateInterval",
												"nameLocation": "3914:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "3906:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3906:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3905:24:10"
									},
									"src": "3886:44:10"
								},
								{
									"errorSelector": "98e712c3",
									"id": 1658,
									"name": "notEnoughAmount",
									"nameLocation": "3941:15:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "balanceAmount",
												"nameLocation": "3965:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "3957:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3957:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3956:23:10"
									},
									"src": "3935:45:10"
								},
								{
									"errorSelector": "580ad538",
									"id": 1662,
									"name": "wrongPerceentage",
									"nameLocation": "3992:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "percentageNumber",
												"nameLocation": "4017:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "4009:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4009:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4008:26:10"
									},
									"src": "3985:50:10"
								},
								{
									"errorSelector": "9b7220af",
									"id": 1666,
									"name": "wrongPercentageAmount",
									"nameLocation": "4046:21:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "_totalStakeAmount",
												"nameLocation": "4076:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "4068:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4068:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4067:27:10"
									},
									"src": "4040:55:10"
								},
								{
									"errorSelector": "2fd92d8d",
									"id": 1672,
									"name": "emptyPools",
									"nameLocation": "4106:10:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "ownerShipPoolAmount",
												"nameLocation": "4125:19:10",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "4117:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4117:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "treasuryPoolAmount",
												"nameLocation": "4154:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "4146:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4146:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4116:57:10"
									},
									"src": "4100:74:10"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "4247:39:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1676,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "4257:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4257:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "4257:22:10"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "4180:48:10",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 1680,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4244:2:10"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4247:0:10"
									},
									"scope": 3007,
									"src": "4233:53:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1736,
										"nodeType": "Block",
										"src": "4492:702:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1696,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "4526:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1695,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "4511:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4511:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1698,
												"nodeType": "ExpressionStatement",
												"src": "4511:28:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1699,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "4549:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4549:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1701,
												"nodeType": "ExpressionStatement",
												"src": "4549:24:10"
											},
											{
												"expression": {
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1702,
														"name": "usdcToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "4584:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$1425",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1704,
																"name": "_usdcAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1684,
																"src": "4603:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1703,
															"name": "IBEP20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "4596:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBEP20_$1425_$",
																"typeString": "type(contract IBEP20)"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4596:20:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$1425",
															"typeString": "contract IBEP20"
														}
													},
													"src": "4584:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1425",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1707,
												"nodeType": "ExpressionStatement",
												"src": "4584:32:10"
											},
											{
												"expression": {
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1708,
														"name": "tdividentPayoutPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "4824:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35303030",
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4852:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000_by_1",
															"typeString": "int_const 5000"
														},
														"value": "5000"
													},
													"src": "4824:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1711,
												"nodeType": "ExpressionStatement",
												"src": "4824:32:10"
											},
											{
												"expression": {
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1712,
														"name": "odividentPayoutPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "4878:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37353030",
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4906:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7500_by_1",
															"typeString": "int_const 7500"
														},
														"value": "7500"
													},
													"src": "4878:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "4878:32:10"
											},
											{
												"expression": {
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1716,
														"name": "flowToTreasuryPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "4945:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31353030",
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4972:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1500_by_1",
															"typeString": "int_const 1500"
														},
														"value": "1500"
													},
													"src": "4945:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1719,
												"nodeType": "ExpressionStatement",
												"src": "4945:31:10"
											},
											{
												"expression": {
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1720,
														"name": "maintainceFeePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "4997:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 1721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5023:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "4997:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "4997:30:10"
											},
											{
												"expression": {
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1724,
														"name": "multisigAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "5085:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1725,
														"name": "_multisigAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "5103:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5085:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1727,
												"nodeType": "ExpressionStatement",
												"src": "5085:34:10"
											},
											{
												"expression": {
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1728,
														"name": "ownerOne",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "5133:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1729,
														"name": "_ownerOne",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "5144:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5133:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1731,
												"nodeType": "ExpressionStatement",
												"src": "5133:20:10"
											},
											{
												"expression": {
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1732,
														"name": "ownerTwo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "5167:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1733,
														"name": "_ownerTwo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1688,
														"src": "5178:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5167:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1735,
												"nodeType": "ExpressionStatement",
												"src": "5167:20:10"
											}
										]
									},
									"functionSelector": "1459457a",
									"id": 1737,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1693,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1692,
												"name": "initializer",
												"nameLocations": [
													"4469:11:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 321,
												"src": "4469:11:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4469:11:10"
										}
									],
									"name": "initialize",
									"nameLocation": "4301:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "4329:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4321:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "_usdcAddress",
												"nameLocation": "4359:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4351:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4351:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "_ownerOne",
												"nameLocation": "4389:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4381:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4381:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "_ownerTwo",
												"nameLocation": "4416:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4408:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4408:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "_multisigAddress",
												"nameLocation": "4443:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4435:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4435:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4311:149:10"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4492:0:10"
									},
									"scope": 3007,
									"src": "4292:902:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1772,
										"nodeType": "Block",
										"src": "5271:273:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1744,
														"name": "_tPPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "5293:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1745,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5310:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1752,
												"nodeType": "IfStatement",
												"src": "5290:84:10",
												"trueBody": {
													"id": 1751,
													"nodeType": "Block",
													"src": "5312:62:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1748,
																		"name": "_tPPercentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "5349:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1747,
																	"name": "wrongPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1646,
																	"src": "5333:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5333:30:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1750,
															"nodeType": "RevertStatement",
															"src": "5326:37:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1753,
															"name": "tPPercentages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "5384:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1755,
														"indexExpression": {
															"id": 1754,
															"name": "totalProjects",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "5398:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5384:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1756,
														"name": "_tPPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "5415:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5384:44:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1758,
												"nodeType": "ExpressionStatement",
												"src": "5384:44:10"
											},
											{
												"expression": {
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "5438:15:10",
													"subExpression": {
														"id": 1759,
														"name": "totalProjects",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "5438:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "5438:15:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"components": [
																{
																	"id": 1763,
																	"name": "totalProjects",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1485,
																	"src": "5482:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1764,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5481:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130303030",
																		"id": 1765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5499:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1766,
																		"name": "_tPPercentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "5507:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5499:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1768,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5498:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1769,
															"name": "_tPPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "5523:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1762,
														"name": "AddProject",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "5470:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5470:67:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1771,
												"nodeType": "EmitStatement",
												"src": "5465:72:10"
											}
										]
									},
									"functionSelector": "2765df7a",
									"id": 1773,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1742,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1741,
												"name": "bothOwner",
												"nameLocations": [
													"5260:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2979,
												"src": "5260:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5260:11:10"
										}
									],
									"name": "addProjects",
									"nameLocation": "5216:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "_tPPercentage",
												"nameLocation": "5236:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "5228:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5228:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5227:23:10"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5271:0:10"
									},
									"scope": 3007,
									"src": "5207:337:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1818,
										"nodeType": "Block",
										"src": "5609:342:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1780,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "5631:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5642:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5631:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1788,
												"nodeType": "IfStatement",
												"src": "5628:68:10",
												"trueBody": {
													"id": 1787,
													"nodeType": "Block",
													"src": "5644:52:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1784,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1775,
																		"src": "5677:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1783,
																	"name": "wrongAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1618,
																	"src": "5665:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5665:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1786,
															"nodeType": "RevertStatement",
															"src": "5658:27:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1789,
														"name": "ownerShipPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "5706:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1790,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "5729:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5706:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1792,
												"nodeType": "ExpressionStatement",
												"src": "5706:30:10"
											},
											{
												"assignments": [
													1794
												],
												"declarations": [
													{
														"constant": false,
														"id": 1794,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5752:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1818,
														"src": "5747:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1793,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5747:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1805,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1797,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5785:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5789:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5785:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1801,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5804:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PoolContrcat_$3007",
																		"typeString": "contract PoolContrcat"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PoolContrcat_$3007",
																		"typeString": "contract PoolContrcat"
																	}
																],
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5796:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1799,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5796:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5796:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1803,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "5810:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1795,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "5762:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1425",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5772:12:10",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1424,
														"src": "5762:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5762:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5747:72:10"
											},
											{
												"condition": {
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5832:8:10",
													"subExpression": {
														"id": 1806,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "5833:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1813,
												"nodeType": "IfStatement",
												"src": "5829:67:10",
												"trueBody": {
													"id": 1812,
													"nodeType": "Block",
													"src": "5841:55:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1809,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1794,
																		"src": "5877:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1808,
																	"name": "transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "5862:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5862:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1811,
															"nodeType": "RevertStatement",
															"src": "5855:30:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1815,
															"name": "ownerShipPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "5924:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1814,
														"name": "AddOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "5911:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5911:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1817,
												"nodeType": "EmitStatement",
												"src": "5906:38:10"
											}
										]
									},
									"functionSelector": "78fd078d",
									"id": 1819,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1778,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1777,
												"name": "bothOwner",
												"nameLocations": [
													"5598:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2979,
												"src": "5598:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5598:11:10"
										}
									],
									"name": "addOwnership",
									"nameLocation": "5559:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5580:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "5572:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5572:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5571:17:10"
									},
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5609:0:10"
									},
									"scope": 3007,
									"src": "5550:401:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "6020:340:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1826,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "6042:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6053:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6042:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1834,
												"nodeType": "IfStatement",
												"src": "6039:68:10",
												"trueBody": {
													"id": 1833,
													"nodeType": "Block",
													"src": "6055:52:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1830,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1821,
																		"src": "6088:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1829,
																	"name": "wrongAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1618,
																	"src": "6076:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6076:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1832,
															"nodeType": "RevertStatement",
															"src": "6069:27:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1835,
														"name": "treasuryPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "6117:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1836,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "6139:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6117:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1838,
												"nodeType": "ExpressionStatement",
												"src": "6117:29:10"
											},
											{
												"assignments": [
													1840
												],
												"declarations": [
													{
														"constant": false,
														"id": 1840,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6162:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1864,
														"src": "6157:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1839,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6157:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1851,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1843,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6195:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6199:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6195:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1847,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6214:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PoolContrcat_$3007",
																		"typeString": "contract PoolContrcat"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PoolContrcat_$3007",
																		"typeString": "contract PoolContrcat"
																	}
																],
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6206:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1845,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6206:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6206:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1849,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "6220:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1841,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "6172:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1425",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6182:12:10",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1424,
														"src": "6172:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6172:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6157:72:10"
											},
											{
												"condition": {
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6242:8:10",
													"subExpression": {
														"id": 1852,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1840,
														"src": "6243:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1859,
												"nodeType": "IfStatement",
												"src": "6239:67:10",
												"trueBody": {
													"id": 1858,
													"nodeType": "Block",
													"src": "6251:55:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1855,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1840,
																		"src": "6287:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1854,
																	"name": "transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "6272:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1857,
															"nodeType": "RevertStatement",
															"src": "6265:30:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1861,
															"name": "treasuryPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "6334:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1860,
														"name": "AddTreasuery",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "6321:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6321:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1863,
												"nodeType": "EmitStatement",
												"src": "6316:37:10"
											}
										]
									},
									"functionSelector": "5256dbbf",
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1824,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1823,
												"name": "bothOwner",
												"nameLocations": [
													"6009:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2979,
												"src": "6009:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6009:11:10"
										}
									],
									"name": "addTreasuery",
									"nameLocation": "5970:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5991:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "5983:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5983:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5982:17:10"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6020:0:10"
									},
									"scope": 3007,
									"src": "5961:399:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1955,
										"nodeType": "Block",
										"src": "6414:754:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1870,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "6436:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6447:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6436:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1878,
												"nodeType": "IfStatement",
												"src": "6433:68:10",
												"trueBody": {
													"id": 1877,
													"nodeType": "Block",
													"src": "6449:52:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1874,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1867,
																		"src": "6482:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1873,
																	"name": "wrongAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1618,
																	"src": "6470:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6470:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1876,
															"nodeType": "RevertStatement",
															"src": "6463:27:10"
														}
													]
												}
											},
											{
												"condition": {
													"expression": {
														"baseExpression": {
															"id": 1879,
															"name": "userRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "6522:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
															}
														},
														"id": 1882,
														"indexExpression": {
															"expression": {
																"id": 1880,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6537:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6541:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6537:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6522:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
															"typeString": "struct PoolContrcat.UserRegistered storage ref"
														}
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6549:7:10",
													"memberName": "blocked",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1472,
													"src": "6522:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1893,
												"nodeType": "IfStatement",
												"src": "6519:117:10",
												"trueBody": {
													"id": 1892,
													"nodeType": "Block",
													"src": "6557:79:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1885,
																				"name": "userRegistered",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1502,
																				"src": "6590:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																					"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																				}
																			},
																			"id": 1888,
																			"indexExpression": {
																				"expression": {
																					"id": 1886,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "6605:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6609:6:10",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "6605:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6590:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																				"typeString": "struct PoolContrcat.UserRegistered storage ref"
																			}
																		},
																		"id": 1889,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6617:7:10",
																		"memberName": "blocked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1472,
																		"src": "6590:34:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1884,
																	"name": "userBlocked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1610,
																	"src": "6578:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6578:47:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1891,
															"nodeType": "RevertStatement",
															"src": "6571:54:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1894,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "6646:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 1897,
															"indexExpression": {
																"expression": {
																	"id": 1895,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6661:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6665:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6661:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6646:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 1898,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6673:17:10",
														"memberName": "totalStakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1482,
														"src": "6646:44:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1899,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "6694:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6646:55:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1901,
												"nodeType": "ExpressionStatement",
												"src": "6646:55:10"
											},
											{
												"condition": {
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6722:25:10",
													"subExpression": {
														"baseExpression": {
															"id": 1902,
															"name": "alreadyAdded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "6723:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1905,
														"indexExpression": {
															"expression": {
																"id": 1903,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6736:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6740:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6736:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6723:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1925,
												"nodeType": "IfStatement",
												"src": "6719:171:10",
												"trueBody": {
													"id": 1924,
													"nodeType": "Block",
													"src": "6748:142:10",
													"statements": [
														{
															"expression": {
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1907,
																		"name": "totalUsers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1493,
																		"src": "6775:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 1909,
																	"indexExpression": {
																		"id": 1908,
																		"name": "noOfUsers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "6786:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6775:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1910,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6799:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6803:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6799:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6775:34:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1913,
															"nodeType": "ExpressionStatement",
															"src": "6775:34:10"
														},
														{
															"expression": {
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1914,
																		"name": "alreadyAdded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1489,
																		"src": "6823:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1917,
																	"indexExpression": {
																		"expression": {
																			"id": 1915,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6836:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6840:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6836:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6823:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6850:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6823:31:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1920,
															"nodeType": "ExpressionStatement",
															"src": "6823:31:10"
														},
														{
															"expression": {
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "6868:11:10",
																"subExpression": {
																	"id": 1921,
																	"name": "noOfUsers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "6868:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1923,
															"nodeType": "ExpressionStatement",
															"src": "6868:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1926,
														"name": "totalStakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "6900:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1927,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "6921:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6900:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1929,
												"nodeType": "ExpressionStatement",
												"src": "6900:28:10"
											},
											{
												"assignments": [
													1931
												],
												"declarations": [
													{
														"constant": false,
														"id": 1931,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6944:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1955,
														"src": "6939:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1930,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6939:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1939,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1934,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6976:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6980:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6976:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1936,
															"name": "multisigAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "6987:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1937,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "7003:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1932,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "6953:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1425",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6963:12:10",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1424,
														"src": "6953:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6953:58:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6939:72:10"
											},
											{
												"condition": {
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7033:8:10",
													"subExpression": {
														"id": 1940,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1931,
														"src": "7034:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1947,
												"nodeType": "IfStatement",
												"src": "7030:67:10",
												"trueBody": {
													"id": 1946,
													"nodeType": "Block",
													"src": "7042:55:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1943,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "7078:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1942,
																	"name": "transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "7063:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 1944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7063:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1945,
															"nodeType": "RevertStatement",
															"src": "7056:30:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1949,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7124:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7128:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7124:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1951,
															"name": "multisigAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "7135:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1952,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "7152:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1948,
														"name": "StakeTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1556,
														"src": "7112:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7112:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1954,
												"nodeType": "EmitStatement",
												"src": "7107:53:10"
											}
										]
									},
									"functionSelector": "7547c7a3",
									"id": 1956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeTokens",
									"nameLocation": "6375:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6395:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "6387:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6387:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6386:17:10"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6414:0:10"
									},
									"scope": 3007,
									"src": "6366:802:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2038,
										"nodeType": "Block",
										"src": "7278:548:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1967,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "7301:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7309:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7301:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7319:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7301:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1977,
												"nodeType": "IfStatement",
												"src": "7298:83:10",
												"trueBody": {
													"id": 1976,
													"nodeType": "Block",
													"src": "7321:60:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1972,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1959,
																			"src": "7355:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7363:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "7355:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1971,
																	"name": "emptyAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1634,
																	"src": "7343:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7343:27:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1975,
															"nodeType": "RevertStatement",
															"src": "7336:34:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1978,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "7393:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7399:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7393:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1980,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7409:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7393:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1988,
												"nodeType": "IfStatement",
												"src": "7390:82:10",
												"trueBody": {
													"id": 1987,
													"nodeType": "Block",
													"src": "7411:61:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1983,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1962,
																			"src": "7448:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7454:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "7448:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1982,
																	"name": "emptyAddresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1650,
																	"src": "7433:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7433:28:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1986,
															"nodeType": "RevertStatement",
															"src": "7426:35:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1989,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "7486:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7492:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7486:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1991,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "7502:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7510:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7502:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7486:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1998,
												"nodeType": "IfStatement",
												"src": "7482:89:10",
												"trueBody": {
													"id": 1997,
													"nodeType": "Block",
													"src": "7518:53:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1994,
																	"name": "ArrayLengthMismatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "7539:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7539:21:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1996,
															"nodeType": "RevertStatement",
															"src": "7532:28:10"
														}
													]
												}
											},
											{
												"body": {
													"id": 2027,
													"nodeType": "Block",
													"src": "7619:127:10",
													"statements": [
														{
															"expression": {
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 2010,
																			"name": "userRegistered",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1502,
																			"src": "7634:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																				"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																			}
																		},
																		"id": 2014,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2011,
																				"name": "users",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1962,
																				"src": "7649:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 2013,
																			"indexExpression": {
																				"id": 2012,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2000,
																				"src": "7655:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7649:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7634:24:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																			"typeString": "struct PoolContrcat.UserRegistered storage ref"
																		}
																	},
																	"id": 2015,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7659:17:10",
																	"memberName": "totalStakedAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1482,
																	"src": "7634:42:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2016,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "7680:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2018,
																	"indexExpression": {
																		"id": 2017,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2000,
																		"src": "7688:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7680:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7634:56:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2020,
															"nodeType": "ExpressionStatement",
															"src": "7634:56:10"
														},
														{
															"expression": {
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2021,
																	"name": "totalStakedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1442,
																	"src": "7704:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2022,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "7725:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2024,
																	"indexExpression": {
																		"id": 2023,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2000,
																		"src": "7733:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7725:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7704:31:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2026,
															"nodeType": "ExpressionStatement",
															"src": "7704:31:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2003,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2000,
														"src": "7595:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2004,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "7599:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7607:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7599:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7595:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2028,
												"initializationExpression": {
													"assignments": [
														2000
													],
													"declarations": [
														{
															"constant": false,
															"id": 2000,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7590:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2028,
															"src": "7585:6:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1999,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "7585:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2002,
													"initialValue": {
														"hexValue": "30",
														"id": 2001,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7592:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7585:8:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7615:3:10",
														"subExpression": {
															"id": 2007,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "7615:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2009,
													"nodeType": "ExpressionStatement",
													"src": "7615:3:10"
												},
												"nodeType": "ForStatement",
												"src": "7581:165:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2030,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7780:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7784:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7780:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2032,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1959,
																"src": "7791:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7799:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "7791:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2034,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "7806:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7812:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "7806:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2029,
														"name": "multipleUserAddeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1588,
														"src": "7761:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7761:58:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2037,
												"nodeType": "EmitStatement",
												"src": "7756:63:10"
											}
										]
									},
									"functionSelector": "34107c87",
									"id": 2039,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1965,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1964,
												"name": "bothOwner",
												"nameLocations": [
													"7266:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2979,
												"src": "7266:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7266:11:10"
										}
									],
									"name": "stakeTokensByOwner",
									"nameLocation": "7188:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7224:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "7207:24:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1957,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7207:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1958,
													"nodeType": "ArrayTypeName",
													"src": "7207:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "users",
												"nameLocation": "7250:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "7233:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1960,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7233:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1961,
													"nodeType": "ArrayTypeName",
													"src": "7233:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7206:50:10"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7278:0:10"
									},
									"scope": 3007,
									"src": "7179:647:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2115,
										"nodeType": "Block",
										"src": "7883:628:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2044,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2041,
														"src": "7905:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7916:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7905:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2052,
												"nodeType": "IfStatement",
												"src": "7902:68:10",
												"trueBody": {
													"id": 2051,
													"nodeType": "Block",
													"src": "7918:52:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2048,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2041,
																		"src": "7951:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2047,
																	"name": "wrongAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1618,
																	"src": "7939:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7939:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2050,
															"nodeType": "RevertStatement",
															"src": "7932:27:10"
														}
													]
												}
											},
											{
												"condition": {
													"expression": {
														"baseExpression": {
															"id": 2053,
															"name": "userRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "7990:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
															}
														},
														"id": 2056,
														"indexExpression": {
															"expression": {
																"id": 2054,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8005:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8009:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8005:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7990:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
															"typeString": "struct PoolContrcat.UserRegistered storage ref"
														}
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8017:7:10",
													"memberName": "blocked",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1472,
													"src": "7990:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2067,
												"nodeType": "IfStatement",
												"src": "7987:117:10",
												"trueBody": {
													"id": 2066,
													"nodeType": "Block",
													"src": "8025:79:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 2059,
																				"name": "userRegistered",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1502,
																				"src": "8058:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																					"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																				}
																			},
																			"id": 2062,
																			"indexExpression": {
																				"expression": {
																					"id": 2060,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "8073:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2061,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8077:6:10",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "8073:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8058:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																				"typeString": "struct PoolContrcat.UserRegistered storage ref"
																			}
																		},
																		"id": 2063,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8085:7:10",
																		"memberName": "blocked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1472,
																		"src": "8058:34:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2058,
																	"name": "userBlocked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1610,
																	"src": "8046:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 2064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8046:47:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2065,
															"nodeType": "RevertStatement",
															"src": "8039:54:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 2068,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "8117:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 2071,
															"indexExpression": {
																"expression": {
																	"id": 2069,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8132:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8136:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8132:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8117:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 2072,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8144:14:10",
														"memberName": "receivedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1474,
														"src": "8117:41:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2073,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2041,
														"src": "8162:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8117:52:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2080,
												"nodeType": "IfStatement",
												"src": "8114:113:10",
												"trueBody": {
													"id": 2079,
													"nodeType": "Block",
													"src": "8170:57:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2076,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2041,
																		"src": "8208:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2075,
																	"name": "notEnoughBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "8191:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8191:25:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2078,
															"nodeType": "RevertStatement",
															"src": "8184:32:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2081,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "8237:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 2084,
															"indexExpression": {
																"expression": {
																	"id": 2082,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8252:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2083,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8256:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8252:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8237:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 2085,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8264:14:10",
														"memberName": "receivedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1474,
														"src": "8237:41:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2086,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2041,
														"src": "8282:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8237:52:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2088,
												"nodeType": "ExpressionStatement",
												"src": "8237:52:10"
											},
											{
												"expression": {
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2089,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "8299:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 2092,
															"indexExpression": {
																"expression": {
																	"id": 2090,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8314:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8318:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8314:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8299:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8326:17:10",
														"memberName": "totalStakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1482,
														"src": "8299:44:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2094,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2041,
														"src": "8347:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8299:55:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2096,
												"nodeType": "ExpressionStatement",
												"src": "8299:55:10"
											},
											{
												"expression": {
													"id": 2099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2097,
														"name": "ownerShipPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "8373:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2098,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2041,
														"src": "8396:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8373:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2100,
												"nodeType": "ExpressionStatement",
												"src": "8373:30:10"
											},
											{
												"expression": {
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2101,
														"name": "totalStakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "8413:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2102,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2041,
														"src": "8434:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8413:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2104,
												"nodeType": "ExpressionStatement",
												"src": "8413:28:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2106,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8469:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8473:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8469:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2110,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8488:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PoolContrcat_$3007",
																		"typeString": "contract PoolContrcat"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PoolContrcat_$3007",
																		"typeString": "contract PoolContrcat"
																	}
																],
																"id": 2109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8480:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2108,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8480:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8480:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2112,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2041,
															"src": "8495:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2105,
														"name": "StakeTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1556,
														"src": "8457:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8457:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2114,
												"nodeType": "EmitStatement",
												"src": "8452:51:10"
											}
										]
									},
									"functionSelector": "7ffe4d93",
									"id": 2116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reStakeTokens",
									"nameLocation": "7842:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7864:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "7856:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7856:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7855:17:10"
									},
									"returnParameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7883:0:10"
									},
									"scope": 3007,
									"src": "7833:678:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2174,
										"nodeType": "Block",
										"src": "8587:475:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2123,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2118,
														"src": "8601:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8612:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8601:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2131,
												"nodeType": "IfStatement",
												"src": "8598:68:10",
												"trueBody": {
													"id": 2130,
													"nodeType": "Block",
													"src": "8614:52:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2127,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2118,
																		"src": "8647:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2126,
																	"name": "wrongAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1618,
																	"src": "8635:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8635:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2129,
															"nodeType": "RevertStatement",
															"src": "8628:27:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2132,
														"name": "_projectNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2120,
														"src": "8679:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2133,
														"name": "totalProjects",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "8692:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8679:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2140,
												"nodeType": "IfStatement",
												"src": "8676:88:10",
												"trueBody": {
													"id": 2139,
													"nodeType": "Block",
													"src": "8706:58:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2136,
																		"name": "_projectNo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2120,
																		"src": "8742:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2135,
																	"name": "wrongProjectNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "8727:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8727:26:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2138,
															"nodeType": "RevertStatement",
															"src": "8720:33:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2142,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "8800:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 2143,
																"name": "tPPercentages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1497,
																"src": "8809:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 2145,
															"indexExpression": {
																"id": 2144,
																"name": "_projectNo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2120,
																"src": "8823:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8809:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2141,
														"name": "calculateFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "8786:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8786:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2147,
												"nodeType": "ExpressionStatement",
												"src": "8786:49:10"
											},
											{
												"assignments": [
													2149
												],
												"declarations": [
													{
														"constant": false,
														"id": 2149,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "8859:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2174,
														"src": "8854:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2148,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8854:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2160,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2152,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8892:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8896:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8892:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2156,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8911:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PoolContrcat_$3007",
																		"typeString": "contract PoolContrcat"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PoolContrcat_$3007",
																		"typeString": "contract PoolContrcat"
																	}
																],
																"id": 2155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8903:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2154,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8903:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8903:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2158,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "8917:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2150,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "8869:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1425",
																"typeString": "contract IBEP20"
															}
														},
														"id": 2151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8879:12:10",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1424,
														"src": "8869:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8869:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8854:72:10"
											},
											{
												"condition": {
													"id": 2162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8939:8:10",
													"subExpression": {
														"id": 2161,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2149,
														"src": "8940:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2168,
												"nodeType": "IfStatement",
												"src": "8936:67:10",
												"trueBody": {
													"id": 2167,
													"nodeType": "Block",
													"src": "8948:55:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2164,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2149,
																		"src": "8984:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2163,
																	"name": "transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "8969:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8969:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2166,
															"nodeType": "RevertStatement",
															"src": "8962:30:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2170,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "9027:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2171,
															"name": "_projectNo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2120,
															"src": "9035:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2169,
														"name": "AddFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "9018:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9018:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2173,
												"nodeType": "EmitStatement",
												"src": "9013:33:10"
											}
										]
									},
									"functionSelector": "85f45250",
									"id": 2175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addFunds",
									"nameLocation": "8530:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8547:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "8539:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8539:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "_projectNo",
												"nameLocation": "8564:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "8556:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8556:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8538:37:10"
									},
									"returnParameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8587:0:10"
									},
									"scope": 3007,
									"src": "8521:541:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "9140:308:10",
										"statements": [
											{
												"assignments": [
													2183
												],
												"declarations": [
													{
														"constant": false,
														"id": 2183,
														"mutability": "mutable",
														"name": "oPPercentage",
														"nameLocation": "9166:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 2210,
														"src": "9158:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2182,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9158:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2187,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130303030",
														"id": 2184,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9181:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2185,
														"name": "_tPPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2179,
														"src": "9189:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9181:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9158:44:10"
											},
											{
												"assignments": [
													2189
												],
												"declarations": [
													{
														"constant": false,
														"id": 2189,
														"mutability": "mutable",
														"name": "ownerShipFee",
														"nameLocation": "9220:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 2210,
														"src": "9212:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9212:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2194,
												"initialValue": {
													"arguments": [
														{
															"id": 2191,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2177,
															"src": "9255:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2192,
															"name": "oPPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2183,
															"src": "9264:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2190,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2680,
														"src": "9235:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9235:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9212:65:10"
											},
											{
												"assignments": [
													2196
												],
												"declarations": [
													{
														"constant": false,
														"id": 2196,
														"mutability": "mutable",
														"name": "treasuryFee",
														"nameLocation": "9295:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 2210,
														"src": "9287:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2195,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9287:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2201,
												"initialValue": {
													"arguments": [
														{
															"id": 2198,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2177,
															"src": "9329:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2199,
															"name": "_tPPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2179,
															"src": "9338:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2197,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2680,
														"src": "9309:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9309:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9287:65:10"
											},
											{
												"expression": {
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2202,
														"name": "ownerShipPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "9363:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2203,
														"name": "ownerShipFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "9386:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9363:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2205,
												"nodeType": "ExpressionStatement",
												"src": "9363:35:10"
											},
											{
												"expression": {
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2206,
														"name": "treasuryPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "9408:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2207,
														"name": "treasuryFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2196,
														"src": "9430:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9408:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2209,
												"nodeType": "ExpressionStatement",
												"src": "9408:33:10"
											}
										]
									},
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateFees",
									"nameLocation": "9078:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9100:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "9092:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9092:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "_tPPercentage",
												"nameLocation": "9117:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "9109:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9109:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9091:40:10"
									},
									"returnParameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9140:0:10"
									},
									"scope": 3007,
									"src": "9069:379:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2364,
										"nodeType": "Block",
										"src": "9490:1589:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2214,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9504:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9508:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9504:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2216,
																"name": "s_forwarderAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "9518:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9504:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2218,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9540:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9544:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9540:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2220,
																"name": "ownerOne",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "9554:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9540:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9504:58:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2223,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9566:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9570:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9566:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2225,
															"name": "ownerTwo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "9580:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "9566:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9504:84:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2234,
												"nodeType": "IfStatement",
												"src": "9501:142:10",
												"trueBody": {
													"id": 2233,
													"nodeType": "Block",
													"src": "9589:54:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2229,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9621:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9625:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9621:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2228,
																	"name": "wrongOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1614,
																	"src": "9610:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9610:22:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2232,
															"nodeType": "RevertStatement",
															"src": "9603:29:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2235,
															"name": "ownerShipPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "9656:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9679:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9656:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2238,
															"name": "treasuryPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "9684:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9706:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9684:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9656:51:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2248,
												"nodeType": "IfStatement",
												"src": "9653:137:10",
												"trueBody": {
													"id": 2247,
													"nodeType": "Block",
													"src": "9708:82:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2243,
																		"name": "ownerShipPoolAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "9740:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2244,
																		"name": "treasuryPoolAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1438,
																		"src": "9760:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2242,
																	"name": "emptyPools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1672,
																	"src": "9729:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9729:50:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2246,
															"nodeType": "RevertStatement",
															"src": "9722:57:10"
														}
													]
												}
											},
											{
												"assignments": [
													2250,
													2252,
													2254
												],
												"declarations": [
													{
														"constant": false,
														"id": 2250,
														"mutability": "mutable",
														"name": "remainFiftyOPool",
														"nameLocation": "9818:16:10",
														"nodeType": "VariableDeclaration",
														"scope": 2364,
														"src": "9810:24:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9810:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2252,
														"mutability": "mutable",
														"name": "dividentPayoutOPoolAmount",
														"nameLocation": "9843:25:10",
														"nodeType": "VariableDeclaration",
														"scope": 2364,
														"src": "9835:33:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9835:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2254,
														"mutability": "mutable",
														"name": "perPersonFromTPool",
														"nameLocation": "9878:18:10",
														"nodeType": "VariableDeclaration",
														"scope": 2364,
														"src": "9870:26:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2253,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9870:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2257,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2255,
														"name": "perPoolCalculation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2457,
														"src": "9901:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function () returns (uint256,uint256,uint256)"
														}
													},
													"id": 2256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9901:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9808:113:10"
											},
											{
												"assignments": [
													2259
												],
												"declarations": [
													{
														"constant": false,
														"id": 2259,
														"mutability": "mutable",
														"name": "maxlimit",
														"nameLocation": "9956:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 2364,
														"src": "9948:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2258,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9948:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2260,
												"nodeType": "VariableDeclarationStatement",
												"src": "9948:16:10"
											},
											{
												"body": {
													"id": 2355,
													"nodeType": "Block",
													"src": "10013:974:10",
													"statements": [
														{
															"condition": {
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "10031:38:10",
																"subExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2271,
																			"name": "userRegistered",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1502,
																			"src": "10032:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																				"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																			}
																		},
																		"id": 2275,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2272,
																				"name": "totalUsers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1493,
																				"src": "10047:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																					"typeString": "mapping(uint256 => address)"
																				}
																			},
																			"id": 2274,
																			"indexExpression": {
																				"id": 2273,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2262,
																				"src": "10058:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10047:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10032:29:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																			"typeString": "struct PoolContrcat.UserRegistered storage ref"
																		}
																	},
																	"id": 2276,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10062:7:10",
																	"memberName": "blocked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1472,
																	"src": "10032:37:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2354,
															"nodeType": "IfStatement",
															"src": "10028:936:10",
															"trueBody": {
																"id": 2353,
																"nodeType": "Block",
																"src": "10070:894:10",
																"statements": [
																	{
																		"assignments": [
																			2279
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2279,
																				"mutability": "mutable",
																				"name": "eachSharePercentage",
																				"nameLocation": "10097:19:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 2353,
																				"src": "10089:27:10",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2278,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10089:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2293,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2288,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 2280,
																									"name": "userRegistered",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1502,
																									"src": "10120:14:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																										"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																									}
																								},
																								"id": 2284,
																								"indexExpression": {
																									"baseExpression": {
																										"id": 2281,
																										"name": "totalUsers",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1493,
																										"src": "10135:10:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																											"typeString": "mapping(uint256 => address)"
																										}
																									},
																									"id": 2283,
																									"indexExpression": {
																										"id": 2282,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2262,
																										"src": "10146:1:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "10135:13:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "10120:29:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																									"typeString": "struct PoolContrcat.UserRegistered storage ref"
																								}
																							},
																							"id": 2285,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10150:17:10",
																							"memberName": "totalStakedAmount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1482,
																							"src": "10120:47:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"components": [
																								{
																									"hexValue": "3130303030",
																									"id": 2286,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "10171:5:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10000_by_1",
																										"typeString": "int_const 10000"
																									},
																									"value": "10000"
																								}
																							],
																							"id": 2287,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "10170:7:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10000_by_1",
																								"typeString": "int_const 10000"
																							}
																						},
																						"src": "10120:57:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2289,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "10119:59:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"components": [
																					{
																						"id": 2290,
																						"name": "totalStakedAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1442,
																						"src": "10182:17:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2291,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "10181:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10119:81:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10089:111:10"
																	},
																	{
																		"assignments": [
																			2295
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2295,
																				"mutability": "mutable",
																				"name": "eachSendAmount",
																				"nameLocation": "10243:14:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 2353,
																				"src": "10235:22:10",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2294,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10235:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2300,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 2297,
																					"name": "dividentPayoutOPoolAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2252,
																					"src": "10280:25:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2298,
																					"name": "eachSharePercentage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2279,
																					"src": "10307:19:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2296,
																				"name": "calculatePercentage",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2680,
																				"src": "10260:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10260:67:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10235:92:10"
																	},
																	{
																		"expression": {
																			"id": 2303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2301,
																				"name": "ownerShipPoolAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1440,
																				"src": "10345:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 2302,
																				"name": "eachSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2295,
																				"src": "10368:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10345:37:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2304,
																		"nodeType": "ExpressionStatement",
																		"src": "10345:37:10"
																	},
																	{
																		"expression": {
																			"id": 2307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2305,
																				"name": "maxlimit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2259,
																				"src": "10425:8:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2306,
																				"name": "eachSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2295,
																				"src": "10437:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10425:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2308,
																		"nodeType": "ExpressionStatement",
																		"src": "10425:26:10"
																	},
																	{
																		"expression": {
																			"id": 2311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2309,
																				"name": "treasuryPoolAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1438,
																				"src": "10469:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 2310,
																				"name": "perPersonFromTPool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2254,
																				"src": "10491:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10469:40:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2312,
																		"nodeType": "ExpressionStatement",
																		"src": "10469:40:10"
																	},
																	{
																		"expression": {
																			"id": 2320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 2313,
																						"name": "userRegistered",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1502,
																						"src": "10528:14:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																							"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																						}
																					},
																					"id": 2317,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 2314,
																							"name": "totalUsers",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1493,
																							"src": "10543:10:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																								"typeString": "mapping(uint256 => address)"
																							}
																						},
																						"id": 2316,
																						"indexExpression": {
																							"id": 2315,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2262,
																							"src": "10554:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10543:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10528:29:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																						"typeString": "struct PoolContrcat.UserRegistered storage ref"
																					}
																				},
																				"id": 2318,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "10558:19:10",
																				"memberName": "receiveFromTreasury",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1478,
																				"src": "10528:49:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2319,
																				"name": "perPersonFromTPool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2254,
																				"src": "10581:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10528:71:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2321,
																		"nodeType": "ExpressionStatement",
																		"src": "10528:71:10"
																	},
																	{
																		"expression": {
																			"id": 2329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 2322,
																						"name": "userRegistered",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1502,
																						"src": "10617:14:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																							"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																						}
																					},
																					"id": 2326,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 2323,
																							"name": "totalUsers",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1493,
																							"src": "10632:10:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																								"typeString": "mapping(uint256 => address)"
																							}
																						},
																						"id": 2325,
																						"indexExpression": {
																							"id": 2324,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2262,
																							"src": "10643:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10632:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10617:29:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																						"typeString": "struct PoolContrcat.UserRegistered storage ref"
																					}
																				},
																				"id": 2327,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "10647:21:10",
																				"memberName": "receiveFromOwneerShip",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1480,
																				"src": "10617:51:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2328,
																				"name": "eachSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2295,
																				"src": "10672:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10617:69:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2330,
																		"nodeType": "ExpressionStatement",
																		"src": "10617:69:10"
																	},
																	{
																		"assignments": [
																			2332
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2332,
																				"mutability": "mutable",
																				"name": "totalSendAmount",
																				"nameLocation": "10729:15:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 2353,
																				"src": "10721:23:10",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2331,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10721:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2336,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2333,
																				"name": "eachSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2295,
																				"src": "10747:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 2334,
																				"name": "perPersonFromTPool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2254,
																				"src": "10764:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10747:35:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10721:61:10"
																	},
																	{
																		"expression": {
																			"id": 2344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 2337,
																						"name": "userRegistered",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1502,
																						"src": "10800:14:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																							"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																						}
																					},
																					"id": 2341,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 2338,
																							"name": "totalUsers",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1493,
																							"src": "10815:10:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																								"typeString": "mapping(uint256 => address)"
																							}
																						},
																						"id": 2340,
																						"indexExpression": {
																							"id": 2339,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2262,
																							"src": "10826:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10815:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10800:29:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																						"typeString": "struct PoolContrcat.UserRegistered storage ref"
																					}
																				},
																				"id": 2342,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "10830:14:10",
																				"memberName": "receivedAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1474,
																				"src": "10800:44:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2343,
																				"name": "totalSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2332,
																				"src": "10848:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10800:63:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2345,
																		"nodeType": "ExpressionStatement",
																		"src": "10800:63:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2349,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2347,
																						"name": "maxlimit",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2259,
																						"src": "10890:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 2348,
																						"name": "remainFiftyOPool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2250,
																						"src": "10902:16:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10890:28:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416d6f756e742069732067726561746572207468656e20353025",
																					"id": 2350,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10920:28:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_daaf22ee48ba14ce5532421d554d114832ad11cacc0a90889b6df539cd8418d7",
																						"typeString": "literal_string \"Amount is greater then 50%\""
																					},
																					"value": "Amount is greater then 50%"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_daaf22ee48ba14ce5532421d554d114832ad11cacc0a90889b6df539cd8418d7",
																						"typeString": "literal_string \"Amount is greater then 50%\""
																					}
																				],
																				"id": 2346,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "10882:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10882:67:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2352,
																		"nodeType": "ExpressionStatement",
																		"src": "10882:67:10"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2265,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2262,
														"src": "9994:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2266,
														"name": "noOfUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "9998:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9994:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2356,
												"initializationExpression": {
													"assignments": [
														2262
													],
													"declarations": [
														{
															"constant": false,
															"id": 2262,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9987:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2356,
															"src": "9979:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2261,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9979:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2264,
													"initialValue": {
														"hexValue": "30",
														"id": 2263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9991:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9979:13:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10009:3:10",
														"subExpression": {
															"id": 2268,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2262,
															"src": "10009:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2270,
													"nodeType": "ExpressionStatement",
													"src": "10009:3:10"
												},
												"nodeType": "ForStatement",
												"src": "9975:1012:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2358,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11019:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11023:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11019:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2360,
															"name": "ownerShipPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "11031:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2361,
															"name": "treasuryPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "11052:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2357,
														"name": "WeeklyTransfered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "11002:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11002:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2363,
												"nodeType": "EmitStatement",
												"src": "10997:74:10"
											}
										]
									},
									"functionSelector": "e9c68e2c",
									"id": 2365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "weeklyTransfer",
									"nameLocation": "9465:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9479:2:10"
									},
									"returnParameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9490:0:10"
									},
									"scope": 3007,
									"src": "9456:1623:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2456,
										"nodeType": "Block",
										"src": "11162:1114:10",
										"statements": [
											{
												"assignments": [
													2375
												],
												"declarations": [
													{
														"constant": false,
														"id": 2375,
														"mutability": "mutable",
														"name": "remainFiftyOPool",
														"nameLocation": "11190:16:10",
														"nodeType": "VariableDeclaration",
														"scope": 2456,
														"src": "11182:24:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2374,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11182:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2380,
												"initialValue": {
													"arguments": [
														{
															"id": 2377,
															"name": "ownerShipPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "11229:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "35303030",
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11250:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5000_by_1",
																"typeString": "int_const 5000"
															},
															"value": "5000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_5000_by_1",
																"typeString": "int_const 5000"
															}
														],
														"id": 2376,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2680,
														"src": "11209:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11209:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11182:73:10"
											},
											{
												"assignments": [
													2382
												],
												"declarations": [
													{
														"constant": false,
														"id": 2382,
														"mutability": "mutable",
														"name": "dividentPayoutOPoolAmount",
														"nameLocation": "11274:25:10",
														"nodeType": "VariableDeclaration",
														"scope": 2456,
														"src": "11266:33:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2381,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11266:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2387,
												"initialValue": {
													"arguments": [
														{
															"id": 2384,
															"name": "remainFiftyOPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2375,
															"src": "11322:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2385,
															"name": "odividentPayoutPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "11340:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2383,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2680,
														"src": "11302:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11302:64:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11266:100:10"
											},
											{
												"assignments": [
													2389
												],
												"declarations": [
													{
														"constant": false,
														"id": 2389,
														"mutability": "mutable",
														"name": "fifteenPercenntToTPoolAmount",
														"nameLocation": "11384:28:10",
														"nodeType": "VariableDeclaration",
														"scope": 2456,
														"src": "11376:36:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2388,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11376:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2394,
												"initialValue": {
													"arguments": [
														{
															"id": 2391,
															"name": "remainFiftyOPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2375,
															"src": "11435:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2392,
															"name": "flowToTreasuryPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "11453:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2390,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2680,
														"src": "11415:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11415:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11376:102:10"
											},
											{
												"assignments": [
													2396
												],
												"declarations": [
													{
														"constant": false,
														"id": 2396,
														"mutability": "mutable",
														"name": "tenPercenntToMaintenceAmount",
														"nameLocation": "11496:28:10",
														"nodeType": "VariableDeclaration",
														"scope": 2456,
														"src": "11488:36:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2395,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11488:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2401,
												"initialValue": {
													"arguments": [
														{
															"id": 2398,
															"name": "remainFiftyOPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2375,
															"src": "11547:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2399,
															"name": "maintainceFeePercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "11565:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2397,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2680,
														"src": "11527:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11527:62:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11488:101:10"
											},
											{
												"assignments": [
													2403
												],
												"declarations": [
													{
														"constant": false,
														"id": 2403,
														"mutability": "mutable",
														"name": "remainFiftyTPoolAmount",
														"nameLocation": "11607:22:10",
														"nodeType": "VariableDeclaration",
														"scope": 2456,
														"src": "11599:30:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2402,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11599:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2408,
												"initialValue": {
													"arguments": [
														{
															"id": 2405,
															"name": "treasuryPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "11652:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2406,
															"name": "tdividentPayoutPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "11672:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2404,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2680,
														"src": "11632:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11632:66:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11599:99:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2409,
														"name": "noOfUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "11712:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11725:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11712:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2417,
												"nodeType": "IfStatement",
												"src": "11709:70:10",
												"trueBody": {
													"id": 2416,
													"nodeType": "Block",
													"src": "11727:52:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2413,
																		"name": "noOfUsers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "11758:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2412,
																	"name": "zeroUsers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "11748:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11748:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2415,
															"nodeType": "RevertStatement",
															"src": "11741:27:10"
														}
													]
												}
											},
											{
												"assignments": [
													2419
												],
												"declarations": [
													{
														"constant": false,
														"id": 2419,
														"mutability": "mutable",
														"name": "perPersonFromTPool",
														"nameLocation": "11805:18:10",
														"nodeType": "VariableDeclaration",
														"scope": 2456,
														"src": "11797:26:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11797:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2423,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2420,
														"name": "remainFiftyTPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2403,
														"src": "11826:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2421,
														"name": "noOfUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "11849:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11826:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11797:61:10"
											},
											{
												"expression": {
													"id": 2429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2424,
														"name": "ownerShipPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "11877:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2425,
																	"name": "fifteenPercenntToTPoolAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2389,
																	"src": "11901:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2426,
																	"name": "tenPercenntToMaintenceAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "11932:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11901:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2428,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11900:61:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11877:84:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2430,
												"nodeType": "ExpressionStatement",
												"src": "11877:84:10"
											},
											{
												"expression": {
													"id": 2433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2431,
														"name": "treasuryPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "11971:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2432,
														"name": "fifteenPercenntToTPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2389,
														"src": "11993:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11971:50:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2434,
												"nodeType": "ExpressionStatement",
												"src": "11971:50:10"
											},
											{
												"assignments": [
													2436
												],
												"declarations": [
													{
														"constant": false,
														"id": 2436,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "12037:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2456,
														"src": "12032:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2435,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12032:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2442,
												"initialValue": {
													"arguments": [
														{
															"id": 2439,
															"name": "multisigAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "12066:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2440,
															"name": "tenPercenntToMaintenceAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2396,
															"src": "12083:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2437,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "12047:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1425",
																"typeString": "contract IBEP20"
															}
														},
														"id": 2438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12057:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1404,
														"src": "12047:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12047:65:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12032:80:10"
											},
											{
												"condition": {
													"id": 2444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "12125:8:10",
													"subExpression": {
														"id": 2443,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2436,
														"src": "12126:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2450,
												"nodeType": "IfStatement",
												"src": "12122:67:10",
												"trueBody": {
													"id": 2449,
													"nodeType": "Block",
													"src": "12134:55:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2446,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2436,
																		"src": "12170:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2445,
																	"name": "transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "12155:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 2447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12155:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2448,
															"nodeType": "RevertStatement",
															"src": "12148:30:10"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2451,
															"name": "remainFiftyOPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2375,
															"src": "12207:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2452,
															"name": "dividentPayoutOPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2382,
															"src": "12224:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2453,
															"name": "perPersonFromTPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2419,
															"src": "12250:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2454,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "12206:63:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 2373,
												"id": 2455,
												"nodeType": "Return",
												"src": "12199:70:10"
											}
										]
									},
									"id": 2457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "perPoolCalculation",
									"nameLocation": "11100:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11118:2:10"
									},
									"returnParameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2457,
												"src": "11137:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11137:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2457,
												"src": "11146:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11146:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2457,
												"src": "11154:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11154:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11136:26:10"
									},
									"scope": 3007,
									"src": "11091:1185:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										11
									],
									"body": {
										"id": 2484,
										"nodeType": "Block",
										"src": "12386:131:10",
										"statements": [
											{
												"assignments": [
													2468
												],
												"declarations": [
													{
														"constant": false,
														"id": 2468,
														"mutability": "mutable",
														"name": "needsUpkeep",
														"nameLocation": "12411:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 2484,
														"src": "12406:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2467,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12406:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2476,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2469,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "12426:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12432:9:10",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "12426:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2471,
																	"name": "lastTimeStamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "12444:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12426:31:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2473,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12425:33:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2474,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "12461:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12425:44:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12406:63:10"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2477,
															"name": "needsUpkeep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2468,
															"src": "12487:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "",
																	"id": 2480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12506:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"id": 2479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12500:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2478,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "12500:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12500:9:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"id": 2482,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "12486:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"functionReturnParameters": 2466,
												"id": 2483,
												"nodeType": "Return",
												"src": "12479:31:10"
											}
										]
									},
									"functionSelector": "6e04ff0d",
									"id": 2485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "12291:11:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2461,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12342:8:10"
									},
									"parameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "12303:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12303:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12302:30:10"
									},
									"returnParameters": {
										"id": 2466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "12366:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12366:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "12372:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12372:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12365:20:10"
									},
									"scope": 3007,
									"src": "12282:235:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										17
									],
									"body": {
										"id": 2537,
										"nodeType": "Block",
										"src": "12593:568:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2491,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12633:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12637:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "12633:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2493,
																"name": "s_forwarderAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "12647:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12633:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973206164647265737320646f6573206e6f742068617665207065726d697373696f6e20746f2063616c6c20706572666f726d55706b656570",
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12679:61:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f",
																"typeString": "literal_string \"This address does not have permission to call performUpkeep\""
															},
															"value": "This address does not have permission to call performUpkeep"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f",
																"typeString": "literal_string \"This address does not have permission to call performUpkeep\""
															}
														],
														"id": 2490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12612:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12612:138:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2497,
												"nodeType": "ExpressionStatement",
												"src": "12612:138:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2498,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "12772:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2499,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12784:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12772:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2506,
												"nodeType": "IfStatement",
												"src": "12768:73:10",
												"trueBody": {
													"id": 2505,
													"nodeType": "Block",
													"src": "12786:55:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2502,
																		"name": "interval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1458,
																		"src": "12821:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2501,
																	"name": "wrongInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "12807:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12807:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2504,
															"nodeType": "RevertStatement",
															"src": "12800:30:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2507,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12863:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12869:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "12863:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2509,
														"name": "startingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "12882:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12863:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2535,
													"nodeType": "Block",
													"src": "13091:55:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2532,
																		"name": "startingTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1462,
																		"src": "13122:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2531,
																	"name": "wrongTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1606,
																	"src": "13112:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13112:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2534,
															"nodeType": "RevertStatement",
															"src": "13105:30:10"
														}
													]
												},
												"id": 2536,
												"nodeType": "IfStatement",
												"src": "12860:286:10",
												"trueBody": {
													"id": 2530,
													"nodeType": "Block",
													"src": "12895:183:10",
													"statements": [
														{
															"expression": {
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2511,
																	"name": "interval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1458,
																	"src": "12910:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2512,
																	"name": "realInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1460,
																	"src": "12921:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12910:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2514,
															"nodeType": "ExpressionStatement",
															"src": "12910:23:10"
														},
														{
															"expression": {
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2515,
																	"name": "lastTimeStamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "12947:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2516,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "12963:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12969:9:10",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "12963:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12947:31:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2519,
															"nodeType": "ExpressionStatement",
															"src": "12947:31:10"
														},
														{
															"expression": {
																"id": 2525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2520,
																	"name": "startingTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1462,
																	"src": "12992:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2521,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "13007:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13013:9:10",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "13007:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2523,
																		"name": "realInterval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1460,
																		"src": "13025:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13007:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12992:45:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2526,
															"nodeType": "ExpressionStatement",
															"src": "12992:45:10"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2527,
																	"name": "weeklyTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2365,
																	"src": "13051:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13051:16:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2529,
															"nodeType": "ExpressionStatement",
															"src": "13051:16:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4585e33b",
									"id": 2538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "12537:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "12551:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12551:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12550:32:10"
									},
									"returnParameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12593:0:10"
									},
									"scope": 3007,
									"src": "12528:633:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2593,
										"nodeType": "Block",
										"src": "13260:454:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2547,
														"name": "updateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2542,
														"src": "13282:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2548,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13300:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13282:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2555,
												"nodeType": "IfStatement",
												"src": "13279:84:10",
												"trueBody": {
													"id": 2554,
													"nodeType": "Block",
													"src": "13302:61:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2551,
																		"name": "updateInterval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2542,
																		"src": "13337:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2550,
																	"name": "wrongInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "13323:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13323:29:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2553,
															"nodeType": "RevertStatement",
															"src": "13316:36:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2556,
														"name": "_startingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2540,
														"src": "13384:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2557,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "13400:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13406:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "13400:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13384:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2565,
												"nodeType": "IfStatement",
												"src": "13381:91:10",
												"trueBody": {
													"id": 2564,
													"nodeType": "Block",
													"src": "13416:56:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2561,
																		"name": "_startingTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2540,
																		"src": "13447:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2560,
																	"name": "wrongTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1606,
																	"src": "13437:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13437:24:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2563,
															"nodeType": "RevertStatement",
															"src": "13430:31:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2566,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "13482:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2567,
															"name": "_startingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2540,
															"src": "13493:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 2568,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "13509:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13515:9:10",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "13509:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13493:31:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13482:42:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2572,
												"nodeType": "ExpressionStatement",
												"src": "13482:42:10"
											},
											{
												"expression": {
													"id": 2575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2573,
														"name": "startingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "13534:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2574,
														"name": "_startingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2540,
														"src": "13549:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13534:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2576,
												"nodeType": "ExpressionStatement",
												"src": "13534:28:10"
											},
											{
												"expression": {
													"id": 2580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2577,
														"name": "lastTimeStamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1464,
														"src": "13572:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2578,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "13588:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13594:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "13588:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13572:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2581,
												"nodeType": "ExpressionStatement",
												"src": "13572:31:10"
											},
											{
												"expression": {
													"id": 2584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2582,
														"name": "realInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "13613:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2583,
														"name": "updateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2542,
														"src": "13628:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13613:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2585,
												"nodeType": "ExpressionStatement",
												"src": "13613:29:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2587,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13670:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13674:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13670:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2589,
															"name": "interval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "13682:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2590,
															"name": "lastTimeStamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "13692:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2586,
														"name": "SetInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "13658:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13658:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2592,
												"nodeType": "EmitStatement",
												"src": "13653:53:10"
											}
										]
									},
									"functionSelector": "5f17e616",
									"id": 2594,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2545,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2544,
												"name": "bothOwner",
												"nameLocations": [
													"13251:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2979,
												"src": "13251:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "13251:9:10"
										}
									],
									"name": "setInterval",
									"nameLocation": "13181:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "_startingTime",
												"nameLocation": "13202:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "13194:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13194:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "updateInterval",
												"nameLocation": "13225:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "13217:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13217:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13193:47:10"
									},
									"returnParameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13260:0:10"
									},
									"scope": 3007,
									"src": "13172:542:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2609,
										"nodeType": "Block",
										"src": "13755:85:10",
										"statements": [
											{
												"expression": {
													"id": 2601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2599,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "13773:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13784:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13773:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2602,
												"nodeType": "ExpressionStatement",
												"src": "13773:12:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2604,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13812:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13816:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13812:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2606,
															"name": "interval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "13824:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2603,
														"name": "offInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "13800:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13800:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2608,
												"nodeType": "EmitStatement",
												"src": "13795:38:10"
											}
										]
									},
									"functionSelector": "6626b26d",
									"id": 2610,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2597,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2596,
												"name": "bothOwner",
												"nameLocations": [
													"13746:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2979,
												"src": "13746:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "13746:9:10"
										}
									],
									"name": "off",
									"nameLocation": "13729:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13733:2:10"
									},
									"returnParameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13755:0:10"
									},
									"scope": 3007,
									"src": "13720:120:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2639,
										"nodeType": "Block",
										"src": "13921:244:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2617,
														"name": "forwarderAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2612,
														"src": "13943:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13971:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13963:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2618,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13963:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13963:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13943:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2628,
												"nodeType": "IfStatement",
												"src": "13940:96:10",
												"trueBody": {
													"id": 2627,
													"nodeType": "Block",
													"src": "13974:62:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2624,
																		"name": "forwarderAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2612,
																		"src": "14008:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2623,
																	"name": "wrongAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "13995:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13995:30:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2626,
															"nodeType": "RevertStatement",
															"src": "13988:37:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2629,
														"name": "s_forwarderAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "14054:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2630,
														"name": "forwarderAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2612,
														"src": "14075:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14054:37:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2632,
												"nodeType": "ExpressionStatement",
												"src": "14054:37:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2634,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14127:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14131:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14127:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2636,
															"name": "s_forwarderAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "14139:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2633,
														"name": "SetForwarderAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "14107:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14107:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2638,
												"nodeType": "EmitStatement",
												"src": "14102:56:10"
											}
										]
									},
									"functionSelector": "d777cc6d",
									"id": 2640,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2615,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2614,
												"name": "bothOwner",
												"nameLocations": [
													"13911:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2979,
												"src": "13911:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "13911:9:10"
										}
									],
									"name": "setForwarderAddress",
									"nameLocation": "13856:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2612,
												"mutability": "mutable",
												"name": "forwarderAddress",
												"nameLocation": "13884:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "13876:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13876:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13875:26:10"
									},
									"returnParameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13921:0:10"
									},
									"scope": 3007,
									"src": "13847:318:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2679,
										"nodeType": "Block",
										"src": "14282:346:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2649,
														"name": "_totalStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2642,
														"src": "14304:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14325:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14304:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2657,
												"nodeType": "IfStatement",
												"src": "14301:98:10",
												"trueBody": {
													"id": 2656,
													"nodeType": "Block",
													"src": "14327:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2653,
																		"name": "_totalStakeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2642,
																		"src": "14370:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2652,
																	"name": "wrongPercentageAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1666,
																	"src": "14348:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14348:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2655,
															"nodeType": "RevertStatement",
															"src": "14341:47:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2658,
														"name": "percentageNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2644,
														"src": "14411:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2659,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14431:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14411:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2666,
												"nodeType": "IfStatement",
												"src": "14408:91:10",
												"trueBody": {
													"id": 2665,
													"nodeType": "Block",
													"src": "14433:66:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2662,
																		"name": "percentageNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2644,
																		"src": "14471:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2661,
																	"name": "wrongPerceentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1662,
																	"src": "14454:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14454:34:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2664,
															"nodeType": "RevertStatement",
															"src": "14447:41:10"
														}
													]
												}
											},
											{
												"assignments": [
													2668
												],
												"declarations": [
													{
														"constant": false,
														"id": 2668,
														"mutability": "mutable",
														"name": "serviceFee",
														"nameLocation": "14524:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2679,
														"src": "14516:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2667,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14516:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2676,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2669,
															"name": "_totalStakeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2642,
															"src": "14537:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"id": 2670,
																	"name": "percentageNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2644,
																	"src": "14558:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2671,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14557:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14537:38:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"hexValue": "3130303030",
																"id": 2673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14579:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															}
														],
														"id": 2674,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14578:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														}
													},
													"src": "14537:48:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14516:69:10"
											},
											{
												"expression": {
													"id": 2677,
													"name": "serviceFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2668,
													"src": "14611:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2648,
												"id": 2678,
												"nodeType": "Return",
												"src": "14604:17:10"
											}
										]
									},
									"id": 2680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePercentage",
									"nameLocation": "14180:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "_totalStakeAmount",
												"nameLocation": "14208:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "14200:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14200:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "percentageNumber",
												"nameLocation": "14234:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "14226:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14226:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14199:52:10"
									},
									"returnParameters": {
										"id": 2648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "14273:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14273:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14272:9:10"
									},
									"scope": 3007,
									"src": "14171:457:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2752,
										"nodeType": "Block",
										"src": "14707:573:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2687,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2682,
														"src": "14729:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14740:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14729:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2695,
												"nodeType": "IfStatement",
												"src": "14726:68:10",
												"trueBody": {
													"id": 2694,
													"nodeType": "Block",
													"src": "14742:52:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2691,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2682,
																		"src": "14775:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2690,
																	"name": "wrongAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1618,
																	"src": "14763:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14763:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2693,
															"nodeType": "RevertStatement",
															"src": "14756:27:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2696,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2682,
														"src": "14807:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 2697,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "14817:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 2700,
															"indexExpression": {
																"expression": {
																	"id": 2698,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "14832:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14836:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "14832:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14817:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 2701,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14844:14:10",
														"memberName": "receivedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1474,
														"src": "14817:41:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14807:51:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2712,
												"nodeType": "IfStatement",
												"src": "14804:145:10",
												"trueBody": {
													"id": 2711,
													"nodeType": "Block",
													"src": "14859:90:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 2704,
																				"name": "userRegistered",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1502,
																				"src": "14896:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																					"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																				}
																			},
																			"id": 2707,
																			"indexExpression": {
																				"expression": {
																					"id": 2705,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "14911:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2706,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "14915:6:10",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "14911:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14896:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																				"typeString": "struct PoolContrcat.UserRegistered storage ref"
																			}
																		},
																		"id": 2708,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14923:14:10",
																		"memberName": "receivedAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1474,
																		"src": "14896:41:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2703,
																	"name": "notEnoughAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1658,
																	"src": "14880:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14880:58:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2710,
															"nodeType": "RevertStatement",
															"src": "14873:65:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2713,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "14959:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 2716,
															"indexExpression": {
																"expression": {
																	"id": 2714,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "14974:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14978:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "14974:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14959:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 2717,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14986:14:10",
														"memberName": "receivedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1474,
														"src": "14959:41:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2718,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2682,
														"src": "15004:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14959:52:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2720,
												"nodeType": "ExpressionStatement",
												"src": "14959:52:10"
											},
											{
												"expression": {
													"id": 2727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2721,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "15021:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 2724,
															"indexExpression": {
																"expression": {
																	"id": 2722,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "15036:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15040:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "15036:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15021:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 2725,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15048:14:10",
														"memberName": "withdrawAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1476,
														"src": "15021:41:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2726,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2682,
														"src": "15066:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15021:52:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2728,
												"nodeType": "ExpressionStatement",
												"src": "15021:52:10"
											},
											{
												"assignments": [
													2730
												],
												"declarations": [
													{
														"constant": false,
														"id": 2730,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15096:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2752,
														"src": "15091:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2729,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15091:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2737,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2733,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15125:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15129:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15125:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2735,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2682,
															"src": "15136:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2731,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "15106:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1425",
																"typeString": "contract IBEP20"
															}
														},
														"id": 2732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15116:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1404,
														"src": "15106:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15106:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15091:53:10"
											},
											{
												"condition": {
													"id": 2739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "15165:8:10",
													"subExpression": {
														"id": 2738,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2730,
														"src": "15166:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2745,
												"nodeType": "IfStatement",
												"src": "15162:67:10",
												"trueBody": {
													"id": 2744,
													"nodeType": "Block",
													"src": "15174:55:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2741,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2730,
																		"src": "15210:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2740,
																	"name": "transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "15195:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 2742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15195:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2743,
															"nodeType": "RevertStatement",
															"src": "15188:30:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2747,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15253:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15257:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15253:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2749,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2682,
															"src": "15265:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2746,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1528,
														"src": "15244:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15244:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2751,
												"nodeType": "EmitStatement",
												"src": "15239:34:10"
											}
										]
									},
									"functionSelector": "67976974",
									"id": 2753,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2685,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2684,
												"name": "nonReentrant",
												"nameLocations": [
													"14694:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2997,
												"src": "14694:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "14694:12:10"
										}
									],
									"name": "userWithdrawAmoount",
									"nameLocation": "14648:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "14676:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "14668:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14668:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14667:17:10"
									},
									"returnParameters": {
										"id": 2686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14707:0:10"
									},
									"scope": 3007,
									"src": "14639:641:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2817,
										"nodeType": "Block",
										"src": "15358:482:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2762,
														"name": "_userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2755,
														"src": "15380:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15404:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15396:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2763,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15396:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2766,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15396:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15380:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2773,
												"nodeType": "IfStatement",
												"src": "15377:88:10",
												"trueBody": {
													"id": 2772,
													"nodeType": "Block",
													"src": "15407:58:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2769,
																		"name": "_userAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2755,
																		"src": "15441:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2768,
																	"name": "wrongAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "15428:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15428:26:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2771,
															"nodeType": "RevertStatement",
															"src": "15421:33:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2774,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2757,
															"src": "15478:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "74727565",
															"id": 2775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15487:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"src": "15478:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2777,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2757,
															"src": "15495:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "66616c7365",
															"id": 2778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15504:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"src": "15495:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15478:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2786,
												"nodeType": "IfStatement",
												"src": "15475:84:10",
												"trueBody": {
													"id": 2785,
													"nodeType": "Block",
													"src": "15510:49:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2782,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2757,
																		"src": "15542:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2781,
																	"name": "wrongValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "15531:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 2783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15531:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2784,
															"nodeType": "RevertStatement",
															"src": "15524:24:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2787,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2757,
														"src": "15572:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 2788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15581:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "15572:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2805,
													"nodeType": "Block",
													"src": "15659:77:10",
													"statements": [
														{
															"expression": {
																"id": 2803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 2798,
																			"name": "userRegistered",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1502,
																			"src": "15681:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																				"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																			}
																		},
																		"id": 2800,
																		"indexExpression": {
																			"id": 2799,
																			"name": "_userAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2755,
																			"src": "15696:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15681:28:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																			"typeString": "struct PoolContrcat.UserRegistered storage ref"
																		}
																	},
																	"id": 2801,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "15710:7:10",
																	"memberName": "blocked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1472,
																	"src": "15681:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 2802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15720:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "15681:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2804,
															"nodeType": "ExpressionStatement",
															"src": "15681:44:10"
														}
													]
												},
												"id": 2806,
												"nodeType": "IfStatement",
												"src": "15569:167:10",
												"trueBody": {
													"id": 2797,
													"nodeType": "Block",
													"src": "15586:69:10",
													"statements": [
														{
															"expression": {
																"id": 2795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 2790,
																			"name": "userRegistered",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1502,
																			"src": "15601:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																				"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																			}
																		},
																		"id": 2792,
																		"indexExpression": {
																			"id": 2791,
																			"name": "_userAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2755,
																			"src": "15616:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15601:28:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																			"typeString": "struct PoolContrcat.UserRegistered storage ref"
																		}
																	},
																	"id": 2793,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "15630:7:10",
																	"memberName": "blocked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1472,
																	"src": "15601:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15640:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "15601:43:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2796,
															"nodeType": "ExpressionStatement",
															"src": "15601:43:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2808,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15771:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15775:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15771:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2810,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2755,
															"src": "15782:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 2811,
																	"name": "userRegistered",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1502,
																	"src": "15796:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1483_storage_$",
																		"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																	}
																},
																"id": 2813,
																"indexExpression": {
																	"id": 2812,
																	"name": "_userAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2755,
																	"src": "15811:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15796:28:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserRegistered_$1483_storage",
																	"typeString": "struct PoolContrcat.UserRegistered storage ref"
																}
															},
															"id": 2814,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15825:7:10",
															"memberName": "blocked",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1472,
															"src": "15796:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2807,
														"name": "UserBlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "15759:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15759:74:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2816,
												"nodeType": "EmitStatement",
												"src": "15754:79:10"
											}
										]
									},
									"functionSelector": "d9b998b4",
									"id": 2818,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2760,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2759,
												"name": "bothOwner",
												"nameLocations": [
													"15348:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2979,
												"src": "15348:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "15348:9:10"
										}
									],
									"name": "blockUser",
									"nameLocation": "15295:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "15313:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2818,
												"src": "15305:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15305:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15332:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2818,
												"src": "15327:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2756,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15327:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15304:34:10"
									},
									"returnParameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15358:0:10"
									},
									"scope": 3007,
									"src": "15286:554:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2850,
										"nodeType": "Block",
										"src": "15947:247:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2827,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2822,
														"src": "15969:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15988:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15969:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2835,
												"nodeType": "IfStatement",
												"src": "15966:88:10",
												"trueBody": {
													"id": 2834,
													"nodeType": "Block",
													"src": "15990:64:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2831,
																		"name": "_newPerccentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2822,
																		"src": "16027:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2830,
																	"name": "wrongPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1646,
																	"src": "16011:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16011:32:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2833,
															"nodeType": "RevertStatement",
															"src": "16004:39:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2836,
															"name": "tPPercentages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "16072:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2838,
														"indexExpression": {
															"id": 2837,
															"name": "_projectId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2820,
															"src": "16086:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16072:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2839,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2822,
														"src": "16100:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16072:43:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2841,
												"nodeType": "ExpressionStatement",
												"src": "16072:43:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2843,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16149:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16153:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16149:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 2845,
																"name": "tPPercentages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1497,
																"src": "16161:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 2847,
															"indexExpression": {
																"id": 2846,
																"name": "_projectId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2820,
																"src": "16175:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16161:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2842,
														"name": "PercentageChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "16131:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16131:56:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2849,
												"nodeType": "EmitStatement",
												"src": "16126:61:10"
											}
										]
									},
									"functionSelector": "ed061067",
									"id": 2851,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2825,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2824,
												"name": "bothOwner",
												"nameLocations": [
													"15937:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2979,
												"src": "15937:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "15937:9:10"
										}
									],
									"name": "setTeasueryPercentages",
									"nameLocation": "15861:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "_projectId",
												"nameLocation": "15892:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "15884:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15884:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2822,
												"mutability": "mutable",
												"name": "_newPerccentage",
												"nameLocation": "15911:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "15903:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15903:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15883:44:10"
									},
									"returnParameters": {
										"id": 2826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15947:0:10"
									},
									"scope": 3007,
									"src": "15852:342:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2877,
										"nodeType": "Block",
										"src": "16282:248:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2858,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2853,
														"src": "16304:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16323:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16304:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2866,
												"nodeType": "IfStatement",
												"src": "16301:88:10",
												"trueBody": {
													"id": 2865,
													"nodeType": "Block",
													"src": "16325:64:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2862,
																		"name": "_newPerccentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2853,
																		"src": "16362:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2861,
																	"name": "wrongPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1646,
																	"src": "16346:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16346:32:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2864,
															"nodeType": "RevertStatement",
															"src": "16339:39:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2867,
														"name": "tdividentPayoutPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "16407:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2868,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2853,
														"src": "16435:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16407:43:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2870,
												"nodeType": "ExpressionStatement",
												"src": "16407:43:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2872,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16484:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16488:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16484:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2874,
															"name": "tdividentPayoutPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "16496:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2871,
														"name": "PercentageChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "16466:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16466:56:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2876,
												"nodeType": "EmitStatement",
												"src": "16461:61:10"
											}
										]
									},
									"functionSelector": "7f70c5e7",
									"id": 2878,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2856,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2855,
												"name": "bothOwner",
												"nameLocations": [
													"16272:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2979,
												"src": "16272:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "16272:9:10"
										}
									],
									"name": "settdividentPayoutPercentage",
									"nameLocation": "16209:28:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "_newPerccentage",
												"nameLocation": "16246:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "16238:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16238:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16237:25:10"
									},
									"returnParameters": {
										"id": 2857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16282:0:10"
									},
									"scope": 3007,
									"src": "16200:330:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2904,
										"nodeType": "Block",
										"src": "16622:247:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2885,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2880,
														"src": "16644:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2886,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16663:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16644:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2893,
												"nodeType": "IfStatement",
												"src": "16641:88:10",
												"trueBody": {
													"id": 2892,
													"nodeType": "Block",
													"src": "16665:64:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2889,
																		"name": "_newPerccentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2880,
																		"src": "16702:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2888,
																	"name": "wrongPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1646,
																	"src": "16686:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16686:32:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2891,
															"nodeType": "RevertStatement",
															"src": "16679:39:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2894,
														"name": "odividentPayoutPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "16747:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2895,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2880,
														"src": "16775:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16747:43:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2897,
												"nodeType": "ExpressionStatement",
												"src": "16747:43:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2899,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16824:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16828:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16824:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2901,
															"name": "odividentPayoutPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "16836:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2898,
														"name": "PercentageChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "16806:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16806:56:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2903,
												"nodeType": "EmitStatement",
												"src": "16801:61:10"
											}
										]
									},
									"functionSelector": "b9dac1eb",
									"id": 2905,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2883,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2882,
												"name": "bothOwner",
												"nameLocations": [
													"16612:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2979,
												"src": "16612:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "16612:9:10"
										}
									],
									"name": "setodividentPayoutPercentage",
									"nameLocation": "16549:28:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "_newPerccentage",
												"nameLocation": "16586:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 2905,
												"src": "16578:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16578:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16577:25:10"
									},
									"returnParameters": {
										"id": 2884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16622:0:10"
									},
									"scope": 3007,
									"src": "16540:329:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2931,
										"nodeType": "Block",
										"src": "16961:244:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2912,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2907,
														"src": "16982:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2913,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17001:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16982:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2920,
												"nodeType": "IfStatement",
												"src": "16979:88:10",
												"trueBody": {
													"id": 2919,
													"nodeType": "Block",
													"src": "17003:64:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2916,
																		"name": "_newPerccentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2907,
																		"src": "17040:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2915,
																	"name": "wrongPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1646,
																	"src": "17024:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17024:32:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2918,
															"nodeType": "RevertStatement",
															"src": "17017:39:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2921,
														"name": "flowToTreasuryPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "17085:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2922,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2907,
														"src": "17112:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17085:42:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2924,
												"nodeType": "ExpressionStatement",
												"src": "17085:42:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2926,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "17161:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17165:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "17161:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2928,
															"name": "flowToTreasuryPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "17173:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2925,
														"name": "PercentageChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "17143:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17143:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2930,
												"nodeType": "EmitStatement",
												"src": "17138:60:10"
											}
										]
									},
									"functionSelector": "ad8e5ec4",
									"id": 2932,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2910,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2909,
												"name": "bothOwner",
												"nameLocations": [
													"16951:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2979,
												"src": "16951:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "16951:9:10"
										}
									],
									"name": "setflowToTreasuryPercentage",
									"nameLocation": "16889:27:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2907,
												"mutability": "mutable",
												"name": "_newPerccentage",
												"nameLocation": "16925:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 2932,
												"src": "16917:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16917:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16916:25:10"
									},
									"returnParameters": {
										"id": 2911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16961:0:10"
									},
									"scope": 3007,
									"src": "16880:325:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2958,
										"nodeType": "Block",
										"src": "17291:243:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2939,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2934,
														"src": "17313:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17332:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17313:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2947,
												"nodeType": "IfStatement",
												"src": "17310:88:10",
												"trueBody": {
													"id": 2946,
													"nodeType": "Block",
													"src": "17334:64:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2943,
																		"name": "_newPerccentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2934,
																		"src": "17371:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2942,
																	"name": "wrongPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1646,
																	"src": "17355:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17355:32:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2945,
															"nodeType": "RevertStatement",
															"src": "17348:39:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2948,
														"name": "maintainceFeePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "17416:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2949,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2934,
														"src": "17442:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17416:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2951,
												"nodeType": "ExpressionStatement",
												"src": "17416:41:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2953,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "17491:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17495:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "17491:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2955,
															"name": "maintainceFeePercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "17503:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2952,
														"name": "PercentageChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "17473:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17473:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2957,
												"nodeType": "EmitStatement",
												"src": "17468:59:10"
											}
										]
									},
									"functionSelector": "7f111e60",
									"id": 2959,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2937,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2936,
												"name": "bothOwner",
												"nameLocations": [
													"17281:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2979,
												"src": "17281:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "17281:9:10"
										}
									],
									"name": "setmaintainceFeePercentage",
									"nameLocation": "17220:26:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2934,
												"mutability": "mutable",
												"name": "_newPerccentage",
												"nameLocation": "17255:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "17247:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17247:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17246:25:10"
									},
									"returnParameters": {
										"id": 2938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17291:0:10"
									},
									"scope": 3007,
									"src": "17211:323:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2978,
										"nodeType": "Block",
										"src": "17560:133:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2961,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "17573:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17577:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "17573:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2963,
															"name": "ownerOne",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "17587:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "17573:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2965,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "17599:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17603:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "17599:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2967,
															"name": "ownerTwo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "17613:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "17599:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17573:48:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2976,
												"nodeType": "IfStatement",
												"src": "17570:106:10",
												"trueBody": {
													"id": 2975,
													"nodeType": "Block",
													"src": "17622:54:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2971,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "17654:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17658:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "17654:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2970,
																	"name": "wrongOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1614,
																	"src": "17643:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17643:22:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2974,
															"nodeType": "RevertStatement",
															"src": "17636:29:10"
														}
													]
												}
											},
											{
												"id": 2977,
												"nodeType": "PlaceholderStatement",
												"src": "17685:1:10"
											}
										]
									},
									"id": 2979,
									"name": "bothOwner",
									"nameLocation": "17549:9:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17558:2:10"
									},
									"src": "17540:153:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2996,
										"nodeType": "Block",
										"src": "17723:126:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "17741:7:10",
															"subExpression": {
																"id": 2982,
																"name": "locked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1456,
																"src": "17742:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 2984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17750:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 2981,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17733:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17733:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2986,
												"nodeType": "ExpressionStatement",
												"src": "17733:51:10"
											},
											{
												"expression": {
													"id": 2989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2987,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "17794:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17803:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "17794:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2990,
												"nodeType": "ExpressionStatement",
												"src": "17794:13:10"
											},
											{
												"id": 2991,
												"nodeType": "PlaceholderStatement",
												"src": "17817:1:10"
											},
											{
												"expression": {
													"id": 2994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2992,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "17828:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17837:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "17828:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2995,
												"nodeType": "ExpressionStatement",
												"src": "17828:14:10"
											}
										]
									},
									"id": 2997,
									"name": "nonReentrant",
									"nameLocation": "17708:12:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17720:2:10"
									},
									"src": "17699:150:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										603
									],
									"body": {
										"id": 3005,
										"nodeType": "Block",
										"src": "17965:2:10",
										"statements": []
									},
									"id": 3006,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3002,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3001,
												"name": "onlyOwner",
												"nameLocations": [
													"17934:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 108,
												"src": "17934:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "17934:9:10"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "17864:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3003,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17952:8:10"
									},
									"parameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "17890:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 3006,
												"src": "17882:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17882:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17881:27:10"
									},
									"returnParameters": {
										"id": 3004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17965:0:10"
									},
									"scope": 3007,
									"src": "17855:112:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3008,
							"src": "896:17073:10",
							"usedErrors": [
								49,
								54,
								230,
								233,
								494,
								499,
								740,
								753,
								1031,
								1034,
								1598,
								1602,
								1606,
								1610,
								1614,
								1618,
								1622,
								1626,
								1630,
								1634,
								1638,
								1642,
								1646,
								1650,
								1654,
								1658,
								1662,
								1666,
								1672
							],
							"usedEvents": [
								60,
								238,
								719,
								1506,
								1510,
								1516,
								1522,
								1528,
								1534,
								1540,
								1548,
								1556,
								1564,
								1572,
								1580,
								1588,
								1596
							]
						}
					],
					"src": "81:17935:10"
				},
				"id": 10
			}
		}
	}
}